<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
	<channel>
		<title>Xenojoshua</title>
		<description>Joshua's Xeno World!</description>
		<link>https://xenojoshua.com</link>
		<atom:link href="https://xenojoshua.com/feed.xml" rel="self" type="application/rss+xml" />
		
			<item>
				<title>Elasticsearch Notes</title>
				<description>&lt;h4&gt;Table of Contents&lt;/h4&gt;
&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#1-前言&quot; id=&quot;markdown-toc-1-前言&quot;&gt;1. 前言&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#2-log-shipper&quot; id=&quot;markdown-toc-2-log-shipper&quot;&gt;2. Log Shipper&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#21-横向比较--选择&quot; id=&quot;markdown-toc-21-横向比较--选择&quot;&gt;2.1 横向比较 &amp;amp; 选择&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#22-架构设计&quot; id=&quot;markdown-toc-22-架构设计&quot;&gt;2.2 架构设计&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#3-filebeat&quot; id=&quot;markdown-toc-3-filebeat&quot;&gt;3. Filebeat&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#31-设计--基础概念&quot; id=&quot;markdown-toc-31-设计--基础概念&quot;&gt;3.1 设计 &amp;amp; 基础概念&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#32-使用&quot; id=&quot;markdown-toc-32-使用&quot;&gt;3.2 使用&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#33-模块&quot; id=&quot;markdown-toc-33-模块&quot;&gt;3.3 模块&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#34-过滤和丰富&quot; id=&quot;markdown-toc-34-过滤和丰富&quot;&gt;3.4 过滤和丰富&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#35-文件状态记录--投递保证&quot; id=&quot;markdown-toc-35-文件状态记录--投递保证&quot;&gt;3.5 文件状态记录 &amp;amp; 投递保证&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#4-elasticsearch&quot; id=&quot;markdown-toc-4-elasticsearch&quot;&gt;4. Elasticsearch&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#41-知识点&quot; id=&quot;markdown-toc-41-知识点&quot;&gt;4.1 知识点&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#411-基础概念&quot; id=&quot;markdown-toc-411-基础概念&quot;&gt;4.1.1 基础概念&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#412-安装--配置&quot; id=&quot;markdown-toc-412-安装--配置&quot;&gt;4.1.2 安装 &amp;amp; 配置&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#413-api&quot; id=&quot;markdown-toc-413-api&quot;&gt;4.1.3 API&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#414-query-dsl&quot; id=&quot;markdown-toc-414-query-dsl&quot;&gt;4.1.4 Query DSL&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#415-sql&quot; id=&quot;markdown-toc-415-sql&quot;&gt;4.1.5 SQL&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#416-ingest节点&quot; id=&quot;markdown-toc-416-ingest节点&quot;&gt;4.1.6 Ingest节点&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#ID_INDEX&quot; id=&quot;markdown-toc-ID_INDEX&quot;&gt;4.2 文档数据库 &amp;amp; 索引&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#ID_STORAGE&quot; id=&quot;markdown-toc-ID_STORAGE&quot;&gt;4.3 存储&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#ID_ARC_CLUSTER&quot; id=&quot;markdown-toc-ID_ARC_CLUSTER&quot;&gt;4.4 集群&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#45-监控--高可用&quot; id=&quot;markdown-toc-45-监控--高可用&quot;&gt;4.5 监控 &amp;amp; 高可用&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#451-监控&quot; id=&quot;markdown-toc-451-监控&quot;&gt;4.5.1 监控&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#452-高可用&quot; id=&quot;markdown-toc-452-高可用&quot;&gt;4.5.2 高可用&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#46-性能调优&quot; id=&quot;markdown-toc-46-性能调优&quot;&gt;4.6 性能调优&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#5-ui&quot; id=&quot;markdown-toc-5-ui&quot;&gt;5. UI&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#6-实践范例&quot; id=&quot;markdown-toc-6-实践范例&quot;&gt;6. 实践范例&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#7-todo&quot; id=&quot;markdown-toc-7-todo&quot;&gt;7. TODO&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#资料&quot; id=&quot;markdown-toc-资料&quot;&gt;资料&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#链接&quot; id=&quot;markdown-toc-链接&quot;&gt;链接&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;1-前言&quot;&gt;1. 前言&lt;/h1&gt;
&lt;p&gt;之前做了Prometheus和Jaeger相关的调研工作，这两者虽然也涉及到日志聚合相关的技术或是类似的技术，但毕竟不是通用的日志聚合系统。通用的日志聚合系统需要能接受任何类型的日志，并将其索引入库以备后续的查询。市面上这方面的产品现在基本上是Elasticsearch为主要选择，已经可以说是很成熟了。所以这块需求我这里也是以ELK为第一备选进行相关的调研。&lt;/p&gt;

&lt;p&gt;后续的调研内容版本如下：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;elasticsearch 7.0.0
elastic/filebeat 7.0.0
kibana 7.0.0
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;在提到Elasticsearch的时候我们一般不会只说Elasticsearch本身，而是会提到&lt;code&gt;ELK&lt;/code&gt;这个词，这里说的其实就是从日志采集、清洗、转换、分发、到最后入库的整个流程，以及查询用的面板包含在内的一整套生态。因此下面行文会从：日志采集、日志存储、日志查询三方面着手。&lt;/p&gt;

&lt;p&gt;官方文档：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.elastic.co/guide/index.html&quot; target=&quot;_blank&quot;&gt;Elastic Stack and Product Documentation&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/reference/7.0/index.html&quot; target=&quot;_blank&quot;&gt;Elasticsearch Reference&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.elastic.co/guide/en/beats/filebeat/7.0/index.html&quot; target=&quot;_blank&quot;&gt;Filebeat Reference&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.elastic.co/guide/en/kibana/7.0/index.html&quot; target=&quot;_blank&quot;&gt;Kibana User Guide&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;2-log-shipper&quot;&gt;2. Log Shipper&lt;/h1&gt;
&lt;p&gt;日志是在各个应用程序中生产的，此外也包括了操作系统级别的日志生产。因此日志的产生这个行为是分散在各个节点上的，日志的收集就是从分散的节点采集数据汇集到中心存储的一个过程，这也是所谓的&lt;code&gt;聚合&lt;/code&gt;。而从分散的节点上采集数据，我们需要Agent（Log Shipper）来执行这个操作。&lt;/p&gt;

&lt;p&gt;经典的&lt;code&gt;ELK&lt;/code&gt;中，&lt;code&gt;L&lt;/code&gt;代表的就是日志采集Agent：Logstash。当然，市面上也有非常多的其他选择，可以做到和Logstash类似的功能。从系统设计上来说，ELK三者本身是完全解耦分离的，所以所谓的ELK堆栈，只是一种经过验证的实践方案，其实中间除了E之外，L和K都是可以自由更换的。&lt;/p&gt;

&lt;h2 id=&quot;21-横向比较--选择&quot;&gt;2.1 横向比较 &amp;amp; 选择&lt;/h2&gt;
&lt;p&gt;关于日志采集组件的备选有大量横向比较，推荐阅读：&lt;a href=&quot;https://sematext.com/blog/logstash-alternatives/&quot; target=&quot;_blank&quot;&gt;5 Logstash Alternatives&lt;/a&gt;。这篇的时间还算比较新&lt;code&gt;2018-10-09&lt;/code&gt;，讲解也非常到位，基本上看这篇就OK了。&lt;/p&gt;

&lt;p&gt;此外，&lt;a href=&quot;https://gist.github.com/StevenACoffman/4e267f0f60c8e7fcb3f77b9e504f3bd7&quot; target=&quot;_blank&quot;&gt;StevenACoffman/fluent-filebeat-comparison.md&lt;/a&gt;也可以看下。&lt;/p&gt;

&lt;p&gt;排除比较年轻的项目，以及资历不太雄厚的项目，剩下的主要选项有三个：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Logstash
    &lt;ul&gt;
      &lt;li&gt;优势：功能强大；经过实践检验&lt;/li&gt;
      &lt;li&gt;劣势：资源占用过大；JVM&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Filebeat
    &lt;ul&gt;
      &lt;li&gt;优势：Go语言；部署简单；资源占用极小&lt;/li&gt;
      &lt;li&gt;劣势：功能相对简单&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Fluentd
    &lt;ul&gt;
      &lt;li&gt;优势：CNCF孵化项目&lt;/li&gt;
      &lt;li&gt;劣势：Ruby语言实现&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Log Shipper作为每个应用程序都需要附加的边车组件其中之一，Logstash的内存和CPU消耗在某些情况下是完全不能接受的（1GB内存，开玩笑）。JVM众所周知是比较难搞的虚拟机，如果要用好，调优需要有非常专门的知识，所以算是一个减分项。但放在Elasticsearch堆栈上来说，倒也不是那么严重，因为你无论如何都需要JVM知识来调优Elasticsearch本身。功能强大是Logstash的最大优势，能满足基本上所有的应用场景，在某些架构上，即便使用了Filebeat等高效轻量级的Log Shipper，在进入Elasticsearch入库之前仍旧需要一个Logstash来进行转换等工作。&lt;/p&gt;

&lt;p&gt;Filebeat基本上没有缺点，如果它的功能能满足你的需求的话。如果不能满足，那么最新的Kafka输出能解决你的问题。使用Filebeat作为边车的Log Shipper，输出到Kafka，然后使用Logstash或者自己编写的组件来消费Kafka里的日志，最终入库到Elasticsearch。&lt;/p&gt;

&lt;p&gt;Fluentd的最大优势在于CNCF的加持（背书）。但基于我多年的编程经验，ruby的性能一般来说是不可靠的，甚至使用JVM的Logstash都已经为性能付出了过大的代价，我又有什么理由要去相信口碑一直不怎么样的ruby呢。Logstash至少使用的JVM还和Elasticsearch本身是一个技术栈的，Fluentd会引入一个完全新的ruby虚拟机，就更加增加系统复杂度了。甚至，我在调研的初期就随手找到了：&lt;a href=&quot;https://github.com/fluent/fluentd/issues/1657&quot; target=&quot;_blank&quot;&gt;Fluentd retains excessive amounts of memory after handling traffic peaks #1657&lt;/a&gt;，&lt;code&gt;2017年&lt;/code&gt;的BUG，到现在还是&lt;code&gt;Open状态&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;综上所述，任何情况下都应该使用Filebeat作为边车的Log Shipper。Filebeat能满足需求的直接入库到Elasticsearch，不能满足需求的日志进Kafka，然后使用Logstash或其他Consumer来进行转换，最终入库到Elasticsearch。&lt;/p&gt;

&lt;h2 id=&quot;22-架构设计&quot;&gt;2.2 架构设计&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;/resources/2019/04/elasticsearch-note/log_shipper_arc.jpg&quot; alt=&quot;Architecture&quot; target=&quot;_blank&quot; /&gt;&lt;/p&gt;

&lt;p&gt;图中的Logstash部分可以替换成自编写的轻量级Consumer。&lt;/p&gt;

&lt;h1 id=&quot;3-filebeat&quot;&gt;3. Filebeat&lt;/h1&gt;
&lt;p&gt;非常细节的使用及配置，可以查看这篇中文的博客：&lt;a href=&quot;https://www.cnblogs.com/cjsblog/p/9495024.html&quot; target=&quot;_blank&quot;&gt;Filebeat 模块与配置&lt;/a&gt;。&lt;/p&gt;

&lt;h2 id=&quot;31-设计--基础概念&quot;&gt;3.1 设计 &amp;amp; 基础概念&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;/resources/2019/04/elasticsearch-note/filebeat.png&quot; alt=&quot;Architecture&quot; target=&quot;_blank&quot; /&gt;&lt;/p&gt;

&lt;p&gt;这张图看看就好，意义不大。&lt;/p&gt;

&lt;p&gt;Filebeat是一种&lt;a href=&quot;https://www.elastic.co/cn/products/beats&quot; target=&quot;_blank&quot;&gt;Elastic Beat&lt;/a&gt;，其实现基于&lt;code&gt;libbeat&lt;/code&gt;框架，更多的可以查看：&lt;a href=&quot;https://www.elastic.co/guide/en/beats/libbeat/7.0/index.html&quot; target=&quot;_blank&quot;&gt;Beats Platform Reference&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;工作流：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;输入：从指定的文件进行监控日志增加行为，并触发读取发送&lt;/li&gt;
  &lt;li&gt;输出：可直接向Elasticsearch集群发送日志，也可以将日志输出到外部的消息队列（Kafka）里&lt;/li&gt;
  &lt;li&gt;模块：对某些日志进行的采集行为及Elasticsearch集群对这些日志进行分析的配置化和固化&lt;/li&gt;
  &lt;li&gt;消费：Elasticsearch集群解析日志入库，或从Kafka读取日志然后解析入库&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;32-使用&quot;&gt;3.2 使用&lt;/h2&gt;
&lt;p&gt;部分说明文档：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;安装请参照：&lt;a href=&quot;https://www.elastic.co/guide/en/beats/filebeat/7.0/filebeat-installation.html#filebeat-installation&quot; target=&quot;_blank&quot;&gt;Step 1: Install Filebeat&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;配置请参照：&lt;a href=&quot;https://www.elastic.co/guide/en/beats/filebeat/7.0/filebeat-configuration.html#filebeat-configuration&quot; target=&quot;_blank&quot;&gt;Step 2: Configure Filebeat&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;33-模块&quot;&gt;3.3 模块&lt;/h2&gt;
&lt;p&gt;官方文档：&lt;a href=&quot;https://www.elastic.co/guide/en/beats/filebeat/7.0/filebeat-modules-overview.html&quot; target=&quot;_blank&quot;&gt;Modules overview&lt;/a&gt;。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Elasticsearch Ingest Node pipeline definition, which is used to parse the log lines.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;首先明确一点，Filebeat的模块并不是一般意义上的&lt;code&gt;功能模块&lt;/code&gt;。按软件设计思维来说，模块意味着功能的拓展，意味着根据模块设计的要求（框架）可以将软件本身能做的事情大幅拓展。而Filebeat的模块则不是，在Filebeat里，模块意味着一系列既有行为的组合：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Nginx有两个日志：access和error&lt;/li&gt;
  &lt;li&gt;Nginx在Elasticsearch上处理的Ingest Pipeline是XXX&lt;/li&gt;
  &lt;li&gt;Nginx的日志格式是XXX，Elasticsearch里对应的字段是XXX&lt;/li&gt;
  &lt;li&gt;Nginx日志对应的Kibana面板有XXX，可以看到XXX数据&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;从上面的例子可见：Filebeat本身并没有做什么，它做的仍旧只是采集日志，发送出去，没了。只不过指定了Elasticsearch集群中处理这个日志的Ingest Pipeline是谁，日志应该怎么入库（事情是在Elasticsearch集群上完成的）。因此Filebeat是&lt;code&gt;不可能替代&lt;/code&gt;Logstash的，它的定位看来永远只能当做一个轻量级的应用端Log Shipper。&lt;/p&gt;

&lt;p&gt;部分文档：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;如何创建一个新的模块：&lt;a href=&quot;https://www.elastic.co/guide/en/beats/devguide/7.0/filebeat-modules-devguide.html#filebeat-modules-devguide&quot; target=&quot;_blank&quot;&gt;Creating a New Filebeat Module&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;模块清单：&lt;a href=&quot;https://www.elastic.co/guide/en/beats/filebeat/7.0/filebeat-modules.html#filebeat-modules&quot; target=&quot;_blank&quot;&gt;Modules&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;命令行列出模块：&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;docker run --rm --name filebeat elastic/filebeat:7.0.0 modules list
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;34-过滤和丰富&quot;&gt;3.4 过滤和丰富&lt;/h2&gt;
&lt;p&gt;Filebeat可以在配置中指定一些受限的过滤和清洗功能：&lt;a href=&quot;https://www.elastic.co/guide/en/beats/filebeat/current/filtering-and-enhancing-data.html&quot; target=&quot;_blank&quot;&gt;Filter and enhance the exported data&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;可选的processor清单有：&lt;a href=&quot;https://www.elastic.co/guide/en/beats/filebeat/current/defining-processors.html#processors&quot; target=&quot;_blank&quot;&gt;Processors&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;触发的条件：&lt;a href=&quot;https://www.elastic.co/guide/en/beats/filebeat/current/defining-processors.html#conditions&quot; target=&quot;_blank&quot;&gt;Conditions&lt;/a&gt;。&lt;/p&gt;

&lt;h2 id=&quot;35-文件状态记录--投递保证&quot;&gt;3.5 文件状态记录 &amp;amp; 投递保证&lt;/h2&gt;
&lt;p&gt;Filebeat对于输入的日志文件，会制作一个本地的注册文件，将状态都保存下来，因此在重启或者挂掉重新拉起来之后，Filebeat总是能知道之前发送到哪里。&lt;/p&gt;

&lt;p&gt;Filebeat会保证本地的日志文件至少被输出一次，如果在输出的结果返回之前Filebeat就挂掉的话，在下次Filebeat启动之后，它还会将之前最后的日志再投递一次（对于Filebeat来说，它并不知道自己死前已经投递过一次，并被输出方接收到了）。因此，收取数据的服务端&lt;code&gt;可能&lt;/code&gt;在某些情况下收到&lt;code&gt;重复的数据&lt;/code&gt;。&lt;/p&gt;

&lt;h1 id=&quot;4-elasticsearch&quot;&gt;4. Elasticsearch&lt;/h1&gt;
&lt;p&gt;2套电子书非常不错：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://fdv.github.io/running-elasticsearch-fun-profit/&quot; target=&quot;_blank&quot;&gt;Operating Elasticsearch for Fun and Profit&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://es.xiaoleilu.com/index.html&quot; target=&quot;_blank&quot;&gt;Elasticsearch 权威指南（中文版）&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;41-知识点&quot;&gt;4.1 知识点&lt;/h2&gt;
&lt;p&gt;这一节基本上都是简单的知识点和概念罗列，主要阐明：”这是什么”。详细的内容会在后续的章节里分析。&lt;/p&gt;

&lt;h3 id=&quot;411-基础概念&quot;&gt;4.1.1 基础概念&lt;/h3&gt;
&lt;p&gt;官方文档：&lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/reference/7.0/getting-started-concepts.html#getting-started-concepts&quot; target=&quot;_blank&quot;&gt;Basic Concepts&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;提到了几点：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Near Realtime (NRT)&lt;/li&gt;
  &lt;li&gt;Cluster&lt;/li&gt;
  &lt;li&gt;Node&lt;/li&gt;
  &lt;li&gt;Index&lt;/li&gt;
  &lt;li&gt;Document&lt;/li&gt;
  &lt;li&gt;Shards &amp;amp; Replicas&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;412-安装--配置&quot;&gt;4.1.2 安装 &amp;amp; 配置&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/reference/7.0/docker.html#docker&quot; target=&quot;_blank&quot;&gt;Install Elasticsearch with Docker&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/reference/7.0/settings.html#settings&quot; target=&quot;_blank&quot;&gt;Configuring Elasticsearch&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/reference/7.0/jvm-options.html#jvm-options&quot; target=&quot;_blank&quot;&gt;Setting JVM options&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/reference/7.0/important-settings.html#important-settings&quot; target=&quot;_blank&quot;&gt;Important Elasticsearch configuration&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/reference/7.0/system-config.html#system-config&quot; target=&quot;_blank&quot;&gt;Important System Configuration&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;后面三条对生产环境影响比较大，需要仔细阅读。&lt;/p&gt;

&lt;h2 id=&quot;413-api&quot;&gt;4.1.3 API&lt;/h2&gt;
&lt;p&gt;Elasticsearch的API文档相当散，主要是以下几项：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/reference/7.0/docs.html&quot; target=&quot;_blank&quot;&gt;Document APIs&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/reference/7.0/search.html&quot; target=&quot;_blank&quot;&gt;Search APIs&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/reference/7.0/search-aggregations.html&quot; target=&quot;_blank&quot;&gt;Aggregations&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/reference/7.0/indices.html&quot; target=&quot;_blank&quot;&gt;Indices APIs&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/reference/7.0/cat.html&quot; target=&quot;_blank&quot;&gt;cat APIs&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/reference/7.0/cluster.html&quot; target=&quot;_blank&quot;&gt;Cluster APIs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;414-query-dsl&quot;&gt;4.1.4 Query DSL&lt;/h2&gt;
&lt;p&gt;官方文档：&lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/reference/7.0/query-dsl.html&quot; target=&quot;_blank&quot;&gt;Query DSL&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;了解Elasticsearch的人肯定会问：Query DSL和Elasticsearch的基础Lucene之间是什么关系。关于这个知识点可以查看：&lt;a href=&quot;https://stackoverflow.com/questions/27793721/what-is-the-difference-between-lucene-and-elasticsearch&quot; target=&quot;_blank&quot;&gt;What is the difference between Lucene and Elasticsearch&lt;/a&gt;。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Elasticsearch is a JSON Based, Distributed, web server build over Lucene. Though it’s Lucene who is doing the actual work beneath, Elasticsearch provides us a convenient layer over Lucene. Each shard that gets created in Elasticsearch is a separate Lucene instance.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Lucene是底层，Elasticsearch是基于Lucene之上的富集开发，而QueryDSL则是用户和Elasticsearch之间交互的桥梁。&lt;/p&gt;

&lt;h3 id=&quot;415-sql&quot;&gt;4.1.5 SQL&lt;/h3&gt;
&lt;p&gt;Elasticsearch还可以使用SQL进行查询：&lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/reference/current/xpack-sql.html&quot; target=&quot;_blank&quot;&gt;SQL access&lt;/a&gt;。&lt;/p&gt;

&lt;h3 id=&quot;416-ingest节点&quot;&gt;4.1.6 Ingest节点&lt;/h3&gt;
&lt;p&gt;在整个&lt;a href=&quot;#ID_ARC_CLUSTER&quot;&gt;Elasticsearch集群&lt;/a&gt;中，有一部分节点是用来进行日志过滤、清洗、丰富化的，这些工作在这个设计出现之前是只能在Agent上实现的，一般来说就是Logstash，而现在在服务器节点上也可以处理相对应的工作了。&lt;/p&gt;

&lt;p&gt;官方文档：&lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/reference/current/ingest.html#ingest&quot; target=&quot;_blank&quot;&gt;Ingest Node&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;通过定义Processors来进行日志的解析和处理：&lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/reference/7.0/ingest-processors.html#ingest-processors&quot; target=&quot;_blank&quot;&gt;Processors&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;初步了解下来功能应该还算强大，可以使用脚本化代码进行功能拓展：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/reference/7.0/script-processor.html#script-processor&quot; target=&quot;_blank&quot;&gt;Script Processor&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/reference/7.0/modules-scripting-using.html#modules-scripting-using&quot; target=&quot;_blank&quot;&gt;How to use scripts&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;此外还有插件机制：&lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/plugins/7.0/ingest.html#ingest&quot; target=&quot;_blank&quot;&gt;Ingest Plugins&lt;/a&gt;。&lt;/p&gt;

&lt;h2 id=&quot;ID_INDEX&quot;&gt;4.2 文档数据库 &amp;amp; 索引&lt;/h2&gt;
&lt;p&gt;Elasticsearch是一个文档数据库，从本质上来看，它和Mongo其实相当类似。和传统RDBMS比较起来：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Relational DB -&amp;gt; Databases -&amp;gt; Tables  -&amp;gt; Rows      -&amp;gt; Columns
Elasticsearch -&amp;gt; DEFAULT   -&amp;gt; Indices -&amp;gt; Documents -&amp;gt; Fields
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;举个例子：
PUT /employee/1&lt;/p&gt;

&lt;p&gt;Index：&lt;code&gt;employee&lt;/code&gt;  &lt;br /&gt;
Document：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;first_name&amp;quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;John&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;last_name&amp;quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;  &lt;span class=&quot;s2&quot;&gt;&amp;quot;Smith&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;age&amp;quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;        &lt;span class=&quot;mi&quot;&gt;25&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;about&amp;quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;      &lt;span class=&quot;s2&quot;&gt;&amp;quot;I love to go rock climbing&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;interests&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;sports&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;music&amp;quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Fields：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;first_name&lt;/li&gt;
  &lt;li&gt;last_name&lt;/li&gt;
  &lt;li&gt;age&lt;/li&gt;
  &lt;li&gt;about&lt;/li&gt;
  &lt;li&gt;interests&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;索引非常重要，在集群模式（cluster）中，索引是用来进行分区的唯一指标。Elasticsearch会根据Index来决定当前数据落到哪台实际的存储服务器上。&lt;/p&gt;

&lt;p&gt;关于索引的细节，以及一些集群相关的索引知识，可以查看：&lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/reference/7.0/docs-index_.html&quot; target=&quot;_blank&quot;&gt;Index API&lt;/a&gt;。&lt;/p&gt;

&lt;h2 id=&quot;ID_STORAGE&quot;&gt;4.3 存储&lt;/h2&gt;
&lt;p&gt;在官方手册文档中，并没有关于存储相关的设计及实现的详细内容。在Blog中找到一篇：&lt;a href=&quot;https://www.elastic.co/blog/found-dive-into-elasticsearch-storage&quot; target=&quot;_blank&quot;&gt;A Dive into the Elasticsearch Storage&lt;/a&gt;，不过时间也稍微有点久，但还算可以用来一窥存储相关的技术点。&lt;/p&gt;

&lt;p&gt;此外，&lt;strong&gt;shards：Lucene segments&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Each Elasticsearch index is divided into shards. Shards are both logical and physical division of an index. Each Elasticsearch shard is a Lucene index. The maximum number of documents you can have in a Lucene index is 2,147,483,519. The Lucene index is divided into smaller files called segments. A segment is a small Lucene index. Lucene searches in all segments sequentially.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;/resources/2019/04/elasticsearch-note/elk_shards.png&quot; alt=&quot;elk_shards&quot; target=&quot;_blank&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;ID_ARC_CLUSTER&quot;&gt;4.4 集群&lt;/h2&gt;
&lt;p&gt;关于架构和集群的基础概念可以阅读官方的一份PPT：&lt;a href=&quot;https://www.elastic.co/pdf/architecture-best-practices.pdf&quot; target=&quot;_blank&quot;&gt;Elasticsearch Best Practice Architecture&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;主要是了解下Elasticsearch集群的节点分类：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/resources/2019/04/elasticsearch-note/elk_node_types.png&quot; alt=&quot;elk_node_types&quot; target=&quot;_blank&quot; /&gt;&lt;/p&gt;

&lt;p&gt;然后看下之前提到过的ELK整体集群拓扑：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/resources/2019/04/elasticsearch-note/elk_arch.png&quot; alt=&quot;elk_arch&quot; target=&quot;_blank&quot; /&gt;&lt;/p&gt;

&lt;p&gt;此外推荐一篇：&lt;a href=&quot;https://thoughts.t37.net/designing-the-perfect-elasticsearch-cluster-the-almost-definitive-guide-e614eabc1a87&quot; target=&quot;_blank&quot;&gt;Designing the Perfect Elasticsearch Cluster: the (almost) Definitive Guide&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;在官方的文档库中我并没有找到比较新版本的文档有讲解到分布式和高可用之类的架构设计内容，大部分的文档都是各种API和各种细节。在老的版本中倒是找到一点信息：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/guide/current/_how_primary_and_replica_shards_interact.html&quot; target=&quot;_blank&quot;&gt;How Primary and Replica Shards Interact&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/guide/current/distrib-write.html&quot; target=&quot;_blank&quot;&gt;Creating, Indexing, and Deleting a Document&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;此外，中文书里的内容也可以阅读：&lt;a href=&quot;https://es.xiaoleilu.com/020_Distributed_Cluster/00_Intro.html&quot; target=&quot;_blank&quot;&gt;集群内部工作方式&lt;/a&gt;，注意这本中文书的版本已经相当老了，里面的内容有部分和现在的版本明显不同。&lt;/p&gt;

&lt;p&gt;几点整理：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;replica与数据主节点并不一定是1：1的关系（并不一定一个master拖一个slave这样的设计），主节点的数据是完全分散到其他各个replica节点上的，这个replica节点数量是可设置的&lt;/li&gt;
  &lt;li&gt;当你的replica设置越多，写入速度就越慢（参与的节点多），主节点写入完毕之后还要让所有的replica写入，全部都完成才会返回客户端完成&lt;/li&gt;
  &lt;li&gt;当你的replica设置越多，查询（读取）速度就越快（参与的节点多）&lt;/li&gt;
  &lt;li&gt;当发生查询请求时，查询请求是会落到所有的shard上的，所以集群shards做的越多，整个集群的查询性能开销就越大，这里就有一个平衡的问题&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;45-监控--高可用&quot;&gt;4.5 监控 &amp;amp; 高可用&lt;/h2&gt;
&lt;h3 id=&quot;451-监控&quot;&gt;4.5.1 监控&lt;/h3&gt;
&lt;p&gt;对于Elasticsearch的监控，官方有一套解决方案（Elasticsearch算是一个生态了，在上游和下游都有完整的处理）。可以查阅下官方文档：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/reference/current/es-monitoring.html&quot; target=&quot;_blank&quot;&gt;Monitoring Elasticsearch&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/reference/current/setup-xpack.html#setup-xpack&quot; target=&quot;_blank&quot;&gt;Set up X-Pack&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/reference/7.0/getting-started-cluster-health.html#getting-started-cluster-health&quot; target=&quot;_blank&quot;&gt;Cluster Health&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;当然也可以选用Prometheus作为监控：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/vvanholl/elasticsearch-prometheus-exporter&quot; target=&quot;_blank&quot;&gt;Prometheus Exporter Plugin for Elasticsearch&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;452-高可用&quot;&gt;4.5.2 高可用&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;数据节点数量选择&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://thoughts.t37.net/resizing-your-elasticsearch-indexes-in-production-d7a0402d137e&quot; target=&quot;_blank&quot;&gt;Resizing your Elasticsearch Indexes in Production&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.signalfx.com/blog/scaling-elasticsearch-sharding-availability-hundreds-millions-documents/&quot; target=&quot;_blank&quot;&gt;Scaling Elasticsearch: Sharding and Availability for Hundreds Of Millions of Documents&lt;/a&gt;：这篇当中有一段讲解了&lt;code&gt;Resharding With Zero Downtime&lt;/code&gt;，这是非常有价值的一个topic&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;可恢复的集群最低配置&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;3 locations to host your nodes. 2 locations to run half of your cluster, and one for the backup master node.&lt;/li&gt;
  &lt;li&gt;3 master nodes. You need an odd number of eligible master nodes to avoid split brains when you lose a whole data center. Put one master node in each location so you hopefully never lose the quorum.&lt;/li&gt;
  &lt;li&gt;2 http nodes, one in each primary data center.&lt;/li&gt;
  &lt;li&gt;As many data nodes as you need, split evenly between both main locations.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;故障恢复&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Elasticsearch在集群中分主节点shard和复制节点replica，当集群的设置足够多（数据冗余充分）的情况下，当某个物理节点不可用时，Elasticsearch会自动进行选举，将丢失的主节点shard的replica节点设置成主节点，并重新对集群进行平衡。举个例子：&lt;/p&gt;

&lt;p&gt;事故发生前：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;一共有3个物理节点&lt;/li&gt;
  &lt;li&gt;一共有3个主节点shard&lt;/li&gt;
  &lt;li&gt;每个主节点shard有2个复制节点replica&lt;/li&gt;
  &lt;li&gt;当前物理节点1是作为整个集群的master节点进行服务的&lt;/li&gt;
  &lt;li&gt;后续事故会发生在物理节点1，这个节点会下线&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/resources/2019/04/elasticsearch-note/elk_ha_01.png&quot; alt=&quot;Before&quot; target=&quot;_blank&quot; /&gt;&lt;/p&gt;

&lt;p&gt;事故发生后：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;master节点下线了，因此集群重新开始选取master节点，设定为物理节点2&lt;/li&gt;
  &lt;li&gt;0号主节点shard（P0）本来就在物理节点3上，因此不受影响&lt;/li&gt;
  &lt;li&gt;1号和2号主节点shard之前在物理节点1上，全部丢失，集群将物理节点2上的2号shard的replica（R2）提升为主节点shard（P2），并将物理节点3上的1号shard的replica（R1）提升为主节点shard（P1）&lt;/li&gt;
  &lt;li&gt;此时所有的主节点shard都已恢复，且各主节点shard都存在一份replica&lt;/li&gt;
  &lt;li&gt;后续集群会继续为各主节点shard复制缺失的一份replica&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/resources/2019/04/elasticsearch-note/elk_ha_02.png&quot; alt=&quot;After&quot; target=&quot;_blank&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;46-性能调优&quot;&gt;4.6 性能调优&lt;/h2&gt;
&lt;p&gt;Ebay有一篇非常细节非常棒的设计及性能优化分析博文：&lt;a href=&quot;https://www.ebayinc.com/stories/blogs/tech/elasticsearch-performance-tuning-practice-at-ebay/&quot; target=&quot;_blank&quot;&gt;Elasticsearch Performance Tuning Practice at eBay&lt;/a&gt;。从时间上来看，这篇文章也比较近：2018-01-08。&lt;/p&gt;

&lt;p&gt;这篇博文分析了大规模Elasticsearch集群会面临的挑战，以及解决方案，还按实际的应用Scenario进行了问题分析以及给出了解决范例，很棒。&lt;/p&gt;

&lt;h1 id=&quot;5-ui&quot;&gt;5. UI&lt;/h1&gt;
&lt;p&gt;Kibana这块相对来说比较简单（？），这里就只做简单的尝试。下面会列一些关键文档位置：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.elastic.co/guide/en/kibana/current/docker.html#docker&quot; target=&quot;_blank&quot;&gt;Running Kibana on Docker&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.elastic.co/guide/en/kibana/7.0/settings.html#settings&quot; target=&quot;_blank&quot;&gt;Configuring Kibana&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.elastic.co/guide/en/kibana/current/lucene-query.html#lucene-query&quot; target=&quot;_blank&quot;&gt;Lucene Query Syntax&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;6-实践范例&quot;&gt;6. 实践范例&lt;/h1&gt;
&lt;p&gt;和之前做Prometheus实验的时候一样，因为需要把握一些细节，所以实验使用的还是下载下来的Elasticsearch、Kibana以及Filebeat。作为配角的Nginx使用的则是镜像版本。&lt;/p&gt;

&lt;p&gt;范例代码可以在Github查看：&lt;a href=&quot;https://github.com/agreatfool/dist-system-practice/tree/master/experiment/elasticsearch&quot; target=&quot;_blank&quot;&gt;dist-system-practice/experiment/elasticsearch/&lt;/a&gt;。&lt;/p&gt;

&lt;h1 id=&quot;7-todo&quot;&gt;7. TODO&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;Elasticsearch集群及一些基本观察用的API熟悉&lt;/li&gt;
  &lt;li&gt;Elasticsearch JVM相关参数和实践研究&lt;/li&gt;
  &lt;li&gt;Elasticsearch reshard的策略，最佳实践&lt;/li&gt;
  &lt;li&gt;Elasticsearch reshard时候的CPU、磁盘、内存，还有特别是网络的影响&lt;/li&gt;
  &lt;li&gt;Elasticsearch reshard在各种集群规模下的耗时&lt;/li&gt;
  &lt;li&gt;Elasticsearch的性能指标研究&lt;/li&gt;
  &lt;li&gt;Elasticsearch性能测试&lt;/li&gt;
  &lt;li&gt;Kibana使用深入&lt;/li&gt;
  &lt;li&gt;添加Logstash部分内容，这块由于时间问题暂时不准备展开&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;资料&quot;&gt;资料&lt;/h1&gt;
&lt;h2 id=&quot;链接&quot;&gt;链接&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://sematext.com/blog/logstash-alternatives/&quot; target=&quot;_blank&quot;&gt;5 Logstash Alternatives&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://gist.github.com/StevenACoffman/4e267f0f60c8e7fcb3f77b9e504f3bd7&quot; target=&quot;_blank&quot;&gt;StevenACoffman/fluent-filebeat-comparison.md&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fluent/fluentd/issues/1657&quot; target=&quot;_blank&quot;&gt;Fluentd retains excessive amounts of memory after handling traffic peaks #1657&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.cnblogs.com/cjsblog/p/9495024.html&quot; target=&quot;_blank&quot;&gt;Filebeat 模块与配置&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://fdv.github.io/running-elasticsearch-fun-profit/&quot; target=&quot;_blank&quot;&gt;Operating Elasticsearch for Fun and Profit&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://es.xiaoleilu.com/index.html&quot; target=&quot;_blank&quot;&gt;Elasticsearch 权威指南（中文版）&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/27793721/what-is-the-difference-between-lucene-and-elasticsearch&quot; target=&quot;_blank&quot;&gt;What is the difference between Lucene and Elasticsearch&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://thoughts.t37.net/designing-the-perfect-elasticsearch-cluster-the-almost-definitive-guide-e614eabc1a87&quot; target=&quot;_blank&quot;&gt;Designing the Perfect Elasticsearch Cluster: the (almost) Definitive Guide&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/vvanholl/elasticsearch-prometheus-exporter&quot; target=&quot;_blank&quot;&gt;Prometheus Exporter Plugin for Elasticsearch&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://thoughts.t37.net/resizing-your-elasticsearch-indexes-in-production-d7a0402d137e&quot; target=&quot;_blank&quot;&gt;Resizing your Elasticsearch Indexes in Production&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.signalfx.com/blog/scaling-elasticsearch-sharding-availability-hundreds-millions-documents/&quot; target=&quot;_blank&quot;&gt;Scaling Elasticsearch: Sharding and Availability for Hundreds Of Millions of Documents&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.ebayinc.com/stories/blogs/tech/elasticsearch-performance-tuning-practice-at-ebay/&quot; target=&quot;_blank&quot;&gt;Elasticsearch Performance Tuning Practice at eBay&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;EOF&lt;/p&gt;
&lt;/blockquote&gt;
</description>
				<pubDate>Thu, 25 Apr 2019 10:01:22 +0800</pubDate>
				<link>https://xenojoshua.com/2019/04/elasticsearch-note/</link>
				<guid isPermaLink="true">https://xenojoshua.com/2019/04/elasticsearch-note/</guid>
			</item>
		
			<item>
				<title>Jaeger Notes</title>
				<description>&lt;h4&gt;Table of Contents&lt;/h4&gt;
&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#1-前言&quot; id=&quot;markdown-toc-1-前言&quot;&gt;1. 前言&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#2-opentracing&quot; id=&quot;markdown-toc-2-opentracing&quot;&gt;2. OpenTracing&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#21-trace&quot; id=&quot;markdown-toc-21-trace&quot;&gt;2.1 Trace&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#22-span&quot; id=&quot;markdown-toc-22-span&quot;&gt;2.2 Span&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#221-trace与span关系&quot; id=&quot;markdown-toc-221-trace与span关系&quot;&gt;2.2.1 Trace与Span关系&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#222-span属性&quot; id=&quot;markdown-toc-222-span属性&quot;&gt;2.2.2 Span属性&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#223-span-context属性&quot; id=&quot;markdown-toc-223-span-context属性&quot;&gt;2.2.3 Span Context属性&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#224-span间关系&quot; id=&quot;markdown-toc-224-span间关系&quot;&gt;2.2.4 Span间关系&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#3-jaeger架构&quot; id=&quot;markdown-toc-3-jaeger架构&quot;&gt;3. Jaeger架构&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#31-jaeger-client&quot; id=&quot;markdown-toc-31-jaeger-client&quot;&gt;3.1 Jaeger Client&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#32-jaeger-agent&quot; id=&quot;markdown-toc-32-jaeger-agent&quot;&gt;3.2 Jaeger Agent&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#33-jaeger-collector&quot; id=&quot;markdown-toc-33-jaeger-collector&quot;&gt;3.3 Jaeger Collector&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#34-data-store&quot; id=&quot;markdown-toc-34-data-store&quot;&gt;3.4 Data Store&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#35-jaeger-query&quot; id=&quot;markdown-toc-35-jaeger-query&quot;&gt;3.5 Jaeger Query&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#36-jaeger-ingester&quot; id=&quot;markdown-toc-36-jaeger-ingester&quot;&gt;3.6 Jaeger Ingester&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#日志模式&quot; id=&quot;markdown-toc-日志模式&quot;&gt;日志模式&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#4-jaeger使用&quot; id=&quot;markdown-toc-4-jaeger使用&quot;&gt;4. Jaeger使用&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#41-jaeger-collector单独启动&quot; id=&quot;markdown-toc-41-jaeger-collector单独启动&quot;&gt;4.1 Jaeger Collector单独启动&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#42-jaeger-agent单独启动&quot; id=&quot;markdown-toc-42-jaeger-agent单独启动&quot;&gt;4.2 Jaeger Agent单独启动&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#43-jaeger-query单独启动&quot; id=&quot;markdown-toc-43-jaeger-query单独启动&quot;&gt;4.3 Jaeger Query单独启动&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#5-jaeger高可用&quot; id=&quot;markdown-toc-5-jaeger高可用&quot;&gt;5. Jaeger高可用&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#51-metrics&quot; id=&quot;markdown-toc-51-metrics&quot;&gt;5.1 Metrics&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#52-components&quot; id=&quot;markdown-toc-52-components&quot;&gt;5.2 Components&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#521-client&quot; id=&quot;markdown-toc-521-client&quot;&gt;5.2.1 Client&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#522-agent&quot; id=&quot;markdown-toc-522-agent&quot;&gt;5.2.2 Agent&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#523-collector&quot; id=&quot;markdown-toc-523-collector&quot;&gt;5.2.3 Collector&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#524-data-store&quot; id=&quot;markdown-toc-524-data-store&quot;&gt;5.2.4 Data Store&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#6-jaeger采样&quot; id=&quot;markdown-toc-6-jaeger采样&quot;&gt;6. Jaeger采样&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#61-client配置&quot; id=&quot;markdown-toc-61-client配置&quot;&gt;6.1 Client配置&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#611-constant&quot; id=&quot;markdown-toc-611-constant&quot;&gt;6.1.1 Constant&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#612-probabilistic&quot; id=&quot;markdown-toc-612-probabilistic&quot;&gt;6.1.2 Probabilistic&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#613-rate-limiting&quot; id=&quot;markdown-toc-613-rate-limiting&quot;&gt;6.1.3 Rate Limiting&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#614-remote&quot; id=&quot;markdown-toc-614-remote&quot;&gt;6.1.4 Remote&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#62-collector配置&quot; id=&quot;markdown-toc-62-collector配置&quot;&gt;6.2 Collector配置&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#7-todo&quot; id=&quot;markdown-toc-7-todo&quot;&gt;7. TODO&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#资料&quot; id=&quot;markdown-toc-资料&quot;&gt;资料&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#链接&quot; id=&quot;markdown-toc-链接&quot;&gt;链接&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#help&quot; id=&quot;markdown-toc-help&quot;&gt;Help&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#ID_APP_AGENT_HELP&quot; id=&quot;markdown-toc-ID_APP_AGENT_HELP&quot;&gt;jaeger-agent –help&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#ID_APP_COLLECTOR_HELP&quot; id=&quot;markdown-toc-ID_APP_COLLECTOR_HELP&quot;&gt;jaeger-collector memory –help&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#ID_APP_QUERY_HELP&quot; id=&quot;markdown-toc-ID_APP_QUERY_HELP&quot;&gt;jaeger-query –help&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#metrics&quot; id=&quot;markdown-toc-metrics&quot;&gt;Metrics&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#ID_APP_AGENT_METRICS&quot; id=&quot;markdown-toc-ID_APP_AGENT_METRICS&quot;&gt;jaeger-agent metrics&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#ID_APP_COLLECTOR_METRICS&quot; id=&quot;markdown-toc-ID_APP_COLLECTOR_METRICS&quot;&gt;jaeger-collector metrics&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#ID_APP_QUERY_METRICS&quot; id=&quot;markdown-toc-ID_APP_QUERY_METRICS&quot;&gt;jaeger-query metrics&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;1-前言&quot;&gt;1. 前言&lt;/h1&gt;
&lt;p&gt;Tracing是最近才慢慢开始普及起来的一个概念。现在越来越多的系统转向微服务，或者类似于微服务设计的分布式系统，系统内部的复杂度越来越高，导致观察某一个请求的整个生命周期非常困难，查错也很困难。为了解决这样的问题，Tracing这个需求就被慢慢提出来了。最早的解决方案是一个开源项目被称为：&lt;a href=&quot;https://zipkin.io/&quot; target=&quot;_blank&quot;&gt;Zipkin&lt;/a&gt;。后来CNCF对Tracing做了一个规范：&lt;a href=&quot;https://opentracing.io/&quot; target=&quot;_blank&quot;&gt;OpenTracing&lt;/a&gt;，在CNCF里也孵化了一个项目：&lt;a href=&quot;https://www.jaegertracing.io/&quot; target=&quot;_blank&quot;&gt;Jaeger&lt;/a&gt;。现在基本上有这方面需求的，都会使用Jaeger，前浪死在沙滩上啊。&lt;/p&gt;

&lt;p&gt;关于监控、追踪、日志三者的区别，可以查看：&lt;a href=&quot;/2019/04/monitoring-tracing-logging/&quot; target=&quot;_blank&quot;&gt;Compare: Monitoring | Tracing | Logging&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;以下所有针对Jaeger的讨论都基于版本：&lt;code&gt;1.11.0&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;外部链接：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;阿里云的一篇博文很不错，可以看下：&lt;a href=&quot;https://yq.aliyun.com/articles/514488&quot; target=&quot;_blank&quot;&gt;开放分布式追踪（OpenTracing）入门与 Jaeger 实现&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.jianshu.com/p/a963ad0bbe3e&quot; target=&quot;_blank&quot;&gt;OpenTracing语义标准规范及实现&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;2-opentracing&quot;&gt;2. OpenTracing&lt;/h1&gt;
&lt;p&gt;OpenTracing在CNCF里有其站点：&lt;a href=&quot;https://opentracing.io&quot; target=&quot;_blank&quot;&gt;opentracing.io&lt;/a&gt;，这个站点主要是进行一些大概念的介绍，基本上没什么可用的实现，而实现可以看上面提到过的Jaeger，当然本文后面也会介绍。&lt;/p&gt;

&lt;p&gt;该站点的文档中，有意义的部分从：&lt;a href=&quot;https://opentracing.io/docs/overview/&quot; target=&quot;_blank&quot;&gt;OpenTracing Overview&lt;/a&gt;开始。文档概念性的部分过完之后，其他部分基本上就可以忽略了。&lt;/p&gt;

&lt;p&gt;OpenTracing有官方的Specification：&lt;a href=&quot;https://github.com/opentracing-contrib/opentracing-specification-zh/blob/master/specification.md&quot; target=&quot;_blank&quot;&gt;CN汉化版&lt;/a&gt;，以及&lt;a href=&quot;https://opentracing.io/specification/&quot; target=&quot;_blank&quot;&gt;EN原版&lt;/a&gt;。既然是SPEC，里面也就包含了所有需要了解的信息，有时间的可以通读一遍。&lt;/p&gt;

&lt;p&gt;这里需要注意，SPEC是有明确版本的，当前的版本为：&lt;code&gt;1.1&lt;/code&gt; - &lt;code&gt;19 Sep 2018&lt;/code&gt;。  &lt;br /&gt;
前一版本为：1.0 - 23 Dec 2016，可以看到版本基本上很稳定。&lt;/p&gt;

&lt;p&gt;此外，对于SPEC，有一些&lt;a href=&quot;https://github.com/opentracing-contrib/opentracing-specification-zh/blob/master/semantic_conventions.md&quot; target=&quot;_blank&quot;&gt;语义惯例&lt;/a&gt;可以看下。&lt;/p&gt;

&lt;p&gt;主要需要遵循的有：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/opentracing-contrib/opentracing-specification-zh/blob/master/semantic_conventions.md#span-tag-%E6%B8%85%E5%8D%95&quot; target=&quot;_blank&quot;&gt;Span tag 清单&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/opentracing-contrib/opentracing-specification-zh/blob/master/semantic_conventions.md#log-field-%E6%B8%85%E5%8D%95&quot; target=&quot;_blank&quot;&gt;Log field 清单&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/opentracing-contrib/opentracing-specification-zh/blob/master/semantic_conventions.md#%E5%85%B8%E5%9E%8B%E5%9C%BA%E6%99%AF%E5%BB%BA%E6%A8%A1&quot; target=&quot;_blank&quot;&gt;典型场景建模&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;如果应用场景符合上述范例中定义的情况，则务必需要遵循这些规范。这有点类似于写代码的时候的Coding Style，虽然代码编译执行可能没有任何问题，但为了统一编码的可读性还是需要遵循规范。&lt;/p&gt;

&lt;p&gt;下文会从组成Tracing的一些概念着手开始逐步介绍。&lt;/p&gt;

&lt;h2 id=&quot;21-trace&quot;&gt;2.1 Trace&lt;/h2&gt;
&lt;blockquote&gt;
  &lt;p&gt;Trace: The description of a transaction as it moves through a distributed system.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Trace：一个在分布式系统内运作的事务。&lt;/p&gt;

&lt;p&gt;Trace代表着一个完整的事务，举个例子来说，如果有一个复杂的API系统，内部的API后台由大量的微服务实现，而一个可能需要十来个甚至更多的微服务协同处理的&lt;code&gt;API请求&lt;/code&gt;，就是一个&lt;code&gt;Trace&lt;/code&gt;。而这个例子中每一个微服务，其所作的工作就可以被认为是一个&lt;code&gt;Span&lt;/code&gt;。&lt;/p&gt;

&lt;h2 id=&quot;22-span&quot;&gt;2.2 Span&lt;/h2&gt;
&lt;blockquote&gt;
  &lt;p&gt;Span: A named, timed operation representing a piece of the workflow. Spans accept key:value tags as well as fine-grained, timestamped, structured logs attached to the particular span instance.
Span context: Trace information that accompanies the distributed transaction, including when it passes the service to service over the network or through a message bus. The span context contains the trace identifier, span identifier, and any other data that the tracing system needs to propagate to the downstream service.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Span：一个被命名、被计时，代表着一段工作流的操作。Spans实例接受键值对的tags，以及含有细节的、计时的、结构化的日志内容。&lt;/p&gt;

&lt;p&gt;Span context：伴随着分布式事务产生的Trace相关的信息，包含了该事务通过网络或消息总线在服务之间传递的时间。此外还包含了：trace标识符、span标识符，以及其他任何tracing系统需要用来衍生下游服务所需要的数据。&lt;/p&gt;

&lt;h3 id=&quot;221-trace与span关系&quot;&gt;2.2.1 Trace与Span关系&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;/resources/2019/04/jaeger-note/spans-traces.png&quot; alt=&quot;Relationship&quot; target=&quot;_blank&quot; /&gt;&lt;/p&gt;

&lt;p&gt;上图是一个Trace和Span的关系范例图。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;从时间轴上可以看到，A覆盖了所有下面子条目的时间，这很容易理解：所有的Span组成一个Trace，而每个Span实际上都消耗了时间，这些时间的总合就是Trace的时间消耗&lt;/li&gt;
  &lt;li&gt;Span有父子级别概念：B和C以及D的关系就是父子，而C和D则不是父子关系，父子的时间是&lt;code&gt;重合&lt;/code&gt;的，就类似所有子Span和Trace之间的时间关系，B消耗的时间是C和D的时间总合，而A消耗的时间则是B和E的总合&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;图中：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;在Trace &lt;code&gt;A&lt;/code&gt;中，&lt;code&gt;B&lt;/code&gt;和&lt;code&gt;E&lt;/code&gt;是&lt;code&gt;A&lt;/code&gt;的子Span&lt;/li&gt;
  &lt;li&gt;在Trace &lt;code&gt;A&lt;/code&gt;中，&lt;code&gt;B&lt;/code&gt;和&lt;code&gt;E&lt;/code&gt;顺序执行，&lt;code&gt;E&lt;/code&gt;的执行需要等待&lt;code&gt;B&lt;/code&gt;的完成&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;A&lt;/code&gt;的消耗时长为&lt;code&gt;B&lt;/code&gt;和&lt;code&gt;E&lt;/code&gt;的总合（这里都是理想情况）&lt;/li&gt;
  &lt;li&gt;在Span &lt;code&gt;B&lt;/code&gt;中，&lt;code&gt;C&lt;/code&gt;和&lt;code&gt;D&lt;/code&gt;是&lt;code&gt;B&lt;/code&gt;的子Span&lt;/li&gt;
  &lt;li&gt;在Span &lt;code&gt;B&lt;/code&gt;中，&lt;code&gt;C&lt;/code&gt;和&lt;code&gt;D&lt;/code&gt;顺序执行，&lt;code&gt;D&lt;/code&gt;的执行需要等待&lt;code&gt;C&lt;/code&gt;的完成&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;B&lt;/code&gt;的消耗时长为&lt;code&gt;C&lt;/code&gt;和&lt;code&gt;D&lt;/code&gt;的总合（这里都是理想情况）&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;222-span属性&quot;&gt;2.2.2 Span属性&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;An operation name&lt;/code&gt;，操作名称&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;A start timestamp&lt;/code&gt;，起始时间&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;A finish timestamp&lt;/code&gt;，结束时间&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;Span Tag&lt;/code&gt;，一组键值对构成的Span标签集合。键值对中，键必须为string，值可以是字符串，布尔，或者数字类型&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;Span Log&lt;/code&gt;，一组span的日志集合
    &lt;ul&gt;
      &lt;li&gt;每次log操作包含一个键值对，以及一个时间戳&lt;/li&gt;
      &lt;li&gt;键值对中，键必须为string，值可以是任意类型&lt;/li&gt;
      &lt;li&gt;但是需要注意，不是所有的支持OpenTracing的Tracer，都需要支持所有的值类型&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;code&gt;SpanContext&lt;/code&gt;，Span上下文对象&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;References&lt;/code&gt;，Span间关系，相关的零个或者多个Span（Span间通过SpanContext建立这种关系）&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Span Tag 范例：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;db.instance:”jdbc:mysql://127.0.0.1:3306/customers”&lt;/li&gt;
  &lt;li&gt;db.statement:”SELECT * FROM mytable WHERE foo=’bar’;”&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Span Logs 范例：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;message:”Can’t connect to mysql server on ‘127.0.0.1’(10061)”&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;223-span-context属性&quot;&gt;2.2.3 Span Context属性&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;任何一个OpenTracing的实现，都需要将当前调用链的状态（例如：trace和span的id），依赖一个独特的Span去跨进程边界传输&lt;/li&gt;
  &lt;li&gt;Baggage Items，Trace的随行数据，是一个键值对集合，它存在于trace中，也需要跨进程边界传输&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;SpanContext 范例：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;trace_id:”abc123”&lt;/li&gt;
  &lt;li&gt;span_id:”xyz789”&lt;/li&gt;
  &lt;li&gt;Baggage Items:
    &lt;ul&gt;
      &lt;li&gt;special_id:”vsid1738”&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;224-span间关系&quot;&gt;2.2.4 Span间关系&lt;/h3&gt;
&lt;p&gt;一个Span可以与一个或者多个SpanContexts存在因果关系。OpenTracing目前定义了两种关系：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;ChildOf（父子）&lt;/li&gt;
  &lt;li&gt;FollowsFrom（跟随）&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ChildOf引用：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;一个RPC调用的服务端的span，和RPC服务客户端的span构成ChildOf关系&lt;/li&gt;
  &lt;li&gt;一个sql insert操作的span，和ORM的save方法的span构成ChildOf关系&lt;/li&gt;
  &lt;li&gt;很多span可以并行工作（或者分布式工作）都可能是一个父级的span的子项，他会合并所有子span的执行结果，并在指定期限内返回&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;3-jaeger架构&quot;&gt;3. Jaeger架构&lt;/h1&gt;
&lt;p&gt;官网上（&lt;a href=&quot;https://www.jaegertracing.io/docs/1.11/architecture/&quot; target=&quot;_blank&quot;&gt;Architecture&lt;/a&gt;）有一张架构图，可以先看下：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/resources/2019/04/jaeger-note/architecture.png&quot; alt=&quot;Architecture&quot; target=&quot;_blank&quot; /&gt;&lt;/p&gt;

&lt;p&gt;图上的内容主要分几个部分，下面一个个说。&lt;/p&gt;

&lt;h2 id=&quot;31-jaeger-client&quot;&gt;3.1 Jaeger Client&lt;/h2&gt;
&lt;p&gt;Jaeger client是之前提到的OpenTracing API的多语言实现。这部分是嵌在你的应用程序里的一个&lt;code&gt;类库&lt;/code&gt;，它就是你的应用程序的一部分，使用它你就可以在收到Request的时候创建对应的Span，并向下游Request输出对应的Trace上下文。&lt;/p&gt;

&lt;p&gt;Jaeger Client可以直接向Collector发送Trace信息，也可以结合本地的Agent协同工作，降低性能开销。实际上这部分的性能开销不会很大。&lt;/p&gt;

&lt;h2 id=&quot;32-jaeger-agent&quot;&gt;3.2 Jaeger Agent&lt;/h2&gt;
&lt;p&gt;Jaeger Agent是和目标应用程序并行部署的一个组件，可以理解为边车设计中的&lt;code&gt;边车&lt;/code&gt;的组成部分之一。它是一个长期启动的守护进程，通过监听UDP网络接收Client发送过来的Trace信息，并批量向Collector发送。在设计上，Agent可以将路由和服务发现相关的业务从Client里解耦出来。&lt;/p&gt;

&lt;h2 id=&quot;33-jaeger-collector&quot;&gt;3.3 Jaeger Collector&lt;/h2&gt;
&lt;p&gt;Jaeger Collector可以说是Jaeger的&lt;code&gt;服务器&lt;/code&gt;，接收从Agent发送过来的Trace信息，并对其进行验证、索引、转换，并最终将其存储起来。&lt;/p&gt;

&lt;h2 id=&quot;34-data-store&quot;&gt;3.4 Data Store&lt;/h2&gt;
&lt;p&gt;Jaeger的数据存储是可插拔式组件设计，有多种数据后端可选：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Cassandra&lt;/li&gt;
  &lt;li&gt;Elasticsearch&lt;/li&gt;
  &lt;li&gt;Kafka&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;存储选择是个问题，我简单搜索了下，没有找到非常权威的帖子对这三者进行横向比较，也可能是因为这块的技术比较新发展比较快。就我来看，个人建议是熟悉什么用什么，以不增加系统复杂度为第一要务。猜想：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Cassandra大概是稳定性最好的，大数据量的选择应该是这个&lt;/li&gt;
  &lt;li&gt;功能上大概是ELK最好，本来它就是以全文搜索为功能设计出来的系统&lt;/li&gt;
  &lt;li&gt;性能上应该是Kafka最高，毕竟Kafka的吞吐量是有口皆碑的&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;从官方的文档口径上来看，最推荐的应该是使用Kafka和Ingester组成通道，然后使用Cassandra作为存储设备。&lt;/p&gt;

&lt;h2 id=&quot;35-jaeger-query&quot;&gt;3.5 Jaeger Query&lt;/h2&gt;
&lt;p&gt;Jaeger的查询引擎，UI发送查询请求到该组件，然后查询引擎会查询后台数据仓库，返回结果。该组件启动的时候已经附带启动了HTTP的UI界面。&lt;/p&gt;

&lt;h2 id=&quot;36-jaeger-ingester&quot;&gt;3.6 Jaeger Ingester&lt;/h2&gt;
&lt;p&gt;组件上还有个Ingester，但基本上没找到什么相关信息。官方介绍：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Ingester is a service that reads from Kafka topic and writes to another storage backend (Cassandra, Elasticsearch).&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;感觉应该是一个解决吞吐量的中间件。&lt;/p&gt;

&lt;h2 id=&quot;日志模式&quot;&gt;日志模式&lt;/h2&gt;
&lt;p&gt;按照Jaeger当前的设计，Client和Agent之间是使用UDP进行通讯，必须是实时连接的，这就对Agent的健壮性提出了要求，如果当前Agent已挂，Client就基本上不可用了。而日志文件化的好处就是将Client和Agent彻底解耦，使用操作系统的磁盘IO来解决Tracing生成的问题，而这方面，官方&lt;code&gt;并没有计划&lt;/code&gt;要这么做，没有任何关于这方面的设计讨论（至少我没找到）。&lt;/p&gt;

&lt;p&gt;而官方倒是有讨论：如果有一个外部存储已经存放了Tracing相关数据，能不能直接使用Query连接上去进行Tracing数据的展示和分析。见：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/jaegertracing/jaeger/issues/649&quot; target=&quot;_blank&quot;&gt;Integration with external logs storage when displaying traces #649&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;如果这个实现的话，实际上就完全绕过了Jaeger的整个生命周期：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;不再需要在应用程序中嵌入Jaeger的Client（直接使用日志组件将Tracing打成日志）&lt;/li&gt;
  &lt;li&gt;不再需要在边车中放置Jaeger的Agent（只要有日志聚合的Agent即可：Logstash、Filebeat）&lt;/li&gt;
  &lt;li&gt;不再需要启动Collector集群（直接由日志聚合Agent发送到Elaticsearch）&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;只需要直接沿用（如果在用的话）ELK系列日志聚合系统，然后用Jaeger的Query直接连接到Elasticsearch上进行Tracing对应的日志分析就可以了。这样即减少了系统的整体复杂度（不需要Jaeger的一整套东西了），又降低了系统整体负载（磁盘IO永远是最便宜的东西）。&lt;/p&gt;

&lt;p&gt;就看今后发展了。不过如果这真的实现了，Jaeger项目还有必要存在么。。。&lt;/p&gt;

&lt;h1 id=&quot;4-jaeger使用&quot;&gt;4. Jaeger使用&lt;/h1&gt;
&lt;p&gt;初步入门可以查看官方文档：&lt;a href=&quot;https://www.jaegertracing.io/docs/1.11/getting-started/&quot; target=&quot;_blank&quot;&gt;Getting started&lt;/a&gt;。实际生产环境的安装和部署，需要仔细阅读官方文档：&lt;a href=&quot;https://www.jaegertracing.io/docs/1.11/deployment/&quot; target=&quot;_blank&quot;&gt;Deployment&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;如果使用&lt;code&gt;all-in-one&lt;/code&gt;范例镜像的话，可以：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ docker run -d --name jaeger \
  -e COLLECTOR_ZIPKIN_HTTP_PORT=9411 \
  -p 5775:5775/udp \
  -p 6831:6831/udp \
  -p 6832:6832/udp \
  -p 5778:5778 \
  -p 16686:16686 \
  -p 14268:14268 \
  -p 9411:9411 \
  jaegertracing/all-in-one:1.11.0
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这里主要要了解下一堆端口：&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Port&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Protocol&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Component&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Function&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;5775&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;UDP&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;agent&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;accept zipkin.thrift over compact thrift protocol (deprecated, used by legacy clients only)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;6831&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;UDP&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;agent&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;accept jaeger.thrift over compact thrift protocol&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;6832&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;UDP&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;agent&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;accept jaeger.thrift over binary thrift protocol&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;5778&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;HTTP&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;agent&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;serve configs&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;16686&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;HTTP&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;query&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;serve frontend&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;16687&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;HTTP&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;query&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;The http port for the health check service&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;14267&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;TChannel&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;collector&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;The TChannel port for the collector service&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;14268&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;HTTP&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;collector&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;accept jaeger.thrift directly from clients&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;14269&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;HTTP&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;collector&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;The http port for the health check service&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;14250&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;gRPC&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;collector&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;accept model.proto&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;9411&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;HTTP&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;collector&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Zipkin compatible endpoint (optional)&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;部分补充：&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.jaegertracing.io/docs/1.11/getting-started/&quot; target=&quot;_blank&quot;&gt;Getting started&lt;/a&gt;范例的官方文档里缺一个端口&lt;code&gt;14267&lt;/code&gt;。这个端口的Protocol被描述成&lt;code&gt;TChannel&lt;/code&gt;，可搜索文档&lt;a href=&quot;https://www.jaegertracing.io/docs/1.11/deployment/&quot; target=&quot;_blank&quot;&gt;Deployment&lt;/a&gt;：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ docker run \
  -e SPAN_STORAGE_TYPE=memory \
  jaegertracing/jaeger-collector:1.11.0 \
  --help

...
--collector.port int    The TChannel port for the collector service (default 14267)
...
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;此外，端口&lt;code&gt;14250&lt;/code&gt;的说明也不够清楚，实际上它是，Protocol是gRPC，也就是HTTP2：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;...
--collector.grpc-port int    The gRPC port for the collector service (default 14250)
...
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;以及，&lt;code&gt;14268&lt;/code&gt;：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;...
--collector.http-port int    The HTTP port for the collector service (default 14268)
...
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;41-jaeger-collector单独启动&quot;&gt;4.1 Jaeger Collector单独启动&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;#ID_APP_COLLECTOR_HELP&quot;&gt;jaeger-collector memory –help&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ docker run -d --name jaeger-collector \
  -e SPAN_STORAGE_TYPE=memory \
  -p 14267:14267 \
  -p 14268:14268 \
  -p 14250:14250 \
  jaegertracing/jaeger-collector:1.11.0
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;42-jaeger-agent单独启动&quot;&gt;4.2 Jaeger Agent单独启动&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;#ID_APP_AGENT_HELP&quot;&gt;jaeger-agent –help&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ docker run -d --name jaeger-agent \
  --link jaeger-collector \
  -p 5775:5775/udp \
  -p 6831:6831/udp \
  -p 6832:6832/udp \
  -p 5778:5778 \
  jaegertracing/jaeger-agent:1.11.0 \
  --reporter.type=grpc \
  --reporter.grpc.host-port=jaeger-collector:14250
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;43-jaeger-query单独启动&quot;&gt;4.3 Jaeger Query单独启动&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;#ID_APP_QUERY_HELP&quot;&gt;jaeger-query –help&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ docker run -d --name jaeger-query \
  --link jaeger-collector \
  -e SPAN_STORAGE_TYPE=memory \
  -p 16686:16686 \
  jaegertracing/jaeger-query:1.11.0
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&quot;5-jaeger高可用&quot;&gt;5. Jaeger高可用&lt;/h1&gt;
&lt;h2 id=&quot;51-metrics&quot;&gt;5.1 Metrics&lt;/h2&gt;
&lt;p&gt;Jaeger也兼容Prometheus格式的指标输出，有两个命令行参数：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;--metrics-backend&lt;/code&gt;：metrics暴露的格式，默认为&lt;code&gt;prometheus&lt;/code&gt;，&lt;code&gt;expvar&lt;/code&gt;可选&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;--metrics-http-route&lt;/code&gt;：metrics暴露的endpoint，默认为&lt;code&gt;/metrics&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;此外，几个端口需要了解下：&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Component&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Port&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;jaeger-agent&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;5778&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;jaeger-collector&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;14268&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;jaeger-query&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;16686&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;jaeger-ingester&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;14271&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;范例都在本文下面的资料部分：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#ID_APP_AGENT_METRICS&quot;&gt;jaeger-agent&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#ID_APP_COLLECTOR_METRICS&quot;&gt;jaeger-collector&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#ID_APP_QUERY_METRICS&quot;&gt;jaeger-query&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;jaeger-ingester（这块启动需要的依赖太重，暂时没做尝试）&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;52-components&quot;&gt;5.2 Components&lt;/h2&gt;
&lt;p&gt;先说结论，Jaeger在高可用这块的设计和实现基本上是空白，很可能在某些极端情况下丢失Tracing的数据。&lt;/p&gt;

&lt;h3 id=&quot;521-client&quot;&gt;5.2.1 Client&lt;/h3&gt;
&lt;p&gt;Client因为只是应用程序的Lib部分，因此不涉及到任何高可用的概念。&lt;/p&gt;

&lt;h3 id=&quot;522-agent&quot;&gt;5.2.2 Agent&lt;/h3&gt;
&lt;p&gt;Agent部分就只是一个转发机关，我查了下对应的文档和网络没找到高可用的设计，此外错误处理基本上也是没有的。也就是说，如果Agent出问题，所有当前未发送缓存中的数据都会丢失，且从Client传输到Agent的数据也会丢失。&lt;/p&gt;

&lt;p&gt;见：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/jaegertracing/jaeger/issues/1255&quot; target=&quot;_blank&quot;&gt;What happens when the jaeger-agent is down on a machine? #1255&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/jaegertracing/jaeger/issues/1430&quot; target=&quot;_blank&quot;&gt;Jaeger Agent does not buffer spans when the Collector is unavailable #1430&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;523-collector&quot;&gt;5.2.3 Collector&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;p&gt;The collectors are stateless and thus many instances of jaeger-collector can be run in parallel.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;这和我一开始的理解有点不同。我之前认为对同个Trace的多个子Span的识别和清洗过滤等行为是在Collector这个环节处理的，但既然官方文档都说明Collector是无状态的了，那就不是了。Collector应该只负责简单的Validation然后就直接存储到后台的Data Store里了。&lt;/p&gt;

&lt;p&gt;如果对Agent配置了以&lt;code&gt;,&lt;/code&gt;分隔的多台无状态Collectors，而其中某台Down了会发生什么，后面需要做测试，按现在Jaeger对错误处理和可用性的支持来看，估计就是直接丢数据了。&lt;/p&gt;

&lt;p&gt;同个Trace的多个组成部分Span是否都到达，是否缺失了一部分，看来是没有任何处理和保证的。这也就是说：可能会有部分Trace在UI中可以查到，但其中组成部分的Spans是不完整的，部分缺失的。说实在的，这还蛮致命的。&lt;/p&gt;

&lt;h3 id=&quot;524-data-store&quot;&gt;5.2.4 Data Store&lt;/h3&gt;
&lt;p&gt;这块就完全由选择的后台数据存储设施自己负责了，Cassandra是出了名的好用，Kafka在扩展上也不错。&lt;/p&gt;

&lt;h1 id=&quot;6-jaeger采样&quot;&gt;6. Jaeger采样&lt;/h1&gt;
&lt;p&gt;在&lt;a href=&quot;/2019/04/monitoring-tracing-logging/&quot; target=&quot;_blank&quot;&gt;Compare: Monitoring | Tracing | Logging&lt;/a&gt;里我已经提到过，tracing是一件频度相当高，且数据量很庞大的工作，因此其性能很可能有问题。Jaeger给了一个新的思路，就是按规则采样，而不是将所有发生的事件全部都发送并存储。&lt;/p&gt;

&lt;p&gt;这里需要说明的是采样的决策。如果一个链路很长的Trace，其中每一个Span都有权决定当前信息是否需要被采样，那么你就永远看不到一个完整的Trace了。组成Trace的A、B、C，Span A决定采样，B决定不采样，C决定采样，结果Trace就丢失了B部分数据。&lt;/p&gt;

&lt;p&gt;Jaeger采样的决策是在链路的第一节点就决定好了的，当前的Trace是否需要被采样，该决策做出之后，后续整个链路中所有的Span都需要按整个决策执行。这样就不会丢失数据了。&lt;/p&gt;

&lt;p&gt;见：&lt;a href=&quot;https://www.jaegertracing.io/docs/1.11/sampling/&quot; target=&quot;_blank&quot;&gt;Sampling&lt;/a&gt;。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;The sampling decision will be propagated with the requests to B and to C, so those services will not be making the sampling decision again but instead will respect the decision made by the top service A. This approach guarantees that if a trace is sampled, all its spans will be recorded in the backend. If each service was making its own sampling decision we would rarely get complete traces in the backend.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;关于采样的策略，官方也看到了不少问题，后续有一个正在制作中的功能&lt;code&gt;Adaptive Sampling&lt;/code&gt;，具体的问题和设计可以看：&lt;a href=&quot;https://github.com/jaegertracing/jaeger/issues/365&quot; target=&quot;_blank&quot;&gt;Adaptive Sampling #365&lt;/a&gt;。简单来说就是可以按更复杂的策略进行采样的决策。&lt;/p&gt;

&lt;h2 id=&quot;61-client配置&quot;&gt;6.1 Client配置&lt;/h2&gt;
&lt;p&gt;最基础的策略，采样是按&lt;code&gt;Client&lt;/code&gt;的配置进行执行的，记住，这种情况下采样是在客户端做的，而不是服务器，而且每个客户端都可以做不同的策略。&lt;/p&gt;

&lt;p&gt;此外，光阅读文档可能会理解不全，可以查看issue来加深理解：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/jaegertracing/jaeger/issues/832&quot; target=&quot;_blank&quot;&gt;How sampler.type=remote works #832&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;611-constant&quot;&gt;6.1.1 Constant&lt;/h3&gt;
&lt;p&gt;常量决策。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;类型：&lt;code&gt;sampler.type=const&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;值：
    &lt;ul&gt;
      &lt;li&gt;&lt;code&gt;sampler.param=1&lt;/code&gt;：全部采样&lt;/li&gt;
      &lt;li&gt;&lt;code&gt;sampler.param=0&lt;/code&gt;：全部丢弃&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;612-probabilistic&quot;&gt;6.1.2 Probabilistic&lt;/h3&gt;
&lt;p&gt;概率决策。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;类型：&lt;code&gt;sampler.type=probabilistic&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;值：&lt;code&gt;sampler.param=0.1&lt;/code&gt;表示 采样 1/10&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;613-rate-limiting&quot;&gt;6.1.3 Rate Limiting&lt;/h3&gt;
&lt;p&gt;频次策略。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;类型：&lt;code&gt;sampler.type=ratelimiting&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;值：&lt;code&gt;sampler.param=2.0&lt;/code&gt;表示 每秒 采样2次&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;614-remote&quot;&gt;6.1.4 Remote&lt;/h3&gt;
&lt;p&gt;远端决策。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;类型：&lt;code&gt;sampler.type=remote&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;这种情况下，Client会把请求发到Agent，而Agent则会进行判断是否进行采样。实际的配置则是放在Collector上，参见下面的&lt;code&gt;6.2&lt;/code&gt;。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;sampler consults Jaeger agent for the appropriate sampling strategy to use in the current service.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;62-collector配置&quot;&gt;6.2 Collector配置&lt;/h2&gt;
&lt;p&gt;官方文档在：&lt;a href=&quot;https://www.jaegertracing.io/docs/1.11/sampling/#collector-sampling-configuration&quot; target=&quot;_blank&quot;&gt;Collector Sampling Configuration&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;在&lt;code&gt;Client&lt;/code&gt;采样策略配置为：&lt;code&gt;sampler.type=remote&lt;/code&gt;的情况下，Agent会向Collector进行采样策略询问，这部分配置是放在&lt;code&gt;Collector&lt;/code&gt;上的。需要在Collector启动的时候指定配置文件：&lt;code&gt;--sampling.strategies-file&lt;/code&gt;。见：&lt;a href=&quot;#ID_APP_COLLECTOR_HELP&quot;&gt;jaeger-collector memory –help&lt;/a&gt;。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;This option requires a path to a json file which have the sampling strategies defined.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;quot;service_strategies&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;quot;service&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;foo&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;quot;type&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;probabilistic&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;quot;param&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;quot;operation_strategies&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;nt&quot;&gt;&amp;quot;operation&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;op1&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
          &lt;span class=&quot;nt&quot;&gt;&amp;quot;type&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;probabilistic&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
          &lt;span class=&quot;nt&quot;&gt;&amp;quot;param&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.2&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;nt&quot;&gt;&amp;quot;operation&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;op2&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
          &lt;span class=&quot;nt&quot;&gt;&amp;quot;type&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;probabilistic&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
          &lt;span class=&quot;nt&quot;&gt;&amp;quot;param&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.4&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;quot;service&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;bar&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;quot;type&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;ratelimiting&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;quot;param&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;quot;default_strategy&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;type&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;probabilistic&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;param&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.5&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;code&gt;service_strategies&lt;/code&gt;定义了服务级别的采样策略，&lt;code&gt;operation_strategies&lt;/code&gt;则定义了操作级别的采样策略。而实施的采样策略有两种可能：&lt;code&gt;概率策略&lt;/code&gt;和&lt;code&gt;频次策略&lt;/code&gt;（注意：操作级别的采样策略 不支持 频次策略）。&lt;code&gt;default_strategy&lt;/code&gt;定义了上述定义之外的情况下的采样策略。&lt;/p&gt;

&lt;p&gt;在上面的例子中：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;所有的&lt;code&gt;foo&lt;/code&gt;服务，都按0.8的概率策略进行采样&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;op1&lt;/code&gt;和&lt;code&gt;op2&lt;/code&gt;虽然属于&lt;code&gt;foo&lt;/code&gt;服务，但因为它们各自有自己的配置，因此按自己的配置实施，分别是0.2和0.4的概率策略&lt;/li&gt;
  &lt;li&gt;所有的&lt;code&gt;bar&lt;/code&gt;服务，都按每分钟5次的频次策略进行采样&lt;/li&gt;
  &lt;li&gt;除此之外的所有都按0.5的概率频次进行采样&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;7-todo&quot;&gt;7. TODO&lt;/h1&gt;
&lt;p&gt;囿于当前使用的深度及项目调研的时间限制，有部分内容做的还不够深入，后续可以考虑补全：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Jaeger自身的几项Metrics深入研究：Agent、Collector、Query&lt;/li&gt;
  &lt;li&gt;Jaeger的Benchmark&lt;/li&gt;
  &lt;li&gt;特别需要关注Jaeger在高负载情况下的数据丢失情况&lt;/li&gt;
  &lt;li&gt;后端Data Store的选择问题&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;资料&quot;&gt;资料&lt;/h1&gt;
&lt;h2 id=&quot;链接&quot;&gt;链接&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://yq.aliyun.com/articles/514488&quot; target=&quot;_blank&quot;&gt;开放分布式追踪（OpenTracing）入门与 Jaeger 实现&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.jianshu.com/p/a963ad0bbe3e&quot; target=&quot;_blank&quot;&gt;OpenTracing语义标准规范及实现&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://medium.com/jaegertracing/the-life-of-a-span-ee508410200b&quot; target=&quot;_blank&quot;&gt;The life of a span&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/jaegertracing/jaeger/issues/1255&quot; target=&quot;_blank&quot;&gt;What happens when the jaeger-agent is down on a machine? #1255&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/jaegertracing/jaeger/issues/1430&quot; target=&quot;_blank&quot;&gt;Jaeger Agent does not buffer spans when the Collector is unavailable #1430&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/jaegertracing/jaeger/issues/365&quot; target=&quot;_blank&quot;&gt;Adaptive Sampling #365&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/jaegertracing/jaeger/issues/832&quot; target=&quot;_blank&quot;&gt;How sampler.type=remote works #832&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/jaegertracing/jaeger/issues/649&quot; target=&quot;_blank&quot;&gt;Integration with external logs storage when displaying traces #649&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;help&quot;&gt;Help&lt;/h2&gt;
&lt;h3 id=&quot;ID_APP_AGENT_HELP&quot;&gt;jaeger-agent –help&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;$ docker run --rm jaegertracing/jaeger-agent:1.11.0 --help

Jaeger agent is a daemon program that runs on every host and receives tracing data submitted by Jaeger client libraries.

Usage:
  jaeger-agent [flags]
  jaeger-agent [command]

Available Commands:
  help        Help about any command
  version     Print the version

Flags:
      --collector.host-port string                                Deprecated; comma-separated string representing host:ports of a static list of collectors to connect to directly (e.g. when not using service discovery)
      --config-file string                                        Configuration file in JSON, TOML, YAML, HCL, or Java properties formats (default none). See spf13/viper for precedence.
      --discovery.conn-check-timeout duration                     Deprecated; sets the timeout used when establishing new connections (default 250ms)
      --discovery.min-peers int                                   Deprecated; if using service discovery, the min number of connections to maintain to the backend (default 3)
  -h, --help                                                      help for jaeger-agent
      --http-server.host-port string                              host:port of the http server (e.g. for /sampling point and /baggageRestrictions endpoint) (default &quot;:5778&quot;)
      --log-level string                                          Minimal allowed log Level. For more levels see https://github.com/uber-go/zap (default &quot;info&quot;)
      --metrics-backend string                                    Defines which metrics backend to use for metrics reporting: expvar, prometheus, none (default &quot;prometheus&quot;)
      --metrics-http-route string                                 Defines the route of HTTP endpoint for metrics backends that support scraping (default &quot;/metrics&quot;)
      --processor.jaeger-binary.server-host-port string           host:port for the UDP server (default &quot;:6832&quot;)
      --processor.jaeger-binary.server-max-packet-size int        max packet size for the UDP server (default 65000)
      --processor.jaeger-binary.server-queue-size int             length of the queue for the UDP server (default 1000)
      --processor.jaeger-binary.workers int                       how many workers the processor should run (default 10)
      --processor.jaeger-compact.server-host-port string          host:port for the UDP server (default &quot;:6831&quot;)
      --processor.jaeger-compact.server-max-packet-size int       max packet size for the UDP server (default 65000)
      --processor.jaeger-compact.server-queue-size int            length of the queue for the UDP server (default 1000)
      --processor.jaeger-compact.workers int                      how many workers the processor should run (default 10)
      --processor.zipkin-compact.server-host-port string          host:port for the UDP server (default &quot;:5775&quot;)
      --processor.zipkin-compact.server-max-packet-size int       max packet size for the UDP server (default 65000)
      --processor.zipkin-compact.server-queue-size int            length of the queue for the UDP server (default 1000)
      --processor.zipkin-compact.workers int                      how many workers the processor should run (default 10)
      --reporter.grpc.host-port string                            Comma-separated string representing host:port of a static list of collectors to connect to directly.
      --reporter.grpc.retry.max uint                              Sets the maximum number of retries for a call. (default 3)
      --reporter.grpc.tls                                         Enable TLS.
      --reporter.grpc.tls.ca string                               Path to a TLS CA file. (default use the systems truststore)
      --reporter.grpc.tls.server-name string                      Override the TLS server name.
      --reporter.tchannel.discovery.conn-check-timeout duration   sets the timeout used when establishing new connections (default 250ms)
      --reporter.tchannel.discovery.min-peers int                 if using service discovery, the min number of connections to maintain to the backend (default 3)
      --reporter.tchannel.host-port string                        comma-separated string representing host:ports of a static list of collectors to connect to directly (e.g. when not using service discovery)
      --reporter.tchannel.report-timeout duration                 sets the timeout used when reporting spans (default 1s)
      --reporter.type string                                      Reporter type to use e.g. grpc, tchannel (default &quot;grpc&quot;)

Use &quot;jaeger-agent [command] --help&quot; for more information about a command.
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;ID_APP_COLLECTOR_HELP&quot;&gt;jaeger-collector memory –help&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;$ docker run --rm -e SPAN_STORAGE_TYPE=memory jaegertracing/jaeger-collector:1.11.0 --help

Jaeger collector receives traces from Jaeger agents and runs them through a processing pipeline.

Usage:
  jaeger-collector [flags]
  jaeger-collector [command]

Available Commands:
  env         Help about environment variables
  help        Help about any command
  version     Print the version

Flags:
      --collector.grpc-port int           The gRPC port for the collector service (default 14250)
      --collector.grpc.tls                Enable TLS
      --collector.grpc.tls.cert string    Path to TLS certificate file
      --collector.grpc.tls.key string     Path to TLS key file
      --collector.http-port int           The HTTP port for the collector service (default 14268)
      --collector.num-workers int         The number of workers pulling items from the queue (default 50)
      --collector.port int                The TChannel port for the collector service (default 14267)
      --collector.queue-size int          The queue size of the collector (default 2000)
      --collector.zipkin.http-port int    The HTTP port for the Zipkin collector service e.g. 9411
      --config-file string                Configuration file in JSON, TOML, YAML, HCL, or Java properties formats (default none). See spf13/viper for precedence.
      --health-check-http-port int        The http port for the health check service (default 14269)
  -h, --help                              help for jaeger-collector
      --log-level string                  Minimal allowed log Level. For more levels see https://github.com/uber-go/zap (default &quot;info&quot;)
      --memory.max-traces int             The maximum amount of traces to store in memory
      --metrics-backend string            Defines which metrics backend to use for metrics reporting: expvar, prometheus, none (default &quot;prometheus&quot;)
      --metrics-http-route string         Defines the route of HTTP endpoint for metrics backends that support scraping (default &quot;/metrics&quot;)
      --sampling.strategies-file string   The path for the sampling strategies file in JSON format. See sampling documentation to see format of the file
      --span-storage.type string          Deprecated; please use SPAN_STORAGE_TYPE environment variable. Run this binary with &quot;env&quot; command for help.

Use &quot;jaeger-collector [command] --help&quot; for more information about a command.
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;ID_APP_QUERY_HELP&quot;&gt;jaeger-query –help&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;$ docker run --rm jaegertracing/jaeger-query:1.11.0 --help

Jaeger query service provides a Web UI and an API for accessing trace data.

Usage:
  jaeger-query [flags]
  jaeger-query [command]

Available Commands:
  env         Help about environment variables
  help        Help about any command
  version     Print the version

Flags:
      --cassandra...
      --config-file string                              Configuration file in JSON, TOML, YAML, HCL, or Java properties formats (default none). See spf13/viper for precedence.
      --health-check-http-port int                      The http port for the health check service (default 16687)
  -h, --help                                            help for jaeger-query
      --log-level string                                Minimal allowed log Level. For more levels see https://github.com/uber-go/zap (default &quot;info&quot;)
      --metrics-backend string                          Defines which metrics backend to use for metrics reporting: expvar, prometheus, none (default &quot;prometheus&quot;)
      --metrics-http-route string                       Defines the route of HTTP endpoint for metrics backends that support scraping (default &quot;/metrics&quot;)
      --query.base-path string                          The base path for all HTTP routes, e.g. /jaeger; useful when running behind a reverse proxy (default &quot;/&quot;)
      --query.port int                                  The port for the query service (default 16686)
      --query.static-files string                       The directory path override for the static assets for the UI
      --query.ui-config string                          The path to the UI configuration file in JSON format
      --span-storage.type string                        Deprecated; please use SPAN_STORAGE_TYPE environment variable. Run this binary with &quot;env&quot; command for help.

Use &quot;jaeger-query [command] --help&quot; for more information about a command.
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;metrics&quot;&gt;Metrics&lt;/h2&gt;
&lt;h3 id=&quot;ID_APP_AGENT_METRICS&quot;&gt;jaeger-agent metrics&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# HELP go_gc_duration_seconds A summary of the GC invocation durations.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE go_gc_duration_seconds summary&lt;/span&gt;
...
&lt;span class=&quot;c1&quot;&gt;# HELP jaeger_agent_collector_proxy_total collector-proxy&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE jaeger_agent_collector_proxy_total counter&lt;/span&gt;
jaeger_agent_collector_proxy_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;endpoint&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;baggage&amp;quot;&lt;/span&gt;,protocol&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;grpc&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;err&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_agent_collector_proxy_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;endpoint&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;baggage&amp;quot;&lt;/span&gt;,protocol&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;grpc&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ok&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_agent_collector_proxy_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;endpoint&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;sampling&amp;quot;&lt;/span&gt;,protocol&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;grpc&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;err&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_agent_collector_proxy_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;endpoint&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;sampling&amp;quot;&lt;/span&gt;,protocol&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;grpc&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ok&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP jaeger_agent_http_server_errors_total http-server.errors&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE jaeger_agent_http_server_errors_total counter&lt;/span&gt;
jaeger_agent_http_server_errors_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;source&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;all&amp;quot;&lt;/span&gt;,status&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;4xx&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_agent_http_server_errors_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;source&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;collector-proxy&amp;quot;&lt;/span&gt;,status&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;5xx&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_agent_http_server_errors_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;source&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;thrift&amp;quot;&lt;/span&gt;,status&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;5xx&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_agent_http_server_errors_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;source&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;write&amp;quot;&lt;/span&gt;,status&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;5xx&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP jaeger_agent_http_server_requests_total http-server.requests&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE jaeger_agent_http_server_requests_total counter&lt;/span&gt;
jaeger_agent_http_server_requests_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;baggage&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_agent_http_server_requests_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;sampling&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_agent_http_server_requests_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;sampling-legacy&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP jaeger_agent_reporter_batch_size batch_size&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE jaeger_agent_reporter_batch_size gauge&lt;/span&gt;
jaeger_agent_reporter_batch_size&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;jaeger&amp;quot;&lt;/span&gt;,protocol&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;grpc&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_agent_reporter_batch_size&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;zipkin&amp;quot;&lt;/span&gt;,protocol&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;grpc&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP jaeger_agent_reporter_batches_failures_total batches.failures&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE jaeger_agent_reporter_batches_failures_total counter&lt;/span&gt;
jaeger_agent_reporter_batches_failures_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;jaeger&amp;quot;&lt;/span&gt;,protocol&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;grpc&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_agent_reporter_batches_failures_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;zipkin&amp;quot;&lt;/span&gt;,protocol&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;grpc&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP jaeger_agent_reporter_batches_submitted_total batches.submitted&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE jaeger_agent_reporter_batches_submitted_total counter&lt;/span&gt;
jaeger_agent_reporter_batches_submitted_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;jaeger&amp;quot;&lt;/span&gt;,protocol&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;grpc&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_agent_reporter_batches_submitted_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;zipkin&amp;quot;&lt;/span&gt;,protocol&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;grpc&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP jaeger_agent_reporter_spans_failures_total spans.failures&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE jaeger_agent_reporter_spans_failures_total counter&lt;/span&gt;
jaeger_agent_reporter_spans_failures_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;jaeger&amp;quot;&lt;/span&gt;,protocol&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;grpc&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_agent_reporter_spans_failures_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;zipkin&amp;quot;&lt;/span&gt;,protocol&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;grpc&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP jaeger_agent_reporter_spans_submitted_total spans.submitted&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE jaeger_agent_reporter_spans_submitted_total counter&lt;/span&gt;
jaeger_agent_reporter_spans_submitted_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;jaeger&amp;quot;&lt;/span&gt;,protocol&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;grpc&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_agent_reporter_spans_submitted_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;zipkin&amp;quot;&lt;/span&gt;,protocol&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;grpc&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP jaeger_agent_thrift_udp_server_packet_size thrift.udp.server.packet_size&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE jaeger_agent_thrift_udp_server_packet_size gauge&lt;/span&gt;
jaeger_agent_thrift_udp_server_packet_size&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;jaeger&amp;quot;&lt;/span&gt;,protocol&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;binary&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_agent_thrift_udp_server_packet_size&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;jaeger&amp;quot;&lt;/span&gt;,protocol&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;compact&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_agent_thrift_udp_server_packet_size&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;zipkin&amp;quot;&lt;/span&gt;,protocol&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;compact&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP jaeger_agent_thrift_udp_server_packets_dropped_total thrift.udp.server.packets.dropped&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE jaeger_agent_thrift_udp_server_packets_dropped_total counter&lt;/span&gt;
jaeger_agent_thrift_udp_server_packets_dropped_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;jaeger&amp;quot;&lt;/span&gt;,protocol&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;binary&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_agent_thrift_udp_server_packets_dropped_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;jaeger&amp;quot;&lt;/span&gt;,protocol&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;compact&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_agent_thrift_udp_server_packets_dropped_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;zipkin&amp;quot;&lt;/span&gt;,protocol&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;compact&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP jaeger_agent_thrift_udp_server_packets_processed_total thrift.udp.server.packets.processed&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE jaeger_agent_thrift_udp_server_packets_processed_total counter&lt;/span&gt;
jaeger_agent_thrift_udp_server_packets_processed_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;jaeger&amp;quot;&lt;/span&gt;,protocol&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;binary&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_agent_thrift_udp_server_packets_processed_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;jaeger&amp;quot;&lt;/span&gt;,protocol&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;compact&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_agent_thrift_udp_server_packets_processed_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;zipkin&amp;quot;&lt;/span&gt;,protocol&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;compact&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP jaeger_agent_thrift_udp_server_queue_size thrift.udp.server.queue_size&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE jaeger_agent_thrift_udp_server_queue_size gauge&lt;/span&gt;
jaeger_agent_thrift_udp_server_queue_size&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;jaeger&amp;quot;&lt;/span&gt;,protocol&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;binary&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_agent_thrift_udp_server_queue_size&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;jaeger&amp;quot;&lt;/span&gt;,protocol&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;compact&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_agent_thrift_udp_server_queue_size&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;zipkin&amp;quot;&lt;/span&gt;,protocol&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;compact&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP jaeger_agent_thrift_udp_server_read_errors_total thrift.udp.server.read.errors&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE jaeger_agent_thrift_udp_server_read_errors_total counter&lt;/span&gt;
jaeger_agent_thrift_udp_server_read_errors_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;jaeger&amp;quot;&lt;/span&gt;,protocol&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;binary&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_agent_thrift_udp_server_read_errors_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;jaeger&amp;quot;&lt;/span&gt;,protocol&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;compact&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_agent_thrift_udp_server_read_errors_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;zipkin&amp;quot;&lt;/span&gt;,protocol&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;compact&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP jaeger_agent_thrift_udp_t_processor_close_time thrift.udp.t-processor.close-time&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE jaeger_agent_thrift_udp_t_processor_close_time histogram&lt;/span&gt;
jaeger_agent_thrift_udp_t_processor_close_time_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;jaeger&amp;quot;&lt;/span&gt;,protocol&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;binary&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.005&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_agent_thrift_udp_t_processor_close_time_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;jaeger&amp;quot;&lt;/span&gt;,protocol&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;binary&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.01&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_agent_thrift_udp_t_processor_close_time_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;jaeger&amp;quot;&lt;/span&gt;,protocol&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;binary&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.025&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_agent_thrift_udp_t_processor_close_time_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;jaeger&amp;quot;&lt;/span&gt;,protocol&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;binary&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.05&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_agent_thrift_udp_t_processor_close_time_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;jaeger&amp;quot;&lt;/span&gt;,protocol&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;binary&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.1&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_agent_thrift_udp_t_processor_close_time_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;jaeger&amp;quot;&lt;/span&gt;,protocol&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;binary&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.25&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_agent_thrift_udp_t_processor_close_time_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;jaeger&amp;quot;&lt;/span&gt;,protocol&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;binary&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.5&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_agent_thrift_udp_t_processor_close_time_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;jaeger&amp;quot;&lt;/span&gt;,protocol&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;binary&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_agent_thrift_udp_t_processor_close_time_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;jaeger&amp;quot;&lt;/span&gt;,protocol&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;binary&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;2.5&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_agent_thrift_udp_t_processor_close_time_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;jaeger&amp;quot;&lt;/span&gt;,protocol&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;binary&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;5&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_agent_thrift_udp_t_processor_close_time_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;jaeger&amp;quot;&lt;/span&gt;,protocol&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;binary&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;10&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_agent_thrift_udp_t_processor_close_time_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;jaeger&amp;quot;&lt;/span&gt;,protocol&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;binary&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;+Inf&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_agent_thrift_udp_t_processor_close_time_sum&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;jaeger&amp;quot;&lt;/span&gt;,protocol&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;binary&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_agent_thrift_udp_t_processor_close_time_count&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;jaeger&amp;quot;&lt;/span&gt;,protocol&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;binary&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_agent_thrift_udp_t_processor_close_time_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;jaeger&amp;quot;&lt;/span&gt;,protocol&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;compact&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.005&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_agent_thrift_udp_t_processor_close_time_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;jaeger&amp;quot;&lt;/span&gt;,protocol&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;compact&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.01&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_agent_thrift_udp_t_processor_close_time_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;jaeger&amp;quot;&lt;/span&gt;,protocol&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;compact&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.025&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_agent_thrift_udp_t_processor_close_time_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;jaeger&amp;quot;&lt;/span&gt;,protocol&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;compact&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.05&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_agent_thrift_udp_t_processor_close_time_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;jaeger&amp;quot;&lt;/span&gt;,protocol&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;compact&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.1&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_agent_thrift_udp_t_processor_close_time_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;jaeger&amp;quot;&lt;/span&gt;,protocol&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;compact&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.25&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_agent_thrift_udp_t_processor_close_time_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;jaeger&amp;quot;&lt;/span&gt;,protocol&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;compact&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.5&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_agent_thrift_udp_t_processor_close_time_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;jaeger&amp;quot;&lt;/span&gt;,protocol&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;compact&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_agent_thrift_udp_t_processor_close_time_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;jaeger&amp;quot;&lt;/span&gt;,protocol&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;compact&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;2.5&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_agent_thrift_udp_t_processor_close_time_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;jaeger&amp;quot;&lt;/span&gt;,protocol&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;compact&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;5&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_agent_thrift_udp_t_processor_close_time_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;jaeger&amp;quot;&lt;/span&gt;,protocol&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;compact&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;10&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_agent_thrift_udp_t_processor_close_time_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;jaeger&amp;quot;&lt;/span&gt;,protocol&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;compact&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;+Inf&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_agent_thrift_udp_t_processor_close_time_sum&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;jaeger&amp;quot;&lt;/span&gt;,protocol&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;compact&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_agent_thrift_udp_t_processor_close_time_count&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;jaeger&amp;quot;&lt;/span&gt;,protocol&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;compact&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_agent_thrift_udp_t_processor_close_time_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;zipkin&amp;quot;&lt;/span&gt;,protocol&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;compact&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.005&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_agent_thrift_udp_t_processor_close_time_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;zipkin&amp;quot;&lt;/span&gt;,protocol&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;compact&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.01&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_agent_thrift_udp_t_processor_close_time_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;zipkin&amp;quot;&lt;/span&gt;,protocol&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;compact&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.025&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_agent_thrift_udp_t_processor_close_time_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;zipkin&amp;quot;&lt;/span&gt;,protocol&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;compact&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.05&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_agent_thrift_udp_t_processor_close_time_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;zipkin&amp;quot;&lt;/span&gt;,protocol&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;compact&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.1&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_agent_thrift_udp_t_processor_close_time_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;zipkin&amp;quot;&lt;/span&gt;,protocol&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;compact&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.25&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_agent_thrift_udp_t_processor_close_time_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;zipkin&amp;quot;&lt;/span&gt;,protocol&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;compact&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.5&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_agent_thrift_udp_t_processor_close_time_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;zipkin&amp;quot;&lt;/span&gt;,protocol&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;compact&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_agent_thrift_udp_t_processor_close_time_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;zipkin&amp;quot;&lt;/span&gt;,protocol&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;compact&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;2.5&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_agent_thrift_udp_t_processor_close_time_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;zipkin&amp;quot;&lt;/span&gt;,protocol&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;compact&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;5&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_agent_thrift_udp_t_processor_close_time_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;zipkin&amp;quot;&lt;/span&gt;,protocol&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;compact&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;10&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_agent_thrift_udp_t_processor_close_time_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;zipkin&amp;quot;&lt;/span&gt;,protocol&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;compact&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;+Inf&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_agent_thrift_udp_t_processor_close_time_sum&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;zipkin&amp;quot;&lt;/span&gt;,protocol&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;compact&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_agent_thrift_udp_t_processor_close_time_count&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;zipkin&amp;quot;&lt;/span&gt;,protocol&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;compact&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP jaeger_agent_thrift_udp_t_processor_handler_errors_total thrift.udp.t-processor.handler-errors&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE jaeger_agent_thrift_udp_t_processor_handler_errors_total counter&lt;/span&gt;
jaeger_agent_thrift_udp_t_processor_handler_errors_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;jaeger&amp;quot;&lt;/span&gt;,protocol&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;binary&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_agent_thrift_udp_t_processor_handler_errors_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;jaeger&amp;quot;&lt;/span&gt;,protocol&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;compact&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_agent_thrift_udp_t_processor_handler_errors_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;zipkin&amp;quot;&lt;/span&gt;,protocol&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;compact&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP process_cpu_seconds_total Total user and system CPU time spent in seconds.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE process_cpu_seconds_total counter&lt;/span&gt;
process_cpu_seconds_total &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;.05
&lt;span class=&quot;c1&quot;&gt;# HELP process_max_fds Maximum number of open file descriptors.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE process_max_fds gauge&lt;/span&gt;
process_max_fds &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;.048576e+06
&lt;span class=&quot;c1&quot;&gt;# HELP process_open_fds Number of open file descriptors.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE process_open_fds gauge&lt;/span&gt;
process_open_fds &lt;span class=&quot;m&quot;&gt;11&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP process_resident_memory_bytes Resident memory size in bytes.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE process_resident_memory_bytes gauge&lt;/span&gt;
process_resident_memory_bytes &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;.3283328e+07
&lt;span class=&quot;c1&quot;&gt;# HELP process_start_time_seconds Start time of the process since unix epoch in seconds.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE process_start_time_seconds gauge&lt;/span&gt;
process_start_time_seconds &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;.55540751234e+09
&lt;span class=&quot;c1&quot;&gt;# HELP process_virtual_memory_bytes Virtual memory size in bytes.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE process_virtual_memory_bytes gauge&lt;/span&gt;
process_virtual_memory_bytes &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;.22187776e+08&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;ID_APP_COLLECTOR_METRICS&quot;&gt;jaeger-collector metrics&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# HELP go_gc_duration_seconds A summary of the GC invocation durations.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE go_gc_duration_seconds summary&lt;/span&gt;
...
&lt;span class=&quot;c1&quot;&gt;# HELP jaeger_collector_batch_size batch-size&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE jaeger_collector_batch_size gauge&lt;/span&gt;
jaeger_collector_batch_size&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;host&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;1bd33f303256&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP jaeger_collector_in_queue_latency in-queue-latency&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE jaeger_collector_in_queue_latency histogram&lt;/span&gt;
jaeger_collector_in_queue_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;host&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;1bd33f303256&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.005&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_collector_in_queue_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;host&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;1bd33f303256&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.01&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_collector_in_queue_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;host&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;1bd33f303256&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.025&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_collector_in_queue_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;host&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;1bd33f303256&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.05&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_collector_in_queue_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;host&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;1bd33f303256&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.1&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_collector_in_queue_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;host&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;1bd33f303256&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.25&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_collector_in_queue_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;host&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;1bd33f303256&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.5&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_collector_in_queue_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;host&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;1bd33f303256&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_collector_in_queue_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;host&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;1bd33f303256&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;2.5&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_collector_in_queue_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;host&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;1bd33f303256&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;5&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_collector_in_queue_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;host&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;1bd33f303256&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;10&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_collector_in_queue_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;host&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;1bd33f303256&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;+Inf&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_collector_in_queue_latency_sum&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;host&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;1bd33f303256&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_collector_in_queue_latency_count&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;host&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;1bd33f303256&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP jaeger_collector_queue_length queue-length&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE jaeger_collector_queue_length gauge&lt;/span&gt;
jaeger_collector_queue_length&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;host&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;1bd33f303256&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP jaeger_collector_save_latency save-latency&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE jaeger_collector_save_latency histogram&lt;/span&gt;
jaeger_collector_save_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;host&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;1bd33f303256&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.005&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_collector_save_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;host&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;1bd33f303256&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.01&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_collector_save_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;host&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;1bd33f303256&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.025&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_collector_save_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;host&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;1bd33f303256&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.05&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_collector_save_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;host&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;1bd33f303256&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.1&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_collector_save_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;host&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;1bd33f303256&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.25&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_collector_save_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;host&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;1bd33f303256&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.5&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_collector_save_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;host&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;1bd33f303256&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_collector_save_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;host&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;1bd33f303256&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;2.5&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_collector_save_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;host&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;1bd33f303256&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;5&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_collector_save_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;host&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;1bd33f303256&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;10&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_collector_save_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;host&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;1bd33f303256&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;+Inf&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_collector_save_latency_sum&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;host&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;1bd33f303256&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_collector_save_latency_count&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;host&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;1bd33f303256&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP jaeger_collector_spans_dropped_total spans.dropped&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE jaeger_collector_spans_dropped_total counter&lt;/span&gt;
jaeger_collector_spans_dropped_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;host&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;1bd33f303256&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP jaeger_collector_spans_received_total received&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE jaeger_collector_spans_received_total counter&lt;/span&gt;
jaeger_collector_spans_received_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;debug&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;false&amp;quot;&lt;/span&gt;,format&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;jaeger&amp;quot;&lt;/span&gt;,svc&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;other-services&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_collector_spans_received_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;debug&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;false&amp;quot;&lt;/span&gt;,format&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;unknown&amp;quot;&lt;/span&gt;,svc&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;other-services&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_collector_spans_received_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;debug&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;false&amp;quot;&lt;/span&gt;,format&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;zipkin&amp;quot;&lt;/span&gt;,svc&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;other-services&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_collector_spans_received_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;debug&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;true&amp;quot;&lt;/span&gt;,format&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;jaeger&amp;quot;&lt;/span&gt;,svc&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;other-services&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_collector_spans_received_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;debug&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;true&amp;quot;&lt;/span&gt;,format&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;unknown&amp;quot;&lt;/span&gt;,svc&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;other-services&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_collector_spans_received_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;debug&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;true&amp;quot;&lt;/span&gt;,format&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;zipkin&amp;quot;&lt;/span&gt;,svc&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;other-services&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP jaeger_collector_spans_rejected_total rejected&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE jaeger_collector_spans_rejected_total counter&lt;/span&gt;
jaeger_collector_spans_rejected_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;debug&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;false&amp;quot;&lt;/span&gt;,format&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;jaeger&amp;quot;&lt;/span&gt;,svc&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;other-services&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_collector_spans_rejected_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;debug&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;false&amp;quot;&lt;/span&gt;,format&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;unknown&amp;quot;&lt;/span&gt;,svc&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;other-services&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_collector_spans_rejected_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;debug&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;false&amp;quot;&lt;/span&gt;,format&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;zipkin&amp;quot;&lt;/span&gt;,svc&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;other-services&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_collector_spans_rejected_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;debug&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;true&amp;quot;&lt;/span&gt;,format&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;jaeger&amp;quot;&lt;/span&gt;,svc&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;other-services&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_collector_spans_rejected_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;debug&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;true&amp;quot;&lt;/span&gt;,format&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;unknown&amp;quot;&lt;/span&gt;,svc&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;other-services&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_collector_spans_rejected_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;debug&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;true&amp;quot;&lt;/span&gt;,format&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;zipkin&amp;quot;&lt;/span&gt;,svc&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;other-services&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP jaeger_collector_spans_saved_by_svc_total saved-by-svc&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE jaeger_collector_spans_saved_by_svc_total counter&lt;/span&gt;
jaeger_collector_spans_saved_by_svc_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;debug&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;false&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;err&amp;quot;&lt;/span&gt;,svc&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;other-services&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_collector_spans_saved_by_svc_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;debug&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;false&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ok&amp;quot;&lt;/span&gt;,svc&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;other-services&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_collector_spans_saved_by_svc_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;debug&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;true&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;err&amp;quot;&lt;/span&gt;,svc&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;other-services&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_collector_spans_saved_by_svc_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;debug&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;true&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ok&amp;quot;&lt;/span&gt;,svc&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;other-services&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP jaeger_collector_spans_serviceNames spans.serviceNames&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE jaeger_collector_spans_serviceNames gauge&lt;/span&gt;
jaeger_collector_spans_serviceNames&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;host&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;1bd33f303256&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP jaeger_collector_traces_received_total received&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE jaeger_collector_traces_received_total counter&lt;/span&gt;
jaeger_collector_traces_received_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;debug&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;false&amp;quot;&lt;/span&gt;,format&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;jaeger&amp;quot;&lt;/span&gt;,svc&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;other-services&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_collector_traces_received_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;debug&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;false&amp;quot;&lt;/span&gt;,format&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;unknown&amp;quot;&lt;/span&gt;,svc&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;other-services&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_collector_traces_received_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;debug&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;false&amp;quot;&lt;/span&gt;,format&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;zipkin&amp;quot;&lt;/span&gt;,svc&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;other-services&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_collector_traces_received_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;debug&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;true&amp;quot;&lt;/span&gt;,format&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;jaeger&amp;quot;&lt;/span&gt;,svc&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;other-services&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_collector_traces_received_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;debug&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;true&amp;quot;&lt;/span&gt;,format&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;unknown&amp;quot;&lt;/span&gt;,svc&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;other-services&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_collector_traces_received_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;debug&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;true&amp;quot;&lt;/span&gt;,format&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;zipkin&amp;quot;&lt;/span&gt;,svc&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;other-services&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP jaeger_collector_traces_rejected_total rejected&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE jaeger_collector_traces_rejected_total counter&lt;/span&gt;
jaeger_collector_traces_rejected_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;debug&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;false&amp;quot;&lt;/span&gt;,format&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;jaeger&amp;quot;&lt;/span&gt;,svc&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;other-services&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_collector_traces_rejected_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;debug&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;false&amp;quot;&lt;/span&gt;,format&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;unknown&amp;quot;&lt;/span&gt;,svc&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;other-services&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_collector_traces_rejected_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;debug&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;false&amp;quot;&lt;/span&gt;,format&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;zipkin&amp;quot;&lt;/span&gt;,svc&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;other-services&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_collector_traces_rejected_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;debug&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;true&amp;quot;&lt;/span&gt;,format&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;jaeger&amp;quot;&lt;/span&gt;,svc&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;other-services&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_collector_traces_rejected_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;debug&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;true&amp;quot;&lt;/span&gt;,format&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;unknown&amp;quot;&lt;/span&gt;,svc&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;other-services&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_collector_traces_rejected_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;debug&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;true&amp;quot;&lt;/span&gt;,format&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;zipkin&amp;quot;&lt;/span&gt;,svc&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;other-services&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP jaeger_collector_traces_saved_by_svc_total saved-by-svc&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE jaeger_collector_traces_saved_by_svc_total counter&lt;/span&gt;
jaeger_collector_traces_saved_by_svc_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;debug&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;false&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;err&amp;quot;&lt;/span&gt;,svc&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;other-services&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_collector_traces_saved_by_svc_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;debug&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;false&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ok&amp;quot;&lt;/span&gt;,svc&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;other-services&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_collector_traces_saved_by_svc_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;debug&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;true&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;err&amp;quot;&lt;/span&gt;,svc&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;other-services&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_collector_traces_saved_by_svc_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;debug&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;true&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ok&amp;quot;&lt;/span&gt;,svc&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;other-services&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP process_cpu_seconds_total Total user and system CPU time spent in seconds.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE process_cpu_seconds_total counter&lt;/span&gt;
process_cpu_seconds_total &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;.71
&lt;span class=&quot;c1&quot;&gt;# HELP process_max_fds Maximum number of open file descriptors.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE process_max_fds gauge&lt;/span&gt;
process_max_fds &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;.048576e+06
&lt;span class=&quot;c1&quot;&gt;# HELP process_open_fds Number of open file descriptors.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE process_open_fds gauge&lt;/span&gt;
process_open_fds &lt;span class=&quot;m&quot;&gt;11&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP process_resident_memory_bytes Resident memory size in bytes.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE process_resident_memory_bytes gauge&lt;/span&gt;
process_resident_memory_bytes &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;.9329024e+07
&lt;span class=&quot;c1&quot;&gt;# HELP process_start_time_seconds Start time of the process since unix epoch in seconds.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE process_start_time_seconds gauge&lt;/span&gt;
process_start_time_seconds &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;.55540675992e+09
&lt;span class=&quot;c1&quot;&gt;# HELP process_virtual_memory_bytes Virtual memory size in bytes.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE process_virtual_memory_bytes gauge&lt;/span&gt;
process_virtual_memory_bytes &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;.3008896e+08&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;ID_APP_QUERY_METRICS&quot;&gt;jaeger-query metrics&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# HELP go_gc_duration_seconds A summary of the GC invocation durations.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE go_gc_duration_seconds summary&lt;/span&gt;
...
&lt;span class=&quot;c1&quot;&gt;# HELP jaeger_query_latency latency&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE jaeger_query_latency histogram&lt;/span&gt;
jaeger_query_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;find_trace_ids&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;err&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.005&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;find_trace_ids&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;err&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.01&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;find_trace_ids&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;err&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.025&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;find_trace_ids&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;err&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.05&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;find_trace_ids&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;err&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.1&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;find_trace_ids&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;err&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.25&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;find_trace_ids&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;err&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.5&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;find_trace_ids&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;err&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;find_trace_ids&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;err&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;2.5&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;find_trace_ids&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;err&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;5&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;find_trace_ids&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;err&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;10&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;find_trace_ids&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;err&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;+Inf&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_sum&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;find_trace_ids&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;err&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_count&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;find_trace_ids&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;err&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;find_trace_ids&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ok&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.005&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;find_trace_ids&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ok&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.01&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;find_trace_ids&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ok&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.025&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;find_trace_ids&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ok&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.05&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;find_trace_ids&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ok&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.1&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;find_trace_ids&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ok&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.25&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;find_trace_ids&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ok&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.5&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;find_trace_ids&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ok&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;find_trace_ids&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ok&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;2.5&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;find_trace_ids&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ok&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;5&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;find_trace_ids&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ok&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;10&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;find_trace_ids&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ok&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;+Inf&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_sum&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;find_trace_ids&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ok&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_count&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;find_trace_ids&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ok&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;find_traces&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;err&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.005&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;find_traces&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;err&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.01&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;find_traces&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;err&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.025&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;find_traces&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;err&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.05&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;find_traces&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;err&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.1&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;find_traces&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;err&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.25&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;find_traces&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;err&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.5&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;find_traces&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;err&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;find_traces&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;err&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;2.5&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;find_traces&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;err&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;5&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;find_traces&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;err&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;10&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;find_traces&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;err&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;+Inf&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_sum&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;find_traces&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;err&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_count&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;find_traces&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;err&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;find_traces&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ok&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.005&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;find_traces&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ok&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.01&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;find_traces&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ok&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.025&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;find_traces&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ok&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.05&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;find_traces&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ok&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.1&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;find_traces&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ok&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.25&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;find_traces&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ok&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.5&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;find_traces&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ok&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;find_traces&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ok&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;2.5&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;find_traces&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ok&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;5&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;find_traces&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ok&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;10&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;find_traces&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ok&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;+Inf&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_sum&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;find_traces&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ok&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_count&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;find_traces&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ok&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;get_operations&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;err&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.005&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;get_operations&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;err&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.01&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;get_operations&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;err&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.025&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;get_operations&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;err&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.05&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;get_operations&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;err&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.1&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;get_operations&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;err&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.25&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;get_operations&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;err&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.5&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;get_operations&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;err&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;get_operations&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;err&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;2.5&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;get_operations&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;err&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;5&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;get_operations&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;err&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;10&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;get_operations&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;err&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;+Inf&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_sum&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;get_operations&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;err&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_count&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;get_operations&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;err&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;get_operations&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ok&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.005&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;get_operations&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ok&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.01&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;get_operations&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ok&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.025&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;get_operations&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ok&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.05&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;get_operations&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ok&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.1&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;get_operations&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ok&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.25&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;get_operations&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ok&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.5&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;get_operations&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ok&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;get_operations&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ok&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;2.5&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;get_operations&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ok&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;5&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;get_operations&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ok&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;10&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;get_operations&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ok&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;+Inf&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_sum&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;get_operations&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ok&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_count&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;get_operations&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ok&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;get_services&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;err&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.005&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;get_services&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;err&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.01&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;get_services&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;err&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.025&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;get_services&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;err&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.05&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;get_services&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;err&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.1&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;get_services&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;err&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.25&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;get_services&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;err&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.5&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;get_services&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;err&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;get_services&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;err&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;2.5&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;get_services&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;err&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;5&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;get_services&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;err&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;10&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;get_services&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;err&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;+Inf&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_sum&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;get_services&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;err&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_count&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;get_services&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;err&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;get_services&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ok&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.005&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;get_services&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ok&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.01&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;get_services&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ok&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.025&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;get_services&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ok&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.05&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;get_services&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ok&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.1&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;get_services&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ok&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.25&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;get_services&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ok&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.5&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;get_services&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ok&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;get_services&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ok&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;2.5&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;get_services&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ok&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;5&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;get_services&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ok&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;10&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;get_services&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ok&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;+Inf&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_sum&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;get_services&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ok&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_count&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;get_services&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ok&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;get_trace&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;err&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.005&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;get_trace&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;err&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.01&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;get_trace&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;err&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.025&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;get_trace&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;err&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.05&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;get_trace&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;err&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.1&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;get_trace&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;err&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.25&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;get_trace&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;err&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.5&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;get_trace&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;err&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;get_trace&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;err&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;2.5&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;get_trace&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;err&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;5&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;get_trace&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;err&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;10&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;get_trace&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;err&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;+Inf&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_sum&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;get_trace&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;err&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_count&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;get_trace&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;err&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;get_trace&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ok&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.005&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;get_trace&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ok&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.01&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;get_trace&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ok&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.025&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;get_trace&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ok&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.05&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;get_trace&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ok&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.1&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;get_trace&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ok&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.25&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;get_trace&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ok&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.5&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;get_trace&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ok&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;get_trace&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ok&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;2.5&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;get_trace&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ok&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;5&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;get_trace&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ok&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;10&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;get_trace&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ok&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;+Inf&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_sum&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;get_trace&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ok&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_latency_count&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;get_trace&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ok&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP jaeger_query_requests_total requests&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE jaeger_query_requests_total counter&lt;/span&gt;
jaeger_query_requests_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;find_trace_ids&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;err&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_requests_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;find_trace_ids&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ok&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_requests_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;find_traces&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;err&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_requests_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;find_traces&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ok&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_requests_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;get_operations&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;err&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_requests_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;get_operations&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ok&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_requests_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;get_services&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;err&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_requests_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;get_services&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ok&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_requests_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;get_trace&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;err&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_requests_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;get_trace&amp;quot;&lt;/span&gt;,result&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ok&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP jaeger_query_responses responses&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE jaeger_query_responses histogram&lt;/span&gt;
jaeger_query_responses_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;find_trace_ids&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.005&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_responses_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;find_trace_ids&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.01&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_responses_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;find_trace_ids&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.025&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_responses_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;find_trace_ids&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.05&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_responses_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;find_trace_ids&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.1&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_responses_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;find_trace_ids&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.25&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_responses_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;find_trace_ids&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.5&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_responses_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;find_trace_ids&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_responses_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;find_trace_ids&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;2.5&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_responses_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;find_trace_ids&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;5&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_responses_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;find_trace_ids&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;10&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_responses_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;find_trace_ids&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;+Inf&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_responses_sum&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;find_trace_ids&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_responses_count&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;find_trace_ids&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_responses_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;find_traces&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.005&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_responses_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;find_traces&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.01&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_responses_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;find_traces&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.025&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_responses_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;find_traces&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.05&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_responses_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;find_traces&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.1&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_responses_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;find_traces&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.25&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_responses_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;find_traces&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.5&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_responses_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;find_traces&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_responses_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;find_traces&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;2.5&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_responses_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;find_traces&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;5&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_responses_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;find_traces&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;10&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_responses_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;find_traces&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;+Inf&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_responses_sum&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;find_traces&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_responses_count&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;find_traces&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_responses_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;get_operations&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.005&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_responses_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;get_operations&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.01&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_responses_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;get_operations&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.025&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_responses_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;get_operations&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.05&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_responses_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;get_operations&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.1&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_responses_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;get_operations&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.25&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_responses_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;get_operations&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.5&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_responses_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;get_operations&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_responses_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;get_operations&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;2.5&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_responses_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;get_operations&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;5&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_responses_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;get_operations&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;10&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_responses_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;get_operations&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;+Inf&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_responses_sum&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;get_operations&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_responses_count&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;get_operations&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_responses_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;get_services&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.005&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_responses_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;get_services&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.01&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_responses_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;get_services&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.025&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_responses_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;get_services&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.05&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_responses_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;get_services&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.1&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_responses_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;get_services&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.25&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_responses_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;get_services&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.5&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_responses_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;get_services&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_responses_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;get_services&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;2.5&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_responses_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;get_services&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;5&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_responses_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;get_services&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;10&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_responses_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;get_services&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;+Inf&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_responses_sum&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;get_services&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_responses_count&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;get_services&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_responses_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;get_trace&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.005&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_responses_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;get_trace&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.01&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_responses_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;get_trace&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.025&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_responses_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;get_trace&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.05&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_responses_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;get_trace&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.1&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_responses_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;get_trace&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.25&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_responses_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;get_trace&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.5&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_responses_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;get_trace&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_responses_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;get_trace&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;2.5&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_responses_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;get_trace&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;5&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_responses_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;get_trace&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;10&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_responses_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;get_trace&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;+Inf&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_responses_sum&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;get_trace&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_query_responses_count&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;get_trace&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP jaeger_tracer_baggage_restrictions_updates_total Number of times baggage restrictions were successfully updated&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE jaeger_tracer_baggage_restrictions_updates_total counter&lt;/span&gt;
jaeger_tracer_baggage_restrictions_updates_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;err&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_tracer_baggage_restrictions_updates_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ok&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP jaeger_tracer_baggage_truncations_total Number of times baggage was truncated as per baggage restrictions&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE jaeger_tracer_baggage_truncations_total counter&lt;/span&gt;
jaeger_tracer_baggage_truncations_total &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP jaeger_tracer_baggage_updates_total Number of times baggage was successfully written or updated on spans&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE jaeger_tracer_baggage_updates_total counter&lt;/span&gt;
jaeger_tracer_baggage_updates_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;err&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_tracer_baggage_updates_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ok&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP jaeger_tracer_finished_spans_total Number of spans finished by this tracer&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE jaeger_tracer_finished_spans_total counter&lt;/span&gt;
jaeger_tracer_finished_spans_total &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP jaeger_tracer_reporter_queue_length Current number of spans in the reporter queue&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE jaeger_tracer_reporter_queue_length gauge&lt;/span&gt;
jaeger_tracer_reporter_queue_length &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP jaeger_tracer_reporter_spans_total Number of spans successfully reported&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE jaeger_tracer_reporter_spans_total counter&lt;/span&gt;
jaeger_tracer_reporter_spans_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;dropped&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_tracer_reporter_spans_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;err&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_tracer_reporter_spans_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ok&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP jaeger_tracer_sampler_queries_total Number of times the Sampler succeeded to retrieve sampling strategy&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE jaeger_tracer_sampler_queries_total counter&lt;/span&gt;
jaeger_tracer_sampler_queries_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;err&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_tracer_sampler_queries_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ok&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP jaeger_tracer_sampler_updates_total Number of times the Sampler succeeded to retrieve and update sampling strategy&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE jaeger_tracer_sampler_updates_total counter&lt;/span&gt;
jaeger_tracer_sampler_updates_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;err&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_tracer_sampler_updates_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ok&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP jaeger_tracer_span_context_decoding_errors_total Number of errors decoding tracing context&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE jaeger_tracer_span_context_decoding_errors_total counter&lt;/span&gt;
jaeger_tracer_span_context_decoding_errors_total &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP jaeger_tracer_started_spans_total Number of sampled spans started by this tracer&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE jaeger_tracer_started_spans_total counter&lt;/span&gt;
jaeger_tracer_started_spans_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;sampled&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;n&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_tracer_started_spans_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;sampled&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;y&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP jaeger_tracer_throttled_debug_spans_total Number of times debug spans were throttled&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE jaeger_tracer_throttled_debug_spans_total counter&lt;/span&gt;
jaeger_tracer_throttled_debug_spans_total &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP jaeger_tracer_throttler_updates_total Number of times throttler successfully updated&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE jaeger_tracer_throttler_updates_total counter&lt;/span&gt;
jaeger_tracer_throttler_updates_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;err&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_tracer_throttler_updates_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ok&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP jaeger_tracer_traces_total Number of traces started by this tracer as sampled&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE jaeger_tracer_traces_total counter&lt;/span&gt;
jaeger_tracer_traces_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;sampled&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;n&amp;quot;&lt;/span&gt;,state&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;joined&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_tracer_traces_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;sampled&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;n&amp;quot;&lt;/span&gt;,state&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;started&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_tracer_traces_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;sampled&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;y&amp;quot;&lt;/span&gt;,state&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;joined&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
jaeger_tracer_traces_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;sampled&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;y&amp;quot;&lt;/span&gt;,state&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;started&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP process_cpu_seconds_total Total user and system CPU time spent in seconds.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE process_cpu_seconds_total counter&lt;/span&gt;
process_cpu_seconds_total &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;.09
&lt;span class=&quot;c1&quot;&gt;# HELP process_max_fds Maximum number of open file descriptors.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE process_max_fds gauge&lt;/span&gt;
process_max_fds &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;.048576e+06
&lt;span class=&quot;c1&quot;&gt;# HELP process_open_fds Number of open file descriptors.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE process_open_fds gauge&lt;/span&gt;
process_open_fds &lt;span class=&quot;m&quot;&gt;9&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP process_resident_memory_bytes Resident memory size in bytes.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE process_resident_memory_bytes gauge&lt;/span&gt;
process_resident_memory_bytes &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;.4475264e+07
&lt;span class=&quot;c1&quot;&gt;# HELP process_start_time_seconds Start time of the process since unix epoch in seconds.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE process_start_time_seconds gauge&lt;/span&gt;
process_start_time_seconds &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;.55540951442e+09
&lt;span class=&quot;c1&quot;&gt;# HELP process_virtual_memory_bytes Virtual memory size in bytes.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE process_virtual_memory_bytes gauge&lt;/span&gt;
process_virtual_memory_bytes &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;.31395584e+08&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;blockquote&gt;
  &lt;p&gt;EOF&lt;/p&gt;
&lt;/blockquote&gt;
</description>
				<pubDate>Wed, 17 Apr 2019 10:01:22 +0800</pubDate>
				<link>https://xenojoshua.com/2019/04/jaeger-note/</link>
				<guid isPermaLink="true">https://xenojoshua.com/2019/04/jaeger-note/</guid>
			</item>
		
			<item>
				<title>Compare: Monitoring | Tracing | Logging</title>
				<description>&lt;h4&gt;Table of Contents&lt;/h4&gt;
&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#1-monitoring--tracing--logging&quot; id=&quot;markdown-toc-1-monitoring--tracing--logging&quot;&gt;1. Monitoring &amp;amp; Tracing &amp;amp; Logging&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#2-monitoring&quot; id=&quot;markdown-toc-2-monitoring&quot;&gt;2. Monitoring&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#3-tracing&quot; id=&quot;markdown-toc-3-tracing&quot;&gt;3. Tracing&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#4-logging&quot; id=&quot;markdown-toc-4-logging&quot;&gt;4. Logging&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#5-总结&quot; id=&quot;markdown-toc-5-总结&quot;&gt;5. 总结&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;1-monitoring--tracing--logging&quot;&gt;1. Monitoring &amp;amp; Tracing &amp;amp; Logging&lt;/h1&gt;
&lt;p&gt;对于一个系统来说，标题中提到的这三者需求都是必然存在的，而有的时候我们会搞不清楚这三者相互之间是什么关系。我之前在做系统设计的时候也考虑过，是不是有必要引入那么多组件，毕竟如果这三者完全分开每一个一项的话，就有三个组件了（事实上就是：Prometheus+Grafana、Jaeger、ELK）。&lt;/p&gt;

&lt;p&gt;因此想做个笔记尝试举例来梳理下。&lt;/p&gt;

&lt;p&gt;外部链接：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://peter.bourgon.org/blog/2017/02/21/metrics-tracing-and-logging.html&quot; target=&quot;_blank&quot;&gt;Metrics, tracing, and logging&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;2-monitoring&quot;&gt;2. Monitoring&lt;/h1&gt;
&lt;p&gt;Monitoring（监控）举例来说就是：&lt;code&gt;定期体检&lt;/code&gt;。使用监控系统把需要关注的指标采集起来，形成报告，并对需要关注的异常数据进行分析形成告警。&lt;/p&gt;

&lt;p&gt;特点是：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;低频&lt;/li&gt;
  &lt;li&gt;定期&lt;/li&gt;
  &lt;li&gt;定量&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;这也是Prometheus的架构做得非常简单的原因，Monitoring的需求并没有包含非常高的并发量和通讯量。反过来说：高并发、大数据量的需求并不适用于Monitoring这个点。&lt;/p&gt;

&lt;h1 id=&quot;3-tracing&quot;&gt;3. Tracing&lt;/h1&gt;
&lt;p&gt;Tracing（链路追踪）举例来说就是：&lt;code&gt;对某一项工作的定期汇报&lt;/code&gt;。某个工作开始做了A，制作A事件的报告，收集起来，然后这个工作还有B、C、D等条目，一个个处理，然后都汇总进报告，最终的结果就是一个Tracing。&lt;/p&gt;

&lt;p&gt;特点是：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;高频&lt;/li&gt;
  &lt;li&gt;巨量&lt;/li&gt;
  &lt;li&gt;有固定格式&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;因为Tracing是针对某一个事件（一般来说就是一个API），而这个API可能会和很多组件进行沟通，后续的所有的组件沟通无论是内部还是外部的IO，都算作这个API调用的Tracing的一部分。可以想见在一个业务繁忙的系统中，API调用的数量已经是天文数字，而其衍生出来的Tracing记录更是不得了的量。其特点就是高频、巨量，一个API会衍生出大量的子调用。&lt;/p&gt;

&lt;p&gt;也因此适合用来做Monitoring的系统就不一定适合做Tracing了，用Prometheus这样的系统来做Tracing肯定完蛋（Prometheus只有拉模式，全部都是HTTP请求，高并发直接挂掉）。一般来说Tracing系统都会在本地磁盘IO上做日志（最高效、也是最低的Cost），然后再通过本地Agent慢慢把文本日志数据发送到聚合服务器上，甚至可能在聚合服务器和本地的Agent之间还需要做消息队列，让聚合服务器慢慢消化巨量的消息。&lt;/p&gt;

&lt;p&gt;Tracing在现在的业界是有标准的：&lt;code&gt;OpenTracing&lt;/code&gt;，因此它不是很随意的日志/事件聚合，而是有格式要求的日志/事件聚合，这就是Tracing和Logging最大的不同。&lt;/p&gt;

&lt;h1 id=&quot;4-logging&quot;&gt;4. Logging&lt;/h1&gt;
&lt;p&gt;Logging（日志）举例来说就是：&lt;code&gt;废品回收站&lt;/code&gt;。各种各样的物品都会汇总进入到配品回收站里，然后经过分门别类归纳整理，成为各种可回收资源分别回收到商家那里。一般来说我们在大型系统中提到Logging说的都不是简单的&lt;code&gt;日志&lt;/code&gt;，而是&lt;code&gt;日志聚合系统&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;从本质上来说，Monitoring和Tracing都是Logging，Logging是这三者中覆盖面最大的超集，而前两者则是其一部分的子集。Logging最麻烦的是，开发者也不会完全知道最后记录进入到日志系统里的一共会有哪些东西，只有在使用（检索）的时候才可能需要汇总查询总量中的一部分。&lt;/p&gt;

&lt;p&gt;要在一般的Loggin系统中进行Monitoring也是可以的，直接把聚合进来的日志数据提取出来，定期形成数据报告，就是监控了。Tracing也是一样，只要聚合进了Logging系统，有了原始数据，后面要做都是可以做的。因此Logging系统最为通用，其特点和Tracing基本一致，也是需要处理高频并发和巨大的数据量。&lt;/p&gt;

&lt;h1 id=&quot;5-总结&quot;&gt;5. 总结&lt;/h1&gt;
&lt;p&gt;这样一看就很清楚了，每个组件都有其存在的必要性：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Monitoring系统（Prometheus）从根本的需求和基本设计上就不可能支持Tracing和Logging：低频 vs 高频、低量 vs 高量，其从设计到实现就只为了监控服务&lt;/li&gt;
  &lt;li&gt;Tracing系统（Jaeger）对提供的数据有格式要求，且处理方式和一般的Logging也不同，有更限定的应用范围&lt;/li&gt;
  &lt;li&gt;Logging系统（ELK）可以处理前两者的需求，但前两者的领域有更专业的工具就不推荐直接使用普通的日志聚合系统了；Logging系统一般用来处理大型系统的日志聚合以及检索查询&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;EOF&lt;/p&gt;
&lt;/blockquote&gt;
</description>
				<pubDate>Fri, 12 Apr 2019 10:01:22 +0800</pubDate>
				<link>https://xenojoshua.com/2019/04/monitoring-tracing-logging/</link>
				<guid isPermaLink="true">https://xenojoshua.com/2019/04/monitoring-tracing-logging/</guid>
			</item>
		
			<item>
				<title>Grafana Notes</title>
				<description>&lt;h4&gt;Table of Contents&lt;/h4&gt;
&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#1-前言&quot; id=&quot;markdown-toc-1-前言&quot;&gt;1. 前言&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#2-安装--文件位置--启动&quot; id=&quot;markdown-toc-2-安装--文件位置--启动&quot;&gt;2. 安装 &amp;amp; 文件位置 &amp;amp; 启动&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#21-安装&quot; id=&quot;markdown-toc-21-安装&quot;&gt;2.1 安装&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#22-文件位置&quot; id=&quot;markdown-toc-22-文件位置&quot;&gt;2.2 文件位置&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#23-配置文件&quot; id=&quot;markdown-toc-23-配置文件&quot;&gt;2.3 配置文件&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#24-启动&quot; id=&quot;markdown-toc-24-启动&quot;&gt;2.4 启动&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#25-cli&quot; id=&quot;markdown-toc-25-cli&quot;&gt;2.5 CLI&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#26-登录--访问&quot; id=&quot;markdown-toc-26-登录--访问&quot;&gt;2.6 登录 &amp;amp; 访问&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#3-概念&quot; id=&quot;markdown-toc-3-概念&quot;&gt;3. 概念&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#4-使用简介&quot; id=&quot;markdown-toc-4-使用简介&quot;&gt;4. 使用简介&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#41-日常使用&quot; id=&quot;markdown-toc-41-日常使用&quot;&gt;4.1 日常使用&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#42-数据保存--导出&quot; id=&quot;markdown-toc-42-数据保存--导出&quot;&gt;4.2 数据保存 &amp;amp; 导出&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#43-数据源&quot; id=&quot;markdown-toc-43-数据源&quot;&gt;4.3 数据源&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#5-监控指标&quot; id=&quot;markdown-toc-5-监控指标&quot;&gt;5. 监控指标&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#6-todo&quot; id=&quot;markdown-toc-6-todo&quot;&gt;6. TODO&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#7-写在最后&quot; id=&quot;markdown-toc-7-写在最后&quot;&gt;7. 写在最后&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#资料&quot; id=&quot;markdown-toc-资料&quot;&gt;资料&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#链接&quot; id=&quot;markdown-toc-链接&quot;&gt;链接&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#ID_APP_GRAFANA_HELP&quot; id=&quot;markdown-toc-ID_APP_GRAFANA_HELP&quot;&gt;grafana -h&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#ID_APP_SELF_METRICS&quot; id=&quot;markdown-toc-ID_APP_SELF_METRICS&quot;&gt;grafana/metrics&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;1-前言&quot;&gt;1. 前言&lt;/h1&gt;
&lt;p&gt;Grafana常被用作数据展示界面，虽然实际上它还有很多其他相关的功能，但一般都不会使用。在CNCF的项目中，一般Grafana都和Prometheus结合使用。Grafana的最大优势在于其灵活性，它作为数据界面可以利用相当多种类的后台数据源。在我构想中的系统里，ELK也是相当重要的一个组成部分，而Grafana也可以作为ElasticSearch的前台界面，这就相当好用。&lt;/p&gt;

&lt;p&gt;由于其相当于仅只是一个UI，所以本文中架构之类的内容基本上会很少，主要是概念介绍和使用细节方面的。&lt;/p&gt;

&lt;p&gt;下文所有内容都基于版本：&lt;code&gt;v6.1.2&lt;/code&gt;。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ./bin/grafana-server -v
Version 6.1.2 (commit: de8f6ac, branch: HEAD)
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&quot;2-安装--文件位置--启动&quot;&gt;2. 安装 &amp;amp; 文件位置 &amp;amp; 启动&lt;/h1&gt;
&lt;h2 id=&quot;21-安装&quot;&gt;2.1 安装&lt;/h2&gt;
&lt;p&gt;官方文档：&lt;a href=&quot;https://grafana.com/grafana/download&quot; target=&quot;_blank&quot;&gt;Download Grafana&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;官方站点做得很好，直接按指示操作即可。MAC安装很方便，使用brew装是最佳选择，另外也可以wget下载tar包，解压即用。Go应用程序就这点，真的太赞了。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;brew update 
brew install grafana

or

wget https://dl.grafana.com/oss/release/grafana-6.1.2.darwin-amd64.tar.gz 
tar -zxvf grafana-6.1.2.darwin-amd64.tar.gz
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;22-文件位置&quot;&gt;2.2 文件位置&lt;/h2&gt;
&lt;p&gt;解压出来的Grafana文件夹可以简单看一下，基本上运行的文件位置就是按这个安排的：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;bin                 # grafana-server &amp;amp; grafana-cli
conf                # 配置文件夹
data \              # 运行时产生的文件，刚解压出来时还不存在
     | log          # 日志输出
     | plugins      # 安装的第三方插件等
     | png
     | grafana.db   # sqlite3数据库
public              # 展示相关的内容，HTML、CSS等
scripts             # bash脚本，忽略
tools               # 忽略
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;上面的&lt;code&gt;data&lt;/code&gt;文件夹及里面的内容等，都是默认的配置文件的设定，如果没有特殊需求，一般直接这样运行就可以了。&lt;/p&gt;

&lt;p&gt;如果将Grafana的运行文件夹指定在某个位置的话，一些文件夹是可能需要调整（配置文件中）：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ini&quot; data-lang=&quot;ini&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# Path to where grafana can store temp files, sessions, and the sqlite3 db (if that is used)&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;data/grafana&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# Directory where grafana can store logs&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;logs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;log&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# Directory where grafana will automatically scan and look for plugins&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;plugins&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;data/grafana/plugins&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# folder that contains provisioning config files that grafana will apply on startup and while running.&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;provisioning&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;conf/provisioning&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# the path relative working path&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;static_root_path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;data/grafana/public&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;上面的所有文件夹实际上都是相对路径，相对于Grafana启动时候指定的工作路径：&lt;code&gt;--homepath&lt;/code&gt;。&lt;/p&gt;

&lt;h2 id=&quot;23-配置文件&quot;&gt;2.3 配置文件&lt;/h2&gt;
&lt;p&gt;官方文档：&lt;a href=&quot;https://grafana.com/docs/installation/configuration/&quot; target=&quot;_blank&quot;&gt;Configuration&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;配置文件中的选项基本上和运行时和监控关系不大，都是一些设置向的内容，配置过一次之后就不需要变动了。一些可能需要关心的选项：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ini&quot; data-lang=&quot;ini&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# Protocol (http, https, socket)&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;protocol&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;http&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# The ip address to bind to, empty will bind to all interfaces&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;http_addr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;127.0.0.1&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# The http port to use&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;http_port&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;3000&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# The public facing domain name used to access grafana from a browser&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;domain&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;localhost&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# Either &amp;quot;mysql&amp;quot;, &amp;quot;postgres&amp;quot; or &amp;quot;sqlite3&amp;quot;, it&amp;#39;s your choice&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;sqlite3&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# Server reporting, sends usage counters to stats.grafana.org every 24 hours.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# No ip addresses are being tracked, only simple counters to track&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# running instances, dashboard and error counts. It is very helpful to us.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# Change this option to false to disable reporting.&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;reporting_enabled&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;false&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# Set to false to disable all checks to https://grafana.com&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# for new versions (grafana itself and plugins), check is used&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# in some UI views to notify that grafana or plugin update exists&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# This option does not cause any auto updates, nor send any information&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# only a GET request to https://grafana.com to get latest versions&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;check_for_updates&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;false&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# disable user signup / registration&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;allow_sign_up&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;false&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# Allow non admin users to create organizations&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;allow_org_create&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;false&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;24-启动&quot;&gt;2.4 启动&lt;/h2&gt;
&lt;p&gt;启动这块就有个让人很头疼的事情，真的让我始料未及。&lt;/p&gt;

&lt;p&gt;让Grafana作为一个WEB应用启动，需要用到的是&lt;code&gt;bin/grafana-server&lt;/code&gt;这个命令，其帮助可以在&lt;a href=&quot;#ID_APP_GRAFANA_HELP&quot;&gt;资料&lt;/a&gt;查看。&lt;/p&gt;

&lt;p&gt;有用的参数只有两个：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;--config&lt;/code&gt;：指定配置文件位置&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;--homepath&lt;/code&gt;：指定Grafana工作的根目录&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;如果是将下载下来的Grafana直接解包运行，不更改路径的话，那就不需要任何启动参数，直接运行即可。但如果需要更改运行根目录的话，就需要使用&lt;code&gt;--homepath&lt;/code&gt;这个选项：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ./bin/grafana-server --homepath &quot;/Users/XXX/.../&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;而我遇到的问题是&lt;code&gt;--config&lt;/code&gt;这个选项，无论我指定任何内容：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;相对于&lt;code&gt;--homepath&lt;/code&gt;的相对文件位置：&lt;code&gt;config/grafana/grafana.ini&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;相对于&lt;code&gt;--homepath&lt;/code&gt;的相对文件夹：&lt;code&gt;config/grafana/&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;绝对文件路径：&lt;code&gt;/Users/XXX/.../config/grafana/grafana.ini&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;绝对文件夹：&lt;code&gt;/Users/XXX/.../config/grafana/&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;它都不能正常工作，只会返回给我错误：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Grafana-server Init Failed: Could not find config defaults, make sure homepath command line parameter is set or working directory is homepath&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;真的让人相当恼火，官方文档里还有这块的解说，但说了根本就和没说一个样：&lt;a href=&quot;https://grafana.com/docs/installation/configuration/#config-file-locations&quot; target=&quot;_blank&quot;&gt;Config file locations&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;最后只能使用：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Default configuration from $WORKING_DIR/conf/defaults.ini&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;也就是在默认的配置文件位置上放上文件：&lt;code&gt;${--homepath}/conf/defaults.ini&lt;/code&gt;，才正常工作起来，哎。&lt;/p&gt;

&lt;h2 id=&quot;25-cli&quot;&gt;2.5 CLI&lt;/h2&gt;
&lt;p&gt;官方文档：&lt;a href=&quot;https://grafana.com/docs/administration/cli/&quot; target=&quot;_blank&quot;&gt;Grafana CLI&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;Grafana还提供了一个命令行工具来辅助admin平时的操作：&lt;code&gt;bin/grafana-cli&lt;/code&gt;，使用可以看：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ./bin/grafana-cli -h
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;26-登录--访问&quot;&gt;2.6 登录 &amp;amp; 访问&lt;/h2&gt;
&lt;p&gt;默认第一次使用的用户名和密码是：&lt;code&gt;admin:admin&lt;/code&gt;，第一次登录进去之后系统就会要求更改admin密码。访问地址在配置文件里是可以更改的，默认为：&lt;code&gt;http://localhost:3000&lt;/code&gt;。&lt;/p&gt;

&lt;h1 id=&quot;3-概念&quot;&gt;3. 概念&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;DataSource&lt;/code&gt;：数据源，Grafana仅只是一个UI，真正保存数据的是数据源，根据版本不同支持的数据源可能不尽相同，有需要可以查看官方文档：&lt;a href=&quot;https://grafana.com/docs/features/datasources/&quot; target=&quot;_blank&quot;&gt;Data Source Overview&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;用户 &amp;amp; 权限：
    &lt;ul&gt;
      &lt;li&gt;&lt;code&gt;Organization&lt;/code&gt;：组织，用在多个组织部门使用同一个Grafana的情况，可以根据组织的不同区分可访问的面板&lt;/li&gt;
      &lt;li&gt;&lt;code&gt;User&lt;/code&gt;：用户&lt;/li&gt;
      &lt;li&gt;&lt;code&gt;Role&lt;/code&gt;：角色，目前暂时只支持固定的角色：Admin、Editor、Read Only Editor、Viewer，相关：&lt;a href=&quot;https://github.com/grafana/grafana/issues/9877&quot; target=&quot;_blank&quot;&gt;How to create new user roles? #9877&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;code&gt;Panel&lt;/code&gt;：面板，Grafana的核心，实际上负责进行图形展示的单元，类型非常多，有需要可以查看官方文档：&lt;a href=&quot;https://grafana.com/docs/features/panels/graph/&quot; target=&quot;_blank&quot;&gt;Graph Panel&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;Row&lt;/code&gt;：行，Dashboard的下级逻辑分隔概念，一个Row里可以放入很多Panel，而且这里需要理解Row并不是物理上的&lt;code&gt;行&lt;/code&gt;（实际上一个Row可以容纳很多行Panel）&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;Dashboard&lt;/code&gt;：仪表盘，由大量Panel组成的集合，一般来说Dashboard是按某个目标进行设计的，比如说：机房的当前状况，某个应用的服务状况等&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;Plugins&lt;/code&gt;：插件，提供更多的额外功能集成，官方商店在：&lt;a href=&quot;https://grafana.com/plugins&quot; target=&quot;_blank&quot;&gt;Plugins&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;Playlist&lt;/code&gt;：举例来说就是某些大公司在门口做的数据滚动播放展示，类似那样的功能，官方文档：&lt;a href=&quot;https://grafana.com/docs/reference/playlist/&quot; target=&quot;_blank&quot;&gt;Playlist&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;Provisioning&lt;/code&gt;：通过配置文件的方式对DataSource及Dashboard进行设置，这是Grafana在使用API进行相关设置之外的另一种方法，且其不要求Grafana首先启动，使用上更为便利&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;Templating&lt;/code&gt;：模板，对某些共性的Panel或Dashboard进行抽象，以便后续进行复用&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Provisioning官方文档：&lt;a href=&quot;https://grafana.com/docs/administration/provisioning/&quot; target=&quot;_blank&quot;&gt;Provisioning Grafana&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;在以前的Grafana版本中，你只能使用API来配置数据源和仪表盘，但是，这需要在开始创建仪表板之前运行服务，并且还需要为HTTP API设置证书。在v5.0中，我们决定通过添加使用配置文件的新的活动Provisioning系统来改善这种体验，这将使GitOps更加自然，因为可以通过可以进行版本控制的文件来定义数据源和仪表盘，我们希望扩展此系统以便稍后添加对用户，组织和警报的支持。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;4-使用简介&quot;&gt;4. 使用简介&lt;/h1&gt;
&lt;h1 id=&quot;41-日常使用&quot;&gt;4.1 日常使用&lt;/h1&gt;
&lt;p&gt;理解了上面的概念之后，日常功能无非就是以下几项：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;创建User&lt;/li&gt;
  &lt;li&gt;创建organization&lt;/li&gt;
  &lt;li&gt;管理User和Organization以及Roles&lt;/li&gt;
  &lt;li&gt;创建Dashboard，需要根据实际应用场景进行规划&lt;/li&gt;
  &lt;li&gt;创建Rows，如果有必要的话&lt;/li&gt;
  &lt;li&gt;在Dashboard上创建Panel&lt;/li&gt;
  &lt;li&gt;将Panel及Dashboard做成Templating复用，如果有必要的话&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;42-数据保存--导出&quot;&gt;4.2 数据保存 &amp;amp; 导出&lt;/h1&gt;
&lt;p&gt;Dashboard在面板上面的工具栏里有&lt;code&gt;Settings&lt;/code&gt;选项，进入之后有一项&lt;code&gt;JSON Model&lt;/code&gt;，这就是当前Dashboard的所有内容了，都做成了JSON文本进行描述。如果你查看过Grafana的数据库的话，你也可以看到Dashboard表只有一列，是用来存储这个数据的，其他任何地方都没有和Dashboard的内容相关的字段。只要复制了这个字段，也就完成了当前Dashboard的备份，当然也可以将这个JSON字符串做成*.json文件进行备份。&lt;/p&gt;

&lt;p&gt;Panel也有类似的功能，在Panel的Title进行点击，会有下拉菜单，然后&lt;code&gt;More &amp;gt; Panel Json&lt;/code&gt;就是了。&lt;/p&gt;

&lt;h1 id=&quot;43-数据源&quot;&gt;4.3 数据源&lt;/h1&gt;
&lt;p&gt;Grafana支持多种数据源，根据不同数据源有不同的一些细微的功能差别以及配置差别，可以查看官方文档：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://grafana.com/docs/features/datasources/prometheus/&quot; target=&quot;_blank&quot;&gt;Using Prometheus in Grafana&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://grafana.com/docs/features/datasources/elasticsearch/&quot; target=&quot;_blank&quot;&gt;Using Elasticsearch in Grafana&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;这里面最有可能会用得到的就是&lt;code&gt;Templating&lt;/code&gt;相关内容，在制作数据模板的时候很有用。&lt;/p&gt;

&lt;p&gt;Grafana和ELK相整合的文章可以看这篇：&lt;a href=&quot;https://elkguide.elasticsearch.cn/elasticsearch/other/grafana.html&quot; target=&quot;_blank&quot;&gt;ELKstack 中文指南 &amp;gt; Grafana&lt;/a&gt;。&lt;/p&gt;

&lt;h1 id=&quot;5-监控指标&quot;&gt;5. 监控指标&lt;/h1&gt;
&lt;p&gt;Grafana做的好就好在其和其他监控系统的集成相当好，Grafana自身的相关监控指标也可以和Prometheus一样暴露出来，使用的格式也是Prometheus的格式，默认是在：&lt;code&gt;http://localhost:3000/metrics&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;我在本文中也留了一份，有必要可以研究下里面的内容：&lt;a href=&quot;#ID_APP_SELF_METRICS&quot;&gt;grafana/metrics&lt;/a&gt;。&lt;/p&gt;

&lt;h1 id=&quot;6-todo&quot;&gt;6. TODO&lt;/h1&gt;
&lt;p&gt;囿于当前使用的深度及项目调研的时间限制，有部分内容做的还不够深入，后续可以考虑补全：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Grafana本身的性能，应该如何衡量&lt;/li&gt;
  &lt;li&gt;Grafana暴露出来的&lt;a href=&quot;#ID_APP_SELF_METRICS&quot;&gt;Metrics&lt;/a&gt;需要仔细研究下&lt;/li&gt;
  &lt;li&gt;所有的图表全部尝试一遍&lt;/li&gt;
  &lt;li&gt;热力图的应用范围及实际使用范例&lt;/li&gt;
  &lt;li&gt;常用 &amp;amp; 有用的插件列表整理&lt;/li&gt;
  &lt;li&gt;ELK整合使用必要性调研，Kibana是否够用，是否有必要使用Grafana作为ELK的前台UI&lt;/li&gt;
  &lt;li&gt;ELK结合使用范例&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;7-写在最后&quot;&gt;7. 写在最后&lt;/h1&gt;
&lt;p&gt;了解Metrics的含义才是最关键的，就像我在写Prometheus Notes说的，很多exporter会吐出巨量的Metrics数据，你都了解这些Metrics代表的意义吗？如果不了解的话，那些数据即便采集进去了，你又会去用了？说到底Prometheus和Grafana不过就是个工具，关键还是在于工程师想要了解什么，对自己的系统的监控需求是什么。&lt;/p&gt;

&lt;p&gt;监控相关工作的第一步是梳理当前系统的组成组件，将每一个都列出来，将它们负责的职责明确清楚，然后将需要监控的Metrics都枚举出来，将这些Metrics需要做成的表类型都想清楚，最后才是使用Prometheus采集数据，使用Grafana制图。&lt;/p&gt;

&lt;p&gt;和写代码一样，优秀的工程师花的更多的时间是在思考和设计上，而不是实际的编写代码。如果不理解这点，那就永远只能是二流。&lt;/p&gt;

&lt;h1 id=&quot;资料&quot;&gt;资料&lt;/h1&gt;
&lt;h2 id=&quot;链接&quot;&gt;链接&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/grafana/grafana/issues/9877&quot; target=&quot;_blank&quot;&gt;How to create new user roles? #9877&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://elkguide.elasticsearch.cn/elasticsearch/other/grafana.html&quot; target=&quot;_blank&quot;&gt;ELKstack 中文指南 &amp;gt; Grafana&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://kiswo.com/article/1021&quot; target=&quot;_blank&quot;&gt;Grafana使用&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://yunlzheng.gitbook.io/prometheus-book/part-ii-prometheus-jin-jie/grafana/grafana-panels&quot; target=&quot;_blank&quot;&gt;Grafana与数据可视化&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;ID_APP_GRAFANA_HELP&quot;&gt;grafana -h&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;$ ./bin/grafana-server -h
Usage of ./bin/grafana-server:
  -config string
    	path to config file
  -homepath string
    	path to grafana install/home path, defaults to working directory
  -packaging string
    	describes the way Grafana was installed (default &quot;unknown&quot;)
  -pidfile string
    	path to pid file
  -profile
    	Turn on pprof profiling
  -profile-port int
    	Define custom port for profiling (default 6060)
  -test.bench regexp
    	run only benchmarks matching regexp
  -test.benchmem
    	print memory allocations for benchmarks
  -test.benchtime d
    	run each benchmark for duration d (default 1s)
  -test.blockprofile file
    	write a goroutine blocking profile to file
  -test.blockprofilerate rate
    	set blocking profile rate (see runtime.SetBlockProfileRate) (default 1)
  -test.count n
    	run tests and benchmarks n times (default 1)
  -test.coverprofile file
    	write a coverage profile to file
  -test.cpu list
    	comma-separated list of cpu counts to run each test with
  -test.cpuprofile file
    	write a cpu profile to file
  -test.failfast
    	do not start new tests after the first test failure
  -test.list regexp
    	list tests, examples, and benchmarks matching regexp then exit
  -test.memprofile file
    	write an allocation profile to file
  -test.memprofilerate rate
    	set memory allocation profiling rate (see runtime.MemProfileRate)
  -test.mutexprofile string
    	write a mutex contention profile to the named file after execution
  -test.mutexprofilefraction int
    	if &amp;gt;= 0, calls runtime.SetMutexProfileFraction() (default 1)
  -test.outputdir dir
    	write profiles to dir
  -test.parallel n
    	run at most n tests in parallel (default 8)
  -test.run regexp
    	run only tests and examples matching regexp
  -test.short
    	run smaller test suite to save time
  -test.testlogfile file
    	write test action log to file (for use only by cmd/go)
  -test.timeout d
    	panic test binary after duration d (default 0, timeout disabled)
  -test.trace file
    	write an execution trace to file
  -test.v
    	verbose: print additional output
  -v	prints current version and exits
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;ID_APP_SELF_METRICS&quot;&gt;grafana/metrics&lt;/h2&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# HELP grafana_alerting_active_alerts amount of active alerts&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE grafana_alerting_active_alerts gauge&lt;/span&gt;
grafana_alerting_active_alerts &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP grafana_alerting_execution_time_milliseconds summary of alert exeuction duration&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE grafana_alerting_execution_time_milliseconds summary&lt;/span&gt;
grafana_alerting_execution_time_milliseconds&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;quantile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.5&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; NaN
grafana_alerting_execution_time_milliseconds&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;quantile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.9&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; NaN
grafana_alerting_execution_time_milliseconds&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;quantile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.99&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; NaN
grafana_alerting_execution_time_milliseconds_sum &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
grafana_alerting_execution_time_milliseconds_count &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP grafana_api_admin_user_created_total api admin user created counter&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE grafana_api_admin_user_created_total counter&lt;/span&gt;
grafana_api_admin_user_created_total &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP grafana_api_dashboard_get_milliseconds summary for dashboard get duration&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE grafana_api_dashboard_get_milliseconds summary&lt;/span&gt;
grafana_api_dashboard_get_milliseconds&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;quantile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.5&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; NaN
grafana_api_dashboard_get_milliseconds&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;quantile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.9&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; NaN
grafana_api_dashboard_get_milliseconds&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;quantile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.99&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; NaN
grafana_api_dashboard_get_milliseconds_sum &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
grafana_api_dashboard_get_milliseconds_count &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP grafana_api_dashboard_save_milliseconds summary for dashboard save duration&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE grafana_api_dashboard_save_milliseconds summary&lt;/span&gt;
grafana_api_dashboard_save_milliseconds&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;quantile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.5&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; NaN
grafana_api_dashboard_save_milliseconds&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;quantile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.9&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; NaN
grafana_api_dashboard_save_milliseconds&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;quantile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.99&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; NaN
grafana_api_dashboard_save_milliseconds_sum &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
grafana_api_dashboard_save_milliseconds_count &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP grafana_api_dashboard_search_milliseconds summary for dashboard search duration&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE grafana_api_dashboard_search_milliseconds summary&lt;/span&gt;
grafana_api_dashboard_search_milliseconds&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;quantile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.5&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; NaN
grafana_api_dashboard_search_milliseconds&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;quantile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.9&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; NaN
grafana_api_dashboard_search_milliseconds&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;quantile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.99&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; NaN
grafana_api_dashboard_search_milliseconds_sum &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
grafana_api_dashboard_search_milliseconds_count &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP grafana_api_dashboard_snapshot_create_total dashboard snapshots created&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE grafana_api_dashboard_snapshot_create_total counter&lt;/span&gt;
grafana_api_dashboard_snapshot_create_total &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP grafana_api_dashboard_snapshot_external_total external dashboard snapshots created&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE grafana_api_dashboard_snapshot_external_total counter&lt;/span&gt;
grafana_api_dashboard_snapshot_external_total &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP grafana_api_dashboard_snapshot_get_total loaded dashboards&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE grafana_api_dashboard_snapshot_get_total counter&lt;/span&gt;
grafana_api_dashboard_snapshot_get_total &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP grafana_api_dataproxy_request_all_milliseconds summary for dataproxy request duration&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE grafana_api_dataproxy_request_all_milliseconds summary&lt;/span&gt;
grafana_api_dataproxy_request_all_milliseconds&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;quantile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.5&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; NaN
grafana_api_dataproxy_request_all_milliseconds&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;quantile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.9&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; NaN
grafana_api_dataproxy_request_all_milliseconds&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;quantile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.99&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; NaN
grafana_api_dataproxy_request_all_milliseconds_sum &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
grafana_api_dataproxy_request_all_milliseconds_count &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP grafana_api_login_oauth_total api login oauth counter&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE grafana_api_login_oauth_total counter&lt;/span&gt;
grafana_api_login_oauth_total &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP grafana_api_login_post_total api login post counter&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE grafana_api_login_post_total counter&lt;/span&gt;
grafana_api_login_post_total &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP grafana_api_models_dashboard_insert_total dashboards inserted &lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE grafana_api_models_dashboard_insert_total counter&lt;/span&gt;
grafana_api_models_dashboard_insert_total &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP grafana_api_org_create_total api org created counter&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE grafana_api_org_create_total counter&lt;/span&gt;
grafana_api_org_create_total &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP grafana_api_response_status_total api http response status&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE grafana_api_response_status_total counter&lt;/span&gt;
grafana_api_response_status_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;code&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;200&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
grafana_api_response_status_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;code&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;404&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
grafana_api_response_status_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;code&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;500&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
grafana_api_response_status_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;code&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;unknown&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP grafana_api_user_signup_completed_total amount of users who completed the signup flow&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE grafana_api_user_signup_completed_total counter&lt;/span&gt;
grafana_api_user_signup_completed_total &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP grafana_api_user_signup_invite_total amount of users who have been invited&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE grafana_api_user_signup_invite_total counter&lt;/span&gt;
grafana_api_user_signup_invite_total &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP grafana_api_user_signup_started_total amount of users who started the signup flow&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE grafana_api_user_signup_started_total counter&lt;/span&gt;
grafana_api_user_signup_started_total &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP grafana_aws_cloudwatch_get_metric_data_total counter for getting metric data time series from aws&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE grafana_aws_cloudwatch_get_metric_data_total counter&lt;/span&gt;
grafana_aws_cloudwatch_get_metric_data_total &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP grafana_aws_cloudwatch_get_metric_statistics_total counter for getting metric statistics from aws&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE grafana_aws_cloudwatch_get_metric_statistics_total counter&lt;/span&gt;
grafana_aws_cloudwatch_get_metric_statistics_total &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP grafana_aws_cloudwatch_list_metrics_total counter for getting list of metrics from aws&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE grafana_aws_cloudwatch_list_metrics_total counter&lt;/span&gt;
grafana_aws_cloudwatch_list_metrics_total &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP grafana_build_info A metric with a constant &amp;#39;1&amp;#39; value labeled by version, revision, branch, and goversion from which Grafana was built.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE grafana_build_info gauge&lt;/span&gt;
grafana_build_info&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;branch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;HEAD&amp;quot;&lt;/span&gt;,edition&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;oss&amp;quot;&lt;/span&gt;,goversion&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;go1.11.5&amp;quot;&lt;/span&gt;,revision&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;de8f6ac&amp;quot;&lt;/span&gt;,version&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;6.1.2&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP grafana_db_datasource_query_by_id_total counter for getting datasource by id&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE grafana_db_datasource_query_by_id_total counter&lt;/span&gt;
grafana_db_datasource_query_by_id_total &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP grafana_info Information about the Grafana. This metric is deprecated. please use `grafana_build_info`&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE grafana_info gauge&lt;/span&gt;
grafana_info&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;version&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;6.1.2&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP grafana_instance_start_total counter for started instances&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE grafana_instance_start_total counter&lt;/span&gt;
grafana_instance_start_total &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP grafana_page_response_status_total page http response status&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE grafana_page_response_status_total counter&lt;/span&gt;
grafana_page_response_status_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;code&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;200&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
grafana_page_response_status_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;code&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;404&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
grafana_page_response_status_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;code&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;500&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
grafana_page_response_status_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;code&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;unknown&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP grafana_proxy_response_status_total proxy http response status&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE grafana_proxy_response_status_total counter&lt;/span&gt;
grafana_proxy_response_status_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;code&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;200&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
grafana_proxy_response_status_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;code&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;404&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
grafana_proxy_response_status_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;code&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;500&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
grafana_proxy_response_status_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;code&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;unknown&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP grafana_stat_active_users number of active users&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE grafana_stat_active_users gauge&lt;/span&gt;
grafana_stat_active_users &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP grafana_stat_total_orgs total amount of orgs&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE grafana_stat_total_orgs gauge&lt;/span&gt;
grafana_stat_total_orgs &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP grafana_stat_total_playlists total amount of playlists&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE grafana_stat_total_playlists gauge&lt;/span&gt;
grafana_stat_total_playlists &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP grafana_stat_total_users total amount of users&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE grafana_stat_total_users gauge&lt;/span&gt;
grafana_stat_total_users &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP grafana_stat_totals_dashboard total amount of dashboards&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE grafana_stat_totals_dashboard gauge&lt;/span&gt;
grafana_stat_totals_dashboard &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;blockquote&gt;
  &lt;p&gt;EOF&lt;/p&gt;
&lt;/blockquote&gt;
</description>
				<pubDate>Thu, 11 Apr 2019 10:01:22 +0800</pubDate>
				<link>https://xenojoshua.com/2019/04/grafana-note/</link>
				<guid isPermaLink="true">https://xenojoshua.com/2019/04/grafana-note/</guid>
			</item>
		
			<item>
				<title>Prometheus Notes</title>
				<description>&lt;h4&gt;Table of Contents&lt;/h4&gt;
&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#1-前言&quot; id=&quot;markdown-toc-1-前言&quot;&gt;1. 前言&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#2-竞品比较&quot; id=&quot;markdown-toc-2-竞品比较&quot;&gt;2. 竞品比较&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#21-comparison-to-alternatives-小结&quot; id=&quot;markdown-toc-21-comparison-to-alternatives-小结&quot;&gt;2.1 COMPARISON TO ALTERNATIVES 小结&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#22-优势&quot; id=&quot;markdown-toc-22-优势&quot;&gt;2.2 优势&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#3-基础--日常使用&quot; id=&quot;markdown-toc-3-基础--日常使用&quot;&gt;3. 基础 &amp;amp; 日常使用&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#31-资源--安装&quot; id=&quot;markdown-toc-31-资源--安装&quot;&gt;3.1 资源 &amp;amp; 安装&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#32-概念&quot; id=&quot;markdown-toc-32-概念&quot;&gt;3.2 概念&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#33-metrics-type&quot; id=&quot;markdown-toc-33-metrics-type&quot;&gt;3.3 Metrics Type&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#34-exporter&quot; id=&quot;markdown-toc-34-exporter&quot;&gt;3.4 Exporter&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#341-exporter-过滤&quot; id=&quot;markdown-toc-341-exporter-过滤&quot;&gt;3.4.1 Exporter 过滤&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#342-metric_relabel_configs-过滤&quot; id=&quot;markdown-toc-342-metric_relabel_configs-过滤&quot;&gt;3.4.2 metric_relabel_configs 过滤&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#35-配置文件&quot; id=&quot;markdown-toc-35-配置文件&quot;&gt;3.5 配置文件&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#36-promql&quot; id=&quot;markdown-toc-36-promql&quot;&gt;3.6 PromQL&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#37-告警&quot; id=&quot;markdown-toc-37-告警&quot;&gt;3.7 告警&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#38-graph&quot; id=&quot;markdown-toc-38-graph&quot;&gt;3.8 Graph&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#381-console-template&quot; id=&quot;markdown-toc-381-console-template&quot;&gt;3.8.1 Console Template&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#382-grafana&quot; id=&quot;markdown-toc-382-grafana&quot;&gt;3.8.2 Grafana&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#39-存储&quot; id=&quot;markdown-toc-39-存储&quot;&gt;3.9 存储&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#391-本地存储&quot; id=&quot;markdown-toc-391-本地存储&quot;&gt;3.9.1 本地存储&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#392-远程存储&quot; id=&quot;markdown-toc-392-远程存储&quot;&gt;3.9.2 远程存储&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#310-重复的metrics-name&quot; id=&quot;markdown-toc-310-重复的metrics-name&quot;&gt;3.10 重复的Metrics name&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#4-架构设计&quot; id=&quot;markdown-toc-4-架构设计&quot;&gt;4. 架构设计&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#41-架构图&quot; id=&quot;markdown-toc-41-架构图&quot;&gt;4.1 架构图&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#42-集群化&quot; id=&quot;markdown-toc-42-集群化&quot;&gt;4.2 集群化&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#43-联邦集群-federation&quot; id=&quot;markdown-toc-43-联邦集群-federation&quot;&gt;4.3 联邦集群 federation&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#44-高可用&quot; id=&quot;markdown-toc-44-高可用&quot;&gt;4.4 高可用&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#5-prometheus监控指标&quot; id=&quot;markdown-toc-5-prometheus监控指标&quot;&gt;5. Prometheus监控指标&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#6-范例&quot; id=&quot;markdown-toc-6-范例&quot;&gt;6. 范例&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#7-todo&quot; id=&quot;markdown-toc-7-todo&quot;&gt;7. TODO&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#资料&quot; id=&quot;markdown-toc-资料&quot;&gt;资料&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#链接&quot; id=&quot;markdown-toc-链接&quot;&gt;链接&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#ID_APP_SELF_METRICS&quot; id=&quot;markdown-toc-ID_APP_SELF_METRICS&quot;&gt;prometheus/metrics&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#ID_APP_PROMETHEUS_HELP&quot; id=&quot;markdown-toc-ID_APP_PROMETHEUS_HELP&quot;&gt;prometheus -h&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#ID_APP_CTA&quot; id=&quot;markdown-toc-ID_APP_CTA&quot;&gt;COMPARISON TO ALTERNATIVES&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#prometheus-vs-graphite&quot; id=&quot;markdown-toc-prometheus-vs-graphite&quot;&gt;Prometheus vs. Graphite&lt;/a&gt;            &lt;ul&gt;
              &lt;li&gt;&lt;a href=&quot;#scope&quot; id=&quot;markdown-toc-scope&quot;&gt;Scope&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href=&quot;#data-model&quot; id=&quot;markdown-toc-data-model&quot;&gt;Data model&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href=&quot;#storage&quot; id=&quot;markdown-toc-storage&quot;&gt;Storage&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href=&quot;#summary&quot; id=&quot;markdown-toc-summary&quot;&gt;Summary&lt;/a&gt;&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#prometheus-vs-influxdb&quot; id=&quot;markdown-toc-prometheus-vs-influxdb&quot;&gt;Prometheus vs. InfluxDB&lt;/a&gt;            &lt;ul&gt;
              &lt;li&gt;&lt;a href=&quot;#scope-1&quot; id=&quot;markdown-toc-scope-1&quot;&gt;Scope&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href=&quot;#data-model--storage&quot; id=&quot;markdown-toc-data-model--storage&quot;&gt;Data model / storage&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href=&quot;#architecture&quot; id=&quot;markdown-toc-architecture&quot;&gt;Architecture&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href=&quot;#summary-1&quot; id=&quot;markdown-toc-summary-1&quot;&gt;Summary&lt;/a&gt;&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#prometheus-vs-opentsdb&quot; id=&quot;markdown-toc-prometheus-vs-opentsdb&quot;&gt;Prometheus vs. OpenTSDB&lt;/a&gt;            &lt;ul&gt;
              &lt;li&gt;&lt;a href=&quot;#scope-2&quot; id=&quot;markdown-toc-scope-2&quot;&gt;Scope&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href=&quot;#data-model-1&quot; id=&quot;markdown-toc-data-model-1&quot;&gt;Data model&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href=&quot;#storage-1&quot; id=&quot;markdown-toc-storage-1&quot;&gt;Storage&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href=&quot;#summary-2&quot; id=&quot;markdown-toc-summary-2&quot;&gt;Summary&lt;/a&gt;&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#prometheus-vs-nagios&quot; id=&quot;markdown-toc-prometheus-vs-nagios&quot;&gt;Prometheus vs. Nagios&lt;/a&gt;            &lt;ul&gt;
              &lt;li&gt;&lt;a href=&quot;#scope-3&quot; id=&quot;markdown-toc-scope-3&quot;&gt;Scope&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href=&quot;#data-model-2&quot; id=&quot;markdown-toc-data-model-2&quot;&gt;Data model&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href=&quot;#storage-2&quot; id=&quot;markdown-toc-storage-2&quot;&gt;Storage&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href=&quot;#architecture-1&quot; id=&quot;markdown-toc-architecture-1&quot;&gt;Architecture&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href=&quot;#summary-3&quot; id=&quot;markdown-toc-summary-3&quot;&gt;Summary&lt;/a&gt;&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#prometheus-vs-sensu&quot; id=&quot;markdown-toc-prometheus-vs-sensu&quot;&gt;Prometheus vs. Sensu&lt;/a&gt;            &lt;ul&gt;
              &lt;li&gt;&lt;a href=&quot;#scope-4&quot; id=&quot;markdown-toc-scope-4&quot;&gt;Scope&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href=&quot;#data-model-3&quot; id=&quot;markdown-toc-data-model-3&quot;&gt;Data model&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href=&quot;#storage-3&quot; id=&quot;markdown-toc-storage-3&quot;&gt;Storage&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href=&quot;#architecture-2&quot; id=&quot;markdown-toc-architecture-2&quot;&gt;Architecture&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href=&quot;#summary-4&quot; id=&quot;markdown-toc-summary-4&quot;&gt;Summary&lt;/a&gt;&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;1-前言&quot;&gt;1. 前言&lt;/h1&gt;
&lt;p&gt;对于分布式系统来说，监控是非常重要的，少了精密的监控应用程序的状况就无法得知了，也很难查找问题。而在云原生的年代，监控系统（或者说分布式系统的所有组件）最好是使用Go语言编写的，这样才能做到最小的镜像、最高的性能、最佳的CPU利用。所以监控系统的选择其实也不是那么的难，直接用CNCF的Prometheus就可以了。虽然说是这么说，实际使用之前对于工具的理解还是有必要的，因此有了此文。&lt;/p&gt;

&lt;p&gt;此外，这里简单讲下，官方的文档，怎么说呢，只能说是一个”手册”。假设，Prometheus的作者（这里假设是一个自然人）花了100个小时编完了Prometheus的代码，那么这个官方文档估计也就只花了30分钟，内容完全就是一堆细节的堆砌，完全没动脑子。所以，如果你是一名初学者，建议直接忽略官方的文档，去找第三方的书来看。这份文档只对需要跟着最新版本走的工程师，或者需要查找下一些Prometheus知识点或使用方法的工程师有点用。&lt;/p&gt;

&lt;p&gt;这里推荐一本中文的gitbook：&lt;a href=&quot;https://yunlzheng.gitbook.io/prometheus-book/&quot; target=&quot;_blank&quot;&gt;prometheus-book&lt;/a&gt;。从起始的安装和使用例子，到后面的集群管理以及exporter等等，都做了非常详实的解说，最可贵的是，作者写的内容是基于思考、组织之后的，明确地是为了读者服务的，而不像官方文档，仅仅只是一堆细节的罗列。&lt;/p&gt;

&lt;p&gt;版本申明，后续的所有行文内容都基于Prometheus&lt;code&gt;v2.8.1&lt;/code&gt;：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ prometheus --version
prometheus, version 2.8.1 (branch: HEAD, revision: 4d60eb36dcbed725fcac5b27018574118f12fffb)
  build user:       root@bfdd6a22a683
  build date:       20190328-18:09:49
  go version:       go1.11.6
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&quot;2-竞品比较&quot;&gt;2. 竞品比较&lt;/h1&gt;
&lt;p&gt;作为一个领域的后来者，最聪明的做法就是在自己的手册里与各位竞品前辈大佬进行一下横向比较，甚至附上性能的benchmark，这样才能取得新使用者的信任。而Prometheus在官方文档的最开始，就有一篇：&lt;a href=&quot;https://prometheus.io/docs/introduction/comparison/&quot; target=&quot;_blank&quot;&gt;COMPARISON TO ALTERNATIVES&lt;/a&gt;（这其实也是了解监控相关软件功能的很好的普及文）。&lt;/p&gt;

&lt;p&gt;文中主要提到了5个工具进行横向比较：&lt;code&gt;Graphite&lt;/code&gt;、&lt;code&gt;InfluxDB&lt;/code&gt;、&lt;code&gt;OpenTSDB&lt;/code&gt;、&lt;code&gt;Nagios&lt;/code&gt;、&lt;code&gt;Sensu&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;翻译放在最后的&lt;a href=&quot;#ID_APP_CTA&quot;&gt;资料&lt;/a&gt;部分（继续喷下官方文档，这篇比较也写得不怎么样，看完没get到优势或者劣势的点）。&lt;/p&gt;

&lt;h2 id=&quot;21-comparison-to-alternatives-小结&quot;&gt;2.1 COMPARISON TO ALTERNATIVES 小结&lt;/h2&gt;
&lt;p&gt;简单过一下的话：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Nagios和Sensu基本上可以直接忽略&lt;/li&gt;
  &lt;li&gt;OpenTSDB是基于Hadoop/HBase的，扩展性应该说不错，但过重，且对于Ops的要求比较高&lt;/li&gt;
  &lt;li&gt;InfluxDB相当不错，但其杀手锏功能类似于集群化之类的，都是付费版本才有的，且其维护基于单一的商业公司（言下之意，如果你不用商业版，其实InfluxDB也没什么特别大的优势，而且还是单一公司维护有风险）&lt;/li&gt;
  &lt;li&gt;Graphite和Prometheus比起来，Prometheus的功能更丰富更强大&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;22-优势&quot;&gt;2.2 优势&lt;/h2&gt;
&lt;p&gt;在docker hub的&lt;a href=&quot;https://hub.docker.com/r/prom/prometheus/&quot; target=&quot;_blank&quot;&gt;介绍页面&lt;/a&gt;上，有一段优势描述：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;多维度&lt;/code&gt;的数据模型（由metric名字定义的时序，以及一系列键值对的维度）&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;灵活的查询语言&lt;/code&gt;来利用这些维度&lt;/li&gt;
  &lt;li&gt;无依赖的分布式存储；&lt;code&gt;自治的单个服务器节点&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;时序数据采集使用基于HTTP的&lt;code&gt;拉模式&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;利用中间网关来支持&lt;code&gt;推送&lt;/code&gt;时序数据&lt;/li&gt;
  &lt;li&gt;监控目标的发现是通过&lt;code&gt;服务发现&lt;/code&gt;或&lt;code&gt;静态配置&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;多种模式的&lt;code&gt;图像及报表支持&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;支持分层和水平的&lt;code&gt;联邦集群（federation）&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;3-基础--日常使用&quot;&gt;3. 基础 &amp;amp; 日常使用&lt;/h1&gt;
&lt;h2 id=&quot;31-资源--安装&quot;&gt;3.1 资源 &amp;amp; 安装&lt;/h2&gt;
&lt;p&gt;Prometheus的官方网站：&lt;a href=&quot;https://prometheus.io/&quot; target=&quot;_blank&quot;&gt;https://prometheus.io/&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;安装一般可以直接根据平台下载，Go应用程序的好处就显示出来了，只要一个可执行文件就能运行：&lt;a href=&quot;https://prometheus.io/download/&quot; target=&quot;_blank&quot;&gt;https://prometheus.io/download/&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;一般来说入门只需要：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;prometheus：本体&lt;/li&gt;
  &lt;li&gt;node_exporter：最基本的exporter&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;使用help放在附录：&lt;a href=&quot;#ID_APP_PROMETHEUS_HELP&quot;&gt;prometheus -h&lt;/a&gt;。&lt;/p&gt;

&lt;h2 id=&quot;32-概念&quot;&gt;3.2 概念&lt;/h2&gt;
&lt;p&gt;Prometheus的基本概念不算多，但如果不了解的话，看后面的东西会有障碍，因此建议先把概念了解清楚。&lt;/p&gt;

&lt;p&gt;这里先给出一个简单的exporter吐出来的数据范例：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# HELP node_cpu Seconds the cpus spent in each mode.
# TYPE node_cpu counter
node_cpu{cpu=&quot;cpu0&quot;,mode=&quot;idle&quot;} 362812.7890625
# HELP node_load1 1m load average.
# TYPE node_load1 gauge
node_load1 3.0703125
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Prometheus是一个&lt;code&gt;时序数据库&lt;/code&gt;，何谓时序数据库，所有保存在Prometheus里的数据都是按时间戳和值的序列顺序存放的，这被称为&lt;code&gt;Vector（向量）&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;Prometheus的数据采集，每一个&lt;code&gt;Metrics（指标）&lt;/code&gt;都会有两行以&lt;code&gt;#&lt;/code&gt;字符起始的文本作为开头：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;其中第一行是&lt;code&gt;注释&lt;/code&gt;：&lt;code&gt;# HELP ...&lt;/code&gt;，主要用来说明该指标是什么&lt;/li&gt;
  &lt;li&gt;第二行是&lt;code&gt;定义&lt;/code&gt;：&lt;code&gt;# TYPE ...&lt;/code&gt;，对当前的指标进行&lt;code&gt;命名&lt;/code&gt;：&lt;code&gt;node_load1&lt;/code&gt;，及&lt;code&gt;类型&lt;/code&gt;的定义：&lt;code&gt;gauge&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;除了名字之外，每一个指标都可以有一系列的&lt;code&gt;Labels（标签）&lt;/code&gt;来描述更细致的维度：&lt;code&gt;{cpu=&quot;cpu0&quot;,mode=&quot;idle&quot;}&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;每一次数据采集获得到的即一个&lt;code&gt;Sample（样本）&lt;/code&gt;，其由三部分组成：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Metrics（指标）：包含了Metrics name以及Labels&lt;/li&gt;
  &lt;li&gt;Timestamp（时间戳）：当前采样的时间，精度到毫秒&lt;/li&gt;
  &lt;li&gt;Value（采样值）：其类型为float64浮点数&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;e.g&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;--------------- metric ---------------------&amp;gt;&amp;lt;-timestamp -&amp;gt;&amp;lt;-value-&amp;gt;
http_request_total{status=&quot;200&quot;, method=&quot;GET&quot;}@1434417560938 =&amp;gt; 94355
http_request_total{status=&quot;200&quot;, method=&quot;GET&quot;}@1434417561287 =&amp;gt; 94334

http_request_total{status=&quot;404&quot;, method=&quot;GET&quot;}@1434417560938 =&amp;gt; 38473
http_request_total{status=&quot;404&quot;, method=&quot;GET&quot;}@1434417561287 =&amp;gt; 38544

http_request_total{status=&quot;200&quot;, method=&quot;POST&quot;}@1434417560938 =&amp;gt; 4748
http_request_total{status=&quot;200&quot;, method=&quot;POST&quot;}@1434417561287 =&amp;gt; 4785
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;在Prometheus内部有一个预定义的变量&lt;code&gt;__name__&lt;/code&gt;用来表达&lt;code&gt;Metrics name&lt;/code&gt;（这里注意，该值只是名字，不含Label），在后续编程及配置文件处理的时候会用得到：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;api_http_requests_total{method=&quot;POST&quot;, handler=&quot;/messages&quot;}
=
{__name__=&quot;api_http_requests_total&quot;，method=&quot;POST&quot;, handler=&quot;/messages&quot;}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Prometheus服务器启动的时候，可以设置从很多端点（endpoint）进行数据采集。比如说：我们有一个主机，主机上运行了3个Go程序，一个Java程序，以及一个数据库。那么我们采集的时候就需要运行6个工作：主机采集、Go采集*3、Java采集、数据库采集。这6个工作，每一个我们都称之为：&lt;code&gt;Job&lt;/code&gt;。Job可以自由设置采集的IP、端口以及endpoint，因此其自由度相当高，可以采集同服务器的不同服务，也可以采集不同的服务器上的数据，最终都汇总到一台Prometheus服务器上。&lt;/p&gt;

&lt;p&gt;资料：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://prometheus.io/docs/prometheus/latest/querying/basics/#instant-vector-selectors&quot; target=&quot;_blank&quot;&gt;Instant vector selectors&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.robustperception.io/whats-in-a-__name__&quot; target=&quot;_blank&quot;&gt;What’s in a __name__?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;33-metrics-type&quot;&gt;3.3 Metrics Type&lt;/h2&gt;
&lt;p&gt;Prometheus定义了4中不同的Metrics Type（指标类型）：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://yunlzheng.gitbook.io/prometheus-book/parti-prometheus-ji-chu/promql/prometheus-metrics-types#counter-zhi-zeng-bu-jian-de-ji-shu-qi&quot; target=&quot;_blank&quot;&gt;Counter（计数器）&lt;/a&gt;：只增不减的计数器&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://yunlzheng.gitbook.io/prometheus-book/parti-prometheus-ji-chu/promql/prometheus-metrics-types#gauge-ke-zeng-ke-jian-de-yi-biao-pan&quot; target=&quot;_blank&quot;&gt;Gauge（仪表盘）&lt;/a&gt;：可增可减的仪表盘&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://yunlzheng.gitbook.io/prometheus-book/parti-prometheus-ji-chu/promql/prometheus-metrics-types#shi-yong-histogram-he-summary-fen-xi-shu-ju-fen-bu-qing-kuang&quot; target=&quot;_blank&quot;&gt;Histogram（直方图）&lt;/a&gt;：数据分布情况&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://yunlzheng.gitbook.io/prometheus-book/parti-prometheus-ji-chu/promql/prometheus-metrics-types#shi-yong-histogram-he-summary-fen-xi-shu-ju-fen-bu-qing-kuang&quot; target=&quot;_blank&quot;&gt;Summary（摘要）&lt;/a&gt;：数据分布情况&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;最后的两个有点类似，区别在于Histogram描述的是绝对值，而Summary描述的是百分比。&lt;/p&gt;

&lt;p&gt;e.g&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# HELP prometheus_tsdb_compaction_chunk_range Final time range of chunks on their first compaction
# TYPE prometheus_tsdb_compaction_chunk_range histogram
prometheus_tsdb_compaction_chunk_range_bucket{le=&quot;100&quot;} 0
prometheus_tsdb_compaction_chunk_range_bucket{le=&quot;400&quot;} 0
prometheus_tsdb_compaction_chunk_range_bucket{le=&quot;1600&quot;} 0
prometheus_tsdb_compaction_chunk_range_bucket{le=&quot;6400&quot;} 0
prometheus_tsdb_compaction_chunk_range_bucket{le=&quot;25600&quot;} 0
prometheus_tsdb_compaction_chunk_range_bucket{le=&quot;102400&quot;} 0
prometheus_tsdb_compaction_chunk_range_bucket{le=&quot;409600&quot;} 0
prometheus_tsdb_compaction_chunk_range_bucket{le=&quot;1.6384e+06&quot;} 260
prometheus_tsdb_compaction_chunk_range_bucket{le=&quot;6.5536e+06&quot;} 780
prometheus_tsdb_compaction_chunk_range_bucket{le=&quot;2.62144e+07&quot;} 780
prometheus_tsdb_compaction_chunk_range_bucket{le=&quot;+Inf&quot;} 780
prometheus_tsdb_compaction_chunk_range_sum 1.1540798e+09
prometheus_tsdb_compaction_chunk_range_count 780
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;# HELP prometheus_tsdb_wal_fsync_duration_seconds Duration of WAL fsync.
# TYPE prometheus_tsdb_wal_fsync_duration_seconds summary
prometheus_tsdb_wal_fsync_duration_seconds{quantile=&quot;0.5&quot;} 0.012352463
prometheus_tsdb_wal_fsync_duration_seconds{quantile=&quot;0.9&quot;} 0.014458005
prometheus_tsdb_wal_fsync_duration_seconds{quantile=&quot;0.99&quot;} 0.017316173
prometheus_tsdb_wal_fsync_duration_seconds_sum 2.888716127000002
prometheus_tsdb_wal_fsync_duration_seconds_count 216
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;34-exporter&quot;&gt;3.4 Exporter&lt;/h2&gt;
&lt;p&gt;官方文档：&lt;a href=&quot;https://prometheus.io/docs/instrumenting/exporters/&quot; target=&quot;_blank&quot;&gt;EXPORTERS AND INTEGRATIONS&lt;/a&gt;。以及中文：&lt;a href=&quot;https://yunlzheng.gitbook.io/prometheus-book/part-ii-prometheus-jin-jie/exporter&quot; target=&quot;_blank&quot;&gt;第4章 Exporter详解&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;Prometheus的设计是Prometheus服务器进行&lt;code&gt;拉&lt;/code&gt;操作，而受监控对象则将时序数据吐出来给服务器。为了不影响受监控的应用程序本身，一般是用Sidecar设计，在应用程序之外进行数据的吐出，也就是&lt;code&gt;Exporter&lt;/code&gt;这个角色（应用程序）。当然，如果需要直接在当前应用程序中进行数据暴露也是可以的，直接使用一些类库引入到应用程序中即可。&lt;/p&gt;

&lt;p&gt;Prometheus流行起来之后，主流的应用程序一般都有对应的Exporter，直接下载使用即可。这里要提一下node_exporter，因为它是针对主机进行监控，因此不建议运行在容器里。容器本身就是和主机进行隔离的，运行在容器之中的话node_exporter无法很好工作。&lt;/p&gt;

&lt;p&gt;这里需要注意的点是：&lt;code&gt;信息的过滤&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;Prometheus的特性是，只要你在配置文件中将某个Exporter设定为Prometheus定时抓取的对象，Prometheus就会将这个Exporter吐出的&lt;code&gt;所有数据&lt;/code&gt;都定期采集起来，保存到时序数据库中。而实际情况则是，某个Exporter吐出来的数据中有很大一部分其实是我们并不关心的。&lt;/p&gt;

&lt;p&gt;举个例子，Go语言的Exporter会吐出GC、内存、CPU、Goroutine等等一系列数据，而我们可能只关心GC、内存，其他都不关心。这个时候如果还是按默认的行为来进行采集的话，时序数据库里就会有很多无意义（我们不关心）的数据。为了防止这样的情况发生，有两种做法：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;在启动Exporter的时候将部分指标过滤掉，直接不吐出来&lt;/li&gt;
  &lt;li&gt;在Prometheus配置文件中针对采集的Job进行&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;341-exporter-过滤&quot;&gt;3.4.1 Exporter 过滤&lt;/h3&gt;
&lt;p&gt;举个例子，node_exporter在MAC上启动，默认会吐出如下数据：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;INFO[0000] Enabled collectors:                           source=&quot;node_exporter.go:90&quot;
INFO[0000]  - boottime                                   source=&quot;node_exporter.go:97&quot;
INFO[0000]  - cpu                                        source=&quot;node_exporter.go:97&quot;
INFO[0000]  - diskstats                                  source=&quot;node_exporter.go:97&quot;
INFO[0000]  - filesystem                                 source=&quot;node_exporter.go:97&quot;
INFO[0000]  - loadavg                                    source=&quot;node_exporter.go:97&quot;
INFO[0000]  - meminfo                                    source=&quot;node_exporter.go:97&quot;
INFO[0000]  - netdev                                     source=&quot;node_exporter.go:97&quot;
INFO[0000]  - textfile                                   source=&quot;node_exporter.go:97&quot;
INFO[0000]  - time                                       source=&quot;node_exporter.go:97&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;我们就可以在启动的时候附加：&lt;code&gt;--no-collector.time&lt;/code&gt;option（time可置换成其他的），让其不再吐出，当然也可以添加option（–collector.xxx）吐出某些我们需要但默认不开启的数据。不同的Exporter设置可能会有些微不同，建议使用的时候仔细查看其手册。&lt;/p&gt;

&lt;p&gt;这样的设计模式其实是有问题的，在使用的时候需要大量设置，用起来过于复杂：&lt;a href=&quot;https://github.com/prometheus/node_exporter/issues/735&quot; target=&quot;_blank&quot;&gt;Question: Disable all collectors?&lt;/a&gt;。&lt;/p&gt;

&lt;h3 id=&quot;342-metric_relabel_configs-过滤&quot;&gt;3.4.2 metric_relabel_configs 过滤&lt;/h3&gt;
&lt;p&gt;官方文档在：&lt;a href=&quot;https://prometheus.io/docs/prometheus/latest/configuration/configuration/#metric_relabel_configs&quot; target=&quot;_blank&quot;&gt;&amp;lt;metric_relabel_configs&amp;gt;&lt;/a&gt;。讲解可以看一篇英语的：&lt;a href=&quot;https://medium.com/quiq-blog/prometheus-relabeling-tricks-6ae62c56cbda&quot; target=&quot;_blank&quot;&gt;Prometheus relabeling tricks&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;这个配置项的作用主要有几点：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;在入库之前去掉不需要的指标&lt;/li&gt;
  &lt;li&gt;将入库的某些指标重新命名（这点很有用，后面会说到）&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;该配置项的效果会在数据入库之前生效，因此非常有用，可以显著减少入库的数据量，减少磁盘的容量占用，加快数据查询。&lt;/p&gt;

&lt;p&gt;e.g&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;metric_relabel_configs&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;source_labels&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p p-Indicator&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;__name__&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;regex&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;(\&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;go_gc_duration_seconds|\&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;...|\&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;node_memory_wired_bytes\&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;)&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;action&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;drop&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;上面的例子里使用了字符串换行，这里需要注意的是需要换行的字符串一定要使用双引号&lt;code&gt;&quot;&lt;/code&gt;，双引号里的字符是不会被转译的，换行符&lt;code&gt;\&lt;/code&gt;也就不会失效了。不换行的话，写法是：&lt;/p&gt;

&lt;p&gt;&lt;code&gt;regex: &quot;(filtered1|filtered2|filtered3)&quot;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;总而言之，在数据过滤方面，Prometheus做的真的不好，无论是在Exporter端做过滤还是在配置文件里做过滤，都需要写不少过滤条目，蛮麻烦的。&lt;/p&gt;

&lt;h2 id=&quot;35-配置文件&quot;&gt;3.5 配置文件&lt;/h2&gt;
&lt;p&gt;官方文档：&lt;a href=&quot;https://prometheus.io/docs/prometheus/latest/configuration/configuration/&quot; target=&quot;_blank&quot;&gt;CONFIGURATION&lt;/a&gt;。有一篇中文的译文不错，但不是太全：&lt;a href=&quot;https://www.jianshu.com/p/bedd169676b6&quot; target=&quot;_blank&quot;&gt;Prometheus的安装和配置&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;配置文件这块，官方的文档细节肯定是最全的，有很多不常用的选项之类的，估计一般也只有官方文档里才找得到。不过官方文档就像我一开始说的，讲解得实在是，光有细节没有脑子。因此建议看一些范例，对配置文件有一个大概的了解之后再去官方文档里查细节会比较好。&lt;/p&gt;

&lt;p&gt;主要的配置大项有：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;抓取配置 &lt;a href=&quot;https://prometheus.io/docs/prometheus/latest/configuration/configuration/#scrape_config&quot; target=&quot;_blank&quot;&gt;scrape_configs&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;规则配置 &lt;a href=&quot;https://prometheus.io/docs/prometheus/latest/configuration/recording_rules/&quot; target=&quot;_blank&quot;&gt;recording_rules&lt;/a&gt; &lt;a href=&quot;https://yunlzheng.gitbook.io/prometheus-book/parti-prometheus-ji-chu/alert/prometheus-recoding-rules#ding-yi-recoding-rules&quot; target=&quot;_blank&quot;&gt;中文&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;告警配置 &lt;a href=&quot;https://prometheus.io/docs/prometheus/latest/configuration/alerting_rules/&quot; target=&quot;_blank&quot;&gt;alerting_rules&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;36-promql&quot;&gt;3.6 PromQL&lt;/h2&gt;
&lt;p&gt;Prometheus这块的设计应该说还算是比较可读的，可以看下中文book里的内容：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://yunlzheng.gitbook.io/prometheus-book/parti-prometheus-ji-chu/promql/prometheus-query-language&quot; target=&quot;_blank&quot;&gt;初识PromQL&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://yunlzheng.gitbook.io/prometheus-book/parti-prometheus-ji-chu/promql/prometheus-promql-operators-v2&quot; target=&quot;_blank&quot;&gt;PromQL操作符&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://yunlzheng.gitbook.io/prometheus-book/parti-prometheus-ji-chu/promql/prometheus-aggr-ops&quot; target=&quot;_blank&quot;&gt;PromQL聚合操作&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://yunlzheng.gitbook.io/prometheus-book/parti-prometheus-ji-chu/promql/prometheus-promql-functions&quot; target=&quot;_blank&quot;&gt;PromQL内置函数&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;37-告警&quot;&gt;3.7 告警&lt;/h2&gt;
&lt;p&gt;Prometheus里的告警功能做得非常强大，按规则的组合可以轻松对告警进行规则定义、分组，并可以使用Altermanager进行对应的告警行为。当然使用上就有点复杂，需要花点时间梳理下。具体的细节可以查看：&lt;a href=&quot;https://yunlzheng.gitbook.io/prometheus-book/parti-prometheus-ji-chu/alert&quot; target=&quot;_blank&quot;&gt;第3章 Prometheus告警处理&lt;/a&gt;。&lt;/p&gt;

&lt;h2 id=&quot;38-graph&quot;&gt;3.8 Graph&lt;/h2&gt;
&lt;h3 id=&quot;381-console-template&quot;&gt;3.8.1 Console Template&lt;/h3&gt;
&lt;p&gt;Prometheus的服务器有提供集成的图像化解决方案，这被称为：&lt;code&gt;Console Template&lt;/code&gt;，其实无非就是一个模板引擎然后向其中填充数据。上手还是需要花点时间稍微摸索下，具体的细节可以查看：&lt;a href=&quot;https://yunlzheng.gitbook.io/prometheus-book/part-ii-prometheus-jin-jie/grafana/use-console-template&quot; target=&quot;_blank&quot;&gt;使用Console Template&lt;/a&gt;。&lt;/p&gt;

&lt;h3 id=&quot;382-grafana&quot;&gt;3.8.2 Grafana&lt;/h3&gt;
&lt;p&gt;现在比较主流的图像化做法是数据采集和存储由Prometheus来，然后图像化输出则由Grafana来处理。这块后面会在Grafana的专题里进行讲解。&lt;/p&gt;

&lt;h2 id=&quot;39-存储&quot;&gt;3.9 存储&lt;/h2&gt;
&lt;h3 id=&quot;391-本地存储&quot;&gt;3.9.1 本地存储&lt;/h3&gt;
&lt;p&gt;Prometheus的时序数据库默认是存储在本地磁盘的，以2小时时间长度为分段，将数据存储到一个Block（块）中。具体的细节可以查看：&lt;a href=&quot;https://yunlzheng.gitbook.io/prometheus-book/part-ii-prometheus-jin-jie/readmd/prometheus-local-storage&quot; target=&quot;_blank&quot;&gt;本地存储&lt;/a&gt;。&lt;/p&gt;

&lt;h3 id=&quot;392-远程存储&quot;&gt;3.9.2 远程存储&lt;/h3&gt;
&lt;p&gt;本地存储在可用性及高效性上有先天优势，但也有很多问题，最主要的就是本地磁盘的容量问题，本地磁盘容量不足就不能够保存长期数据。因此Prometheus也提供了远程写和远程读的设置，允许开发者将时序数据库的数据存储在远程介质中。具体的细节可以查看：&lt;a href=&quot;https://yunlzheng.gitbook.io/prometheus-book/part-ii-prometheus-jin-jie/readmd/prometheus-remote-storage&quot; target=&quot;_blank&quot;&gt;远程存储&lt;/a&gt;。&lt;/p&gt;

&lt;h2 id=&quot;310-重复的metrics-name&quot;&gt;3.10 重复的Metrics name&lt;/h2&gt;
&lt;p&gt;有一个比较常见的麻烦问题是：在同一个Prometheus服务器节点上，可能会采集到大量重名的指标。&lt;/p&gt;

&lt;p&gt;这里举个例子来说：同一台Linux服务器节点上，有3个Go应用程序在运行，而我们需要把这三个应用程序的Go相关指标都监控起来。这时候你会发现采集上来的3份Go指标数据，其指标名都是重复的。这很正常，因为采集的指标都是同样的东西，只不过吐出数据的应用程序不同而已。&lt;/p&gt;

&lt;p&gt;这时候我们就需要用到之前提到过的：&lt;code&gt;metric_relabel_configs&lt;/code&gt;。每个Go应用程序肯定是在Prometheus服务器上设置成单独的&lt;code&gt;Jobs&lt;/code&gt;，而这些不同的Jobs就需要设置各自的metric_relabel_configs，将获取到的同名指标重命名成和应用程序相关的指标，当然指标名的意义需要保持不变。&lt;/p&gt;

&lt;p&gt;e.g&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;job_name&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;cadvisor&lt;/span&gt;
  &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;...&lt;/span&gt;
  &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;metric_relabel_configs&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;source_labels&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p p-Indicator&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;regex&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;.*/(.*)&amp;#39;&lt;/span&gt;
    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;replacement&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;$1&amp;#39;&lt;/span&gt;
    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;target_label&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;id&lt;/span&gt;
  &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;source_labels&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p p-Indicator&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;service&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;regex&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;ecs-.*:ecs-([a-z]+-*[a-z]*).*:[0-9]+&amp;#39;&lt;/span&gt;
    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;replacement&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;$1&amp;#39;&lt;/span&gt;
    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;target_label&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;service&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h1 id=&quot;4-架构设计&quot;&gt;4. 架构设计&lt;/h1&gt;
&lt;h2 id=&quot;41-架构图&quot;&gt;4.1 架构图&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;/resources/2019/04/prometheus-note/architecture.png&quot; alt=&quot;Architecture&quot; target=&quot;_blank&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Prometheus的设计理念就是保证单节点的性能、功能完整性以及单节点的使用便利性。在这个理念下，Prometheus的使用是一件很简单的事情，稍微做点配置调整就可以使用了，而且这个节点上的所有数据都是存储在其本身的物理磁盘上的（有选项可以远程存储，这里按下不表），保证了不会有跨物理节点的各种问题。&lt;/p&gt;

&lt;h2 id=&quot;42-集群化&quot;&gt;4.2 集群化&lt;/h2&gt;
&lt;p&gt;Prometheus将单个节点做到极致的设计理念无疑是非常出色的，但万事都没有银弹。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;整体的集群庞大到一定程度之后（全局的监控需求）&lt;/li&gt;
  &lt;li&gt;单个服务的集群扩展到一定程度（单服务的监控需求）&lt;/li&gt;
  &lt;li&gt;跨机房监控需求（单个机房单个Prometheus服务器，但需要有一个跳脱实例机房的节点进行overview）&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;在这些情况下，单个节点的Prometheus可能就无法胜任了。这时候必然就需要进行水平扩展或引入分布式集群的概念。&lt;/p&gt;

&lt;h2 id=&quot;43-联邦集群-federation&quot;&gt;4.3 联邦集群 federation&lt;/h2&gt;
&lt;p&gt;联邦集群是官方提供的Prometheus唯一的集群解决方案。这个名词听上去有点玄乎，其实简单来说：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;联邦集群中的Prometheus节点是分层级的&lt;/li&gt;
  &lt;li&gt;下级的Prometheus节点采集应用数据&lt;/li&gt;
  &lt;li&gt;上级的Prometheus节点从下级的Prometheus节点上采集数据&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;有几点需要注意：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;下级Prometheus默认在&lt;code&gt;/federate&lt;/code&gt;endpoint暴露联邦集群的数据采集点，不需要配置&lt;/li&gt;
  &lt;li&gt;上级Prometheus必须在配置文件里指定&lt;code&gt;params:'match[]':- '{__name__=~&quot;node_.*&quot;}'&lt;/code&gt;这样的采集规则才能真正采集到数据，这方面的行为模式和Prometheus的默认模式是不一样的；默认情况下Prometheus会将暴露出来的所有数据都采集起来，但联邦集群的时候如果上级节点不指定采集的过滤参数的话，默认是什么都不采集（可能考虑到量级会有问题），因此必须手动在配置文件里进行指标名（可以组合标签）的过滤&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;说穿了其实所谓的联邦集群也没什么内容，无非就是在启动的Prometheus节点上默认开了个&lt;code&gt;/federate&lt;/code&gt;endpoint，允许其他Prometheus从它这里拉取数据。至于联邦集群怎么组建，能玩出什么花来，Prometheus就不管了，让搭建者自己发挥。&lt;/p&gt;

&lt;h2 id=&quot;44-高可用&quot;&gt;4.4 高可用&lt;/h2&gt;
&lt;p&gt;简单的结论是：Prometheus&lt;code&gt;并不存在高可用&lt;/code&gt;的解决方案。&lt;/p&gt;

&lt;p&gt;官方现在的设计是将单节点的Prometheus做好，并提供联邦集群这个解决方案让用户自己去组建自己的监控拓扑网络。这在规模比较小的时候还算能对付，但在真正规模大起来之后就很容易出错了，维护者必须很清楚联邦集群里每一个节点负责的业务内容是什么，然后各层级节点如何对应汇集数据，这非常考验整个拓扑结构的搭建者的功力，以及维护的流程和工具。&lt;/p&gt;

&lt;p&gt;Prometheus当前的集群设计给我的感觉有点类似于：3.0版本之前的redis的第三方集群解决方案 与 3.0版本之后redis官方提供的集群解决方案 之间的关系。你不能说第三方做的集群解决方案不能用，但和3.0之后官方集群方案提供的高可用相比之下，不得不说就不是一个档次上的了。&lt;/p&gt;

&lt;p&gt;希望今后的Prometheus能在这方面发力。当然可能在组合了K8S之后，联邦集群也够用了，这方面我还没尝试过，就不做判断了。&lt;/p&gt;

&lt;p&gt;这篇可以好好看下：&lt;a href=&quot;https://yunlzheng.gitbook.io/prometheus-book/part-ii-prometheus-jin-jie/readmd/prometheus-and-high-availability&quot; target=&quot;_blank&quot;&gt;Prometheus高可用&lt;/a&gt;。&lt;/p&gt;

&lt;h1 id=&quot;5-prometheus监控指标&quot;&gt;5. Prometheus监控指标&lt;/h1&gt;
&lt;p&gt;Prometheus对自身的指标也有直接暴露，默认是放在：http://url_of_prometheus_server/metrics。&lt;/p&gt;

&lt;p&gt;附录里我放了一份指标，可以研究下：&lt;a href=&quot;#ID_APP_SELF_METRICS&quot;&gt;prometheus/metrics&lt;/a&gt;。对于Prometheus自身的监控也是必要的。&lt;/p&gt;

&lt;h1 id=&quot;6-范例&quot;&gt;6. 范例&lt;/h1&gt;
&lt;p&gt;实际的可运行范例可以查看：&lt;a href=&quot;https://github.com/agreatfool/dist-system-practice/tree/master/experiment/prometheus/federation&quot; target=&quot;_blank&quot;&gt;dist-system-practice/experiment/prometheus/federation/&lt;/a&gt;。&lt;/p&gt;

&lt;h1 id=&quot;7-todo&quot;&gt;7. TODO&lt;/h1&gt;
&lt;p&gt;囿于当前使用的深度及项目调研的时间限制，有部分内容做的还不够深入，后续可以考虑补全：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Prometheus自身的Metrics深入研究，以便将Prometheus自身也纳入监控&lt;/li&gt;
  &lt;li&gt;Prometheus的Benchmark&lt;/li&gt;
  &lt;li&gt;PromQL深入理解&lt;/li&gt;
  &lt;li&gt;聚合操作：&lt;a href=&quot;https://yunlzheng.gitbook.io/prometheus-book/parti-prometheus-ji-chu/promql/prometheus-aggr-ops&quot; target=&quot;_blank&quot;&gt;PromQL聚合操作&lt;/a&gt; &amp;amp; &lt;a href=&quot;https://prometheus.io/docs/prometheus/latest/querying/operators/&quot; target=&quot;_blank&quot;&gt;OPERATORS&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;内置函数：&lt;a href=&quot;https://yunlzheng.gitbook.io/prometheus-book/parti-prometheus-ji-chu/promql/prometheus-promql-functions&quot; target=&quot;_blank&quot;&gt;PromQL内置函数&lt;/a&gt; &amp;amp; &lt;a href=&quot;https://prometheus.io/docs/prometheus/latest/querying/functions/&quot; target=&quot;_blank&quot;&gt;FUNCTIONS&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;常用Exporter及其指标含义 及 实际可用的指标公式换算&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;资料&quot;&gt;资料&lt;/h1&gt;
&lt;h2 id=&quot;链接&quot;&gt;链接&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://yunlzheng.gitbook.io/prometheus-book/&quot; target=&quot;_blank&quot;&gt;prometheus-book&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://prometheus.io/docs/prometheus/latest/querying/basics/#instant-vector-selectors&quot; target=&quot;_blank&quot;&gt;Instant vector selectors&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.robustperception.io/whats-in-a-__name__&quot; target=&quot;_blank&quot;&gt;What’s in a __name__?&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/prometheus/node_exporter/issues/735&quot; target=&quot;_blank&quot;&gt;Question: Disable all collectors?&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://medium.com/quiq-blog/prometheus-relabeling-tricks-6ae62c56cbda&quot; target=&quot;_blank&quot;&gt;Prometheus relabeling tricks&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.jianshu.com/p/bedd169676b6&quot; target=&quot;_blank&quot;&gt;Prometheus的安装和配置&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.servicemesher.com/blog/prometheus-monitor-k8s-1/&quot; target=&quot;_blank&quot;&gt;Prometheus监控Kubernetes系列1——监控框架&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.servicemesher.com/blog/prometheus-monitor-k8s-2/&quot; target=&quot;_blank&quot;&gt;Prometheus监控Kubernetes系列2——监控部署&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.servicemesher.com/blog/prometheus-monitor-k8s-3/&quot; target=&quot;_blank&quot;&gt;Prometheus监控Kubernetes系列3——业务指标采集&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;ID_APP_SELF_METRICS&quot;&gt;prometheus/metrics&lt;/h2&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# HELP net_conntrack_dialer_conn_attempted_total Total number of connections attempted by the given dialer a given name.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE net_conntrack_dialer_conn_attempted_total counter&lt;/span&gt;
net_conntrack_dialer_conn_attempted_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;dialer_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;federate&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 这里的dialer_name其实就是job名字&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP net_conntrack_dialer_conn_closed_total Total number of connections closed which originated from the dialer of a given name.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE net_conntrack_dialer_conn_closed_total counter&lt;/span&gt;
...
&lt;span class=&quot;c1&quot;&gt;# HELP net_conntrack_dialer_conn_established_total Total number of connections successfully established by the given dialer a given name.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE net_conntrack_dialer_conn_established_total counter&lt;/span&gt;
...
&lt;span class=&quot;c1&quot;&gt;# HELP net_conntrack_dialer_conn_failed_total Total number of connections failed to dial by the dialer a given name.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE net_conntrack_dialer_conn_failed_total counter&lt;/span&gt;
... &lt;span class=&quot;c1&quot;&gt;# 这里的label：{dialer_name=&amp;quot;federate&amp;quot;,reason=&amp;quot;refused|resolution|timeout|unknown&amp;quot;}&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP net_conntrack_listener_conn_accepted_total Total number of connections opened to the listener of a given name.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE net_conntrack_listener_conn_accepted_total counter&lt;/span&gt;
net_conntrack_listener_conn_accepted_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;listener_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;124&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP net_conntrack_listener_conn_closed_total Total number of connections closed that were made to the listener of a given name.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE net_conntrack_listener_conn_closed_total counter&lt;/span&gt;
net_conntrack_listener_conn_closed_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;listener_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;122&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP prometheus_api_remote_read_queries The current number of remote read queries being executed or waiting.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE prometheus_api_remote_read_queries gauge&lt;/span&gt;
prometheus_api_remote_read_queries &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP prometheus_build_info A metric with a constant &amp;#39;1&amp;#39; value labeled by version, revision, branch, and goversion from which prometheus was built.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE prometheus_build_info gauge&lt;/span&gt;
prometheus_build_info&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;branch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;HEAD&amp;quot;&lt;/span&gt;,goversion&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;go1.11.6&amp;quot;&lt;/span&gt;,revision&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;4d60eb36dcbed725fcac5b27018574118f12fffb&amp;quot;&lt;/span&gt;,version&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;2.8.1&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP prometheus_config_last_reload_success_timestamp_seconds Timestamp of the last successful configuration reload.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE prometheus_config_last_reload_success_timestamp_seconds gauge&lt;/span&gt;
prometheus_config_last_reload_success_timestamp_seconds &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;.5547790627954009e+09
&lt;span class=&quot;c1&quot;&gt;# HELP prometheus_config_last_reload_successful Whether the last configuration reload attempt was successful.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE prometheus_config_last_reload_successful gauge&lt;/span&gt;
prometheus_config_last_reload_successful &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP prometheus_engine_queries The current number of queries being executed or waiting.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE prometheus_engine_queries gauge&lt;/span&gt;
prometheus_engine_queries &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP prometheus_engine_queries_concurrent_max The max number of concurrent queries.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE prometheus_engine_queries_concurrent_max gauge&lt;/span&gt;
prometheus_engine_queries_concurrent_max &lt;span class=&quot;m&quot;&gt;20&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP prometheus_engine_query_duration_seconds Query timings&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE prometheus_engine_query_duration_seconds summary&lt;/span&gt;
prometheus_engine_query_duration_seconds&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;slice&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;inner_eval&amp;quot;&lt;/span&gt;,quantile&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.5&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; NaN
prometheus_engine_query_duration_seconds&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;slice&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;inner_eval&amp;quot;&lt;/span&gt;,quantile&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.9&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; NaN
prometheus_engine_query_duration_seconds&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;slice&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;inner_eval&amp;quot;&lt;/span&gt;,quantile&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.99&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; NaN
prometheus_engine_query_duration_seconds_sum&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;slice&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;inner_eval&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;.2003e-05
... prepare_time &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; queue_time &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; result_sort
&lt;span class=&quot;c1&quot;&gt;# HELP prometheus_http_request_duration_seconds Histogram of latencies for HTTP requests.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE prometheus_http_request_duration_seconds histogram&lt;/span&gt;
prometheus_http_request_duration_seconds_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;handler&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;/api/v1/label/:name/values&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.1&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;
prometheus_http_request_duration_seconds_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;handler&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;/api/v1/label/:name/values&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.2&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;
prometheus_http_request_duration_seconds_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;handler&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;/api/v1/label/:name/values&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.4&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;
prometheus_http_request_duration_seconds_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;handler&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;/api/v1/label/:name/values&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;
prometheus_http_request_duration_seconds_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;handler&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;/api/v1/label/:name/values&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;3&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;
prometheus_http_request_duration_seconds_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;handler&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;/api/v1/label/:name/values&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;8&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;
prometheus_http_request_duration_seconds_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;handler&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;/api/v1/label/:name/values&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;20&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;
prometheus_http_request_duration_seconds_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;handler&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;/api/v1/label/:name/values&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;60&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;
prometheus_http_request_duration_seconds_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;handler&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;/api/v1/label/:name/values&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;120&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;
prometheus_http_request_duration_seconds_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;handler&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;/api/v1/label/:name/values&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;+Inf&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;
prometheus_http_request_duration_seconds_sum&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;handler&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;/api/v1/label/:name/values&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;.000778872
prometheus_http_request_duration_seconds_count&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;handler&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;/api/v1/label/:name/values&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;
... /api/v1/query &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; /graph &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; /static/*filepath &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; /targets
&lt;span class=&quot;c1&quot;&gt;# HELP prometheus_http_response_size_bytes Histogram of response size for HTTP requests.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE prometheus_http_response_size_bytes histogram&lt;/span&gt;
prometheus_http_response_size_bytes_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;handler&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;/api/v1/label/:name/values&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;100&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
prometheus_http_response_size_bytes_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;handler&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;/api/v1/label/:name/values&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;1000&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;
prometheus_http_response_size_bytes_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;handler&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;/api/v1/label/:name/values&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;10000&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;
prometheus_http_response_size_bytes_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;handler&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;/api/v1/label/:name/values&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;100000&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;
prometheus_http_response_size_bytes_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;handler&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;/api/v1/label/:name/values&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;1e+06&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;
prometheus_http_response_size_bytes_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;handler&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;/api/v1/label/:name/values&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;1e+07&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;
prometheus_http_response_size_bytes_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;handler&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;/api/v1/label/:name/values&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;1e+08&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;
prometheus_http_response_size_bytes_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;handler&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;/api/v1/label/:name/values&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;1e+09&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;
prometheus_http_response_size_bytes_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;handler&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;/api/v1/label/:name/values&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;+Inf&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;
prometheus_http_response_size_bytes_sum&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;handler&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;/api/v1/label/:name/values&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;293&lt;/span&gt;
prometheus_http_response_size_bytes_count&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;handler&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;/api/v1/label/:name/values&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;
... /api/v1/query &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; /graph &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; /static/*filepath &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; /targets
&lt;span class=&quot;c1&quot;&gt;# HELP prometheus_notifications_alertmanagers_discovered The number of alertmanagers discovered and active.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE prometheus_notifications_alertmanagers_discovered gauge&lt;/span&gt;
prometheus_notifications_alertmanagers_discovered &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP prometheus_notifications_dropped_total Total number of alerts dropped due to errors when sending to Alertmanager.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE prometheus_notifications_dropped_total counter&lt;/span&gt;
prometheus_notifications_dropped_total &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP prometheus_notifications_queue_capacity The capacity of the alert notifications queue.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE prometheus_notifications_queue_capacity gauge&lt;/span&gt;
prometheus_notifications_queue_capacity &lt;span class=&quot;m&quot;&gt;10000&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP prometheus_notifications_queue_length The number of alert notifications in the queue.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE prometheus_notifications_queue_length gauge&lt;/span&gt;
prometheus_notifications_queue_length &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP prometheus_remote_storage_highest_timestamp_in_seconds Highest timestamp that has come into the remote storage via the Appender interface, in seconds since epoch.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE prometheus_remote_storage_highest_timestamp_in_seconds gauge&lt;/span&gt;
prometheus_remote_storage_highest_timestamp_in_seconds &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;.554792751e+09
&lt;span class=&quot;c1&quot;&gt;# HELP prometheus_remote_storage_samples_in_total Samples in to remote storage, compare to samples out for queue managers.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE prometheus_remote_storage_samples_in_total counter&lt;/span&gt;
prometheus_remote_storage_samples_in_total &lt;span class=&quot;m&quot;&gt;123185&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP prometheus_rule_evaluation_duration_seconds The duration for a rule to execute.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE prometheus_rule_evaluation_duration_seconds summary&lt;/span&gt;
prometheus_rule_evaluation_duration_seconds&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;quantile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.5&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; NaN
prometheus_rule_evaluation_duration_seconds&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;quantile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.9&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; NaN
prometheus_rule_evaluation_duration_seconds&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;quantile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.99&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; NaN
prometheus_rule_evaluation_duration_seconds_sum &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
prometheus_rule_evaluation_duration_seconds_count &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP prometheus_rule_evaluation_failures_total The total number of rule evaluation failures.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE prometheus_rule_evaluation_failures_total counter&lt;/span&gt;
prometheus_rule_evaluation_failures_total &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP prometheus_rule_evaluations_total The total number of rule evaluations.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE prometheus_rule_evaluations_total counter&lt;/span&gt;
prometheus_rule_evaluations_total &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP prometheus_rule_group_duration_seconds The duration of rule group evaluations.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE prometheus_rule_group_duration_seconds summary&lt;/span&gt;
prometheus_rule_group_duration_seconds&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;quantile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.01&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; NaN
prometheus_rule_group_duration_seconds&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;quantile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.05&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; NaN
prometheus_rule_group_duration_seconds&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;quantile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.5&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; NaN
prometheus_rule_group_duration_seconds&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;quantile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.9&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; NaN
prometheus_rule_group_duration_seconds&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;quantile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.99&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; NaN
prometheus_rule_group_duration_seconds_sum &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
prometheus_rule_group_duration_seconds_count &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP prometheus_rule_group_iterations_missed_total The total number of rule group evaluations missed due to slow rule group evaluation.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE prometheus_rule_group_iterations_missed_total counter&lt;/span&gt;
prometheus_rule_group_iterations_missed_total &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP prometheus_rule_group_iterations_total The total number of scheduled rule group evaluations, whether executed or missed.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE prometheus_rule_group_iterations_total counter&lt;/span&gt;
prometheus_rule_group_iterations_total &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP prometheus_sd_azure_refresh_duration_seconds The duration of a Azure-SD refresh in seconds.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE prometheus_sd_azure_refresh_duration_seconds summary&lt;/span&gt;
prometheus_sd_azure_refresh_duration_seconds&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;quantile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.5&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; NaN
prometheus_sd_azure_refresh_duration_seconds&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;quantile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.9&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; NaN
prometheus_sd_azure_refresh_duration_seconds&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;quantile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.99&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; NaN
prometheus_sd_azure_refresh_duration_seconds_sum &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
prometheus_sd_azure_refresh_duration_seconds_count &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP prometheus_sd_azure_refresh_failures_total Number of Azure-SD refresh failures.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE prometheus_sd_azure_refresh_failures_total counter&lt;/span&gt;
prometheus_sd_azure_refresh_failures_total &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP prometheus_sd_consul_rpc_duration_seconds The duration of a Consul RPC call in seconds.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE prometheus_sd_consul_rpc_duration_seconds summary&lt;/span&gt;
prometheus_sd_consul_rpc_duration_seconds&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;call&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;service&amp;quot;&lt;/span&gt;,endpoint&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;catalog&amp;quot;&lt;/span&gt;,quantile&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.5&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; NaN
prometheus_sd_consul_rpc_duration_seconds&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;call&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;service&amp;quot;&lt;/span&gt;,endpoint&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;catalog&amp;quot;&lt;/span&gt;,quantile&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.9&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; NaN
prometheus_sd_consul_rpc_duration_seconds&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;call&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;service&amp;quot;&lt;/span&gt;,endpoint&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;catalog&amp;quot;&lt;/span&gt;,quantile&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.99&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; NaN
prometheus_sd_consul_rpc_duration_seconds_sum&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;call&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;service&amp;quot;&lt;/span&gt;,endpoint&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;catalog&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
prometheus_sd_consul_rpc_duration_seconds_count&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;call&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;service&amp;quot;&lt;/span&gt;,endpoint&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;catalog&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
prometheus_sd_consul_rpc_duration_seconds&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;call&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;services&amp;quot;&lt;/span&gt;,endpoint&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;catalog&amp;quot;&lt;/span&gt;,quantile&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.5&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; NaN
prometheus_sd_consul_rpc_duration_seconds&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;call&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;services&amp;quot;&lt;/span&gt;,endpoint&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;catalog&amp;quot;&lt;/span&gt;,quantile&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.9&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; NaN
prometheus_sd_consul_rpc_duration_seconds&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;call&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;services&amp;quot;&lt;/span&gt;,endpoint&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;catalog&amp;quot;&lt;/span&gt;,quantile&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.99&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; NaN
prometheus_sd_consul_rpc_duration_seconds_sum&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;call&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;services&amp;quot;&lt;/span&gt;,endpoint&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;catalog&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
prometheus_sd_consul_rpc_duration_seconds_count&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;call&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;services&amp;quot;&lt;/span&gt;,endpoint&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;catalog&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP prometheus_sd_consul_rpc_failures_total The number of Consul RPC call failures.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE prometheus_sd_consul_rpc_failures_total counter&lt;/span&gt;
prometheus_sd_consul_rpc_failures_total &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP prometheus_sd_discovered_targets Current number of discovered targets.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE prometheus_sd_discovered_targets gauge&lt;/span&gt;
prometheus_sd_discovered_targets&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;federate&amp;quot;&lt;/span&gt;,name&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;scrape&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;3&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP prometheus_sd_dns_lookup_failures_total The number of DNS-SD lookup failures.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE prometheus_sd_dns_lookup_failures_total counter&lt;/span&gt;
prometheus_sd_dns_lookup_failures_total &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP prometheus_sd_dns_lookups_total The number of DNS-SD lookups.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE prometheus_sd_dns_lookups_total counter&lt;/span&gt;
prometheus_sd_dns_lookups_total &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP prometheus_sd_ec2_refresh_duration_seconds The duration of a EC2-SD refresh in seconds.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE prometheus_sd_ec2_refresh_duration_seconds summary&lt;/span&gt;
prometheus_sd_ec2_refresh_duration_seconds&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;quantile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.5&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; NaN
prometheus_sd_ec2_refresh_duration_seconds&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;quantile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.9&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; NaN
prometheus_sd_ec2_refresh_duration_seconds&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;quantile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.99&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; NaN
prometheus_sd_ec2_refresh_duration_seconds_sum &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
prometheus_sd_ec2_refresh_duration_seconds_count &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP prometheus_sd_ec2_refresh_failures_total The number of EC2-SD scrape failures.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE prometheus_sd_ec2_refresh_failures_total counter&lt;/span&gt;
prometheus_sd_ec2_refresh_failures_total &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP prometheus_sd_file_read_errors_total The number of File-SD read errors.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE prometheus_sd_file_read_errors_total counter&lt;/span&gt;
prometheus_sd_file_read_errors_total &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP prometheus_sd_file_scan_duration_seconds The duration of the File-SD scan in seconds.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE prometheus_sd_file_scan_duration_seconds summary&lt;/span&gt;
prometheus_sd_file_scan_duration_seconds&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;quantile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.5&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; NaN
prometheus_sd_file_scan_duration_seconds&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;quantile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.9&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; NaN
prometheus_sd_file_scan_duration_seconds&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;quantile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.99&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; NaN
prometheus_sd_file_scan_duration_seconds_sum &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
prometheus_sd_file_scan_duration_seconds_count &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP prometheus_sd_gce_refresh_duration The duration of a GCE-SD refresh in seconds.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE prometheus_sd_gce_refresh_duration summary&lt;/span&gt;
prometheus_sd_gce_refresh_duration&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;quantile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.5&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; NaN
prometheus_sd_gce_refresh_duration&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;quantile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.9&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; NaN
prometheus_sd_gce_refresh_duration&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;quantile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.99&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; NaN
prometheus_sd_gce_refresh_duration_sum &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
prometheus_sd_gce_refresh_duration_count &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP prometheus_sd_gce_refresh_failures_total The number of GCE-SD refresh failures.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE prometheus_sd_gce_refresh_failures_total counter&lt;/span&gt;
prometheus_sd_gce_refresh_failures_total &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP prometheus_sd_kubernetes_cache_last_resource_version Last resource version from the Kubernetes API.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE prometheus_sd_kubernetes_cache_last_resource_version gauge&lt;/span&gt;
prometheus_sd_kubernetes_cache_last_resource_version &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP prometheus_sd_kubernetes_cache_list_duration_seconds Duration of a Kubernetes API call in seconds.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE prometheus_sd_kubernetes_cache_list_duration_seconds summary&lt;/span&gt;
prometheus_sd_kubernetes_cache_list_duration_seconds_sum &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
prometheus_sd_kubernetes_cache_list_duration_seconds_count &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP prometheus_sd_kubernetes_cache_list_items Count of items in a list from the Kubernetes API.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE prometheus_sd_kubernetes_cache_list_items summary&lt;/span&gt;
prometheus_sd_kubernetes_cache_list_items_sum &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
prometheus_sd_kubernetes_cache_list_items_count &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP prometheus_sd_kubernetes_cache_list_total Total number of list operations.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE prometheus_sd_kubernetes_cache_list_total counter&lt;/span&gt;
prometheus_sd_kubernetes_cache_list_total &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP prometheus_sd_kubernetes_cache_short_watches_total Total number of short watch operations.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE prometheus_sd_kubernetes_cache_short_watches_total counter&lt;/span&gt;
prometheus_sd_kubernetes_cache_short_watches_total &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP prometheus_sd_kubernetes_cache_watch_duration_seconds Duration of watches on the Kubernetes API.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE prometheus_sd_kubernetes_cache_watch_duration_seconds summary&lt;/span&gt;
prometheus_sd_kubernetes_cache_watch_duration_seconds_sum &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
prometheus_sd_kubernetes_cache_watch_duration_seconds_count &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP prometheus_sd_kubernetes_cache_watch_events Number of items in watches on the Kubernetes API.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE prometheus_sd_kubernetes_cache_watch_events summary&lt;/span&gt;
prometheus_sd_kubernetes_cache_watch_events_sum &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
prometheus_sd_kubernetes_cache_watch_events_count &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP prometheus_sd_kubernetes_cache_watches_total Total number of watch operations.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE prometheus_sd_kubernetes_cache_watches_total counter&lt;/span&gt;
prometheus_sd_kubernetes_cache_watches_total &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP prometheus_sd_kubernetes_events_total The number of Kubernetes events handled.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE prometheus_sd_kubernetes_events_total counter&lt;/span&gt;
prometheus_sd_kubernetes_events_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;add&amp;quot;&lt;/span&gt;,role&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;endpoints&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
prometheus_sd_kubernetes_events_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;add&amp;quot;&lt;/span&gt;,role&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ingress&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
prometheus_sd_kubernetes_events_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;add&amp;quot;&lt;/span&gt;,role&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;node&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
prometheus_sd_kubernetes_events_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;add&amp;quot;&lt;/span&gt;,role&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;pod&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
prometheus_sd_kubernetes_events_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;add&amp;quot;&lt;/span&gt;,role&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;service&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
prometheus_sd_kubernetes_events_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;delete&amp;quot;&lt;/span&gt;,role&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;endpoints&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
prometheus_sd_kubernetes_events_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;delete&amp;quot;&lt;/span&gt;,role&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ingress&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
prometheus_sd_kubernetes_events_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;delete&amp;quot;&lt;/span&gt;,role&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;node&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
prometheus_sd_kubernetes_events_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;delete&amp;quot;&lt;/span&gt;,role&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;pod&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
prometheus_sd_kubernetes_events_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;delete&amp;quot;&lt;/span&gt;,role&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;service&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
prometheus_sd_kubernetes_events_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;update&amp;quot;&lt;/span&gt;,role&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;endpoints&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
prometheus_sd_kubernetes_events_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;update&amp;quot;&lt;/span&gt;,role&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ingress&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
prometheus_sd_kubernetes_events_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;update&amp;quot;&lt;/span&gt;,role&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;node&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
prometheus_sd_kubernetes_events_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;update&amp;quot;&lt;/span&gt;,role&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;pod&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
prometheus_sd_kubernetes_events_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;update&amp;quot;&lt;/span&gt;,role&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;service&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP prometheus_sd_marathon_refresh_duration_seconds The duration of a Marathon-SD refresh in seconds.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE prometheus_sd_marathon_refresh_duration_seconds summary&lt;/span&gt;
prometheus_sd_marathon_refresh_duration_seconds&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;quantile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.5&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; NaN
prometheus_sd_marathon_refresh_duration_seconds&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;quantile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.9&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; NaN
prometheus_sd_marathon_refresh_duration_seconds&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;quantile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.99&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; NaN
prometheus_sd_marathon_refresh_duration_seconds_sum &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
prometheus_sd_marathon_refresh_duration_seconds_count &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP prometheus_sd_marathon_refresh_failures_total The number of Marathon-SD refresh failures.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE prometheus_sd_marathon_refresh_failures_total counter&lt;/span&gt;
prometheus_sd_marathon_refresh_failures_total &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP prometheus_sd_openstack_refresh_duration_seconds The duration of an OpenStack-SD refresh in seconds.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE prometheus_sd_openstack_refresh_duration_seconds summary&lt;/span&gt;
prometheus_sd_openstack_refresh_duration_seconds&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;quantile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.5&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; NaN
prometheus_sd_openstack_refresh_duration_seconds&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;quantile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.9&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; NaN
prometheus_sd_openstack_refresh_duration_seconds&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;quantile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.99&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; NaN
prometheus_sd_openstack_refresh_duration_seconds_sum &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
prometheus_sd_openstack_refresh_duration_seconds_count &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP prometheus_sd_openstack_refresh_failures_total The number of OpenStack-SD scrape failures.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE prometheus_sd_openstack_refresh_failures_total counter&lt;/span&gt;
prometheus_sd_openstack_refresh_failures_total &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP prometheus_sd_received_updates_total Total number of update events received from the SD providers.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE prometheus_sd_received_updates_total counter&lt;/span&gt;
prometheus_sd_received_updates_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;scrape&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP prometheus_sd_triton_refresh_duration_seconds The duration of a Triton-SD refresh in seconds.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE prometheus_sd_triton_refresh_duration_seconds summary&lt;/span&gt;
prometheus_sd_triton_refresh_duration_seconds&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;quantile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.5&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; NaN
prometheus_sd_triton_refresh_duration_seconds&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;quantile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.9&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; NaN
prometheus_sd_triton_refresh_duration_seconds&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;quantile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.99&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; NaN
prometheus_sd_triton_refresh_duration_seconds_sum &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
prometheus_sd_triton_refresh_duration_seconds_count &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP prometheus_sd_triton_refresh_failures_total The number of Triton-SD scrape failures.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE prometheus_sd_triton_refresh_failures_total counter&lt;/span&gt;
prometheus_sd_triton_refresh_failures_total &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP prometheus_sd_updates_total Total number of update events sent to the SD consumers.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE prometheus_sd_updates_total counter&lt;/span&gt;
prometheus_sd_updates_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;scrape&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP prometheus_target_interval_length_seconds Actual intervals between scrapes.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE prometheus_target_interval_length_seconds summary&lt;/span&gt;
prometheus_target_interval_length_seconds&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;interval&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;15s&amp;quot;&lt;/span&gt;,quantile&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.01&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;14&lt;/span&gt;.995180776
prometheus_target_interval_length_seconds&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;interval&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;15s&amp;quot;&lt;/span&gt;,quantile&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.05&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;14&lt;/span&gt;.996111038
prometheus_target_interval_length_seconds&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;interval&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;15s&amp;quot;&lt;/span&gt;,quantile&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.5&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;15&lt;/span&gt;.000072502
prometheus_target_interval_length_seconds&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;interval&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;15s&amp;quot;&lt;/span&gt;,quantile&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.9&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;15&lt;/span&gt;.00274162
prometheus_target_interval_length_seconds&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;interval&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;15s&amp;quot;&lt;/span&gt;,quantile&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.99&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;15&lt;/span&gt;.004418161
prometheus_target_interval_length_seconds_sum&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;interval&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;15s&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;41010&lt;/span&gt;.099564205055
prometheus_target_interval_length_seconds_count&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;interval&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;15s&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2734&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP prometheus_target_scrape_pool_reloads_failed_total Total number of failed scrape loop reloads.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE prometheus_target_scrape_pool_reloads_failed_total counter&lt;/span&gt;
prometheus_target_scrape_pool_reloads_failed_total &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP prometheus_target_scrape_pool_reloads_total Total number of scrape loop reloads.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE prometheus_target_scrape_pool_reloads_total counter&lt;/span&gt;
prometheus_target_scrape_pool_reloads_total &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP prometheus_target_scrape_pool_sync_total Total number of syncs that were executed on a scrape pool.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE prometheus_target_scrape_pool_sync_total counter&lt;/span&gt;
prometheus_target_scrape_pool_sync_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;scrape_job&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;federate&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP prometheus_target_scrape_pools_failed_total Total number of scrape pool creations that failed.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE prometheus_target_scrape_pools_failed_total counter&lt;/span&gt;
prometheus_target_scrape_pools_failed_total &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP prometheus_target_scrape_pools_total Total number of scrape pool creation atttempts.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE prometheus_target_scrape_pools_total counter&lt;/span&gt;
prometheus_target_scrape_pools_total &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP prometheus_target_scrapes_exceeded_sample_limit_total Total number of scrapes that hit the sample limit and were rejected.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE prometheus_target_scrapes_exceeded_sample_limit_total counter&lt;/span&gt;
prometheus_target_scrapes_exceeded_sample_limit_total &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP prometheus_target_scrapes_sample_duplicate_timestamp_total Total number of samples rejected due to duplicate timestamps but different values&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE prometheus_target_scrapes_sample_duplicate_timestamp_total counter&lt;/span&gt;
prometheus_target_scrapes_sample_duplicate_timestamp_total &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP prometheus_target_scrapes_sample_out_of_bounds_total Total number of samples rejected due to timestamp falling outside of the time bounds&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE prometheus_target_scrapes_sample_out_of_bounds_total counter&lt;/span&gt;
prometheus_target_scrapes_sample_out_of_bounds_total &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP prometheus_target_scrapes_sample_out_of_order_total Total number of samples rejected due to not being out of the expected order&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE prometheus_target_scrapes_sample_out_of_order_total counter&lt;/span&gt;
prometheus_target_scrapes_sample_out_of_order_total &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP prometheus_target_sync_length_seconds Actual interval to sync the scrape pool.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE prometheus_target_sync_length_seconds summary&lt;/span&gt;
prometheus_target_sync_length_seconds&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;scrape_job&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;federate&amp;quot;&lt;/span&gt;,quantile&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.01&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; NaN
prometheus_target_sync_length_seconds&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;scrape_job&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;federate&amp;quot;&lt;/span&gt;,quantile&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.05&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; NaN
prometheus_target_sync_length_seconds&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;scrape_job&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;federate&amp;quot;&lt;/span&gt;,quantile&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.5&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; NaN
prometheus_target_sync_length_seconds&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;scrape_job&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;federate&amp;quot;&lt;/span&gt;,quantile&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.9&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; NaN
prometheus_target_sync_length_seconds&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;scrape_job&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;federate&amp;quot;&lt;/span&gt;,quantile&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.99&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; NaN
prometheus_target_sync_length_seconds_sum&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;scrape_job&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;federate&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;.000219783
prometheus_target_sync_length_seconds_count&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;scrape_job&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;federate&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP prometheus_template_text_expansion_failures_total The total number of template text expansion failures.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE prometheus_template_text_expansion_failures_total counter&lt;/span&gt;
prometheus_template_text_expansion_failures_total &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP prometheus_template_text_expansions_total The total number of template text expansions.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE prometheus_template_text_expansions_total counter&lt;/span&gt;
prometheus_template_text_expansions_total &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP prometheus_treecache_watcher_goroutines The current number of watcher goroutines.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE prometheus_treecache_watcher_goroutines gauge&lt;/span&gt;
prometheus_treecache_watcher_goroutines &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP prometheus_treecache_zookeeper_failures_total The total number of ZooKeeper failures.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE prometheus_treecache_zookeeper_failures_total counter&lt;/span&gt;
prometheus_treecache_zookeeper_failures_total &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP prometheus_tsdb_blocks_loaded Number of currently loaded data blocks&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE prometheus_tsdb_blocks_loaded gauge&lt;/span&gt;
prometheus_tsdb_blocks_loaded &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP prometheus_tsdb_checkpoint_creations_failed_total Total number of checkpoint creations that failed.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE prometheus_tsdb_checkpoint_creations_failed_total counter&lt;/span&gt;
prometheus_tsdb_checkpoint_creations_failed_total &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP prometheus_tsdb_checkpoint_creations_total Total number of checkpoint creations attempted.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE prometheus_tsdb_checkpoint_creations_total counter&lt;/span&gt;
prometheus_tsdb_checkpoint_creations_total &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP prometheus_tsdb_checkpoint_deletions_failed_total Total number of checkpoint deletions that failed.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE prometheus_tsdb_checkpoint_deletions_failed_total counter&lt;/span&gt;
prometheus_tsdb_checkpoint_deletions_failed_total &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP prometheus_tsdb_checkpoint_deletions_total Total number of checkpoint deletions attempted.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE prometheus_tsdb_checkpoint_deletions_total counter&lt;/span&gt;
prometheus_tsdb_checkpoint_deletions_total &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP prometheus_tsdb_compaction_chunk_range_seconds Final time range of chunks on their first compaction&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE prometheus_tsdb_compaction_chunk_range_seconds histogram&lt;/span&gt;
prometheus_tsdb_compaction_chunk_range_seconds_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;le&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;100&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
prometheus_tsdb_compaction_chunk_range_seconds_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;le&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;400&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
prometheus_tsdb_compaction_chunk_range_seconds_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;le&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;1600&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
prometheus_tsdb_compaction_chunk_range_seconds_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;le&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;6400&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
prometheus_tsdb_compaction_chunk_range_seconds_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;le&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;25600&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
prometheus_tsdb_compaction_chunk_range_seconds_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;le&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;102400&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
prometheus_tsdb_compaction_chunk_range_seconds_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;le&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;409600&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
prometheus_tsdb_compaction_chunk_range_seconds_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;le&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;1.6384e+06&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
prometheus_tsdb_compaction_chunk_range_seconds_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;le&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;6.5536e+06&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;147&lt;/span&gt;
prometheus_tsdb_compaction_chunk_range_seconds_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;le&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;2.62144e+07&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;147&lt;/span&gt;
prometheus_tsdb_compaction_chunk_range_seconds_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;le&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;+Inf&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;147&lt;/span&gt;
prometheus_tsdb_compaction_chunk_range_seconds_sum &lt;span class=&quot;m&quot;&gt;4&lt;/span&gt;.53475943e+08
prometheus_tsdb_compaction_chunk_range_seconds_count &lt;span class=&quot;m&quot;&gt;147&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP prometheus_tsdb_compaction_chunk_samples Final number of samples on their first compaction&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE prometheus_tsdb_compaction_chunk_samples histogram&lt;/span&gt;
prometheus_tsdb_compaction_chunk_samples_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;le&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;4&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
prometheus_tsdb_compaction_chunk_samples_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;le&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;6&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
prometheus_tsdb_compaction_chunk_samples_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;le&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;9&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
prometheus_tsdb_compaction_chunk_samples_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;le&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;13.5&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
prometheus_tsdb_compaction_chunk_samples_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;le&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;20.25&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
prometheus_tsdb_compaction_chunk_samples_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;le&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;30.375&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
prometheus_tsdb_compaction_chunk_samples_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;le&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;45.5625&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
prometheus_tsdb_compaction_chunk_samples_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;le&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;68.34375&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
prometheus_tsdb_compaction_chunk_samples_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;le&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;102.515625&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
prometheus_tsdb_compaction_chunk_samples_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;le&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;153.7734375&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;24&lt;/span&gt;
prometheus_tsdb_compaction_chunk_samples_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;le&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;230.66015625&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;147&lt;/span&gt;
prometheus_tsdb_compaction_chunk_samples_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;le&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;345.990234375&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;147&lt;/span&gt;
prometheus_tsdb_compaction_chunk_samples_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;le&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;+Inf&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;147&lt;/span&gt;
prometheus_tsdb_compaction_chunk_samples_sum &lt;span class=&quot;m&quot;&gt;30343&lt;/span&gt;
prometheus_tsdb_compaction_chunk_samples_count &lt;span class=&quot;m&quot;&gt;147&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP prometheus_tsdb_compaction_chunk_size_bytes Final size of chunks on their first compaction&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE prometheus_tsdb_compaction_chunk_size_bytes histogram&lt;/span&gt;
prometheus_tsdb_compaction_chunk_size_bytes_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;le&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;32&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
prometheus_tsdb_compaction_chunk_size_bytes_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;le&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;48&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
prometheus_tsdb_compaction_chunk_size_bytes_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;le&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;72&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
prometheus_tsdb_compaction_chunk_size_bytes_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;le&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;108&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
prometheus_tsdb_compaction_chunk_size_bytes_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;le&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;162&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
prometheus_tsdb_compaction_chunk_size_bytes_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;le&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;243&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;3&lt;/span&gt;
prometheus_tsdb_compaction_chunk_size_bytes_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;le&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;364.5&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;18&lt;/span&gt;
prometheus_tsdb_compaction_chunk_size_bytes_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;le&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;546.75&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;18&lt;/span&gt;
prometheus_tsdb_compaction_chunk_size_bytes_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;le&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;820.125&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;80&lt;/span&gt;
prometheus_tsdb_compaction_chunk_size_bytes_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;le&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;1230.1875&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;103&lt;/span&gt;
prometheus_tsdb_compaction_chunk_size_bytes_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;le&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;1845.28125&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;106&lt;/span&gt;
prometheus_tsdb_compaction_chunk_size_bytes_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;le&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;2767.921875&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;147&lt;/span&gt;
prometheus_tsdb_compaction_chunk_size_bytes_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;le&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;+Inf&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;147&lt;/span&gt;
prometheus_tsdb_compaction_chunk_size_bytes_sum &lt;span class=&quot;m&quot;&gt;152382&lt;/span&gt;
prometheus_tsdb_compaction_chunk_size_bytes_count &lt;span class=&quot;m&quot;&gt;147&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP prometheus_tsdb_compaction_duration_seconds Duration of compaction runs&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE prometheus_tsdb_compaction_duration_seconds histogram&lt;/span&gt;
prometheus_tsdb_compaction_duration_seconds_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;le&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
prometheus_tsdb_compaction_duration_seconds_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;le&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;2&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;
prometheus_tsdb_compaction_duration_seconds_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;le&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;4&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;
prometheus_tsdb_compaction_duration_seconds_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;le&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;8&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;
prometheus_tsdb_compaction_duration_seconds_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;le&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;16&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;
prometheus_tsdb_compaction_duration_seconds_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;le&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;32&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;
prometheus_tsdb_compaction_duration_seconds_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;le&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;64&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;
prometheus_tsdb_compaction_duration_seconds_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;le&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;128&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;
prometheus_tsdb_compaction_duration_seconds_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;le&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;256&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;
prometheus_tsdb_compaction_duration_seconds_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;le&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;512&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;
prometheus_tsdb_compaction_duration_seconds_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;le&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;+Inf&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;
prometheus_tsdb_compaction_duration_seconds_sum &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;.250883887
prometheus_tsdb_compaction_duration_seconds_count &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP prometheus_tsdb_compaction_populating_block Set to 1 when a block is currently being written to the disk.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE prometheus_tsdb_compaction_populating_block gauge&lt;/span&gt;
prometheus_tsdb_compaction_populating_block &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP prometheus_tsdb_compactions_failed_total Total number of compactions that failed for the partition.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE prometheus_tsdb_compactions_failed_total counter&lt;/span&gt;
prometheus_tsdb_compactions_failed_total &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP prometheus_tsdb_compactions_total Total number of compactions that were executed for the partition.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE prometheus_tsdb_compactions_total counter&lt;/span&gt;
prometheus_tsdb_compactions_total &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP prometheus_tsdb_compactions_triggered_total Total number of triggered compactions for the partition.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE prometheus_tsdb_compactions_triggered_total counter&lt;/span&gt;
prometheus_tsdb_compactions_triggered_total &lt;span class=&quot;m&quot;&gt;228&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP prometheus_tsdb_head_active_appenders Number of currently active appender transactions&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE prometheus_tsdb_head_active_appenders gauge&lt;/span&gt;
prometheus_tsdb_head_active_appenders &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP prometheus_tsdb_head_chunks Total number of chunks in the head block.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE prometheus_tsdb_head_chunks gauge&lt;/span&gt;
prometheus_tsdb_head_chunks &lt;span class=&quot;m&quot;&gt;810&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP prometheus_tsdb_head_chunks_created_total Total number of chunks created in the head&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE prometheus_tsdb_head_chunks_created_total counter&lt;/span&gt;
prometheus_tsdb_head_chunks_created_total &lt;span class=&quot;m&quot;&gt;957&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP prometheus_tsdb_head_chunks_removed_total Total number of chunks removed in the head&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE prometheus_tsdb_head_chunks_removed_total counter&lt;/span&gt;
prometheus_tsdb_head_chunks_removed_total &lt;span class=&quot;m&quot;&gt;147&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP prometheus_tsdb_head_gc_duration_seconds Runtime of garbage collection in the head block.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE prometheus_tsdb_head_gc_duration_seconds summary&lt;/span&gt;
prometheus_tsdb_head_gc_duration_seconds&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;quantile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.5&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; NaN
prometheus_tsdb_head_gc_duration_seconds&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;quantile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.9&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; NaN
prometheus_tsdb_head_gc_duration_seconds&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;quantile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.99&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; NaN
prometheus_tsdb_head_gc_duration_seconds_sum &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;.001884575
prometheus_tsdb_head_gc_duration_seconds_count &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP prometheus_tsdb_head_max_time Maximum timestamp of the head block. The unit is decided by the library consumer.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE prometheus_tsdb_head_max_time gauge&lt;/span&gt;
prometheus_tsdb_head_max_time &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;.554792751194e+12
&lt;span class=&quot;c1&quot;&gt;# HELP prometheus_tsdb_head_max_time_seconds Maximum timestamp of the head block.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE prometheus_tsdb_head_max_time_seconds gauge&lt;/span&gt;
prometheus_tsdb_head_max_time_seconds &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;.554792751194e+09
&lt;span class=&quot;c1&quot;&gt;# HELP prometheus_tsdb_head_min_time Minimum time bound of the head block. The unit is decided by the library consumer.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE prometheus_tsdb_head_min_time gauge&lt;/span&gt;
prometheus_tsdb_head_min_time &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;.5547824e+12
&lt;span class=&quot;c1&quot;&gt;# HELP prometheus_tsdb_head_min_time_seconds Minimum time bound of the head block.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE prometheus_tsdb_head_min_time_seconds gauge&lt;/span&gt;
prometheus_tsdb_head_min_time_seconds &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;.5547824e+09
&lt;span class=&quot;c1&quot;&gt;# HELP prometheus_tsdb_head_samples_appended_total Total number of appended samples.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE prometheus_tsdb_head_samples_appended_total counter&lt;/span&gt;
prometheus_tsdb_head_samples_appended_total &lt;span class=&quot;m&quot;&gt;123185&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP prometheus_tsdb_head_series Total number of series in the head block.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE prometheus_tsdb_head_series gauge&lt;/span&gt;
prometheus_tsdb_head_series &lt;span class=&quot;m&quot;&gt;135&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP prometheus_tsdb_head_series_created_total Total number of series created in the head&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE prometheus_tsdb_head_series_created_total counter&lt;/span&gt;
prometheus_tsdb_head_series_created_total &lt;span class=&quot;m&quot;&gt;135&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP prometheus_tsdb_head_series_not_found_total Total number of requests for series that were not found.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE prometheus_tsdb_head_series_not_found_total counter&lt;/span&gt;
prometheus_tsdb_head_series_not_found_total &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP prometheus_tsdb_head_series_removed_total Total number of series removed in the head&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE prometheus_tsdb_head_series_removed_total counter&lt;/span&gt;
prometheus_tsdb_head_series_removed_total &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP prometheus_tsdb_head_truncations_failed_total Total number of head truncations that failed.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE prometheus_tsdb_head_truncations_failed_total counter&lt;/span&gt;
prometheus_tsdb_head_truncations_failed_total &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP prometheus_tsdb_head_truncations_total Total number of head truncations attempted.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE prometheus_tsdb_head_truncations_total counter&lt;/span&gt;
prometheus_tsdb_head_truncations_total &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP prometheus_tsdb_lowest_timestamp Lowest timestamp value stored in the database. The unit is decided by the library consumer.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE prometheus_tsdb_lowest_timestamp gauge&lt;/span&gt;
prometheus_tsdb_lowest_timestamp &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;.55477867699e+12
&lt;span class=&quot;c1&quot;&gt;# HELP prometheus_tsdb_lowest_timestamp_seconds Lowest timestamp value stored in the database.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE prometheus_tsdb_lowest_timestamp_seconds gauge&lt;/span&gt;
prometheus_tsdb_lowest_timestamp_seconds &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;.55477867699e+09
&lt;span class=&quot;c1&quot;&gt;# HELP prometheus_tsdb_reloads_failures_total Number of times the database failed to reload block data from disk.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE prometheus_tsdb_reloads_failures_total counter&lt;/span&gt;
prometheus_tsdb_reloads_failures_total &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP prometheus_tsdb_reloads_total Number of times the database reloaded block data from disk.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE prometheus_tsdb_reloads_total counter&lt;/span&gt;
prometheus_tsdb_reloads_total &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP prometheus_tsdb_size_retentions_total The number of times that blocks were deleted because the maximum number of bytes was exceeded.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE prometheus_tsdb_size_retentions_total counter&lt;/span&gt;
prometheus_tsdb_size_retentions_total &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP prometheus_tsdb_storage_blocks_bytes The number of bytes that are currently used for local storage by all blocks.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE prometheus_tsdb_storage_blocks_bytes gauge&lt;/span&gt;
prometheus_tsdb_storage_blocks_bytes &lt;span class=&quot;m&quot;&gt;165474&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP prometheus_tsdb_symbol_table_size_bytes Size of symbol table on disk (in bytes)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE prometheus_tsdb_symbol_table_size_bytes gauge&lt;/span&gt;
prometheus_tsdb_symbol_table_size_bytes &lt;span class=&quot;m&quot;&gt;1807&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP prometheus_tsdb_time_retentions_total The number of times that blocks were deleted because the maximum time limit was exceeded.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE prometheus_tsdb_time_retentions_total counter&lt;/span&gt;
prometheus_tsdb_time_retentions_total &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP prometheus_tsdb_tombstone_cleanup_seconds The time taken to recompact blocks to remove tombstones.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE prometheus_tsdb_tombstone_cleanup_seconds histogram&lt;/span&gt;
prometheus_tsdb_tombstone_cleanup_seconds_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;le&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.005&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
prometheus_tsdb_tombstone_cleanup_seconds_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;le&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.01&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
prometheus_tsdb_tombstone_cleanup_seconds_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;le&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.025&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
prometheus_tsdb_tombstone_cleanup_seconds_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;le&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.05&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
prometheus_tsdb_tombstone_cleanup_seconds_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;le&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.1&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
prometheus_tsdb_tombstone_cleanup_seconds_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;le&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.25&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
prometheus_tsdb_tombstone_cleanup_seconds_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;le&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.5&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
prometheus_tsdb_tombstone_cleanup_seconds_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;le&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
prometheus_tsdb_tombstone_cleanup_seconds_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;le&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;2.5&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
prometheus_tsdb_tombstone_cleanup_seconds_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;le&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;5&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
prometheus_tsdb_tombstone_cleanup_seconds_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;le&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;10&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
prometheus_tsdb_tombstone_cleanup_seconds_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;le&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;+Inf&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
prometheus_tsdb_tombstone_cleanup_seconds_sum &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
prometheus_tsdb_tombstone_cleanup_seconds_count &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP prometheus_tsdb_vertical_compactions_total Total number of compactions done on overlapping blocks.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE prometheus_tsdb_vertical_compactions_total counter&lt;/span&gt;
prometheus_tsdb_vertical_compactions_total &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP prometheus_tsdb_wal_completed_pages_total Total number of completed pages.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE prometheus_tsdb_wal_completed_pages_total counter&lt;/span&gt;
prometheus_tsdb_wal_completed_pages_total &lt;span class=&quot;m&quot;&gt;42&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP prometheus_tsdb_wal_corruptions_total Total number of WAL corruptions.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE prometheus_tsdb_wal_corruptions_total counter&lt;/span&gt;
prometheus_tsdb_wal_corruptions_total &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP prometheus_tsdb_wal_fsync_duration_seconds Duration of WAL fsync.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE prometheus_tsdb_wal_fsync_duration_seconds summary&lt;/span&gt;
prometheus_tsdb_wal_fsync_duration_seconds&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;quantile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.5&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; NaN
prometheus_tsdb_wal_fsync_duration_seconds&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;quantile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.9&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; NaN
prometheus_tsdb_wal_fsync_duration_seconds&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;quantile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.99&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; NaN
prometheus_tsdb_wal_fsync_duration_seconds_sum &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
prometheus_tsdb_wal_fsync_duration_seconds_count &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP prometheus_tsdb_wal_page_flushes_total Total number of page flushes.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE prometheus_tsdb_wal_page_flushes_total counter&lt;/span&gt;
prometheus_tsdb_wal_page_flushes_total &lt;span class=&quot;m&quot;&gt;5519&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP prometheus_tsdb_wal_truncate_duration_seconds Duration of WAL truncation.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE prometheus_tsdb_wal_truncate_duration_seconds summary&lt;/span&gt;
prometheus_tsdb_wal_truncate_duration_seconds&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;quantile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.5&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; NaN
prometheus_tsdb_wal_truncate_duration_seconds&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;quantile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.9&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; NaN
prometheus_tsdb_wal_truncate_duration_seconds&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;quantile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.99&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; NaN
prometheus_tsdb_wal_truncate_duration_seconds_sum &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
prometheus_tsdb_wal_truncate_duration_seconds_count &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP prometheus_tsdb_wal_truncations_failed_total Total number of WAL truncations that failed.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE prometheus_tsdb_wal_truncations_failed_total counter&lt;/span&gt;
prometheus_tsdb_wal_truncations_failed_total &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP prometheus_tsdb_wal_truncations_total Total number of WAL truncations attempted.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE prometheus_tsdb_wal_truncations_total counter&lt;/span&gt;
prometheus_tsdb_wal_truncations_total &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP promhttp_metric_handler_requests_in_flight Current number of scrapes being served.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE promhttp_metric_handler_requests_in_flight gauge&lt;/span&gt;
promhttp_metric_handler_requests_in_flight &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# HELP promhttp_metric_handler_requests_total Total number of scrapes by HTTP status code.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE promhttp_metric_handler_requests_total counter&lt;/span&gt;
promhttp_metric_handler_requests_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;code&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;200&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
promhttp_metric_handler_requests_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;code&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;500&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
promhttp_metric_handler_requests_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;code&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;503&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;ID_APP_PROMETHEUS_HELP&quot;&gt;prometheus -h&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;prometheus -h
usage: prometheus [&amp;lt;flags&amp;gt;]

The Prometheus monitoring server

Flags:
  -h, --help                     Show context-sensitive help (also try --help-long and --help-man).
      --version                  Show application version.
      --config.file=&quot;prometheus.yml&quot;
                                 Prometheus configuration file path.
      --web.listen-address=&quot;0.0.0.0:9090&quot;
                                 Address to listen on for UI, API, and telemetry.
      --web.read-timeout=5m      Maximum duration before timing out read of the request, and closing idle connections.
      --web.max-connections=512  Maximum number of simultaneous connections.
      --web.external-url=&amp;lt;URL&amp;gt;   The URL under which Prometheus is externally reachable (for example, if Prometheus is served via a reverse proxy). Used for generating
                                 relative and absolute links back to Prometheus itself. If the URL has a path portion, it will be used to prefix all HTTP endpoints
                                 served by Prometheus. If omitted, relevant URL components will be derived automatically.
      --web.route-prefix=&amp;lt;path&amp;gt;  Prefix for the internal routes of web endpoints. Defaults to path of --web.external-url.
      --web.user-assets=&amp;lt;path&amp;gt;   Path to static asset directory, available at /user.
      --web.enable-lifecycle     Enable shutdown and reload via HTTP request.
      --web.enable-admin-api     Enable API endpoints for admin control actions.
      --web.console.templates=&quot;consoles&quot;
                                 Path to the console template directory, available at /consoles.
      --web.console.libraries=&quot;console_libraries&quot;
                                 Path to the console library directory.
      --web.page-title=&quot;Prometheus Time Series Collection and Processing Server&quot;
                                 Document title of Prometheus instance.
      --storage.tsdb.path=&quot;data/&quot;
                                 Base path for metrics storage.
      --storage.tsdb.retention=STORAGE.TSDB.RETENTION
                                 [DEPRECATED] How long to retain samples in storage. This flag has been deprecated, use &quot;storage.tsdb.retention.time&quot; instead
      --storage.tsdb.retention.time=STORAGE.TSDB.RETENTION.TIME
                                 How long to retain samples in storage. When this flag is set it overrides &quot;storage.tsdb.retention&quot;. If neither this flag nor
                                 &quot;storage.tsdb.retention&quot; nor &quot;storage.tsdb.retention.size&quot; is set, the retention time defaults to 15d.
      --storage.tsdb.retention.size=STORAGE.TSDB.RETENTION.SIZE
                                 [EXPERIMENTAL] Maximum number of bytes that can be stored for blocks. Units supported: KB, MB, GB, TB, PB. This flag is experimental and
                                 can be changed in future releases.
      --storage.tsdb.no-lockfile
                                 Do not create lockfile in data directory.
      --storage.tsdb.allow-overlapping-blocks
                                 [EXPERIMENTAL] Allow overlapping blocks which in-turn enables vertical compaction and vertical query merge.
      --storage.remote.flush-deadline=&amp;lt;duration&amp;gt;
                                 How long to wait flushing sample on shutdown or config reload.
      --storage.remote.read-sample-limit=5e7
                                 Maximum overall number of samples to return via the remote read interface, in a single query. 0 means no limit.
      --storage.remote.read-concurrent-limit=10
                                 Maximum number of concurrent remote read calls. 0 means no limit.
      --rules.alert.for-outage-tolerance=1h
                                 Max time to tolerate prometheus outage for restoring 'for' state of alert.
      --rules.alert.for-grace-period=10m
                                 Minimum duration between alert and restored 'for' state. This is maintained only for alerts with configured 'for' time greater than
                                 grace period.
      --rules.alert.resend-delay=1m
                                 Minimum amount of time to wait before resending an alert to Alertmanager.
      --alertmanager.notification-queue-capacity=10000
                                 The capacity of the queue for pending Alertmanager notifications.
      --alertmanager.timeout=10s
                                 Timeout for sending alerts to Alertmanager.
      --query.lookback-delta=5m  The delta difference allowed for retrieving metrics during expression evaluations.
      --query.timeout=2m         Maximum time a query may take before being aborted.
      --query.max-concurrency=20
                                 Maximum number of queries executed concurrently.
      --query.max-samples=50000000
                                 Maximum number of samples a single query can load into memory. Note that queries will fail if they would load more samples than this
                                 into memory, so this also limits the number of samples a query can return.
      --web.cors.origin=&quot;.*&quot;     Regex for CORS origin. It is fully anchored. Eg. 'https?://(domain1|domain2)\.com'
      --log.level=info           Only log messages with the given severity or above. One of: [debug, info, warn, error]
      --log.format=logfmt        Output format of log messages. One of: [logfmt, json]
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;ID_APP_CTA&quot;&gt;COMPARISON TO ALTERNATIVES&lt;/h2&gt;
&lt;h3 id=&quot;prometheus-vs-graphite&quot;&gt;Prometheus vs. Graphite&lt;/h3&gt;
&lt;h4 id=&quot;scope&quot;&gt;Scope&lt;/h4&gt;
&lt;p&gt;Graphite专注于被动的时序数据库加上查询语言加上展示界面功能。任何其他的功能点都由外部组件提供。&lt;/p&gt;

&lt;p&gt;Prometheus是一个全面的监控和趋势追踪系统，包含了基于时序数据库的内建的主动式获取、存储、查询、图像化以及报警功能。在Prometheus中定义了何谓正确的行为（哪些终端应该存在，哪些时序模式意味着错误，等等），并能够主动查找错误。&lt;/p&gt;

&lt;h4 id=&quot;data-model&quot;&gt;Data model&lt;/h4&gt;
&lt;p&gt;Graphite在命名的时序字段内存储数字化的采样值，这和Prometheus类似。然而，Prometheus的metadata模型更丰富：Graphite的metric由&lt;code&gt;.&lt;/code&gt;分隔的组件组成，并隐式编码维度，而Prometheus则显示地将维度编码为键值对，这被称为labels，并附加在metric上。这使得使用labels进行过滤、分组、匹配更为简单。&lt;/p&gt;

&lt;p&gt;更进一步，特别当Graphite与StatsD结合使用的时候，通常会仅存储所有被监控实例的聚合数据，而不是将实例作为一个维度进行保存，并能够深入挖掘单独的有问题实例。&lt;/p&gt;

&lt;p&gt;举例来说，存储响应码为&lt;code&gt;500&lt;/code&gt;、方法为&lt;code&gt;POST&lt;/code&gt;、发送到API服务器上&lt;code&gt;/tracks&lt;/code&gt;端点的HTTP请求数量，一般在Graphite/StatsD会存储为：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;stats.api-server.tracks.post.500 -&amp;gt; 93
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;在Prometheus中，相同的数据则会被编码为（假设有三个API服务器实例）：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;api_server_http_requests_total{method=&quot;POST&quot;,handler=&quot;/tracks&quot;,status=&quot;500&quot;,instance=&quot;&amp;lt;sample1&amp;gt;&quot;} -&amp;gt; 34
api_server_http_requests_total{method=&quot;POST&quot;,handler=&quot;/tracks&quot;,status=&quot;500&quot;,instance=&quot;&amp;lt;sample2&amp;gt;&quot;} -&amp;gt; 28
api_server_http_requests_total{method=&quot;POST&quot;,handler=&quot;/tracks&quot;,status=&quot;500&quot;,instance=&quot;&amp;lt;sample3&amp;gt;&quot;} -&amp;gt; 31
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;storage&quot;&gt;Storage&lt;/h4&gt;
&lt;p&gt;Graphite将时序数据以Whisper格式存储在本地磁盘上，这是一个RDD-style的数据库，要求采样数据以固定间隔存储进入。每个时序数据被存储为单独的文件，而每隔一段固定时长，新的采样数据则会覆盖旧的数据。&lt;/p&gt;

&lt;p&gt;Prometheus也会在本地磁盘按照每个时序数据创建一个本地文件，但允许采样数据按随机的时间间隔进行存储，只要采样行为和规则评估行为发生。由于新的数据会被简单附加在后面，旧的数据会被保存不定时长。Prometheus在处理短存活周期、频繁变动的时序数据时也能很好工作。&lt;/p&gt;

&lt;h4 id=&quot;summary&quot;&gt;Summary&lt;/h4&gt;
&lt;p&gt;Prometheus提供了更丰富的数据模型和查询语言，此外还更容易运行并整合进你的环境。但如果你希望一个集群化的解决方案，并希望能长期保存历史数据，那么Graphite会是一个更好的选择。&lt;/p&gt;

&lt;h3 id=&quot;prometheus-vs-influxdb&quot;&gt;Prometheus vs. InfluxDB&lt;/h3&gt;
&lt;p&gt;InfluxDB是一个开源的时序数据库，并有一个可扩展和可集群化的商业选项。InfluxDB项目是在Prometheus的研发开始之后一年才被release出来的，因此我们之前无法将其作为一个竞品进行考虑。当然，Prometheus和InfluxDB之间还是有显著区别的，并且双方系统都是朝着不同的用例进行设计实施的。&lt;/p&gt;

&lt;h4 id=&quot;scope-1&quot;&gt;Scope&lt;/h4&gt;
&lt;p&gt;为了公平起见，我们还必须将Kapacitor和InfluxDB一起考虑，将这两者组合起来之后，他们解决的是和Prometheus以及Alertmanager相同的问题领域。&lt;/p&gt;

&lt;p&gt;在scope方面，InfluxDB和Graphite对Prometheus的差异是类似的。除此之外，InfluxDB提供了连续查询（continuous queries），和Prometheus的记录规则（recording rules）是等价的。&lt;/p&gt;

&lt;p&gt;Kapacitor的领域则是Prometheus记录规则（recording rules）、报警规则（alerting rules）以及Alertmanager的通知功能的综合。Prometheus提供了相对来说更强大的查询语言与图像化、报警功能。Prometheus Alertmanager额外提供了分组、去重以及静默功能。&lt;/p&gt;

&lt;h4 id=&quot;data-model--storage&quot;&gt;Data model / storage&lt;/h4&gt;
&lt;p&gt;和Prometheus类似，InfluxDB数据模型也使用键值对作为labels，在InfluxDB中这被称为tags。此外，InfluxDB拥有一个二级labels被称为fields，这个fields在使用上更受限。InfluxDB支持纳秒级别的timestamps，以及float64、int64、bool、字符串，这几种数据类型。Prometheus，根据约定，支持float64数据类型以及支持受限的字符串，以及毫秒级别的timestamps。&lt;/p&gt;

&lt;p&gt;INfulxDB使用带有预写日志的多样的 log-structured merge tree 来进行存储。这比Prometheus的每种时间序列仅追加的文件方案更加适合进行事件日志。&lt;/p&gt;

&lt;p&gt;日志和Metrics以及图，描述了事件日志和Metrics记录之间的区别。&lt;/p&gt;

&lt;h4 id=&quot;architecture&quot;&gt;Architecture&lt;/h4&gt;
&lt;p&gt;Prometheus服务器每一个都是单独运行的，与其他服务器分离，并仅依赖它们的本地存储来进行核心功能服务：抓取数据、规则处理，以及警告。开源版本的InfluxDB也是类似的。&lt;/p&gt;

&lt;p&gt;商业版的InfluxDB提供了，按设计所述，一个分布式存储集群，同时有许多集群节点处理存储和查询。&lt;/p&gt;

&lt;p&gt;这意味着商业版的InfluxDB更容易水平扩展，但这也意味着必须一开始就处理一个复杂的分布式存储系统。Prometheus更容易使用，但在某个时间点将必须手动地根据扩展边界来拓展服务器，比如说根据产品、服务、数据中心，或类似的概念。单独的服务器（可以平行运作）也可以给你更好的可靠性以及错误隔离。&lt;/p&gt;

&lt;p&gt;Kapacitor的开源release并没有内建的针对规则、警告、通知的分布式/冗余选项。开源版本可以通过用户手动分割的方式进行扩展，类似于Prometheus。Influx提供了企业版本的Kapacitor，支持高可用/冗余的告警系统。&lt;/p&gt;

&lt;p&gt;Prometheus以及Alertmanager按约定提供了一个完全开源的冗余选项，通过运行冗余的Prometheus复制（replicas），以及使用Alertmanager的高可用模式。&lt;/p&gt;

&lt;h4 id=&quot;summary-1&quot;&gt;Summary&lt;/h4&gt;
&lt;p&gt;Prometheus和InfluxDB系统有诸多相似之处。都具有labels（在InfluxDB里被称为tags）来支持高效的多维度metrics。都使用相同的数据压缩算法。都有扩展集成。都有钩子允许你拓展它们的功能，比如说在统计工具中分析数据或进行自动化处理等。&lt;/p&gt;

&lt;p&gt;InfluxDB做的更好的地方：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;使用InfluxDB系统进行事件日志处理&lt;/li&gt;
  &lt;li&gt;商业版本提供了系统集群化，对长期的数据存储来说也是更好的选择&lt;/li&gt;
  &lt;li&gt;在多个复制之间保持数据的最终一致性&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Prometheus做的更好的地方：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;使用Prometheus系统来进行metrics监控&lt;/li&gt;
  &lt;li&gt;更强大的查询语言、报警以及通知功能&lt;/li&gt;
  &lt;li&gt;高可用以及图像化的运行时长以及报警&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;InfluxDB是由单一商业公司维护的，其模式为：核心功能开源，提供会员功能比如说闭源的集群功能、托管功能以及支持。Prometheus是一个完全开源且独立的项目，由一系列公司及独立个体进行维护，部分其中的成员也提供商业服务及支持。&lt;/p&gt;

&lt;h3 id=&quot;prometheus-vs-opentsdb&quot;&gt;Prometheus vs. OpenTSDB&lt;/h3&gt;
&lt;p&gt;OpenTSDB是一个分布式的时序数据库，基于Hadoop以及HBase。&lt;/p&gt;

&lt;h4 id=&quot;scope-2&quot;&gt;Scope&lt;/h4&gt;
&lt;p&gt;在scope方面，其与Prometheus的差别和Graphite一样。&lt;/p&gt;

&lt;h4 id=&quot;data-model-1&quot;&gt;Data model&lt;/h4&gt;
&lt;p&gt;OpenTSDB的数据模型基本上和Prometheus是一致的：时序由一系列任意的键值对进行识别（OpenTSDB中的tags就是Prometheus中的labels）。针对一个metrics的数据是存储在一起的，限制metrics的基数。也有些微的不同：Prometheus允许label值中存在任意的字符，而OpenTSDB则更具有限制性。OpenTSDB也缺乏一个查询语言，仅允许通过API进行简单的聚合以及数学查询。&lt;/p&gt;

&lt;h4 id=&quot;storage-1&quot;&gt;Storage&lt;/h4&gt;
&lt;p&gt;OpenTSDB的存储是基于Hadoop以及HBase进行实现的。这意味着对OpenTSDB进行水平扩展是容易的，但你必须接受从一开始就运作一个Hadoop/HBase集群的复杂性。&lt;/p&gt;

&lt;p&gt;Prometheus作为初始是非常容易直接开始运作的，但当单节点已经无法承载的时候则需要手动进行进行分片。&lt;/p&gt;

&lt;h4 id=&quot;summary-2&quot;&gt;Summary&lt;/h4&gt;
&lt;p&gt;Prometheus提供了更丰富的查询语言，能处理更高的metrics技术，并胜任一个完整的监控系统。如果你已经有运行中的Hadoop集群，且希望拥有一个长期的数据存储更胜于之前所述的优点，那OpenTSDB就是更好的选择。&lt;/p&gt;

&lt;h3 id=&quot;prometheus-vs-nagios&quot;&gt;Prometheus vs. Nagios&lt;/h3&gt;
&lt;p&gt;Nagios是由NetSaint公司自1990年代开始发起的一个监控系统。&lt;/p&gt;

&lt;h4 id=&quot;scope-3&quot;&gt;Scope&lt;/h4&gt;
&lt;p&gt;Nagios是一个主要基于已经存在的脚本代码进行告警的系统。这些被称为&lt;code&gt;checks&lt;/code&gt;。可以针对单独的告警进行静默处理，然而并没有分组、路由以及去重。&lt;/p&gt;

&lt;p&gt;Nagios拥有大量的插件。举例来说，使用几K的perfData插件就能允许向一个时序数据库（例如Graphite）输出数据或者使用NRPE就可以在远程机器上运行checks。&lt;/p&gt;

&lt;h4 id=&quot;data-model-2&quot;&gt;Data model&lt;/h4&gt;
&lt;p&gt;Nagios是基于主机的。每个主机可以有一个或多个服务，然后每个服务可以运行一个check。&lt;/p&gt;

&lt;p&gt;并不存在labels的概念或一个查询语言。&lt;/p&gt;

&lt;h4 id=&quot;storage-2&quot;&gt;Storage&lt;/h4&gt;
&lt;p&gt;Nagios并没有存储，只有状态check。有插件可以存储数据来进行图形化。&lt;/p&gt;

&lt;h4 id=&quot;architecture-1&quot;&gt;Architecture&lt;/h4&gt;
&lt;p&gt;Nagios服务器是独立运作的。所有的checks都是通过配置文件来进行管理的。&lt;/p&gt;

&lt;h4 id=&quot;summary-3&quot;&gt;Summary&lt;/h4&gt;
&lt;p&gt;Nagios适合小型的静态的系统的基本监控（基本上是黑盒状态）。&lt;/p&gt;

&lt;p&gt;如果你希望拥有可调整的白盒监控，或拥有一个动态的基于云的环境，那么Prometheus是更好的选择。&lt;/p&gt;

&lt;h3 id=&quot;prometheus-vs-sensu&quot;&gt;Prometheus vs. Sensu&lt;/h3&gt;
&lt;p&gt;Sensu是一个可编组的监控管线，可以复用已经存在的Nagios checks。&lt;/p&gt;

&lt;h4 id=&quot;scope-4&quot;&gt;Scope&lt;/h4&gt;
&lt;p&gt;在scope方面其和Nagios是一致的。&lt;/p&gt;

&lt;p&gt;由客户端socket来支持将临时的check结果推送到Sensu。&lt;/p&gt;

&lt;h4 id=&quot;data-model-3&quot;&gt;Data model&lt;/h4&gt;
&lt;p&gt;Sensu的数据模型和Nagios一致。&lt;/p&gt;

&lt;h4 id=&quot;storage-3&quot;&gt;Storage&lt;/h4&gt;
&lt;p&gt;Sensu使用Redis来持久化监控数据，包括了Sensu的客户端注册，check结果，check执行历史，以及当前的事件数据。&lt;/p&gt;

&lt;h4 id=&quot;architecture-2&quot;&gt;Architecture&lt;/h4&gt;
&lt;p&gt;Sensu有一系列的组件。它使用RabbitMQ来传输数据，Redis来处理当前状态，以及一个单独的服务器来处理访问请求。&lt;/p&gt;

&lt;p&gt;一个Sensu部署的所有组件（RabbitMQ、Redis以及Sensu 服务器/API）可以做成集群化来支持高可用、冗余配置。&lt;/p&gt;

&lt;h4 id=&quot;summary-4&quot;&gt;Summary&lt;/h4&gt;
&lt;p&gt;如果你手头有一个存在的Nagios，且你希望扩展它，或者希望利用Sensu的自动化注册功能，那么Sensu是一个好选择。&lt;/p&gt;

&lt;p&gt;如果你希望进行白盒监控，或希望有动态的基于云的环境，那么Prometheus是一个好的选择。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;EOF&lt;/p&gt;
&lt;/blockquote&gt;
</description>
				<pubDate>Tue, 09 Apr 2019 10:01:22 +0800</pubDate>
				<link>https://xenojoshua.com/2019/04/prometheus-note/</link>
				<guid isPermaLink="true">https://xenojoshua.com/2019/04/prometheus-note/</guid>
			</item>
		
			<item>
				<title>也谈996</title>
				<description>&lt;h1 id=&quot;996的本质&quot;&gt;996的本质&lt;/h1&gt;
&lt;p&gt;最近996这个事情因为&lt;a href=&quot;https://github.com/996icu/996.ICU&quot; target=&quot;_blank&quot;&gt;996icu/996.ICU&lt;/a&gt;快速热门起来，作为同行我当年也遭遇过985（当然没996那么惨），因此很清楚这种文化带来的破坏作用。本来其实并没有什么想法要对这个热点做一点感悟笔记的，毕竟我是悲观主义者，对这世道甚至是人类的未来都不看好，理性的、熟悉历史的人差不多都应该是这个状态。读读历史可以看到人类并没有进步，读读阮一峰的&lt;a href=&quot;https://survivor.ruanyifeng.com/&quot; target=&quot;_blank&quot;&gt;未来世界的幸存者&lt;/a&gt;可以看到人类也没有什么未来。所以996这种，再正常不过了，无非就是山崩泥石流里的一颗小石子，对小石子还有什么好评论的呢，是吧？&lt;/p&gt;

&lt;p&gt;但撇开单纯的劳动者权力这种点，放宽到一个个体的人和公司的经营，我倒是有点想法真的觉得应该记录下来。&lt;/p&gt;

&lt;p&gt;我的观点是：其实我还蛮理解这些资本主义老板的，996的本质，在于&lt;code&gt;符合要求的劳动力不足&lt;/code&gt;。&lt;/p&gt;

&lt;h1 id=&quot;何谓人才&quot;&gt;何谓人才&lt;/h1&gt;
&lt;p&gt;往大了说，开过公司的人，往小了说，带过团队的人，都知道，现代的高精尖公司的关键生产要素不再是百年前的地皮、水电煤、能源这样的物质资源，而是&lt;code&gt;人才&lt;/code&gt;，亦即所谓的&lt;code&gt;团队&lt;/code&gt;。煤老板有钱，开个公司，败；投资人有钱，投个公司，烂。为什么？因为没有团队。没有有能力的人，就没有战斗力。市场上招聘，能找到的都是生物学上的人，而不是&lt;code&gt;人才&lt;/code&gt;，也就是我刚才说的&lt;code&gt;符合要求的劳动力&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;在我看来，软件公司里的人才，要的其实不是&lt;code&gt;技术&lt;/code&gt;，而是&lt;code&gt;解决问题的能力&lt;/code&gt;。这里面有什么差别呢？其实差别很大。大部分的软件从业者都觉得，我只要技术，我就能找到好的工作，实际上并非如此。技术和能力的关系，举个例子，就像是一张死的图纸和从图纸生产产品的之间的关系。有图纸（技术完备），但从图纸到产品，当中还有很多难点很多环节需要去攻克，这时候需要做很多事情。零件哪里来？如何做好零件的品控？组装的车床哪里来？运作车床的厂房和能源哪里来？其中甚至可以说是千山万水。&lt;/p&gt;

&lt;p&gt;光有&lt;code&gt;技术&lt;/code&gt;其实一点用都没有。商业公司需要的是产品，而制作产品要很多能力：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;划分目标：如何将产品的最终目标分割成一个个小的可实现的节点&lt;/li&gt;
  &lt;li&gt;做好管理：如何正确估时进行工作规划，让不同的部门小组之间的规划能够协同起来&lt;/li&gt;
  &lt;li&gt;懂得学习：遇到不知道的东西，能不能及时自学攻克难关，并很快应用到生产中&lt;/li&gt;
  &lt;li&gt;善于沟通：产品永远不是由一个人完成，人和人、团队和团队之间如何协调协作&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;此外还有很多很多。&lt;/p&gt;

&lt;p&gt;这也是常说的死读书和能做事两种人的区别。我常和下属说，不要轻视你平时在做的工作，能把CRUD工作做到完善都不是一个普通程序员能轻易做到的。同样做一个简单的业务逻辑模块，有的人可以做好编码规范、写好注释、做好文档、编写测试脚本，做到与之对接的其他协作者感叹其尽善尽美；而有的人就可以做到一团糟糕什么都出错，让后续交接的人一头雾水。&lt;/p&gt;

&lt;p&gt;大部分的程序员并不懂这一点。我以前有一个下属，也算是名校毕业，计算机技术和算法等基础都很扎实，但工作上的很多细节点还是做的不够好，平时code review之类的，我也经常对他进行指导。后来有一天他提出离职，想回家学几个月的人工智能算法，以后争取做这方面的工作。我说，你有这样的志向我觉得很好，祝愿你今后能在人工智能这块学到知识，进入大厂做出成绩。但是，我还是建议你在这个团队继续锻炼下，至少做到你平时的工作让我没有话说。如果你今后在做事的细节方面仍旧和现在一样的话，即便你算法方面多出色，你做出来的东西，仍旧是不能让人放心的。读几个月书，看懂所有算法，就能把事情做好做对了？这还是没理解什么是&lt;code&gt;知识&lt;/code&gt;什么是&lt;code&gt;能力&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;现如今的技术发展实在是太快了，热门的东西一直都在更迭，我刚从业的时候是J2EE，后来PHP热门，再后来，Flash、Cocos2dx、iOS、Android，等等。如果只看&lt;code&gt;技术&lt;/code&gt;，那是不是很多人才都过气了？当然不是。就像使用英语还是法语还是汉语写一本小说，本质在于能不能写好小说，而不在于使用的语言是什么。技术这种东西，只要掌握了软件工程的本质，再辅以强大的自学能力，再新奇的东西也就是一个上手时间的问题，让&lt;code&gt;有能力的人才&lt;/code&gt;来做，最后还是能做得很好。&lt;/p&gt;

&lt;h1 id=&quot;理解996&quot;&gt;理解996&lt;/h1&gt;
&lt;p&gt;所以回过头来我们再来看996，为什么大厂都喜欢996？因为能满足&lt;code&gt;人才&lt;/code&gt;需求的从业者实在是太少，而要从那么多自然人当中筛选出合适的人选培养，并组建&lt;code&gt;团队&lt;/code&gt;，对于一个公司来说成本太高，特别是超大型的软件公司。要提升生产力，老板有两个选择：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;花大量时间大量代价，真正把公司的管理工作做好，把团队压缩下来，把有能力的人留住，做类似&lt;code&gt;精实创业（Lean Startup）&lt;/code&gt;在做的事情&lt;/li&gt;
  &lt;li&gt;野蛮地延长工作时间，即便效率更低，人员流动性更大，生产力总是有提升的&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;你看看，所以大公司只能选后者，其来自有。反过来说，当你成为头部的&lt;code&gt;人才&lt;/code&gt;，想象下，是不是路就宽阔了很多。所以996我从来不担心，当你有能力了，你自然就多了很多选择。&lt;/p&gt;

&lt;h1 id=&quot;你应该做什么&quot;&gt;你应该做什么&lt;/h1&gt;
&lt;p&gt;放下奶头乐，放下名为&lt;code&gt;努力工作&lt;/code&gt;实则&lt;code&gt;放弃思考&lt;/code&gt;的麻醉剂，睁开闭起来的眼睛，一步一个脚印做好自己的能力提升。以我个人的经验，每天做一个小的笔记，把每天做的事情尽量详细记录下来，晚上都过一遍，找找自己有没有能力的提升，每日自省，如果没有，就要找方法挤出时间来做对提升自己有益的事情。每天一回顾，每周一大回顾，按周期给自己制定目标，并慢慢实现之。所谓逆水行舟，人生在世没有轻松的方法能让你活得更好，你每天轻松，那就长期悲剧，每天痛苦，那就长期顺利，就这么简单。&lt;/p&gt;

&lt;p&gt;共勉。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;EOF&lt;/p&gt;
&lt;/blockquote&gt;

</description>
				<pubDate>Fri, 05 Apr 2019 10:01:22 +0800</pubDate>
				<link>https://xenojoshua.com/2019/04/996/</link>
				<guid isPermaLink="true">https://xenojoshua.com/2019/04/996/</guid>
			</item>
		
			<item>
				<title>Golang Debug</title>
				<description>&lt;h4&gt;Table of Contents&lt;/h4&gt;
&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#1-前言&quot; id=&quot;markdown-toc-1-前言&quot;&gt;1. 前言&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#2-安装&quot; id=&quot;markdown-toc-2-安装&quot;&gt;2. 安装&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#2-使用&quot; id=&quot;markdown-toc-2-使用&quot;&gt;2. 使用&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#3-cli&quot; id=&quot;markdown-toc-3-cli&quot;&gt;3. CLI&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#资料&quot; id=&quot;markdown-toc-资料&quot;&gt;资料&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#ID_APP_HELP&quot; id=&quot;markdown-toc-ID_APP_HELP&quot;&gt;dlv help&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#ID_APP_DLV_HELP&quot; id=&quot;markdown-toc-ID_APP_DLV_HELP&quot;&gt;(dlv) help&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;1-前言&quot;&gt;1. 前言&lt;/h1&gt;
&lt;p&gt;本文是Go语言系列文章&lt;a href=&quot;/2019/02/golang-note/&quot; target=&quot;_blank&quot;&gt;Golang Notes&lt;/a&gt;的其中一篇，完整的文章列表请去总章查看。&lt;/p&gt;

&lt;p&gt;Go语言的Debug工具对于一直写高级语言的程序员来说有点陌生，而对于写C常年和GDB打交道的程序员来说，则非常熟悉。&lt;/p&gt;

&lt;h1 id=&quot;2-安装&quot;&gt;2. 安装&lt;/h1&gt;
&lt;p&gt;MAC下的官方安装教程：&lt;a href=&quot;https://github.com/go-delve/delve/blob/master/Documentation/installation/osx/install.md&quot; target=&quot;_blank&quot;&gt;Installation on OSX&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;环境完备的情况下只要直接使用go的下载命令即可：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ go get -u github.com/go-delve/delve/cmd/dlv
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;如果没有设置过&lt;code&gt;$GOPATH&lt;/code&gt;的话，软件包会安装在&lt;code&gt;~/go&lt;/code&gt;下。然后需要把&lt;code&gt;~/go/bin&lt;/code&gt;加入到&lt;code&gt;$PATH&lt;/code&gt;里，就可以全局使用这个debug工具了。&lt;/p&gt;

&lt;p&gt;MAC下使用的时候可能遇到如下问题：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ dlv debug goroutine.go
could not launch process: debugserver or lldb-server not found: install XCode's command line tools or lldb-server
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;需要重新安装xcode的命令行工具：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ xcode-select --install
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;完成后即可正常使用：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ dlv debug goroutine.go
Type 'help' for list of commands.
(dlv)
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&quot;2-使用&quot;&gt;2. 使用&lt;/h1&gt;
&lt;p&gt;dlv可以以两种模式进行运行：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;API模式：
    &lt;ul&gt;
      &lt;li&gt;暴露API接口，提供给其他IDE等工具，提供协同Debug的能力&lt;/li&gt;
      &lt;li&gt;此外也可以使用这个模式进行远程debug&lt;/li&gt;
      &lt;li&gt;文档入口在：&lt;a href=&quot;https://github.com/go-delve/delve/blob/master/Documentation/api/README.md&quot; target=&quot;_blank&quot;&gt;delve/Documentation/api/README.md&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;CLI模式：
    &lt;ul&gt;
      &lt;li&gt;常规的命令行下直接进入交互界面，进行debug&lt;/li&gt;
      &lt;li&gt;文档入口在：&lt;a href=&quot;https://github.com/go-delve/delve/blob/master/Documentation/cli/README.md&quot; target=&quot;_blank&quot;&gt;delve/Documentation/cli/README.md&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;通过交互命令界面的help是最直接也最贴合版本的文档获取方式：&lt;a href=&quot;#ID_APP_DLV_HELP&quot;&gt;(dlv) help&lt;/a&gt;。&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;3-cli&quot;&gt;3. CLI&lt;/h1&gt;
&lt;p&gt;命令行下使用dlv首先需要了解dlv这个命令本身的使用方法：&lt;a href=&quot;#ID_APP_HELP&quot;&gt;dlv help&lt;/a&gt;：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;attach：附到一个正在运行的线程上，这个在生产环境上比较常见&lt;/li&gt;
  &lt;li&gt;connect：把自己作为客户端，连接到远程debug进程上&lt;/li&gt;
  &lt;li&gt;core：检查一个核心导出文件（core dump）&lt;/li&gt;
  &lt;li&gt;debug：从源代码开编译，并debug&lt;/li&gt;
  &lt;li&gt;exec：运行并debug一个已经编译完成的二进制文件&lt;/li&gt;
  &lt;li&gt;test：编译一个test二进制文件，并进行debug&lt;/li&gt;
  &lt;li&gt;trace：编译并对程序进行trace&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;在线的文档可以在github上看到：&lt;a href=&quot;https://github.com/go-delve/delve/blob/master/Documentation/usage/dlv.md&quot; target=&quot;_blank&quot;&gt;delve/Documentation/usage/dlv.md&lt;/a&gt;。类似debug、exec等，在这个主页面里都可以看得到，不过打开也没什么细节，就是一些选项参数的说明，和&lt;code&gt;$ dlv connect ...&lt;/code&gt;打印出来的没差别。&lt;/p&gt;

&lt;p&gt;经过上面的选择后，就可以进入到dlv的交互界面了，同样的，可以通过&lt;a href=&quot;#ID_APP_DLV_HELP&quot;&gt;(dlv) help&lt;/a&gt;来查看交互命令选项。&lt;/p&gt;

&lt;p&gt;在调试过程中，有些时候你需要做一些细节观察行为，比如说打印出某些变量的值之类的。dlv提供了一些go语法的子集表达式，可以在交互界面直接使用：&lt;a href=&quot;https://github.com/go-delve/delve/blob/master/Documentation/cli/expr.md&quot; target=&quot;_blank&quot;&gt;Expressions&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;实际的debug范例可以看这篇：&lt;a href=&quot;https://yq.aliyun.com/articles/57578&quot; target=&quot;_blank&quot;&gt;使用Delve进行Golang代码的调试&lt;/a&gt;，算是讲解得很贴近日常工作使用了。&lt;/p&gt;

&lt;h1 id=&quot;资料&quot;&gt;资料&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/go-delve/delve/blob/master/Documentation/installation/osx/install.md&quot; target=&quot;_blank&quot;&gt;Installation on OSX&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/go-delve/delve/blob/master/Documentation/api/README.md&quot; target=&quot;_blank&quot;&gt;delve/Documentation/api/README.md&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/go-delve/delve/blob/master/Documentation/cli/README.md&quot; target=&quot;_blank&quot;&gt;delve/Documentation/cli/README.md&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/go-delve/delve/blob/master/Documentation/usage/dlv.md&quot;&gt;delve/Documentation/usage/dlv.md&lt;/a&gt;{:target=”_blank”&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/go-delve/delve/blob/master/Documentation/cli/expr.md&quot; target=&quot;_blank&quot;&gt;Expressions&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://yq.aliyun.com/articles/57578&quot; target=&quot;_blank&quot;&gt;使用Delve进行Golang代码的调试&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;ID_APP_HELP&quot;&gt;dlv help&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;$ dlv help
Delve is a source level debugger for Go programs.

Delve enables you to interact with your program by controlling the execution of the process,
evaluating variables, and providing information of thread / goroutine state, CPU register state and more.

The goal of this tool is to provide a simple yet powerful interface for debugging Go programs.

Pass flags to the program you are debugging using `--`, for example:

`dlv exec ./hello -- server --config conf/config.toml`

Usage:
  dlv [command]

Available Commands:
  attach      Attach to running process and begin debugging.
  connect     Connect to a headless debug server.
  core        Examine a core dump.
  debug       Compile and begin debugging main package in current directory, or the package specified.
  exec        Execute a precompiled binary, and begin a debug session.
  help        Help about any command
  run         Deprecated command. Use 'debug' instead.
  test        Compile test binary and begin debugging program.
  trace       Compile and begin tracing program.
  version     Prints version.

Flags:
      --accept-multiclient   Allows a headless server to accept multiple client connections. Note that the server API is not reentrant and clients will have to coordinate.
      --api-version int      Selects API version when headless. (default 1)
      --backend string       Backend selection:
	default		Uses lldb on macOS, native everywhere else.
	native		Native backend.
	lldb		Uses lldb-server or debugserver.
	rr		Uses mozilla rr (https://github.com/mozilla/rr).
 (default &quot;default&quot;)
      --build-flags string   Build flags, to be passed to the compiler.
      --headless             Run debug server only, in headless mode.
      --init string          Init file, executed by the terminal client.
  -l, --listen string        Debugging server listen address. (default &quot;localhost:0&quot;)
      --log                  Enable debugging server logging.
      --log-output string    Comma separated list of components that should produce debug output, possible values:
	debugger	Log debugger commands
	gdbwire		Log connection to gdbserial backend
	lldbout		Copy output from debugserver/lldb to standard output
	debuglineerr	Log recoverable errors reading .debug_line
	rpc		Log all RPC messages
	fncall		Log function call protocol
	minidump	Log minidump loading
Defaults to &quot;debugger&quot; when logging is enabled with --log.
      --wd string            Working directory for running the program. (default &quot;.&quot;)

Use &quot;dlv [command] --help&quot; for more information about a command.
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;ID_APP_DLV_HELP&quot;&gt;(dlv) help&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;(dlv) help
The following commands are available:
    args ------------------------ Print function arguments.
    break (alias: b) ------------ Sets a breakpoint.
    breakpoints (alias: bp) ----- Print out info for active breakpoints.
    call ------------------------ Resumes process, injecting a function call (EXPERIMENTAL!!!)
    clear ----------------------- Deletes breakpoint.
    clearall -------------------- Deletes multiple breakpoints.
    condition (alias: cond) ----- Set breakpoint condition.
    config ---------------------- Changes configuration parameters.
    continue (alias: c) --------- Run until breakpoint or program termination.
    deferred -------------------- Executes command in the context of a deferred call.
    disassemble (alias: disass) - Disassembler.
    down ------------------------ Move the current frame down.
    edit (alias: ed) ------------ Open where you are in $DELVE_EDITOR or $EDITOR
    exit (alias: quit | q) ------ Exit the debugger.
    frame ----------------------- Set the current frame, or execute command on a different frame.
    funcs ----------------------- Print list of functions.
    goroutine ------------------- Shows or changes current goroutine
    goroutines ------------------ List program goroutines.
    help (alias: h) ------------- Prints the help message.
    list (alias: ls | l) -------- Show source code.
    locals ---------------------- Print local variables.
    next (alias: n) ------------- Step over to next source line.
    on -------------------------- Executes a command when a breakpoint is hit.
    print (alias: p) ------------ Evaluate an expression.
    regs ------------------------ Print contents of CPU registers.
    restart (alias: r) ---------- Restart process.
    set ------------------------- Changes the value of a variable.
    source ---------------------- Executes a file containing a list of delve commands
    sources --------------------- Print list of source files.
    stack (alias: bt) ----------- Print stack trace.
    step (alias: s) ------------- Single step through program.
    step-instruction (alias: si)  Single step a single cpu instruction.
    stepout --------------------- Step out of the current function.
    thread (alias: tr) ---------- Switch to the specified thread.
    threads --------------------- Print out info for every traced thread.
    trace (alias: t) ------------ Set tracepoint.
    types ----------------------- Print list of types
    up -------------------------- Move the current frame up.
    vars ------------------------ Print package variables.
    whatis ---------------------- Prints type of an expression.
Type help followed by a command for full documentation.
&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;
  &lt;p&gt;EOF&lt;/p&gt;
&lt;/blockquote&gt;
</description>
				<pubDate>Wed, 27 Mar 2019 10:01:22 +0800</pubDate>
				<link>https://xenojoshua.com/2019/03/golang-debug/</link>
				<guid isPermaLink="true">https://xenojoshua.com/2019/03/golang-debug/</guid>
			</item>
		
			<item>
				<title>Golang Goroutine</title>
				<description>&lt;h4&gt;Table of Contents&lt;/h4&gt;
&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#1-前言&quot; id=&quot;markdown-toc-1-前言&quot;&gt;1. 前言&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#2-gpm--原理&quot; id=&quot;markdown-toc-2-gpm--原理&quot;&gt;2. GPM &amp;amp; 原理&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#3-profiling&quot; id=&quot;markdown-toc-3-profiling&quot;&gt;3. Profiling&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#pprof-web&quot; id=&quot;markdown-toc-pprof-web&quot;&gt;pprof web&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#godebugschedtrace1000&quot; id=&quot;markdown-toc-godebugschedtrace1000&quot;&gt;GODEBUG=schedtrace=1000&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#4-blocking&quot; id=&quot;markdown-toc-4-blocking&quot;&gt;4. Blocking&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#资料&quot; id=&quot;markdown-toc-资料&quot;&gt;资料&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;1-前言&quot;&gt;1. 前言&lt;/h1&gt;
&lt;p&gt;本文是Go语言系列文章&lt;a href=&quot;/2019/02/golang-note/&quot; target=&quot;_blank&quot;&gt;Golang Notes&lt;/a&gt;的其中一篇，完整的文章列表请去总章查看。&lt;/p&gt;

&lt;p&gt;Goroutine或者说Go程是Go语言的高性能关键。常见的高级语言比如说node、php这种，天生就是单进程单线程的，如果需要充分利用CPU，就需要启动多个进程进行集群管理。即便如此，在多个进程之间如何进行数据交换、进行业务协作又是一个基本上无解的头痛问题。而像Java这种，虽然用的是单个进程中的多线程，但因语言本身及线程设计本质的问题，开发体验仍旧说不上好。&lt;/p&gt;

&lt;p&gt;Go为什么能这么快就火起来，第一是因为它本身的性能很好，能满足各种需求，另一个就是Goroutine了，可以说是Go的灵魂。在不增加程序复杂度的情况下，马上就能将所有的物理核心都跑满利用起来的，横向过一遍也就只有Go了。&lt;/p&gt;

&lt;p&gt;但世上无银弹，Goroutine虽然好用消耗小，但使用不当仍旧会出问题，所以这里就需要理解其原理，并知道如何profiling找问题。&lt;/p&gt;

&lt;h1 id=&quot;2-gpm--原理&quot;&gt;2. GPM &amp;amp; 原理&lt;/h1&gt;
&lt;p&gt;这部分的文章实在是太多了，基本上看完或者选择性看完（最重要的是3和4）下面几篇，就OK了：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;如果只需要初步的理解，这篇即可：&lt;a href=&quot;https://juejin.im/post/5b7678f451882533110e8948&quot; target=&quot;_blank&quot;&gt;Golang 的 协程调度机制 与 GOMAXPROCS 性能调优&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;如果需要深入源码及实现细节（过于细节，有点偏离了行文的目的）：&lt;a href=&quot;https://studygolang.com/articles/11627&quot; target=&quot;_blank&quot;&gt;Golang源码探索(二) 协程的实现原理&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;如果需要完美理解GPM及Goroutine（其实这篇是最好的）：&lt;a href=&quot;https://tonybai.com/2017/06/23/an-intro-about-goroutine-scheduler/&quot; target=&quot;_blank&quot;&gt;也谈goroutine调度器&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;接上一篇，更多范例的调度细节：&lt;a href=&quot;https://tonybai.com/2017/11/23/the-simple-analysis-of-goroutine-schedule-examples/&quot; target=&quot;_blank&quot;&gt;Goroutine调度实例简要分析&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;几点记住就好：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;G是任务，全局有一个队列，每个P还有自己的队列&lt;/li&gt;
  &lt;li&gt;P是逻辑处理器，由P来处理G&lt;/li&gt;
  &lt;li&gt;M是物理处理器（实际上是Go应用程序里的&lt;code&gt;线程&lt;/code&gt;），P会和M绑定，得到执行的实体&lt;/li&gt;
  &lt;li&gt;M最终会通过操作系统调度，在CPU上得到运行&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;3-profiling&quot;&gt;3. Profiling&lt;/h1&gt;
&lt;h2 id=&quot;pprof-web&quot;&gt;pprof web&lt;/h2&gt;
&lt;p&gt;继续建议使用基于WEB的入口的方式进行查看：&lt;a href=&quot;/2019/03/golang-memory/#ID_PROF_PPROF_WEB&quot;&gt;Golang Memory#5.3.3 runtime/pprof web&lt;/a&gt;。此外，由于Goroutine一般数量巨大，不像CPU和内存检查的是点，goroutine更多的时候是要把握一个状态（面），因此更建议使用pprof的WEB UI来进行观察。入口在：&lt;code&gt;http://127.0.0.1:8080/debug/pprof/goroutine&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;e.g&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ go tool pprof -http=:8899 http://127.0.0.1:8080/debug/pprof/goroutine
Fetching profile over HTTP from http://127.0.0.1:8080/debug/pprof/goroutine
Saved profile in /Users/Jonathan/pprof/pprof.goroutine.001.pb.gz
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;在Profile的分析结果里，一般会看到&lt;code&gt;gopark&lt;/code&gt;这个东西，这个在之前的几篇文章里都没怎么提到过（当然最细节的那篇是有的）。这里可以再看下：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/27056944&quot; target=&quot;_blank&quot;&gt;Go调度详解&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://blog.csdn.net/u010853261/article/details/85887948&quot; target=&quot;_blank&quot;&gt;Golang-gopark函数和goready函数原理分析&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;在第一篇里还可以顺道看下&lt;code&gt;自旋（spinning）&lt;/code&gt;的概念。&lt;/p&gt;

&lt;p&gt;测试代码这里就不帖了，写起来实在是太简单，做个循环，起一点goroutine就好。&lt;/p&gt;

&lt;h2 id=&quot;godebugschedtrace1000&quot;&gt;GODEBUG=schedtrace=1000&lt;/h2&gt;
&lt;p&gt;如果需要查看Go调度器当前状态：使用&lt;code&gt;GODEBUG=schedtrace=...&lt;/code&gt;，第二个等号后面给时间间隔，单位为毫秒。&lt;/p&gt;

&lt;p&gt;e.g&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ GODEBUG=schedtrace=1000 go run goroutine.go
SCHED 0ms: gomaxprocs=8 idleprocs=6 threads=4 spinningthreads=1 idlethreads=0 runqueue=0 [0 0 0 0 0 0 0 0]
# command-line-arguments
SCHED 0ms: gomaxprocs=8 idleprocs=5 threads=5 spinningthreads=1 idlethreads=0 runqueue=0 [0 0 0 0 0 0 0 0]
# command-line-arguments
SCHED 0ms: gomaxprocs=8 idleprocs=5 threads=5 spinningthreads=1 idlethreads=0 runqueue=0 [0 0 0 0 0 0 0 0]
SCHED 0ms: gomaxprocs=8 idleprocs=6 threads=4 spinningthreads=1 idlethreads=0 runqueue=0 [0 0 0 0 0 0 0 0]
SCHED 1000ms: gomaxprocs=8 idleprocs=8 threads=22 spinningthreads=0 idlethreads=15 runqueue=0 [0 0 0 0 0 0 0 0]
SCHED 1010ms: gomaxprocs=8 idleprocs=0 threads=12 spinningthreads=0 idlethreads=1 runqueue=33 [1 1 0 2 2 1 1 2]
SCHED 2010ms: gomaxprocs=8 idleprocs=8 threads=22 spinningthreads=0 idlethreads=15 runqueue=0 [0 0 0 0 0 0 0 0]
SCHED 2022ms: gomaxprocs=8 idleprocs=0 threads=12 spinningthreads=0 idlethreads=1 runqueue=36 [1 1 0 1 0 2 2 0]
SCHED 3019ms: gomaxprocs=8 idleprocs=8 threads=22 spinningthreads=0 idlethreads=15 runqueue=0 [0 0 0 0 0 0 0 0]
SCHED 3027ms: gomaxprocs=8 idleprocs=0 threads=12 spinningthreads=0 idlethreads=1 runqueue=36 [1 1 1 1 0 1 1 0]
SCHED 4028ms: gomaxprocs=8 idleprocs=8 threads=22 spinningthreads=0 idlethreads=15 runqueue=0 [0 0 0 0 0 0 0 0]
SCHED 4034ms: gomaxprocs=8 idleprocs=0 threads=12 spinningthreads=0 idlethreads=1 runqueue=31 [1 0 4 4 1 0 1 0]
SCHED 5037ms: gomaxprocs=8 idleprocs=8 threads=22 spinningthreads=0 idlethreads=15 runqueue=0 [0 0 0 0 0 0 0 0]
SCHED 5037ms: gomaxprocs=8 idleprocs=0 threads=12 spinningthreads=0 idlethreads=1 runqueue=22 [3 3 3 0 3 2 3 3]
SCHED 6041ms: gomaxprocs=8 idleprocs=8 threads=22 spinningthreads=0 idlethreads=15 runqueue=0 [0 0 0 0 0 0 0 0]
...
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;字段说明：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;SCHED&lt;/code&gt;：标识该输出信息为goroutine scheduler的输出&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;5037ms&lt;/code&gt;：从程序启动到输出这行日志的时间&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;gomaxprocs&lt;/code&gt;：P的数量&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;idleprocs&lt;/code&gt;：idle状态的P的数量&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;threads&lt;/code&gt;：操作系统threads的数量，包含scheduler使用的m数量，加上runtime自用的类似sysmon这样的thread的数量&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;spinningthreads&lt;/code&gt;：处于自旋状态的操作系统thread数量&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;idlethread&lt;/code&gt;：处于idle状态的操作系统thread的数量&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;runqueue=22&lt;/code&gt;：go scheduler全局队列中G的数量&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;[3 3 3 0 3 2 3 3]&lt;/code&gt;：8个P的local queue中的G的数量&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;通过这个输出可以很清晰看到goroutine的整体状态，特别是调度的状态，到底有没有跑满CPU，到底有没有空闲的线程，任务调度整体是不是平滑的，等等。可以说是非常有用。&lt;/p&gt;

&lt;p&gt;如果在GODEBUG中再加上&lt;code&gt;,scheddetail=1&lt;/code&gt;的话，则会给出更多的细节：每个G、M和P的详细调度信息。&lt;/p&gt;

&lt;p&gt;e.g&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ GODEBUG=schedtrace=1000,scheddetail=1 go run goroutine.go
...
# command-line-arguments
SCHED 0ms: gomaxprocs=8 idleprocs=5 threads=5 spinningthreads=1 idlethreads=0 runqueue=0 gcwaiting=0 nmidlelocked=1 stopwait=0 sysmonwait=0
  P0: status=1 schedtick=0 syscalltick=0 m=3 runqsize=0 gfreecnt=0
  P1: status=1 schedtick=1 syscalltick=0 m=2 runqsize=0 gfreecnt=0
  P2: status=1 schedtick=0 syscalltick=0 m=4 runqsize=0 gfreecnt=0
  P3: status=0 schedtick=0 syscalltick=0 m=-1 runqsize=0 gfreecnt=0
  P4: status=0 schedtick=0 syscalltick=0 m=-1 runqsize=0 gfreecnt=0
  P5: status=0 schedtick=0 syscalltick=0 m=-1 runqsize=0 gfreecnt=0
  P6: status=0 schedtick=0 syscalltick=0 m=-1 runqsize=0 gfreecnt=0
  P7: status=0 schedtick=0 syscalltick=0 m=-1 runqsize=0 gfreecnt=0
  M4: p=2 curg=-1 mallocing=0 throwing=0 preemptoff= locks=1 dying=0 spinning=true blocked=false lockedg=-1
  M3: p=0 curg=-1 mallocing=0 throwing=0 preemptoff= locks=1 dying=0 spinning=false blocked=false lockedg=-1
  M2: p=1 curg=-1 mallocing=0 throwing=0 preemptoff= locks=1 dying=0 spinning=true blocked=false lockedg=-1
  M1: p=-1 curg=-1 mallocing=0 throwing=0 preemptoff= locks=1 dying=0 spinning=false blocked=false lockedg=-1
  M0: p=-1 curg=-1 mallocing=0 throwing=0 preemptoff= locks=0 dying=0 spinning=false blocked=true lockedg=1
  G1: status=1(chan receive) m=-1 lockedm=0
  G2: status=4(force gc (idle)) m=-1 lockedm=-1
  G3: status=4(GC sweep wait) m=-1 lockedm=-1
SCHED 0ms: gomaxprocs=8 idleprocs=6 threads=4 spinningthreads=1 idlethreads=0 runqueue=0 gcwaiting=0 nmidlelocked=0 stopwait=0 sysmonwait=0
  P0: status=1 schedtick=0 syscalltick=0 m=0 runqsize=0 gfreecnt=0
  P1: status=1 schedtick=0 syscalltick=0 m=3 runqsize=0 gfreecnt=0
  P2: status=0 schedtick=0 syscalltick=0 m=-1 runqsize=0 gfreecnt=0
  P3: status=0 schedtick=0 syscalltick=0 m=-1 runqsize=0 gfreecnt=0
  P4: status=0 schedtick=0 syscalltick=0 m=-1 runqsize=0 gfreecnt=0
  P5: status=0 schedtick=0 syscalltick=0 m=-1 runqsize=0 gfreecnt=0
  P6: status=0 schedtick=0 syscalltick=0 m=-1 runqsize=0 gfreecnt=0
  P7: status=0 schedtick=0 syscalltick=0 m=-1 runqsize=0 gfreecnt=0
  M3: p=1 curg=-1 mallocing=0 throwing=0 preemptoff= locks=1 dying=0 spinning=false blocked=false lockedg=-1
  M2: p=-1 curg=-1 mallocing=0 throwing=0 preemptoff= locks=1 dying=0 spinning=false blocked=false lockedg=-1
  M1: p=-1 curg=17 mallocing=0 throwing=0 preemptoff= locks=0 dying=0 spinning=false blocked=false lockedg=17
  M0: p=0 curg=-1 mallocing=0 throwing=0 preemptoff= locks=1 dying=0 spinning=false blocked=false lockedg=1
  G1: status=1() m=-1 lockedm=0
  G17: status=6() m=1 lockedm=1
  G2: status=1() m=-1 lockedm=-1
...
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&quot;4-blocking&quot;&gt;4. Blocking&lt;/h1&gt;
&lt;p&gt;阻塞的事情在这里顺道提一笔，毕竟阻塞和goroutine还是有很深的关系的，很多时候我们的debug就是要找死循环或死锁的goroutine。如果需要查看程序当中的阻塞情况（主要是竞争锁），一样可以使用pprof，入口在：&lt;code&gt;go tool pprof http://127.0.0.1:8080/debug/pprof/block&lt;/code&gt;。&lt;/p&gt;

&lt;h1 id=&quot;资料&quot;&gt;资料&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://juejin.im/post/5b7678f451882533110e8948&quot; target=&quot;_blank&quot;&gt;Golang 的 协程调度机制 与 GOMAXPROCS 性能调优&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://studygolang.com/articles/11627&quot; target=&quot;_blank&quot;&gt;Golang源码探索(二) 协程的实现原理&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://tonybai.com/2017/06/23/an-intro-about-goroutine-scheduler/&quot; target=&quot;_blank&quot;&gt;也谈goroutine调度器&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://tonybai.com/2017/11/23/the-simple-analysis-of-goroutine-schedule-examples/&quot; target=&quot;_blank&quot;&gt;Goroutine调度实例简要分析&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://juejin.im/post/5b7678f451882533110e8948&quot; target=&quot;_blank&quot;&gt;Golang 的 协程调度机制 与 GOMAXPROCS 性能调优&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/28351811&quot; target=&quot;_blank&quot;&gt;剖析使Go语言高效的5个特性(4/5): Goroutines&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/28381197&quot; target=&quot;_blank&quot;&gt;Goroutine是如何工作的?&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/27056944&quot; target=&quot;_blank&quot;&gt;Go调度详解&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://blog.csdn.net/u010853261/article/details/85887948&quot; target=&quot;_blank&quot;&gt;Golang-gopark函数和goready函数原理分析&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://software.intel.com/en-us/blogs/2014/05/10/debugging-performance-issues-in-go-programs&quot; target=&quot;_blank&quot;&gt;Debugging performance issues in Go programs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;EOF&lt;/p&gt;
&lt;/blockquote&gt;
</description>
				<pubDate>Tue, 26 Mar 2019 11:01:22 +0800</pubDate>
				<link>https://xenojoshua.com/2019/03/golang-goroutine/</link>
				<guid isPermaLink="true">https://xenojoshua.com/2019/03/golang-goroutine/</guid>
			</item>
		
			<item>
				<title>Golang CPU</title>
				<description>&lt;h4&gt;Table of Contents&lt;/h4&gt;
&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#1-前言&quot; id=&quot;markdown-toc-1-前言&quot;&gt;1. 前言&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#2-cpu&quot; id=&quot;markdown-toc-2-cpu&quot;&gt;2. CPU&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#21-核心数量&quot; id=&quot;markdown-toc-21-核心数量&quot;&gt;2.1 核心数量&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#22-profiling&quot; id=&quot;markdown-toc-22-profiling&quot;&gt;2.2 Profiling&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#23-火焰图&quot; id=&quot;markdown-toc-23-火焰图&quot;&gt;2.3 火焰图&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#3-代码&quot; id=&quot;markdown-toc-3-代码&quot;&gt;3. 代码&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#4-资料&quot; id=&quot;markdown-toc-4-资料&quot;&gt;4. 资料&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#ID_APP_CPU_SAMPLE&quot; id=&quot;markdown-toc-ID_APP_CPU_SAMPLE&quot;&gt;experiment/cpu/cpu.go&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;1-前言&quot;&gt;1. 前言&lt;/h1&gt;
&lt;p&gt;本文是Go语言系列文章&lt;a href=&quot;/2019/02/golang-note/&quot; target=&quot;_blank&quot;&gt;Golang Notes&lt;/a&gt;的其中一篇，完整的文章列表请去总章查看。&lt;/p&gt;

&lt;h1 id=&quot;2-cpu&quot;&gt;2. CPU&lt;/h1&gt;
&lt;p&gt;CPU这里基本上就没什么太多原理可以说了，只要知道几个知识点就OK。&lt;/p&gt;

&lt;h2 id=&quot;21-核心数量&quot;&gt;2.1 核心数量&lt;/h2&gt;
&lt;p&gt;获取可用的核心数量：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-go&quot; data-lang=&quot;go&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;runtime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;NumCPU&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;设置当前Go进程应该使用多少核心：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-go&quot; data-lang=&quot;go&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;runtime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;GOMAXPROCS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;22-profiling&quot;&gt;2.2 Profiling&lt;/h2&gt;
&lt;p&gt;Profiling方面和内存使用的工具基本上是一致的，直接看内存那篇里的内容即可：&lt;a href=&quot;/2019/03/golang-memory/#ID_PROF_PPROF_WEB&quot;&gt;Golang Memory#5.3.3 runtime/pprof web&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;仍旧推荐使用WEB入口的方式来进行profiling，更容易进行实时追踪。获取采样的地址为：&lt;code&gt;http://localhost:8080/debug/pprof/profile&lt;/code&gt;。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ go tool pprof http://localhost:8080/debug/pprof/profile
Fetching profile over HTTP from http://localhost:8080/debug/pprof/profile
Saved profile in /Users/XXX/pprof/pprof.samples.cpu.001.pb.gz
Type: cpu
Time: Mar 26, 2019 at 1:41pm (CST)
Duration: 30.15s, Total samples = 3.16s (10.48%)
Entering interactive mode (type &quot;help&quot; for commands, &quot;o&quot; for options)
(pprof)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;go tool pprof在进行CPU分析的时候先要进行采样，所以需要等待一段时间，如果在URL上不加任何参数的话，默认是采样30秒。可以通过附加&lt;code&gt;?seconds=x&lt;/code&gt;来进行调整。&lt;/p&gt;

&lt;p&gt;e.g&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ go tool pprof http://localhost:8080/debug/pprof/profile?seconds=10
Fetching profile over HTTP from http://localhost:8080/debug/pprof/profile?seconds=10
Saved profile in /Users/XXX/pprof/pprof.samples.cpu.002.pb.gz
Type: cpu
Time: Mar 26, 2019 at 1:44pm (CST)
Duration: 10.02s, Total samples = 1.06s (10.57%)
Entering interactive mode (type &quot;help&quot; for commands, &quot;o&quot; for options)
(pprof)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;同样的，其他的工具例如&lt;code&gt;trace&lt;/code&gt;等也都可以使用。如果要在代码里进行采样，则需要使用接口：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-go&quot; data-lang=&quot;go&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pprof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;StartCPUProfile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Stdout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;defer&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;pprof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;StopCPUProfile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;23-火焰图&quot;&gt;2.3 火焰图&lt;/h2&gt;
&lt;p&gt;火焰图是最直观的查看CPU消耗的分析工具，如果要在Go工具链上生成火焰图，可以使用在内存篇里提到过的pprof的UI界面。打开之后&lt;code&gt;VIEW &amp;gt; Flame Graph&lt;/code&gt;就能看到了。&lt;/p&gt;

&lt;h1 id=&quot;3-代码&quot;&gt;3. 代码&lt;/h1&gt;
&lt;p&gt;代码放在github：&lt;a href=&quot;https://github.com/agreatfool/dist-system-practice/blob/master/golang/src/experiment/cpu/cpu.go&quot; target=&quot;_blank&quot;&gt;experiment/cpu/cpu.go&lt;/a&gt;。github上的代码可以看到最新的更新，不过需要打开新的页面稍微麻烦点。&lt;/p&gt;

&lt;p&gt;当前页面会放一份gist，方便直接查看：&lt;a href=&quot;#ID_APP_CPU_SAMPLE&quot;&gt;experiment/cpu/cpu.go&lt;/a&gt;，但可能更新不及时。&lt;/p&gt;

&lt;h1 id=&quot;4-资料&quot;&gt;4. 资料&lt;/h1&gt;
&lt;h2 id=&quot;ID_APP_CPU_SAMPLE&quot;&gt;experiment/cpu/cpu.go&lt;/h2&gt;
&lt;noscript&gt;&lt;pre&gt;400: Invalid request
&lt;/pre&gt;&lt;/noscript&gt;
&lt;script src=&quot;https://gist.github.com/24a00ddbdb04c68d6fd2792ba8808ce6.js&quot;&gt; &lt;/script&gt;

&lt;blockquote&gt;
  &lt;p&gt;EOF&lt;/p&gt;
&lt;/blockquote&gt;
</description>
				<pubDate>Tue, 26 Mar 2019 10:01:22 +0800</pubDate>
				<link>https://xenojoshua.com/2019/03/golang-cpu/</link>
				<guid isPermaLink="true">https://xenojoshua.com/2019/03/golang-cpu/</guid>
			</item>
		
			<item>
				<title>Golang Memory</title>
				<description>&lt;h4&gt;Table of Contents&lt;/h4&gt;
&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#1-前言&quot; id=&quot;markdown-toc-1-前言&quot;&gt;1. 前言&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#2-内存分配&quot; id=&quot;markdown-toc-2-内存分配&quot;&gt;2. 内存分配&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#21-why&quot; id=&quot;markdown-toc-21-why&quot;&gt;2.1 WHY&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#22-tcmalloc&quot; id=&quot;markdown-toc-22-tcmalloc&quot;&gt;2.2 Tcmalloc&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#23-源码理解&quot; id=&quot;markdown-toc-23-源码理解&quot;&gt;2.3 源码理解&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#231-主要源码&quot; id=&quot;markdown-toc-231-主要源码&quot;&gt;2.3.1 主要源码&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#232-概念&quot; id=&quot;markdown-toc-232-概念&quot;&gt;2.3.2 概念&lt;/a&gt;            &lt;ul&gt;
              &lt;li&gt;&lt;a href=&quot;#堆内存上限&quot; id=&quot;markdown-toc-堆内存上限&quot;&gt;堆内存上限&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href=&quot;#page&quot; id=&quot;markdown-toc-page&quot;&gt;Page&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href=&quot;#逃逸分析&quot; id=&quot;markdown-toc-逃逸分析&quot;&gt;逃逸分析&lt;/a&gt;&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#233-内存分块&quot; id=&quot;markdown-toc-233-内存分块&quot;&gt;2.3.3 内存分块&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#234-对象尺寸分级&quot; id=&quot;markdown-toc-234-对象尺寸分级&quot;&gt;2.3.4 对象尺寸分级&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#235-防碎片设计&quot; id=&quot;markdown-toc-235-防碎片设计&quot;&gt;2.3.5 防碎片设计&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#236-内存申请管线设计&quot; id=&quot;markdown-toc-236-内存申请管线设计&quot;&gt;2.3.6 内存申请管线设计&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#237-按对象尺寸不同的分配行为&quot; id=&quot;markdown-toc-237-按对象尺寸不同的分配行为&quot;&gt;2.3.7 按对象尺寸不同的分配行为&lt;/a&gt;            &lt;ul&gt;
              &lt;li&gt;&lt;a href=&quot;#2371-tiny&quot; id=&quot;markdown-toc-2371-tiny&quot;&gt;2.3.7.1 Tiny&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href=&quot;#2372-small&quot; id=&quot;markdown-toc-2372-small&quot;&gt;2.3.7.2 Small&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href=&quot;#2373-large&quot; id=&quot;markdown-toc-2373-large&quot;&gt;2.3.7.3 Large&lt;/a&gt;&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#3-垃圾回收&quot; id=&quot;markdown-toc-3-垃圾回收&quot;&gt;3. 垃圾回收&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#31-版本历史--演进&quot; id=&quot;markdown-toc-31-版本历史--演进&quot;&gt;3.1 版本历史 &amp;amp; 演进&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#32-垃圾回收要点&quot; id=&quot;markdown-toc-32-垃圾回收要点&quot;&gt;3.2 垃圾回收要点&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#321-gc触发条件&quot; id=&quot;markdown-toc-321-gc触发条件&quot;&gt;3.2.1 GC触发条件&lt;/a&gt;            &lt;ul&gt;
              &lt;li&gt;&lt;a href=&quot;#3211-gctriggerheap&quot; id=&quot;markdown-toc-3211-gctriggerheap&quot;&gt;3.2.1.1 gcTriggerHeap&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href=&quot;#3212-gctriggertime&quot; id=&quot;markdown-toc-3212-gctriggertime&quot;&gt;3.2.1.2 gcTriggerTime&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href=&quot;#3213-gctriggercycle&quot; id=&quot;markdown-toc-3213-gctriggercycle&quot;&gt;3.2.1.3 gcTriggerCycle&lt;/a&gt;&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#33-其他概念&quot; id=&quot;markdown-toc-33-其他概念&quot;&gt;3.3 其他概念&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#ID_PROFILE&quot; id=&quot;markdown-toc-ID_PROFILE&quot;&gt;5. Profile&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#51-metrics&quot; id=&quot;markdown-toc-51-metrics&quot;&gt;5.1 Metrics&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#ID_MEMSTATS_EXPORT&quot; id=&quot;markdown-toc-ID_MEMSTATS_EXPORT&quot;&gt;MemStats&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#ID_MEMSTATS&quot; id=&quot;markdown-toc-ID_MEMSTATS&quot;&gt;memstats&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#gcstats&quot; id=&quot;markdown-toc-gcstats&quot;&gt;GCStats&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#52-测试用例&quot; id=&quot;markdown-toc-52-测试用例&quot;&gt;5.2 测试用例&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#53-profile方法&quot; id=&quot;markdown-toc-53-profile方法&quot;&gt;5.3 Profile方法&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#ID_PROF_READMEMSTATS&quot; id=&quot;markdown-toc-ID_PROF_READMEMSTATS&quot;&gt;5.3.1 runtime.ReadMemStats&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#ID_PROF_PPROF&quot; id=&quot;markdown-toc-ID_PROF_PPROF&quot;&gt;5.3.2 runtime/pprof&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#ID_PROF_PPROF_WEB&quot; id=&quot;markdown-toc-ID_PROF_PPROF_WEB&quot;&gt;5.3.3 runtime/pprof web&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#ID_PROF_TRACE&quot; id=&quot;markdown-toc-ID_PROF_TRACE&quot;&gt;5.3.4 runtime/trace&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#ID_PORF_DEBUG&quot; id=&quot;markdown-toc-ID_PORF_DEBUG&quot;&gt;5.3.5 GODEBUG=’gctrace=1’&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#54-pprof简单使用&quot; id=&quot;markdown-toc-54-pprof简单使用&quot;&gt;5.4 pprof简单使用&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#541-pprof-help&quot; id=&quot;markdown-toc-541-pprof-help&quot;&gt;5.4.1 pprof help&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#542-常用交互命令&quot; id=&quot;markdown-toc-542-常用交互命令&quot;&gt;5.4.2 常用交互命令&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#ID_PROF_SAMPLE_INDEX&quot; id=&quot;markdown-toc-ID_PROF_SAMPLE_INDEX&quot;&gt;5.4.3 sample_index&lt;/a&gt;            &lt;ul&gt;
              &lt;li&gt;&lt;a href=&quot;#pprof无输出&quot; id=&quot;markdown-toc-pprof无输出&quot;&gt;pprof无输出&lt;/a&gt;&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#544-输出&quot; id=&quot;markdown-toc-544-输出&quot;&gt;5.4.4 输出&lt;/a&gt;            &lt;ul&gt;
              &lt;li&gt;&lt;a href=&quot;#静态资源&quot; id=&quot;markdown-toc-静态资源&quot;&gt;静态资源&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href=&quot;#web-ui&quot; id=&quot;markdown-toc-web-ui&quot;&gt;WEB UI&lt;/a&gt;&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#545-pprofprotoprofileproto&quot; id=&quot;markdown-toc-545-pprofprotoprofileproto&quot;&gt;5.4.5 pprof/proto/profile.proto&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#55-复杂范例实践&quot; id=&quot;markdown-toc-55-复杂范例实践&quot;&gt;5.5 复杂范例实践&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#资料&quot; id=&quot;markdown-toc-资料&quot;&gt;资料&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#ID_APP_LINKS&quot; id=&quot;markdown-toc-ID_APP_LINKS&quot;&gt;参考链接&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#内存分配&quot; id=&quot;markdown-toc-内存分配&quot;&gt;内存分配&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#内存回收&quot; id=&quot;markdown-toc-内存回收&quot;&gt;内存回收&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#内存profile&quot; id=&quot;markdown-toc-内存profile&quot;&gt;内存Profile&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#其他&quot; id=&quot;markdown-toc-其他&quot;&gt;其他&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#ID_APP_MEMSTATS&quot; id=&quot;markdown-toc-ID_APP_MEMSTATS&quot;&gt;&lt;a href=&quot;https://github.com/golang/go/blob/go1.12/src/runtime/mstats.go#L145&quot; target=&quot;_blank&quot;&gt;go/src/runtime/mstats.go#MemStats@1.12&lt;/a&gt;&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#ID_APP_MALLOC&quot; id=&quot;markdown-toc-ID_APP_MALLOC&quot;&gt;comments of &lt;a href=&quot;https://github.com/golang/go/blob/go1.12/src/runtime/malloc.go&quot; target=&quot;_blank&quot;&gt;go/src/runtime/malloc.go@1.12&lt;/a&gt;&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#ID_APP_PPROF_USAGE&quot; id=&quot;markdown-toc-ID_APP_PPROF_USAGE&quot;&gt;go tool pprof usage@1.12&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#ID_APP_PPROF_HELP&quot; id=&quot;markdown-toc-ID_APP_PPROF_HELP&quot;&gt;(pprof) help@1.12&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#ID_APP_TRACE_USAGE&quot; id=&quot;markdown-toc-ID_APP_TRACE_USAGE&quot;&gt;go tool trace usage@1.12&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#ID_APP_GCTRACE_SAMPLE&quot; id=&quot;markdown-toc-ID_APP_GCTRACE_SAMPLE&quot;&gt;GODEBUG=gctrace=1 sample&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#ID_APP_MEMORY_SAMPLE&quot; id=&quot;markdown-toc-ID_APP_MEMORY_SAMPLE&quot;&gt;experiment/memory/memory.go&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;1-前言&quot;&gt;1. 前言&lt;/h1&gt;
&lt;p&gt;本文是Go语言系列文章&lt;a href=&quot;/2019/02/golang-note/&quot; target=&quot;_blank&quot;&gt;Golang Notes&lt;/a&gt;的其中一篇，完整的文章列表请去总章查看。&lt;/p&gt;

&lt;p&gt;内存管理是任何编程语言最重要的部分，几乎可以不带之一了。Go语言的机制是和一般高级语言一样的垃圾回收器机制，因此需要用户直接操作的东西比较少，但掌握其知识点仍旧有利于写出性能更好的Go程序，此外也可以监控Go程序的内存使用情况。&lt;/p&gt;

&lt;p&gt;下文按以下思路走，先看下Go语言是如何进行内存分配的，然后看下Go语言是如何对分配的内存进行垃圾回收的，最后看下如何对运行的Go程序进行下针对内存的Profiling。&lt;/p&gt;

&lt;h1 id=&quot;2-内存分配&quot;&gt;2. 内存分配&lt;/h1&gt;
&lt;h2 id=&quot;21-why&quot;&gt;2.1 WHY&lt;/h2&gt;
&lt;p&gt;理解Go语言是如何分配内存确实是一件收益不高的事情，不了解也不影响Go编码和程序运行与使用。当然，了解了能更好理解Go语言是如何分配内存的，对某些类型的应用编写有指导作用，此外，也能更好理解GC和Profile。（作为学习也是好的，见多识广，就像这次看完Go语言的内存分配之后，发现思路和很早之前学习memcached的内存分配防碎片的机制是一致的）&lt;/p&gt;

&lt;h2 id=&quot;22-tcmalloc&quot;&gt;2.2 Tcmalloc&lt;/h2&gt;
&lt;p&gt;Go语言的内存分配最早是基于Tcmalloc的，但后来分化出来做了点定制。毕竟Go语言有其自身的目标，不可能全盘照搬Tcmalloc。有精力的其实可以好好看看Tcmalloc，一样可以帮助理解Go语言内存分配。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;// This was originally based on tcmalloc, but has diverged quite a bit.  &lt;br /&gt;
  // http://goog-perftools.sourceforge.net/doc/tcmalloc.html&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;相关的分析之类的资料在最下面的&lt;a href=&quot;#ID_APP_LINKS&quot;&gt;资料章节&lt;/a&gt;里有，有兴趣的可以自行查看。&lt;/p&gt;

&lt;h2 id=&quot;23-源码理解&quot;&gt;2.3 源码理解&lt;/h2&gt;
&lt;p&gt;与Node.js开发组不同，Golang的维护者对于信息的整理和公布做的实在是一般，很少有高质量的官方博客对底层及一系列的系统进行对应的说明（不是长篇wiki就是一些简单的slide+视频）。所以要挖Golang的很多底层设计，就有必要深度阅读Golang的官方源代码。内存这块也是一样，因时间成本的原因，我主要是找了一些网上现成的博文进行阅读。主要有以下两篇，讲解得非常到位，正好国内国外各一篇：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://yq.aliyun.com/blog/573819&quot; target=&quot;_blank&quot;&gt;Golang源码探索(三) GC的实现原理&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;基于Go &lt;code&gt;1.9.2版本&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;完整讲解了Go是如何分配内存的，有自制的图解，附带代码以及注释解释&lt;/li&gt;
      &lt;li&gt;更偏向于系统分析和程序性的讲解，对读者相对不太友好&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://povilasv.me/go-memory-management/&quot; target=&quot;_blank&quot;&gt;Go Memory Management&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;无版本信息，博客时间为&lt;code&gt;2018-06-06&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;从基础的示例开始讲起，对读者友好&lt;/li&gt;
      &lt;li&gt;会在讲解中穿插基础的概念解释，容易阅读理解&lt;/li&gt;
      &lt;li&gt;包含了巨量的操作系统和内存系统相关的基本概念和设计思路&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;上述两篇博客建议从英语的开始看起，甚至只看英语那篇也是可以的。此外，因版本关系中文那篇提到的512G最大堆内存容量限制已经在&lt;code&gt;1.11版本&lt;/code&gt;中被取消了，具体可以查看：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/golang/go/issues/10460&quot; target=&quot;_blank&quot;&gt;runtime: 512GB memory limitation #10460&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/golang/go/commit/2b415549b813ba36caafa34fc34d72e47ee8335c&quot; target=&quot;_blank&quot;&gt;runtime: use sparse mappings for the heap&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;下面会将内存分配相关的核心要点做摘录，长篇详细的，上面的博客里都有。&lt;/p&gt;

&lt;h3 id=&quot;231-主要源码&quot;&gt;2.3.1 主要源码&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/golang/go/blob/go1.12/src/runtime/malloc.go&quot; target=&quot;_blank&quot;&gt;go/src/runtime/malloc.go&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;最重要看下代码头部的&lt;a href=&quot;#ID_APP_MALLOC&quot;&gt;注释&lt;/a&gt;，包含了太多重要的信息&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/golang/go/blob/go1.12/src/runtime/sizeclasses.go&quot; target=&quot;_blank&quot;&gt;go/src/runtime/sizeclasses.go&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;span大小定义文件&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;232-概念&quot;&gt;2.3.2 概念&lt;/h3&gt;
&lt;h4 id=&quot;堆内存上限&quot;&gt;堆内存上限&lt;/h4&gt;
&lt;p&gt;已取消限制，见上文的链接。在最后有上限的一个版本里，堆内存的极限是&lt;code&gt;512 GB&lt;/code&gt;。&lt;/p&gt;

&lt;h4 id=&quot;page&quot;&gt;Page&lt;/h4&gt;
&lt;p&gt;用来实际分配的内存块，一个Page的容量是&lt;code&gt;8 KB&lt;/code&gt;。&lt;/p&gt;

&lt;h4 id=&quot;逃逸分析&quot;&gt;逃逸分析&lt;/h4&gt;
&lt;p&gt;对于手动管理内存的语言，比如 C/C++，我们使用 malloc 或者 new 申请的变量会被分配到堆上。但是 Golang 并不是这样，虽然 Golang 语言里面也有 new。Golang 编译器决定变量应该分配到什么地方时会进行逃逸分析。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-go&quot; data-lang=&quot;go&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;main&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;&lt;/span&gt;$ go run -gcflags &lt;span class=&quot;s1&quot;&gt;&amp;#39;-m -l&amp;#39;&lt;/span&gt; escape.go
./escape.go:6: moved to heap: x
./escape.go:7: &lt;span class=&quot;p&quot;&gt;&amp;amp;&lt;/span&gt;x escape to heap
./escape.go:11: bar new&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;int&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; does not escape&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;foo() 中的 x 最后在堆上分配，而 bar() 中的 x 最后分配在了栈上。&lt;/p&gt;

&lt;p&gt;资料：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/27807169&quot; target=&quot;_blank&quot;&gt;Golang 内存管理&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://golang.org/doc/faq#stack_or_heap&quot; target=&quot;_blank&quot;&gt;How do I know whether a variable is allocated on the heap or the stack?&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/golang/go/wiki/CompilerOptimizations#escape-analysis-and-inlining&quot; target=&quot;_blank&quot;&gt;Escape analysis and Inlining&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;233-内存分块&quot;&gt;2.3.3 内存分块&lt;/h3&gt;
&lt;p&gt;go在程序启动时会分配一块虚拟内存地址是连续的内存, 结构如下：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;arena：arena区域就是我们通常说的&lt;code&gt;heap&lt;/code&gt;，go从heap分配的内存都在这个区域中&lt;/li&gt;
  &lt;li&gt;bitmap：bitmap区域用于表示arena区域中&lt;code&gt;哪些地址保存了对象&lt;/code&gt;, 并且对象中哪些地址包含了指针（&lt;code&gt;为GC服务&lt;/code&gt;）
    &lt;ul&gt;
      &lt;li&gt;bitmap区域中一个byte（8 bit）对应了arena区域中的四个指针大小的内存, 也就是2 bit对应一个指针大小的内存&lt;/li&gt;
      &lt;li&gt;所以bitmap区域的大小是 n GB / 指针大小（8 byte）/ 4 = x GB&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;spans：spans区域用于表示arena区中的&lt;code&gt;某一页（Page）属于哪个span&lt;/code&gt;
    &lt;ul&gt;
      &lt;li&gt;spans区域中一个指针（8 byte）对应了arena区域中的某一页（8KB）&lt;/li&gt;
      &lt;li&gt;所以spans的大小是 n GB / Page（8 KB）* 指针大小（8 byte）= x MB&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;简单来说：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;arena是真正存储数据的，也就是堆内存&lt;/li&gt;
  &lt;li&gt;bitmap是用来维护内存地址使用情况的，主要为GC服务，以便快速扫描回收（这是堆的，栈有专门的类似功能的区块）&lt;/li&gt;
  &lt;li&gt;spans是管理实际用来分配的内存块（span）的管理空间&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;234-对象尺寸分级&quot;&gt;2.3.4 对象尺寸分级&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Tiny级别：对象大小小于16 byte；这句解释其实有点问题，这里的tiny其实应该是非常小的对象，比如说2 byte之类的，会聚合成为16 byte放到class 2的span中&lt;/li&gt;
  &lt;li&gt;Small级别：对象大小小于等于32 KB&lt;/li&gt;
  &lt;li&gt;Large级别：剩余的其他对象大小&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;关于Tiny的设计目的：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;// The main targets of tiny allocator are small strings and  &lt;br /&gt;
  // standalone escaping variables. On a json benchmark  &lt;br /&gt;
  // the allocator reduces number of allocations by ~12% and  &lt;br /&gt;
  // reduces heap size by ~20%.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;235-防碎片设计&quot;&gt;2.3.5 防碎片设计&lt;/h3&gt;
&lt;p&gt;如果内存分配器按需求随意从内存中进行对象的创建（占用）和销毁（释放），最后就会产生大量的内存碎片。因此常见的（也是Go使用的）防碎片方法是一开始就按对象的尺寸划分好一个个的内存单元，然后按实际的对象大小，放到对应的内存单元里。可以想象是银行的一整排保险柜，把东西放到保险柜的抽屉里。这样做的好处是可以防止内存碎片的大量发生，坏处是必然会产生内存浪费（想象下刚才举的例子，放进去的东西必然不可能完全占满一个抽屉，整个保险柜里的空间并不是100%被占满）。&lt;/p&gt;

&lt;p&gt;这里有一点需要注意，防碎片设计&lt;code&gt;只&lt;/code&gt;针对&lt;code&gt;Small级别&lt;/code&gt;的对象：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Tiny对象是聚合在一起，然后固定分配在16 byte的class 2 span中&lt;/li&gt;
  &lt;li&gt;Large对象则是一个对象一个span，span大小占多少个Page则取决于这个Large对象的大小&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Go的内存分配器对&lt;code&gt;span&lt;/code&gt;按大小做了分级，可以查看&lt;a href=&quot;https://github.com/golang/go/blob/go1.12/src/runtime/sizeclasses.go&quot; target=&quot;_blank&quot;&gt;源代码&lt;/a&gt;来获得一个直观的认识。&lt;/p&gt;

&lt;p&gt;这里有几个字段：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;class：span的分级id&lt;/li&gt;
  &lt;li&gt;bytes/obj：这个class的span里可以存放的对象的大小的上限
    &lt;ul&gt;
      &lt;li&gt;即，这个class的span可以存放的对象为：上一级span大小上限 + 1 &amp;lt;= 对象大小 &amp;lt;= 当前span大小上限&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;bytes/span：最低占用一个Page，即8 KB（8192 bytes），上涨都是按Page倍数来&lt;/li&gt;
  &lt;li&gt;objects：这个class的span一个可存放的对象数量上限
    &lt;ul&gt;
      &lt;li&gt;公式：bytes/span / bytes/obj&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;tail waste：在span中对象满载的情况下，因对象数量无法被整除而浪费的内存
    &lt;ul&gt;
      &lt;li&gt;公式：(bytes/span / bytes/obj - objects) * bytes/obj&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;max waste：最大内存浪费情况，每一个放进该span的对象大小都是最小值的情况，浪费的内存量
    &lt;ul&gt;
      &lt;li&gt;公式：1 -（上一级span的bytes/obj + 1）* objects / bytes/span&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;举个例子：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;class  bytes/obj  bytes/span  objects  tail waste  max waste
  ...
    3         32        8192      256           0     46.88%
    4         48        8192      170          32     31.52%
  ...
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
  &lt;li&gt;class：4，4号span分级&lt;/li&gt;
  &lt;li&gt;bytes/obj：48，该span内的对象大小为，33 byte -&amp;gt; 48 byte&lt;/li&gt;
  &lt;li&gt;bytes/span：8192，一个Page&lt;/li&gt;
  &lt;li&gt;objects：8192 / 48&lt;/li&gt;
  &lt;li&gt;tail waste：(8192 / 48 - 170) * 48 = 32 byte&lt;/li&gt;
  &lt;li&gt;max waste：1 - 33 * 170 / 8192 = 0.31518&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;P.S&lt;/p&gt;

&lt;p&gt;源码中的class id从1到66，但还有一个0号span，这个class的span代表里面存放的是Large级别的对象，也就是超过32 KB尺寸的对象。所有span的class分类一共是67种。&lt;/p&gt;

&lt;h3 id=&quot;236-内存申请管线设计&quot;&gt;2.3.6 内存申请管线设计&lt;/h3&gt;
&lt;p&gt;这个title是我自己起的，感觉还算贴切。&lt;/p&gt;

&lt;p&gt;Go语言的内存分配，并不是由单一的一个中央分配器进行控制的，而是由多个层级进行管理。最关键的是根据&lt;a href=&quot;https://studygolang.com/articles/11627&quot; target=&quot;_blank&quot;&gt;GMP&lt;/a&gt;的设计，在P这一层有单独的内存分配及缓存管理器。这么做的好处就是在P这一级，如果有缓存着的spans可以分配，那么这个内存申请行为就是完全无锁的，对性能的损耗就非常小了。关于这个分级缓存的概念，可以查看&lt;a href=&quot;https://github.com/golang/go/blob/go1.12/src/runtime/malloc.go&quot; target=&quot;_blank&quot;&gt;malloc.go&lt;/a&gt;代码头部的注释。&lt;/p&gt;

&lt;p&gt;仍旧需要注意，这一套机制只服务于Tiny（其实就是Small）、Small级别的对象：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Large对象则会跳过下面的所有层级，直接到mheap这一层分配&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;//	mheap: the malloc heap, managed at page (8192-byte) granularity.  &lt;br /&gt;
  //	mspan: a run of pages managed by the mheap.  &lt;br /&gt;
  //	mcentral: collects all spans of a given size class.  &lt;br /&gt;
  //	mcache: a per-P cache of mspans with free space.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;mheap：顶层的分配器，下面所有的申请都OOM之后就会走到这里，然后它检查自身的内存空间，如果还是没有足以满足这次分配需求的量，则向操作系统申请&lt;/li&gt;
  &lt;li&gt;mcentral：会根据之前提到过的Small对象分级，对其内部管理的spans进行同样的分级，申请过来的时候按对应的分级进行检索。本质上来说，它和mheap其实是同一层，只是处理的工作不同，mcentral处理的是Tiny、Small对象的申请（分级span），而mheap则是处理mcentral内存不足的时候过来的申请以及所有Large对象的申请&lt;/li&gt;
  &lt;li&gt;mcache：P层的spans分配管理，如果能在这一层直接解决申请和分配，则不需要加锁&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;237-按对象尺寸不同的分配行为&quot;&gt;2.3.7 按对象尺寸不同的分配行为&lt;/h3&gt;
&lt;p&gt;根据之前提到过的Tiny、Small、Large三种对象大小分类，在对其申请内存空间的时候的行为也是不一样的。&lt;/p&gt;

&lt;h4 id=&quot;2371-tiny&quot;&gt;2.3.7.1 Tiny&lt;/h4&gt;
&lt;p&gt;Tiny对象的分配有其特殊性：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Small对象：一个span内会包含多个Small对象，根据span的class分级不同，其内部可容纳的Small对象数量上限也不同&lt;/li&gt;
  &lt;li&gt;Large对象：一个span内只会包含一个Large对象&lt;/li&gt;
  &lt;li&gt;Tiny对象：多个Tiny对象会被&lt;code&gt;合并&lt;/code&gt;起来，作为&lt;code&gt;一个&lt;/code&gt;单独的对象（可以理解为组合成Small对象），放到class 2分级span中（和Small对象一样的处理）&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;根据官方的注释，存放Tiny对象的span现在默认是class为2的span分级，也就是16 byte一个对象的内存空间。这样做可以让尽量多的Tiny对象组合起来存放到一起，当然会造一定量的内存浪费（有可能）。如果使用8 byte的span，就不会浪费任何内存，但Tiny对象的合并机会就会少。而如果使用32 byte的span，可以有更多的Tiny对象合并机会，但最差情况下的内存浪费也会大很多。&lt;/p&gt;

&lt;p&gt;这部分的内容，可以查看malloc.go代码关于Tiny allocator部分的注释：&lt;a href=&quot;https://github.com/golang/go/blob/go1.12/src/runtime/malloc.go#L864&quot; target=&quot;_blank&quot;&gt;malloc.go&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;分配行为：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;在当前P的mcache里寻找可用的Tiny对象存储插槽（slot）对象&lt;/li&gt;
  &lt;li&gt;根据这个存储位里已经存在的（如果有的话）其他Tiny对象，将当前对象尺寸取整为8、4、2 byte（为合并做准备）&lt;/li&gt;
  &lt;li&gt;如果尺寸合适（能合并进去），则进行合并，并放到存储位里&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;如果合并不进去：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;查找当前P的mcache里有没有其他mspan&lt;/li&gt;
  &lt;li&gt;从mcache获取一个新的mspan&lt;/li&gt;
  &lt;li&gt;扫描mspan的空闲bitmap来找到一个空闲的插槽（slot）&lt;/li&gt;
  &lt;li&gt;如果有空闲的插槽（slot），申请这个位置，并将其作为一个新的Tiny对象插槽（slot）&lt;/li&gt;
  &lt;li&gt;以上行为皆无锁&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;如果mspan没有空闲的插槽（slot）：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;从mcentral申请一个新的mspan，mspan分级必须符合当前放置Tiny对象的mspan，并且有空闲的空间&lt;/li&gt;
  &lt;li&gt;这个操作需要对mcentral加锁&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;如果没有mspan：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;从mheap申请mspan&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;如果mheap没有足够的空间：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;从OS申请一组Page（至少1 MB）&lt;/li&gt;
  &lt;li&gt;这个操作需要付出系统操作的代价&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;2372-small&quot;&gt;2.3.7.2 Small&lt;/h4&gt;
&lt;p&gt;分配行为：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;根据对象大小确定span的分级&lt;/li&gt;
  &lt;li&gt;在P的mcache里寻找可用的mspan&lt;/li&gt;
  &lt;li&gt;扫描mspan的空闲bitmap来查找是否有空闲的插槽（slot）&lt;/li&gt;
  &lt;li&gt;如果有的话，就分配这个内存&lt;/li&gt;
  &lt;li&gt;以上行为皆无锁&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;如果mspan没有空闲的插槽（slot）：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;从mcentral申请一个新的mspan，mspan分级必须符合当前放置Tiny对象的mspan，并且有空闲的空间&lt;/li&gt;
  &lt;li&gt;这个操作需要对mcentral加锁&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;如果没有mspan：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;从mheap申请mspan&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;如果mheap没有足够的空间：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;从OS申请一组Page（至少1 MB）&lt;/li&gt;
  &lt;li&gt;这个操作需要付出系统操作的代价&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;2373-large&quot;&gt;2.3.7.3 Large&lt;/h4&gt;
&lt;p&gt;Large对象的分配会直接使用mheap，跳过mcentral和mcache。如果没有足够的空间，则直接向OS申请。&lt;/p&gt;

&lt;h1 id=&quot;3-垃圾回收&quot;&gt;3. 垃圾回收&lt;/h1&gt;
&lt;p&gt;垃圾回收的知识点其实非常简单，软件工程业界在垃圾回收这个话题上其实是有几篇非常重要的算法的，一般的垃圾回收都是按照这些论文和算法进行实施，当然具体的细节处理上，各语言都有各自的应对方法。因此只要理解过一两个语言的垃圾回收机制，基本上问题就不大了，其他都是大同小异。&lt;/p&gt;

&lt;p&gt;Node.js这块我曾经写过：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;/2018/01/node-memory/&quot; target=&quot;_blank&quot;&gt;Node.JS Profile 1.1 V8内存机制&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/2018/01/node-v8-gc/&quot; target=&quot;_blank&quot;&gt;Node.JS Profile 1.2 V8 GC详解&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;基本上也算是很清晰了。&lt;/p&gt;

&lt;p&gt;Go语言GC比较好的分析文章可以阅读：&lt;a href=&quot;https://making.pusher.com/golangs-real-time-gc-in-theory-and-practice/&quot; target=&quot;_blank&quot;&gt;Golang’s Real-time GC in Theory and Practice&lt;/a&gt;。需要了解更多GC细节的，推荐继续阅读：&lt;a href=&quot;https://yq.aliyun.com/blog/573819&quot;&gt;Golang源码探索(三) GC的实现原理#回收对象的处理&lt;/a&gt;从&lt;code&gt;回收对象的处理&lt;/code&gt;标题开始的后续内容（这篇文章没有标题锚链接，给不出链接，只能打开页面后搜索标题）。&lt;/p&gt;

&lt;p&gt;Go语言的GC发展到最近的版本，GC也已经是并行GC实现了，Go的GC相当的目标明确：&lt;code&gt;减少停顿时间&lt;/code&gt;。STW越短，runtime对于应用程序的响应就响应越长，就可以显著缩短程序的延迟，并增加程序的吞吐量。&lt;/p&gt;

&lt;h2 id=&quot;31-版本历史--演进&quot;&gt;3.1 版本历史 &amp;amp; 演进&lt;/h2&gt;
&lt;p&gt;Go语言的GC在早期的几个版本里做的也并不是非常好，回顾整个发展历史可以让读者对于GC的功能及核心瓶颈要点有一个认识。相关内容可以通过阅读以下几篇来得到认识，这方面基本上看看就好，不用太较真。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://blog.golang.org/ismmkeynote&quot; target=&quot;_blank&quot;&gt;Getting to Go: The Journey of Go’s Garbage Collector&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://talks.golang.org/2015/go-gc.pdf&quot; target=&quot;_blank&quot;&gt;Go GC: Latency Problem Solved&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://making.pusher.com/golangs-real-time-gc-in-theory-and-practice/&quot; target=&quot;_blank&quot;&gt;Golang’s Real-time GC in Theory and Practice&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;32-垃圾回收要点&quot;&gt;3.2 垃圾回收要点&lt;/h2&gt;
&lt;p&gt;理论的东西之后就是比较关键的实践和影响实践的一些关键要点了，接下来可以慢慢过一下。&lt;/p&gt;

&lt;h3 id=&quot;321-gc触发条件&quot;&gt;3.2.1 GC触发条件&lt;/h3&gt;
&lt;p&gt;触发条件有以下几种:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;gcTriggerHeap: 当前分配的内存达到一定值就触发GC&lt;/li&gt;
  &lt;li&gt;gcTriggerTime: 当一定时间没有执行过GC就触发GC&lt;/li&gt;
  &lt;li&gt;gcTriggerCycle: 要求启动新一轮的GC, 已启动则跳过, 手动触发GC的runtime.GC()会使用这个条件&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;3211-gctriggerheap&quot;&gt;3.2.1.1 gcTriggerHeap&lt;/h4&gt;
&lt;p&gt;定义可见：&lt;a href=&quot;https://github.com/golang/go/blob/go1.12/src/runtime/mgc.go#L1147&quot; target=&quot;_blank&quot;&gt;mgc.go#gcTriggerHeap&lt;/a&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-go&quot; data-lang=&quot;go&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;// gcTriggerHeap indicates that a cycle should be started when&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// the heap size reaches the trigger heap size computed by the&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// controller.&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;gcTriggerHeap&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;该触发条件为：&lt;a href=&quot;https://github.com/golang/go/blob/go1.12/src/runtime/mgc.go#L1174&quot; target=&quot;_blank&quot;&gt;mgc.go#test()&lt;/a&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-go&quot; data-lang=&quot;go&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;// Non-atomic access to heap_live for performance. If&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// we are going to trigger on this, this thread just&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// atomically wrote heap_live anyway and we&amp;#39;ll see our&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// own write.&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;memstats&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;heap_live&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;memstats&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;gc_trigger&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;code&gt;memstats&lt;/code&gt;在下文Profile里会&lt;a href=&quot;#ID_MEMSTATS&quot;&gt;提到&lt;/a&gt;，这里先不展开。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/golang/go/blob/go1.12/src/runtime/mstats.go#L126&quot; target=&quot;_blank&quot;&gt;mstats.go#heap_live&lt;/a&gt;：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-go&quot; data-lang=&quot;go&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;// heap_live is the number of bytes considered live by the GC.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// ...&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;heap_live&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;uint64&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;附带提一个&lt;a href=&quot;https://github.com/golang/go/blob/go1.12/src/runtime/mstats.go#L139&quot; target=&quot;_blank&quot;&gt;mstats.go#heap_marked&lt;/a&gt;，后面会用到：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-go&quot; data-lang=&quot;go&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;// heap_marked is the number of bytes marked by the previous&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// GC. After mark termination, heap_live == heap_marked, but&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// ...&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;heap_marked&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;uint64&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/golang/go/blob/go1.12/src/runtime/mstats.go#L100&quot; target=&quot;_blank&quot;&gt;mstats.go#gc_trigger&lt;/a&gt;：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-go&quot; data-lang=&quot;go&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;// gc_trigger is the heap size that triggers marking.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// ...&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;gc_trigger&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;uint64&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;code&gt;gc_trigger&lt;/code&gt;是一个浮动值，根据runtime的状态时时变化的，其计算如下：&lt;a href=&quot;https://github.com/golang/go/blob/go1.12/src/runtime/mgc.go#L563&quot; target=&quot;_blank&quot;&gt;mgc.go#endCycle()&lt;/a&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-go&quot; data-lang=&quot;go&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;// 常量，用来调整后续的触发偏移值&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;triggerGain&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.5&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// 目标增长率，gcpercent来自于环境变量GOGC&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// GOGC是一个1-100的数字，如果没有这个环境变量的话，默认是100，即目标增长率为1&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 如果GOGC是off，则值为-1&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;goalGrowthRatio&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;float64&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;gcpercent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 实际增长率，（当前存活的量 / 上一次GC标记存活的量）- 1&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;actualGrowthRatio&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;float64&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;memstats&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;heap_live&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;float64&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;memstats&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;heap_marked&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// GC标记阶段的耗时（因为endCycle是在Mark Termination阶段调用的）&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;assistDuration&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;nanotime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;markStartTime&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// GC标记阶段的CPU占用率, 目标值gcBackgroundUtilization是一个常量0.25&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;utilization&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;gcBackgroundUtilization&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// assistTime是G辅助GC标记对象所使用的时间合计 (nanosecnds spent in mutator assists during this cycle)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;assistDuration&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// 额外的CPU占用率 = 辅助GC标记对象的总时间 / (GC标记使用时间 * P的数量)&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;utilization&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;float64&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;assistTime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;float64&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;assistDuration&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;int64&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;gomaxprocs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// 触发系数偏移值 = 目标增长率 - 原触发系数 - CPU占用率 / 目标CPU占用率 * (实际增长率 - 原触发系数)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 参数的分析:&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//     实际增长率越大, 触发系数偏移值越小, 小于0时下次触发GC会提早&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//     CPU占用率越大, 触发系数偏移值越小, 小于0时下次触发GC会提早&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//     原触发系数越大, 触发系数偏移值越小, 小于0时下次触发GC会提早&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;triggerError&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;goalGrowthRatio&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;memstats&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;triggerRatio&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;utilization&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;gcGoalUtilization&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;actualGrowthRatio&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;memstats&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;triggerRatio&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// 根据偏移值调整触发系数, 每次只调整偏移值的一半（渐进式调整）&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;triggerRatio&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;memstats&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;triggerRatio&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;triggerGain&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;triggerError&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;GOGC&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;公式中的&lt;code&gt;目标增长率&lt;/code&gt;源于环境变量&lt;code&gt;GOGC&lt;/code&gt;，取值范围1-100，如果没有设置的话默认为100，增加它的值可以减少GC的触发。设置&lt;code&gt;GOGC=off&lt;/code&gt;可以关闭GC。&lt;/p&gt;

&lt;p&gt;见：&lt;a href=&quot;https://golang.org/pkg/runtime/#hdr-Environment_Variables&quot; target=&quot;_blank&quot;&gt;Environment Variables#GOGC&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;The GOGC variable sets the initial garbage collection target percentage. A collection is triggered when the ratio of freshly allocated data to live data remaining after the previous collection reaches this percentage. The default is GOGC=100. Setting GOGC=off disables the garbage collector entirely. The runtime/debug package’s SetGCPercent function allows changing this percentage at run time. See &lt;a href=&quot;https://golang.org/pkg/runtime/debug/#SetGCPercent&quot; target=&quot;_blank&quot;&gt;https://golang.org/pkg/runtime/debug/#SetGCPercent&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;3212-gctriggertime&quot;&gt;3.2.1.2 gcTriggerTime&lt;/h4&gt;
&lt;p&gt;定义可见：&lt;a href=&quot;https://github.com/golang/go/blob/go1.12/src/runtime/mgc.go#L1152&quot; target=&quot;_blank&quot;&gt;mgc.go#gcTriggerTime&lt;/a&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-go&quot; data-lang=&quot;go&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;// gcTriggerTime indicates that a cycle should be started when&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// it&amp;#39;s been more than forcegcperiod nanoseconds since the&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// previous GC cycle.&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;gcTriggerTime&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;该触发条件为：&lt;a href=&quot;https://github.com/golang/go/blob/go1.12/src/runtime/mgc.go#L1180&quot; target=&quot;_blank&quot;&gt;mgc.go#test()&lt;/a&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-go&quot; data-lang=&quot;go&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;lastgc&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int64&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;atomic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Load64&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;memstats&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;last_gc_nanotime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// var forcegcperiod int64 = 2 * 60 * 1e9，即两分钟&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;lastgc&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;now&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;lastgc&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;forcegcperiod&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;如果2分钟内没有执行过GC就会强制触发。&lt;/p&gt;

&lt;h4 id=&quot;3213-gctriggercycle&quot;&gt;3.2.1.3 gcTriggerCycle&lt;/h4&gt;
&lt;p&gt;定义可见：&lt;a href=&quot;https://github.com/golang/go/blob/go1.12/src/runtime/mgc.go#L1157&quot; target=&quot;_blank&quot;&gt;mgc.go#gcTriggerCycle&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;手动调用&lt;code&gt;runtime.GC()&lt;/code&gt;进行触发：&lt;a href=&quot;https://github.com/golang/go/blob/go1.12/src/runtime/mgc.go#L1022&quot; target=&quot;_blank&quot;&gt;mgc.go#GC()&lt;/a&gt;。&lt;/p&gt;

&lt;h2 id=&quot;33-其他概念&quot;&gt;3.3 其他概念&lt;/h2&gt;
&lt;p&gt;其他GC相关的细节及概念可以参见之前提到的中文博客，这里就不展开了。基本上GC的逻辑和里面的概念都大同小异。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;三色的定义（黑、灰、白）&lt;/li&gt;
  &lt;li&gt;写屏障（Write Barrier）&lt;/li&gt;
  &lt;li&gt;辅助GC（mutator assist）&lt;/li&gt;
  &lt;li&gt;根对象&lt;/li&gt;
  &lt;li&gt;标记队列&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;ID_PROFILE&quot;&gt;5. Profile&lt;/h1&gt;
&lt;p&gt;Go语言官方提供的Profile相关工具相当的丰富，能从各种角度和层面满足开发者的需求，因此在我们整理这块知识点的时候，也需要横向全部了解下，方便后续根据不同的应用场景选用对应的技术。&lt;/p&gt;

&lt;p&gt;可选用的Profile技术/工具有：&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;工具&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;是否实时&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;应用场景&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;是否侵入&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;时效&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;说明&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;a href=&quot;#ID_PROF_READMEMSTATS&quot;&gt;ReadMemStats&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;实时&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;指标监控&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;是&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;时间点&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;调用接口，将内存相关统计信息读入到一个对象内，可自由使用该对象内的统计数据&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;a href=&quot;#ID_PROF_PPROF&quot;&gt;pprof&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;离线&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;事后分析&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;是&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;时间点&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;- 在代码中调用接口输出内存profile&lt;br /&gt;- 输出的数据可以通过专门的工具事后分析&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;a href=&quot;#ID_PROF_PPROF_WEB&quot;&gt;pprof web&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;实时&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;在线调试&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;是&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;时间点&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;在代码中嵌入pprof的HTTP相关代码，然后可以：&lt;br /&gt;- 在浏览器中的对应endpoint获得到对应的profile信息&lt;br /&gt;- 在专门的工具中指向HTTP的endpoint，获得实时的分析结果&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;a href=&quot;#ID_PROF_TRACE&quot;&gt;trace&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;离线&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;事后分析&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;是&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;时间段&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;- 在代码中开启trace以及关闭trace，输出数据&lt;br /&gt;- 输出的数据可以通过专门工具事后分析查看&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;a href=&quot;#ID_PORF_DEBUG&quot;&gt;GODEBUG&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;实时&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;在线调试&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;否&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;时间点&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;- 对应用程序无侵入，在启动时带上全局变量即可&lt;br /&gt;- 信息会实时输出在stderr&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;备注：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;是否实时：
    &lt;ul&gt;
      &lt;li&gt;实时：可在应用程序活动的同时，对应用程序进行观测&lt;/li&gt;
      &lt;li&gt;离线：在应用程序活动时收集数据，产生对应的数据文件，事后（和应用程序不同步）对数据进行解析并观测&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;是否侵入：对应用程序是否有侵入，是否需要修改源代码&lt;/li&gt;
  &lt;li&gt;时效：该工具获得到的数据是一个时间点上的数据，还是一个时间段内的数据，对于不同的应用场景来说，这点很重要&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;P.S&lt;/p&gt;

&lt;p&gt;几篇推荐：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;综合Profiling经验博文：&lt;a href=&quot;https://artem.krylysov.com/blog/2017/03/13/profiling-and-optimizing-go-web-applications/&quot; target=&quot;_blank&quot;&gt;Profiling and optimizing Go web applications&lt;/a&gt;。写得很好，基本上该覆盖的面都有涉及，通读一遍对于如何检验性能问题，以及一般性的优化经验很有帮助。&lt;/li&gt;
  &lt;li&gt;阿里的一篇内存profiling &amp;amp; debugging文章，也很有帮助：&lt;a href=&quot;https://yq.aliyun.com/articles/573743&quot; target=&quot;_blank&quot;&gt;记一次Golang内存分析——基于go pprof&lt;/a&gt;。&lt;/li&gt;
  &lt;li&gt;对于交互命令中的一些细节解释得比较清楚：&lt;a href=&quot;http://wudaijun.com/2018/04/go-pprof/&quot; target=&quot;_blank&quot;&gt;go pprof 性能分析&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;火焰图可以看下这篇：&lt;a href=&quot;http://cizixs.com/2017/09/11/profiling-golang-program/&quot; target=&quot;_blank&quot;&gt;使用 pprof 和火焰图调试 golang 应用&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;51-metrics&quot;&gt;5.1 Metrics&lt;/h2&gt;
&lt;p&gt;在使用接口&lt;code&gt;runtime.ReadMemStats&lt;/code&gt;获得对应的内存统计状态的时候，我们会拿到对应的数据对象&lt;code&gt;MemStats&lt;/code&gt;，对于这个数据对象的理解是必要的。&lt;/p&gt;

&lt;p&gt;在源码中，对于内存相关的数据统计有两个struct。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-go&quot; data-lang=&quot;go&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;// Statistics.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// If you edit this structure, also edit type MemStats below.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// Their layouts must match exactly.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// For detailed descriptions see the documentation for MemStats.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// Fields that differ from MemStats are further documented here.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// Many of these fields are updated on the fly, while others are only&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// updated when updatememstats is called.&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mstats&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// A MemStats records statistics about the memory allocator.&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;MemStats&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;关于&lt;code&gt;memstats&lt;/code&gt;与&lt;code&gt;MemStats&lt;/code&gt;的区别，第一次读代码的人肯定会有困惑：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;它们都是定义在同一个源码文件中&lt;/li&gt;
  &lt;li&gt;字段基本一致（命名有点不同，以及memstats稍微多了几个字段，例如&lt;code&gt;heap_live&lt;/code&gt;、&lt;code&gt;heap_marked&lt;/code&gt;）&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;只要理解了Go语言的命名规范就不会迷惑了，大写的是对外暴露的，小写的是不对外暴露的，而且获取统计数据的接口&lt;code&gt;runtime.ReadMemStats&lt;/code&gt;给出的数据类型是&lt;code&gt;MemStats&lt;/code&gt;。因此，&lt;code&gt;MemStats&lt;/code&gt;是提供外部使用者观测统计数据的类型，而&lt;code&gt;memstats&lt;/code&gt;则是在Go内部运行使用的类型。一般来说，作为开发者，只需要阅读&lt;code&gt;MemStats&lt;/code&gt;的注释，理解这个对象即可。&lt;/p&gt;

&lt;h3 id=&quot;ID_MEMSTATS_EXPORT&quot;&gt;MemStats&lt;/h3&gt;
&lt;p&gt;这个结构体会在下面做一个简单翻译，需要完整注释及理解的，请查阅源码：&lt;a href=&quot;https://github.com/golang/go/blob/go1.12/src/runtime/mstats.go#L145&quot; target=&quot;_blank&quot;&gt;go/src/runtime/mstats.go#MemStats@1.12&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;翻译内容因为过长，放在下面的&lt;a href=&quot;#ID_APP_MEMSTATS&quot;&gt;资料&lt;/a&gt;部分里。&lt;/p&gt;

&lt;p&gt;行文中就列出比较常用的Metrics，方便阅览：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Alloc
    &lt;ul&gt;
      &lt;li&gt;堆内存大小（bytes）&lt;/li&gt;
      &lt;li&gt;注意该值和HeapAlloc一致，因此HeapAlloc就不需要了&lt;/li&gt;
      &lt;li&gt;需要观察平滑度&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;(TotalAlloc.now - TotalAlloc.prev) / CollectInterval
    &lt;ul&gt;
      &lt;li&gt;采样间隔期间内存增长量（bytes）&lt;/li&gt;
      &lt;li&gt;该数值需要采样后自行计算，稍微麻烦点&lt;/li&gt;
      &lt;li&gt;需要观察平滑度&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Mallocs - Frees
    &lt;ul&gt;
      &lt;li&gt;存活的堆内存对象数量&lt;/li&gt;
      &lt;li&gt;需要观察平滑度&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;NextGC
    &lt;ul&gt;
      &lt;li&gt;下一次GC的触发堆内存容量&lt;/li&gt;
      &lt;li&gt;需要观察平滑度&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;(PauseTotalNs.now - PauseTotalNs.prev) / CollectInterval
    &lt;ul&gt;
      &lt;li&gt;采样间隔期间GC暂停时长&lt;/li&gt;
      &lt;li&gt;该数值需要采样后自行计算，稍微麻烦点&lt;/li&gt;
      &lt;li&gt;需要观察平滑度&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;(NumGC.now - NumGC.prev) / CollectInterval
    &lt;ul&gt;
      &lt;li&gt;采样间隔期间GC次数&lt;/li&gt;
      &lt;li&gt;该数值需要采样后自行计算，稍微麻烦点&lt;/li&gt;
      &lt;li&gt;需要观察平滑度&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;BySize
    &lt;ul&gt;
      &lt;li&gt;这项可选，如果对应用程序中小于32K的对象的分布敏感的话，可以做一下监控&lt;/li&gt;
      &lt;li&gt;Size标识span的大小&lt;/li&gt;
      &lt;li&gt;Mallocs - Frees计算span中存活的对象个数&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;ID_MEMSTATS&quot;&gt;memstats&lt;/h3&gt;
&lt;p&gt;大部分的数据同：&lt;a href=&quot;#ID_MEMSTATS_EXPORT&quot;&gt;MemStats&lt;/a&gt;，不同的是&lt;code&gt;// Statistics below here are not exported to MemStats directly.&lt;/code&gt;以下的部分没有暴露出来：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-go&quot; data-lang=&quot;go&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;// Statistics below here are not exported to MemStats directly.&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;有需要可以直接阅读&lt;a href=&quot;https://github.com/golang/go/blob/go1.12/src/runtime/mstats.go#L78&quot; target=&quot;_blank&quot;&gt;go/src/runtime/mstats.go#memstats@1.12&lt;/a&gt;中的字段和注释。&lt;/p&gt;

&lt;h3 id=&quot;gcstats&quot;&gt;GCStats&lt;/h3&gt;
&lt;p&gt;如果仅只需要获取GC相关的Metrics，则可以调用接口：&lt;code&gt;debug.ReadGCStats&lt;/code&gt;（&lt;a href=&quot;https://github.com/golang/go/blob/go1.12/src/runtime/debug/garbage.go#L31&quot; target=&quot;_blank&quot;&gt;源码&lt;/a&gt;），获得到的结构是：&lt;a href=&quot;https://github.com/golang/go/blob/go1.12/src/runtime/debug/garbage.go#L14&quot; target=&quot;_blank&quot;&gt;go/src/runtime/debug/garbage.go#GCStats@1.12&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;其相关Metrics在&lt;code&gt;MemStats&lt;/code&gt;里都有，这里就不啰嗦了，直接看上面就好。&lt;/p&gt;

&lt;h2 id=&quot;52-测试用例&quot;&gt;5.2 测试用例&lt;/h2&gt;
&lt;p&gt;测试相关的用例和输出分析都来自：&lt;a href=&quot;https://www.integralist.co.uk/posts/profiling-go&quot; target=&quot;_blank&quot;&gt;Profiling Go&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;测试用例：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-go&quot; data-lang=&quot;go&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;main&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
	&lt;span class=&quot;s&quot;&gt;&amp;quot;log&amp;quot;&lt;/span&gt;
	&lt;span class=&quot;s&quot;&gt;&amp;quot;os&amp;quot;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// bigBytes allocates 10 sets of 100 megabytes&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bigBytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;byte&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;make&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([]&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;byte&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100000000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bigBytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;nil&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Println&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;oh noes&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;53-profile方法&quot;&gt;5.3 Profile方法&lt;/h2&gt;
&lt;h3 id=&quot;ID_PROF_READMEMSTATS&quot;&gt;5.3.1 runtime.ReadMemStats&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;注意：&lt;/strong&gt;在1.9之前的版本中调用&lt;code&gt;runtime.ReadMemStats&lt;/code&gt;读取内存分析会导致比较长的STW，使用代价会比较高，在1.9及之后的版本中使用就非常安全了，STW的耗时仅&lt;code&gt;&amp;lt; 25µs&lt;/code&gt;。见：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/golang/go/issues/13613&quot; target=&quot;_blank&quot;&gt;runtime: cheaper alternative to runtime.ReadMemStats #13613&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/golang/go/commit/4a7cf960c38d72e9f0c6f00e46e013be2a35d56e&quot; target=&quot;_blank&quot;&gt;runtime: make ReadMemStats STW for &amp;lt; 25µs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;特性：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;是否实时：是，实时&lt;/li&gt;
  &lt;li&gt;应用场景：定时指标监控&lt;/li&gt;
  &lt;li&gt;是否侵入：是，需要修改代码&lt;/li&gt;
  &lt;li&gt;时效：时间点&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;使用：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;使用方法直接调用接口就好，非常简单&lt;/li&gt;
  &lt;li&gt;获得的数据如何理解和使用可以参见：&lt;a href=&quot;#ID_MEMSTATS_EXPORT&quot;&gt;MemStats&lt;/a&gt;。&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;ID_PROF_PPROF&quot;&gt;5.3.2 runtime/pprof&lt;/h3&gt;
&lt;p&gt;特性：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;是否实时：否，离线&lt;/li&gt;
  &lt;li&gt;应用场景：事后分析&lt;/li&gt;
  &lt;li&gt;是否侵入：是，需要修改代码&lt;/li&gt;
  &lt;li&gt;时效：时间点&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;使用：&lt;/p&gt;

&lt;p&gt;调用接口&lt;code&gt;pprof.WriteHeapProfile(os.Stdout)&lt;/code&gt;获取一个时间点上的内存状态。&lt;/p&gt;

&lt;p&gt;编译执行：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ go build -o app &amp;amp;&amp;amp; time ./app &amp;gt; memory.profile
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;分析结果：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ go tool pprof memory.profile
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;分析结果总览：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ (pprof) top
Showing nodes accounting for 95.38MB, 100% of 95.38MB total
      flat  flat%   sum%        cum   cum%
   95.38MB   100%   100%    95.38MB   100%  main.bigBytes /...ain.go (inline)
         0     0%   100%    95.38MB   100%  main.main /.../profiling/main.go
         0     0%   100%    95.38MB   100%  runtime.main /.../runtime/proc.go
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;观察函数细节：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ (pprof) list main.
Total: 95.38MB
ROUTINE ======================== main.bigBytes in /.../go/profiling/main.go
   95.38MB    95.38MB (flat, cum)   100% of Total
         .          .      6:   &quot;runtime/pprof&quot;
         .          .      7:)
         .          .      8:
         .          .      9:// bigBytes allocates 10 sets of 100 megabytes
         .          .     10:func bigBytes() *[]byte {
   95.38MB    95.38MB     11:   s := make([]byte, 100000000)
         .          .     12:   return &amp;amp;s
         .          .     13:}
         .          .     14:
         .          .     15:func main() {
         .          .     16:   for i := 0; i &amp;lt; 10; i++ {
ROUTINE ======================== main.main in /.../code/go/profiling/main.go
         0    95.38MB (flat, cum)   100% of Total
         .          .     12:   return &amp;amp;s
         .          .     13:}
         .          .     14:
         .          .     15:func main() {
         .          .     16:   for i := 0; i &amp;lt; 10; i++ {
         .    95.38MB     17:           s := bigBytes()
         .          .     18:           if s == nil {
         .          .     19:                   log.Println(&quot;oh noes&quot;)
         .          .     20:           }
         .          .     21:   }
         .          .     22:
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;ID_PROF_PPROF_WEB&quot;&gt;5.3.3 runtime/pprof web&lt;/h3&gt;
&lt;p&gt;特性：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;是否实时：是，实时&lt;/li&gt;
  &lt;li&gt;应用场景：在线调试&lt;/li&gt;
  &lt;li&gt;是否侵入：是，需要修改代码&lt;/li&gt;
  &lt;li&gt;时效：时间点&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;使用：&lt;/p&gt;

&lt;p&gt;引入pprof的http包，并启动web服务器：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-go&quot; data-lang=&quot;go&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;net/http/pprof&amp;quot;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// ...&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;http&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ListenAndServe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;0.0.0.0:6060&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;nil&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;nil&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;nx&quot;&gt;fmt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Println&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Error:&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// ...&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;编译运行之后，可以到&lt;code&gt;http://127.0.0.1:6060/debug/pprof/&lt;/code&gt;查看输出情况。内存相关在：&lt;code&gt;http://127.0.0.1:8080/debug/pprof/heap?debug=1&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;如果有已经在使用的URL router，需要自定义输出endpoint：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-go&quot; data-lang=&quot;go&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;main&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
	&lt;span class=&quot;s&quot;&gt;&amp;quot;net/http&amp;quot;&lt;/span&gt;
	&lt;span class=&quot;s&quot;&gt;&amp;quot;net/http/pprof&amp;quot;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;w&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;http&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ResponseWriter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;http&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([]&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;byte&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Hello World&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;http&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;NewServeMux&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;HandleFunc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;/&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

	&lt;span class=&quot;nx&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;HandleFunc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;/debug/pprof/&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;pprof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;HandleFunc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;/debug/pprof/cmdline&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;pprof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Cmdline&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;HandleFunc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;/debug/pprof/profile&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;pprof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Profile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;HandleFunc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;/debug/pprof/symbol&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;pprof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Symbol&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;HandleFunc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;/debug/pprof/trace&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;pprof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Trace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

	&lt;span class=&quot;nx&quot;&gt;http&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ListenAndServe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;:8080&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;细节分析仍旧使用pprof的命令行工具，输入部分改为URL：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ go tool pprof http://localhost:6060/debug/pprof/heap
Fetching profile over HTTP from http://localhost:6060/debug/pprof/heap
Saved profile in /Users/XXX/pprof/pprof.alloc_objects.alloc_space.inuse_objects.inuse_space.009.pb.gz
Type: inuse_space
Time: Mar 23, 2019 at 3:13pm (CST)
Entering interactive mode (type &quot;help&quot; for commands, &quot;o&quot; for options)
(pprof)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;本质上，pprof工具其实是从指定的URL下载一份当时的heap信息，然后开始交互分析：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Saved profile in /Users/XXX/pprof/pprof.alloc_objects.alloc_space.inuse_objects.inuse_space.009.pb.gz
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;进入pprof的交互命令行之后就是常规操作了，这里不再赘述。&lt;/p&gt;

&lt;h3 id=&quot;ID_PROF_TRACE&quot;&gt;5.3.4 runtime/trace&lt;/h3&gt;
&lt;p&gt;Trace的使用和前几者有显著不同，trace追踪的是一个时间段内程序的行为，且其API并没有对内存等进行区分，也就是说trace函数执行期间，其对Go应用程序进行了全方面的信息采集，包括了CPU、内存、Gorountine等等。&lt;/p&gt;

&lt;p&gt;一般来说Trace的应用场景是&lt;code&gt;打开思路&lt;/code&gt;：”我感觉应用程序有点问题，但具体问题在哪里暂时还不知道，要不就先trace一下，把所有数据都导出来，然后工具里看看随着时间的应用程序指标变化，然后找找问题”。大致上是这么一个方向。&lt;/p&gt;

&lt;p&gt;实际上这种需求的可能性会很小，一般来说，应用程序的监控会使用API或者聚合工具将Metrics输出并采集，随着时间会进行对应的指标检查。所以一般出问题了，肯定知道问题在哪个领域内，后面如果真的要追细节，那肯定也是用&lt;code&gt;go tool pprof&lt;/code&gt;而不是trace。所以其实trace的存在意义并不大。&lt;/p&gt;

&lt;p&gt;特性：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;是否实时：否，离线&lt;/li&gt;
  &lt;li&gt;应用场景：事后分析&lt;/li&gt;
  &lt;li&gt;是否侵入：是，需要修改代码&lt;/li&gt;
  &lt;li&gt;时效：时间段&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;使用：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-go&quot; data-lang=&quot;go&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;trace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Stdout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;defer&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;trace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Stop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;编译、运行、输出trace文件：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ go build -o app
$ time ./app &amp;gt; app.trace
$ go tool trace app.trace
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果你想输出一份pprof也能使用的兼容文件，你可以使用 -pprof 选项。使用手册仍旧是命令行help：&lt;a href=&quot;#ID_APP_TRACE_USAGE&quot;&gt;go tool trace usage@1.12&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;解析trace文件：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ go tool trace app.trace
2017/10/29 09:30:40 Parsing trace...
2017/10/29 09:30:40 Serializing trace...
2017/10/29 09:30:40 Splitting trace...
2017/10/29 09:30:40 Opening browser
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;浏览器会自动打开：&lt;code&gt;http://127.0.0.1:60331&lt;/code&gt;。后续的查看细节这里就不展开了，有兴趣的可以阅读：&lt;a href=&quot;https://www.integralist.co.uk/posts/profiling-go/#7&quot; target=&quot;_blank&quot;&gt;Profiling Go &amp;gt; Trace&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;此外，官方的trace包也可以稍微看下：&lt;a href=&quot;https://golang.org/pkg/runtime/trace/&quot; target=&quot;_blank&quot;&gt;Package trace&lt;/a&gt;。&lt;/p&gt;

&lt;h3 id=&quot;ID_PORF_DEBUG&quot;&gt;5.3.5 GODEBUG=’gctrace=1’&lt;/h3&gt;
&lt;p&gt;在Go程序运行的时候设置全局变量&lt;code&gt;GODEBUG=gctrace=1&lt;/code&gt;，则可以开始gc状态输出，每次gc之后都会向stderr输出信息。比较常用在初步定位GC问题的时候，或怀疑程序的GC是否消耗了过多的CPU资源等情况。&lt;/p&gt;

&lt;p&gt;文档在官方runtime包：&lt;a href=&quot;https://golang.org/pkg/runtime/#hdr-Environment_Variables&quot; target=&quot;_blank&quot;&gt;Environment Variables#gctrace&lt;/a&gt;。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;gctrace: setting gctrace=1 causes the garbage collector to emit a single line to standard
error at each collection, summarizing the amount of memory collected and the
length of the pause. The format of this line is subject to change.
Currently, it is:
	gc # @#s #%: #+#+# ms clock, #+#/#/#+# ms cpu, #-&amp;gt;#-&amp;gt;# MB, # MB goal, # P
where the fields are as follows:
	gc #        the GC number, incremented at each GC
	@#s         time in seconds since program start
	#%          percentage of time spent in GC since program start
	#+...+#     wall-clock/CPU times for the phases of the GC
	#-&amp;gt;#-&amp;gt;# MB  heap size at GC start, at GC end, and live heap
	# MB goal   goal heap size
	# P         number of processors used
The phases are stop-the-world (STW) sweep termination, concurrent
mark and scan, and STW mark termination. The CPU times
for mark/scan are broken down in to assist time (GC performed in
line with allocation), background GC time, and idle GC time.
If the line ends with &quot;(forced)&quot;, this GC was forced by a
runtime.GC() call.

Setting gctrace to any value &amp;gt; 0 also causes the garbage collector
to emit a summary when memory is released back to the system.
This process of returning memory to the system is called scavenging.
The format of this summary is subject to change.
Currently it is:
	scvg#: # MB released  printed only if non-zero
	scvg#: inuse: # idle: # sys: # released: # consumed: # (MB)
where the fields are as follows:
	scvg#        the scavenge cycle number, incremented at each scavenge
	inuse: #     MB used or partially used spans
	idle: #      MB spans pending scavenging
	sys: #       MB mapped from the system
	released: #  MB released to the system
	consumed: #  MB allocated from the system
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;举个例子来说：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;gc 31 @1656.509s 0%: 0.010+0.26+0.006 ms clock, 0.085+0/0.33/0.64+0.048 ms cpu, 49-&amp;gt;49-&amp;gt;18 MB, 50 MB goal, 8 P
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;gc 31&lt;/code&gt;：第31次GC&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;@1656.509s&lt;/code&gt;：程序启动至今1656.509秒&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;0%:&lt;/code&gt;：消耗在GC上的CPU为0%&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;0.010+0.26+0.006 ms clock,&lt;/code&gt;：STW清扫、并发标记扫描、STW标记耗时，单位为毫秒（ms）&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;0.085+0/0.33/0.64+0.048 ms cpu,&lt;/code&gt;：辅助GC、后台GC、闲置GC耗时，单位为毫秒（ms）&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;49-&amp;gt;49-&amp;gt;18 MB,&lt;/code&gt;：GC启动前，完成后，以及存活的堆内存大小&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;50 MB goal,&lt;/code&gt;：下一次GC启动的目标堆内存大小&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;8 P&lt;/code&gt;：该应用程序使用的处理器数量&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;scvg52: inuse: 19, idle: 43, sys: 63, released: 4, consumed: 59 (MB)
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;scvg52:&lt;/code&gt;：第52次scavenge循环&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;inuse: 19,&lt;/code&gt;：使用中或部分使用中的spans占用的内存（MB）&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;idle: 43,&lt;/code&gt;：处于空闲状态，等待回收的spans占用的内存（MB）&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;sys: 63,&lt;/code&gt;：从操作系统申请的内存（MB）&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;released: 4&lt;/code&gt;：返还给操作系统的内存（MB）&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;consumed: 59 (MB)&lt;/code&gt;：从操作系统申请且已经分配被占用的内存（MB）&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;完整的输出例子可以查看：&lt;a href=&quot;#ID_APP_GCTRACE_SAMPLE&quot;&gt;GODEBUG=gctrace=1 sample&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;54-pprof简单使用&quot;&gt;5.4 pprof简单使用&lt;/h2&gt;
&lt;h3 id=&quot;541-pprof-help&quot;&gt;5.4.1 pprof help&lt;/h3&gt;
&lt;p&gt;pprof使用分两部分：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;在命令行中，以&lt;code&gt;go tool pprof ...&lt;/code&gt;的方式直接将分析结果输出&lt;/li&gt;
  &lt;li&gt;或在命令行中以上面的命令进入到一个pprof内部的交互命令行&lt;code&gt;(pprof) ...&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;一般来说，如果只是对一个比较小的程序做简单的分析，可以选择第一种，直接将所有的关系都输出成图、PDF之类，直接阅读。但对于比较复杂的程序，就更推荐第二种方式，进入交互界面，根据自己的需求，进行细致的分析。&lt;/p&gt;

&lt;p&gt;这里要提下两者的帮助信息如何取得，众所周知，Go的文档实在是不怎么样。所以这两者的使用，基本上都靠命令+help打印出来的内容进行指导。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;go tool pprof&lt;/code&gt;可以不带任何参数进行直接执行，就会打印出使用手册：&lt;a href=&quot;#ID_APP_PPROF_USAGE&quot;&gt;go tool pprof usage@1.12&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;(pprof) help&lt;/code&gt;可以打印出交互命令的使用手册：&lt;a href=&quot;#ID_APP_PPROF_HELP&quot;&gt;(pprof) help@1.12&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;542-常用交互命令&quot;&gt;5.4.2 常用交互命令&lt;/h3&gt;
&lt;p&gt;所谓的交互命令，是指在命令行中执行&lt;code&gt;go tool pprof ...&lt;/code&gt;之后，进入了一个以&lt;code&gt;(pprof) ...&lt;/code&gt;开头的命令行。在这里可以执行一系列pprof的子命令，进行对应的内存和CPU分析。&lt;/p&gt;

&lt;p&gt;常用的有：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;top：列出以降序排列的所有高消耗入口&lt;/li&gt;
  &lt;li&gt;topN：基本同上，但只列出最高的N个入口&lt;/li&gt;
  &lt;li&gt;list &lt;function_regex&gt;：按照函数名对消耗入口进行过滤，找到精确的定位信息&lt;/function_regex&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;list的help信息如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;(pprof) help list
Output annotated source for functions matching regexp
  Usage:
    list&amp;lt;func_regex|address&amp;gt; [-focus_regex]* [-ignore_regex]*
    Include functions matching func_regex, or including the address specified.
    Include samples matching focus_regex, and exclude ignore_regex.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;完整的命令可以查看：&lt;a href=&quot;#ID_APP_PPROF_HELP&quot;&gt;(pprof) help@1.12&lt;/a&gt;。&lt;/p&gt;

&lt;h3 id=&quot;ID_PROF_SAMPLE_INDEX&quot;&gt;5.4.3 sample_index&lt;/h3&gt;
&lt;p&gt;在使用&lt;code&gt;go tool pprof ...&lt;/code&gt;进行对应的分析交互的时候，默认的内存观察视角是：&lt;code&gt;inuse_space&lt;/code&gt;，也就是在使用中（当前占用）的内存空间的视角。但某些时候也需要以其他视角进行观察分析，就需要：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;在命令行执行命令的时候（进入交互之前）就进行指定：&lt;code&gt;go tool pprof -alloc_space ...&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;或者在进入pprof的交互命令行之后，进行切换：&lt;code&gt;(pprof) sample_index = alloc_space&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;可用的视角选项如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  Legacy convenience options:
   -inuse_space           Same as -sample_index=inuse_space
   -inuse_objects         Same as -sample_index=inuse_objects
   -alloc_space           Same as -sample_index=alloc_space
   -alloc_objects         Same as -sample_index=alloc_objects
   -total_delay           Same as -sample_index=delay
   -contentions           Same as -sample_index=contentions
   -mean_delay            Same as -mean -sample_index=delay
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;sample_index命令帮助：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;(pprof) help sample_index
Sample value to report (0-based index or name)
Profiles contain multiple values per sample.
Use sample_index=i to select the ith value (starting at 0).
Or use sample_index=name, with name in [alloc_objects alloc_space inuse_objects inuse_space].
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;完整的列表，及其他的选项，可以查看：&lt;a href=&quot;#ID_APP_PPROF_USAGE&quot;&gt;go tool pprof usage@1.12&lt;/a&gt;以及&lt;a href=&quot;#ID_APP_PPROF_HELP&quot;&gt;(pprof) help@1.12&lt;/a&gt;。&lt;/p&gt;

&lt;h4 id=&quot;pprof无输出&quot;&gt;pprof无输出&lt;/h4&gt;
&lt;p&gt;根据上面所述，如果你指定的视角当前没有任何可分析的东西，pprof会对此进行提示：&lt;code&gt;No samples were found with the default sample value type.&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ go tool pprof http://127.0.0.1:8080/debug/pprof/heap
Fetching profile over HTTP from http://127.0.0.1:8080/debug/pprof/heap
Saved profile in /Users/XXX/pprof/pprof.alloc_objects.alloc_space.inuse_objects.inuse_space.005.pb.gz
Type: inuse_space
Time: Mar 22, 2019 at 4:43pm (CST)
No samples were found with the default sample value type.
Try &quot;sample_index&quot; command to analyze different sample values.
Entering interactive mode (type &quot;help&quot; for commands, &quot;o&quot; for options)
(pprof) sample_index = alloc_space
(pprof) top5
Showing nodes accounting for 6.35GB, 100% of 6.35GB total
      flat  flat%   sum%        cum   cum%
    6.35GB   100%   100%     6.35GB   100%  main.channelFactory.func1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;资料：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/golang/go/issues/24443#issuecomment-374141183&quot; target=&quot;_blank&quot;&gt;cmd/go: tool pprof gives no samples #24443&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/google/pprof/issues/182&quot; target=&quot;_blank&quot;&gt;-help output does not mention all flags #182&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/google/pprof/pull/202/files/b27144b31b62977102786aa81d8786f8af5709ca&quot; target=&quot;_blank&quot;&gt;Add legacy options to command-line help #202&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;544-输出&quot;&gt;5.4.4 输出&lt;/h3&gt;
&lt;h4 id=&quot;静态资源&quot;&gt;静态资源&lt;/h4&gt;
&lt;p&gt;使用如下命令将一个profile文件或URL的分析结果导出成一个可打开的静态资源：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;go tool pprof -png http://localhost:6060/debug/pprof/heap &amp;gt; data.png
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;可选的类型有：&lt;code&gt;-png&lt;/code&gt;、&lt;code&gt;-gif&lt;/code&gt;、&lt;code&gt;-svg&lt;/code&gt;，等等，甚至是&lt;code&gt;-pdf&lt;/code&gt;。所有的可选项可以查看：&lt;a href=&quot;#ID_APP_PPROF_USAGE&quot;&gt;go tool pprof usage@1.12&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;默认输出的是&lt;code&gt;inuse_space&lt;/code&gt;的分析，可以进行调整，参见：&lt;a href=&quot;#ID_PROF_SAMPLE_INDEX&quot;&gt;sample_index&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;图中的格子越大，表示其消耗的内存越多。&lt;/p&gt;

&lt;h4 id=&quot;web-ui&quot;&gt;WEB UI&lt;/h4&gt;
&lt;p&gt;从&lt;code&gt;Go 1.10&lt;/code&gt;开始，pprof也提供了方法将分析结果展示到WEB UI中，方便交互和查看。&lt;code&gt;(pprof) ...&lt;/code&gt;的交互命令行需要熟悉命令，&lt;code&gt;静态资源&lt;/code&gt;则比较难以处理复杂的程序。WEB UI在交互这方面应该是最佳选项了。&lt;/p&gt;

&lt;p&gt;使用：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;pprof -http=:8899 http://localhost:8080/debug/pprof/heap
Fetching profile over HTTP from http://localhost:8080/debug/pprof/heap
Saved profile in /Users/XXX/pprof/pprof.alloc_objects.alloc_space.inuse_objects.inuse_space.008.pb.gz
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这样就开启并保持了一个WEB进程，只需要在浏览器中打开：&lt;code&gt;http://localhost:8899/ui/&lt;/code&gt;，就可以进行交互和观察了。&lt;/p&gt;

&lt;p&gt;资料：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://rakyll.org/pprof-ui/&quot; target=&quot;_blank&quot;&gt;pprof user interface&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;545-pprofprotoprofileproto&quot;&gt;5.4.5 pprof/proto/profile.proto&lt;/h3&gt;
&lt;p&gt;pprof输出、保存下来的profile文件是一个protobuf二进制文件，其结构描述在：&lt;a href=&quot;https://github.com/google/pprof/blob/master/proto/profile.proto&quot; target=&quot;_blank&quot;&gt;pprof/proto/profile.proto&lt;/a&gt;。有兴趣的可以查阅下，可以更深入理解profile里保存了什么。&lt;/p&gt;

&lt;h2 id=&quot;55-复杂范例实践&quot;&gt;5.5 复杂范例实践&lt;/h2&gt;
&lt;p&gt;代码放在github：&lt;a href=&quot;https://github.com/agreatfool/dist-system-practice/blob/master/golang/src/experiment/memory/memory.go&quot; target=&quot;_blank&quot;&gt;experiment/memory/memory.go&lt;/a&gt;。github上的代码可以看到最新的更新，不过需要打开新的页面稍微麻烦点。&lt;/p&gt;

&lt;p&gt;当前页面会放一份gist，方便直接查看：&lt;a href=&quot;#ID_APP_MEMORY_SAMPLE&quot;&gt;experiment/memory/memory.go&lt;/a&gt;，但可能更新不及时。&lt;/p&gt;

&lt;p&gt;使用：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;go run memory.go 参数…：运行内存泄露脚本，不带任何命令行输出&lt;/li&gt;
  &lt;li&gt;go run memory.go 参数… &lt;code&gt;-stats=true&lt;/code&gt;：运行内存泄露脚本，在命令行输出&lt;code&gt;runtime.MemStats&lt;/code&gt;的信息&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;GODEBUG=gctrace=1&lt;/code&gt; go run memory.go 参数…：运行内存泄露脚本，在命令行输出gc统计信息&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;参数说明：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;mode：三种模式
    &lt;ul&gt;
      &lt;li&gt;FIXED_SPAN：泄露内存为固定长度的span&lt;/li&gt;
      &lt;li&gt;RANDOM_SPAN：泄露内存为随机浮动长度的span，但不会是大对象&lt;/li&gt;
      &lt;li&gt;LARGE_OBJ：泄露内存为1MB到2MB之间的大对象&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;class：指定span的class id，具体的class id对应的内存大小可以查看：&lt;a href=&quot;https://github.com/golang/go/blob/go1.12/src/runtime/sizeclasses.go&quot; target=&quot;_blank&quot;&gt;go/src/runtime/sizeclasses.go&lt;/a&gt;。注意，这个参数只在&lt;code&gt;FIXED_SPAN&lt;/code&gt;下生效&lt;/li&gt;
  &lt;li&gt;interval：每个goroutine每隔多久进行一次内存泄露，实际运行的时候会上下进行一些浮动，防止大量goroutine在同一时间点进行操作&lt;/li&gt;
  &lt;li&gt;goroutine：同时运行的gorountine数量，越多内存泄露越快&lt;/li&gt;
  &lt;li&gt;size：每个goroutine每次tick泄露的内存量，虽然每次泄露的对象大小是一个span大小，但泄露的内存量是固定的 = span大小 * span数量&lt;/li&gt;
  &lt;li&gt;edge：Go进程允许的泄露内存总量，超过这个量之后，脚本会释放对之前泄露对象的指针，内存就会被回收&lt;/li&gt;
  &lt;li&gt;stats：布尔值，附上true之后会在命令行里打印&lt;code&gt;runtime.MemStats&lt;/code&gt;的信息&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;资料&quot;&gt;资料&lt;/h1&gt;
&lt;h2 id=&quot;ID_APP_LINKS&quot;&gt;参考链接&lt;/h2&gt;
&lt;h3 id=&quot;内存分配&quot;&gt;内存分配&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/golang/go/blob/go1.12/src/runtime/malloc.go&quot; target=&quot;_blank&quot;&gt;go/src/runtime/malloc.go@1.12&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/golang/go/blob/go1.12/src/runtime/sizeclasses.go&quot; target=&quot;_blank&quot;&gt;go/src/runtime/sizeclasses.go@1.12&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/golang/go/wiki/CompilerOptimizations#escape-analysis-and-inlining&quot; target=&quot;_blank&quot;&gt;Escape analysis and Inlining&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/golang/go/issues/10460&quot; target=&quot;_blank&quot;&gt;runtime: 512GB memory limitation #10460&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/golang/go/commit/2b415549b813ba36caafa34fc34d72e47ee8335c&quot; target=&quot;_blank&quot;&gt;runtime: use sparse mappings for the heap&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://yq.aliyun.com/blog/573819&quot; target=&quot;_blank&quot;&gt;Golang源码探索(三) GC的实现原理&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://povilasv.me/go-memory-management/&quot; target=&quot;_blank&quot;&gt;Go Memory Management&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/27807169&quot; target=&quot;_blank&quot;&gt;Golang 内存管理&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://blog.learngoprogramming.com/a-visual-guide-to-golang-memory-allocator-from-ground-up-e132258453ed&quot; target=&quot;_blank&quot;&gt;A visual guide to Go Memory Allocator from scratch (Golang)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/29216091&quot; target=&quot;_blank&quot;&gt;图解 TCMalloc&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/29415507&quot; target=&quot;_blank&quot;&gt;TCMalloc分析 - 如何减少内存碎片&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://goog-perftools.sourceforge.net/doc/tcmalloc.html&quot; target=&quot;_blank&quot;&gt;TCMalloc : Thread-Caching Malloc&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/28484133&quot; target=&quot;_blank&quot;&gt;Go语言的栈空间管理&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/28348712&quot; target=&quot;_blank&quot;&gt;剖析使Go语言高效的5个特性(3/5): 垃圾回收机制&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/28357162&quot; target=&quot;_blank&quot;&gt;剖析使Go语言高效的5个特性(5/5): Goroutine的栈管理&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.infoq.cn/article/IEhRLwmmIM7-11RYaLHR&quot; target=&quot;_blank&quot;&gt;图解 Go 内存分配器&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;内存回收&quot;&gt;内存回收&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/golang/go/blob/go1.12/src/runtime/mstats.go#L145&quot; target=&quot;_blank&quot;&gt;go/src/runtime/mstats.go#MemStats@1.12&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://golang.org/pkg/runtime/#hdr-Environment_Variables&quot; target=&quot;_blank&quot;&gt;Environment Variables#GOGC&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://talks.golang.org/2015/go-gc.pdf&quot; target=&quot;_blank&quot;&gt;Go GC: Latency Problem Solved&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://making.pusher.com/golangs-real-time-gc-in-theory-and-practice/&quot; target=&quot;_blank&quot;&gt;Golang’s Real-time GC in Theory and Practice&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://blog.golang.org/ismmkeynote&quot; target=&quot;_blank&quot;&gt;Getting to Go: The Journey of Go’s Garbage Collector&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/golang/go/issues/23044&quot; target=&quot;_blank&quot;&gt;proposal: runtime: add a mechanism for specifying a minimum target heap size #23044&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/golang/go/issues/18155&quot; target=&quot;_blank&quot;&gt;runtime: latency in sweep assists when there’s no garbage #18155&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://legendtkl.com/2017/04/28/golang-gc/&quot; target=&quot;_blank&quot;&gt;Golang 垃圾回收剖析&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/54236970&quot; target=&quot;_blank&quot;&gt;Go的内存管理缺陷?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;内存profile&quot;&gt;内存Profile&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/golang/go/blob/go1.12/src/runtime/mstats.go&quot; target=&quot;_blank&quot;&gt;go/src/runtime/mstats.go&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/golang/go/issues/13613&quot; target=&quot;_blank&quot;&gt;runtime: cheaper alternative to runtime.ReadMemStats #13613&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/golang/go/commit/4a7cf960c38d72e9f0c6f00e46e013be2a35d56e&quot; target=&quot;_blank&quot;&gt;runtime: make ReadMemStats STW for &amp;lt; 25µs&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://blog.golang.org/profiling-go-programs&quot; target=&quot;_blank&quot;&gt;Profiling Go Programs&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://golang.org/doc/diagnostics.html&quot; target=&quot;_blank&quot;&gt;The Go Programming Language &amp;gt; Diagnostics&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://golang.org/pkg/runtime/#hdr-Environment_Variables&quot;&gt;Environment Variables#GODEBUG&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/google/pprof&quot; target=&quot;_blank&quot;&gt;google/pprof&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/google/pprof/blob/master/proto/profile.proto&quot; target=&quot;_blank&quot;&gt;pprof/proto/profile.proto&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.integralist.co.uk/posts/profiling-go/&quot; target=&quot;_blank&quot;&gt;Profiling Go&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://jvns.ca/blog/2017/09/24/profiling-go-with-pprof/&quot;&gt;Profiling Go programs with pprof&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://yq.aliyun.com/articles/573743&quot; target=&quot;_blank&quot;&gt;记一次Golang内存分析——基于go pprof&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://lrita.github.io/2017/05/26/golang-memory-pprof/&quot; target=&quot;_blank&quot;&gt;golang 内存分析/动态追踪&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://dev.to/davidsbond/golang-debugging-memory-leaks-using-pprof-5di8&quot; target=&quot;_blank&quot;&gt;Golang: Debugging memory leaks using pprof&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://artem.krylysov.com/blog/2017/03/13/profiling-and-optimizing-go-web-applications/&quot; target=&quot;_blank&quot;&gt;Profiling and optimizing Go web applications&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://povilasv.me/prometheus-go-metrics/&quot; target=&quot;_blank&quot;&gt;Exploring Prometheus Go client metrics&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://sheepbao.github.io/post/golang_debug_gctrace/&quot; target=&quot;_blank&quot;&gt;golang开启GODEBUG=gctrace=1 显示信息的含义&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/golang/go/issues/24443#issuecomment-374141183&quot; target=&quot;_blank&quot;&gt;cmd/go: tool pprof gives no samples #24443&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/google/pprof/issues/182&quot; target=&quot;_blank&quot;&gt;-help output does not mention all flags #182&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/google/pprof/pull/202/files/b27144b31b62977102786aa81d8786f8af5709ca&quot; target=&quot;_blank&quot;&gt;Add legacy options to command-line help #202&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://rakyll.org/pprof-ui/&quot; target=&quot;_blank&quot;&gt;pprof user interface&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://cizixs.com/2017/09/11/profiling-golang-program/&quot; target=&quot;_blank&quot;&gt;使用 pprof 和火焰图调试 golang 应用&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;其他&quot;&gt;其他&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.jianshu.com/p/9bf36aa82f90&quot; target=&quot;_blank&quot;&gt;Linux 内存管理中的 RSS 和 VSZ 是什么意思？&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://studygolang.com/articles/11627&quot; target=&quot;_blank&quot;&gt;Golang源码探索(二) 协程的实现原理&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/golang/go/wiki/Performance&quot; target=&quot;_blank&quot;&gt;golang/go wiki &amp;gt; Debugging performance issues in Go programs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;ID_APP_MEMSTATS&quot;&gt;&lt;a href=&quot;https://github.com/golang/go/blob/go1.12/src/runtime/mstats.go#L145&quot; target=&quot;_blank&quot;&gt;go/src/runtime/mstats.go#MemStats@1.12&lt;/a&gt;&lt;/h2&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-go&quot; data-lang=&quot;go&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;// A MemStats records statistics about the memory allocator.&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;MemStats&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// 常规统计。&lt;/span&gt;

	&lt;span class=&quot;c1&quot;&gt;// Alloc 是已分配的堆内存对象占用的内存量（bytes）。&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;//&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// 这个值和 HeapAlloc 一致（看下面）。&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;Alloc&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;uint64&lt;/span&gt;

	&lt;span class=&quot;c1&quot;&gt;// TotalAlloc 是累积的堆内存对象分配的内存量（bytes）。&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;//&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// TotalAlloc 会随着堆内存对象分配慢慢增长，但不像 Alloc 和 HeapAlloc，&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// 这个值不会随着对象被释放而缩小。&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;TotalAlloc&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;uint64&lt;/span&gt;

	&lt;span class=&quot;c1&quot;&gt;// Sys 是从 OS 获得的内存总量（bytes）。&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;//&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// Sys 是下面列出的 XSys 字段的综合。Sys 维护着为 Go 运行时预留的虚拟内存空间地址，&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// 里面包含了：堆、栈，以及其他内部数据结构。&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;Sys&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;uint64&lt;/span&gt;

	&lt;span class=&quot;c1&quot;&gt;// Lookups 是 runtime 执行的指针查询的数量。&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;//&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// 这主要在针对 runtime 内部进行 debugging 的时候比较有用。&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;Lookups&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;uint64&lt;/span&gt;

	&lt;span class=&quot;c1&quot;&gt;// Mallocs 是累积被分配的堆内存对象数量。&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// 存活堆内存对象数量是 Mallocs - Frees。&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;Mallocs&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;uint64&lt;/span&gt;

	&lt;span class=&quot;c1&quot;&gt;// Frees 是累积被释放掉的堆内存对象数量。&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;Frees&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;uint64&lt;/span&gt;

	&lt;span class=&quot;c1&quot;&gt;// 堆内存统计。&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;//&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// 理解堆内存统计需要一些 Go 是如何管理内存的知识。Go 将堆内存虚拟内存空间以 &amp;quot;spans&amp;quot; 为单位进行分割。&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// spans 是 8K（或更大）的连续内存空间。一个 span 可能会在以下三种状态之一：&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;//&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// 一个 &amp;quot;空闲 idle&amp;quot; 的 span 内部不含任何对象或其他数据。&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// 占用物理内存空间的空闲状态 span 可以被释放回 OS（但虚拟内存空间不会），&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// 或者也可以被转化成为 &amp;quot;使用中 in use&amp;quot; 或 &amp;quot;堆栈 stack&amp;quot; 状态。&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;//&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// 一个 &amp;quot;使用中 in use&amp;quot; span 包含了至少一个堆内存对象且可能还有富余的空间可以分配更多的堆内存对象。&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;//&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// 一个 &amp;quot;堆栈 stack&amp;quot; span 是被用作 goroutine stack 的 内存空间。&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// 堆栈状态的 span 不被视作是堆内存的一部分。一个 span 可以在堆内存和栈内存之间切换；&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// 但不可能同时作为两者。&lt;/span&gt;

	&lt;span class=&quot;c1&quot;&gt;// HeapAlloc 是已分配的堆内存对象占用的内存量（bytes）。&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;//&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// &amp;quot;已分配&amp;quot;的堆内存对象包含了所有可达的对象，以及所有垃圾回收器已知但仍未回收的不可达对象。&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// 确切的说，HeapAlloc 随着堆内存对象分配而增长，并随着内存清理、不可达对象的释放而缩小。&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// 清理会随着 GC 循环渐进发生，所有增长和缩小这两个情况是同时存在的，&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// 作为结果 HeapAlloc 的变动趋势是平滑的（与传统的 stop-the-world 型垃圾回收器的锯齿状趋势成对比）。&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;HeapAlloc&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;uint64&lt;/span&gt;

	&lt;span class=&quot;c1&quot;&gt;// HeapSys 是堆内存从 OS 获得的内存总量（bytes）。&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;//&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// HeapSys 维护着为堆内存而保留的虚拟内存空间。这包括被保留但尚未使用的虚拟内存空间，&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// 这部分是不占用实际物理内存的，但趋向于缩小，&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// 和那些占用物理内存但后续因不再使用而释放回 OS 的虚拟内存空间一样。（查看 HeapReleased 作为校对）&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;//&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// HeapSys 用来评估堆内存曾经到过的最大尺寸。&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;HeapSys&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;uint64&lt;/span&gt;

	&lt;span class=&quot;c1&quot;&gt;// HeapIdle 是处于&amp;quot;空闲状态（未使用）&amp;quot;的 spans 占用的内存总量（bytes）。&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;//&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// 空闲状态的 spans 内部不含对象。这些 spans 可以（并可能已经被）释放回 OS，&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// 或者它们可以在堆内存分配中重新被利用起来，或者也可以被重新作为栈内存利用起来。&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;//&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// HeapIdle 减去 HeapReleased 用来评估可以被释放回 OS 的内存总量，&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// 但因为这些内存已经被 runtime 占用了（已经从 OS 申请下来了）所以堆内存可以重新使用这些内存，&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// 就不用再向 OS 申请更多内存了。如果这个差值显著大于堆内存尺寸，这意味着近期堆内存存活对象数量存在一个短时峰值。&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;HeapIdle&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;uint64&lt;/span&gt;

	&lt;span class=&quot;c1&quot;&gt;// HeapInuse 是处于&amp;quot;使用中&amp;quot;状态的 spans 占用的内存总量（bytes）。&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;//&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// 使用中的 spans 内部存在至少一个对象。这些 spans 仅可以被用来存储其他尺寸接近的对象。&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;//&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// HeapInuse 减去 HeapAlloc 用来评估被用来存储特定尺寸对象的内存空间的总量，&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// 但目前并没有被使用。这是内存碎片的上界，但通常来说这些内存会被高效重用。&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;HeapInuse&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;uint64&lt;/span&gt;

	&lt;span class=&quot;c1&quot;&gt;// HeapReleased 是被释放回 OS 的物理内存总量（bytes）。&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;//&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// 这个值计算为已经被释放回 OS 的空闲状态的 spans 堆内存空间，且尚未重新被堆内存分配。&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;HeapReleased&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;uint64&lt;/span&gt;

	&lt;span class=&quot;c1&quot;&gt;// HeapObjects 是堆内存中的对象总量。&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;//&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// 和 HeapAlloc 一样，这个值随着对象分配而上涨，随着堆内存清理不可达对象而缩小。&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;HeapObjects&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;uint64&lt;/span&gt;

	&lt;span class=&quot;c1&quot;&gt;// 栈内存统计。&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;//&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// 栈内存不被认为是堆内存的一部分，但 runtime 会将一个堆内存中的 span 用作为栈内存，反之亦然。&lt;/span&gt;

	&lt;span class=&quot;c1&quot;&gt;// StackInuse 是栈内存使用的 spans 占用的内存总量（bytes）。&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;//&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// 使用中状态的栈内存 spans 其中至少有一个栈内存。这些 spans 只能被用来存储其他尺寸接近的栈内存。&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;//&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// 并不存在 StackIdle，因为未使用的栈内存 spans 会被释放回堆内存（因此被计入 HeapIdle）。&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;StackInuse&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;uint64&lt;/span&gt;

	&lt;span class=&quot;c1&quot;&gt;// StackSys 是栈内存从 OS 获得的内存总量（bytes）。&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;//&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// StackSys 是 StackInuse 加上一些为了 OS 线程栈而直接从 OS 获取的内存（应该很小）。&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;StackSys&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;uint64&lt;/span&gt;

	&lt;span class=&quot;c1&quot;&gt;// 堆外（off-heap）内存统计。&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;//&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// 下列的统计信息描述了并不会从堆内存进行分配的运行时内部（runtime-internal）结构体（通常因为它们是堆内存实现的一部分）。&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// 不像堆内存或栈内存，任何这些结构体的内存分配仅只是为这些结构服务。&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;//&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// 这些统计信息对 debugging runtime 内存额外开销非常有用。&lt;/span&gt;

	&lt;span class=&quot;c1&quot;&gt;// MSpanInuse 是 mspan 结构体分配的内存量（bytes）。&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;MSpanInuse&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;uint64&lt;/span&gt;

	&lt;span class=&quot;c1&quot;&gt;// MSpanSys 是为 mspan 结构体从 OS 申请过来的内存量（bytes）。&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;MSpanSys&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;uint64&lt;/span&gt;

	&lt;span class=&quot;c1&quot;&gt;// MCacheInuse 是 mcache 结构体分配的内存量（bytes）。&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;MCacheInuse&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;uint64&lt;/span&gt;

	&lt;span class=&quot;c1&quot;&gt;// MCacheSys 是为 mcache 结构体从 OS 申请过来的内存量（bytes）。&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;MCacheSys&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;uint64&lt;/span&gt;

	&lt;span class=&quot;c1&quot;&gt;// BuckHashSys 是用来 profiling bucket hash tables 的内存量（bytes）。&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;BuckHashSys&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;uint64&lt;/span&gt;

	&lt;span class=&quot;c1&quot;&gt;// GCSys 是在垃圾回收中使用的 metadata 的内存量（bytes）。 &lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;GCSys&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;uint64&lt;/span&gt;

	&lt;span class=&quot;c1&quot;&gt;// OtherSys 是各种各样的 runtime 分配的堆外内存量（bytes）。&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;OtherSys&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;uint64&lt;/span&gt;

	&lt;span class=&quot;c1&quot;&gt;// 垃圾回收统计。&lt;/span&gt;

	&lt;span class=&quot;c1&quot;&gt;// NextGC 是下一次 GC 循环的目标堆内存尺寸。&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;//&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// 垃圾回收器的目标是保持 HeapAlloc ≤ NextGC。&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// 在每一轮 GC 循环末尾，下一次循环的目标值会基于当前可达对象数据量以及 GOGC 的值来进行计算。&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;NextGC&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;uint64&lt;/span&gt;

	&lt;span class=&quot;c1&quot;&gt;// LastGC 是上一次垃圾回收完成的时间，其值为自 1970 年纸巾的 nanoseconds（UNIX epoch）。&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;LastGC&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;uint64&lt;/span&gt;

	&lt;span class=&quot;c1&quot;&gt;// PauseTotalNs 是自程序启动开始，在 GC stop-the-world 中暂停的累积时长，以 nanoseconds 计数。&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;//&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// 在一次 stop-the-world 暂停期间，所有的 goroutines 都会被暂停，仅垃圾回收器在运行。&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;PauseTotalNs&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;uint64&lt;/span&gt;

	&lt;span class=&quot;c1&quot;&gt;// PauseNs 是最近的 GC stop-the-world 暂停耗时的环形缓冲区（以 nanoseconds 计数）。&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;//&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// 最近一次的暂停耗时在 PauseNs[(NumGC+255)%256] 这个位置。&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// 通常来说，PauseNs[N%256] 记录着最近第 N%256th 次 GC 循环的暂停耗时。&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// 在每次 GC 循环中可能会有多次暂停；这是在一次循环中的所有暂停时长的总合。&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;PauseNs&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;256&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;uint64&lt;/span&gt;

	&lt;span class=&quot;c1&quot;&gt;// PauseEnd 是最近的 GC 暂停结束时间的环形缓冲区，其值为自 1970 年纸巾的 nanoseconds（UNIX epoch）。&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;//&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// 这个缓冲区的填充方式和 PauseNs 是一致的。&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// 每次 GC 循环可能有多次暂停；这个缓冲区记录的是每个循环的最后一次暂停的结束时间。&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;PauseEnd&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;256&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;uint64&lt;/span&gt;

	&lt;span class=&quot;c1&quot;&gt;// NumGC 是完成过的 GC 循环的数量。&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;NumGC&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;uint32&lt;/span&gt;

	&lt;span class=&quot;c1&quot;&gt;// NumForcedGC 是应用程序经由调用 GC 函数来强制发起的 GC 循环的数量。&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;NumForcedGC&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;uint32&lt;/span&gt;

	&lt;span class=&quot;c1&quot;&gt;// GCCPUFraction 是自程序启动以来，应用程序的可用 CPU 时间被 GC 消耗的时长部分。&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;//&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// GCCPUFraction 是一个 0 和 1 之间的数字，0 代表 GC 并没有消耗该应用程序的任何 CPU。&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// 一个应用程序的可用 CPU 时间定义为：自应用程序启动以来 GOMAXPROCS 的积分。&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// 举例来说，如果 GOMAXPROCS 是 2 且应用程序已经运行了 10 秒，那么&amp;quot;可用 CPU 时长&amp;quot;就是 20 秒。&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// GCCPUFraction 并未包含写屏障行为消耗的 CPU 时长。&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;//&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// 该值和经由 GODEBUG=gctrace=1 报告出来的 CPU 时长是一致的。 &lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;GCCPUFraction&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;float64&lt;/span&gt;

	&lt;span class=&quot;c1&quot;&gt;// EnableGC 显示 GC 是否被启用了。该值永远为真，即便 GOGC=off 被启用。&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;EnableGC&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;bool&lt;/span&gt;

	&lt;span class=&quot;c1&quot;&gt;// DebugGC 目前并未被使用。&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;DebugGC&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;bool&lt;/span&gt;

	&lt;span class=&quot;c1&quot;&gt;// BySize 汇报了按大小划分的 span 级别内存分配统计信息。&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;//&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// BySize[N] 给出了尺寸 S 对象的内存分配统计信息，尺寸大小是：&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// BySize[N-1].Size &amp;lt; S ≤ BySize[N].Size。&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;//&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// 这个结构里的数据并未汇报尺寸大于 BySize[60].Size 的内存分配数据。&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;BySize&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;61&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;c1&quot;&gt;// Size 是当前尺寸级别可容纳的最大对象的 byte 大小。&lt;/span&gt;
		&lt;span class=&quot;nx&quot;&gt;Size&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;uint32&lt;/span&gt;

		&lt;span class=&quot;c1&quot;&gt;// Mallocs 是分配到这个尺寸级别的堆内存对象的累积数量。&lt;/span&gt;
		&lt;span class=&quot;c1&quot;&gt;// 累积分配的内存容量（bytes）可用：Size*Mallocs 进行计算。&lt;/span&gt;
		&lt;span class=&quot;c1&quot;&gt;// 当前尺寸级别内存活的对象数量可以用 Mallocs - Frees 进行计算。&lt;/span&gt;
		&lt;span class=&quot;nx&quot;&gt;Mallocs&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;uint64&lt;/span&gt;

		&lt;span class=&quot;c1&quot;&gt;// Frees 是当前尺寸级别累积释放的堆内存对象的数量。&lt;/span&gt;
		&lt;span class=&quot;nx&quot;&gt;Frees&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;uint64&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;ID_APP_MALLOC&quot;&gt;comments of &lt;a href=&quot;https://github.com/golang/go/blob/go1.12/src/runtime/malloc.go&quot; target=&quot;_blank&quot;&gt;go/src/runtime/malloc.go@1.12&lt;/a&gt;&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;// Copyright 2014 The Go Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

// Memory allocator.
//
// This was originally based on tcmalloc, but has diverged quite a bit.
// http://goog-perftools.sourceforge.net/doc/tcmalloc.html

// The main allocator works in runs of pages.
// Small allocation sizes (up to and including 32 kB) are
// rounded to one of about 70 size classes, each of which
// has its own free set of objects of exactly that size.
// Any free page of memory can be split into a set of objects
// of one size class, which are then managed using a free bitmap.
//
// The allocator's data structures are:
//
//	fixalloc: a free-list allocator for fixed-size off-heap objects,
//		used to manage storage used by the allocator.
//	mheap: the malloc heap, managed at page (8192-byte) granularity.
//	mspan: a run of pages managed by the mheap.
//	mcentral: collects all spans of a given size class.
//	mcache: a per-P cache of mspans with free space.
//	mstats: allocation statistics.
//
// Allocating a small object proceeds up a hierarchy of caches:
//
//	1. Round the size up to one of the small size classes
//	   and look in the corresponding mspan in this P's mcache.
//	   Scan the mspan's free bitmap to find a free slot.
//	   If there is a free slot, allocate it.
//	   This can all be done without acquiring a lock.
//
//	2. If the mspan has no free slots, obtain a new mspan
//	   from the mcentral's list of mspans of the required size
//	   class that have free space.
//	   Obtaining a whole span amortizes the cost of locking
//	   the mcentral.
//
//	3. If the mcentral's mspan list is empty, obtain a run
//	   of pages from the mheap to use for the mspan.
//
//	4. If the mheap is empty or has no page runs large enough,
//	   allocate a new group of pages (at least 1MB) from the
//	   operating system. Allocating a large run of pages
//	   amortizes the cost of talking to the operating system.
//
// Sweeping an mspan and freeing objects on it proceeds up a similar
// hierarchy:
//
//	1. If the mspan is being swept in response to allocation, it
//	   is returned to the mcache to satisfy the allocation.
//
//	2. Otherwise, if the mspan still has allocated objects in it,
//	   it is placed on the mcentral free list for the mspan's size
//	   class.
//
//	3. Otherwise, if all objects in the mspan are free, the mspan
//	   is now &quot;idle&quot;, so it is returned to the mheap and no longer
//	   has a size class.
//	   This may coalesce it with adjacent idle mspans.
//
//	4. If an mspan remains idle for long enough, return its pages
//	   to the operating system.
//
// Allocating and freeing a large object uses the mheap
// directly, bypassing the mcache and mcentral.
//
// Free object slots in an mspan are zeroed only if mspan.needzero is
// false. If needzero is true, objects are zeroed as they are
// allocated. There are various benefits to delaying zeroing this way:
//
//	1. Stack frame allocation can avoid zeroing altogether.
//
//	2. It exhibits better temporal locality, since the program is
//	   probably about to write to the memory.
//
//	3. We don't zero pages that never get reused.

// Virtual memory layout
//
// The heap consists of a set of arenas, which are 64MB on 64-bit and
// 4MB on 32-bit (heapArenaBytes). Each arena's start address is also
// aligned to the arena size.
//
// Each arena has an associated heapArena object that stores the
// metadata for that arena: the heap bitmap for all words in the arena
// and the span map for all pages in the arena. heapArena objects are
// themselves allocated off-heap.
//
// Since arenas are aligned, the address space can be viewed as a
// series of arena frames. The arena map (mheap_.arenas) maps from
// arena frame number to *heapArena, or nil for parts of the address
// space not backed by the Go heap. The arena map is structured as a
// two-level array consisting of a &quot;L1&quot; arena map and many &quot;L2&quot; arena
// maps; however, since arenas are large, on many architectures, the
// arena map consists of a single, large L2 map.
//
// The arena map covers the entire possible address space, allowing
// the Go heap to use any part of the address space. The allocator
// attempts to keep arenas contiguous so that large spans (and hence
// large objects) can cross arenas.
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;ID_APP_PPROF_USAGE&quot;&gt;go tool pprof usage@1.12&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;$ go tool pprof
usage:

Produce output in the specified format.

   pprof &amp;lt;format&amp;gt; [options] [binary] &amp;lt;source&amp;gt; ...

Omit the format to get an interactive shell whose commands can be used
to generate various views of a profile

   pprof [options] [binary] &amp;lt;source&amp;gt; ...

Omit the format and provide the &quot;-http&quot; flag to get an interactive web
interface at the specified host:port that can be used to navigate through
various views of a profile.

   pprof -http [host]:[port] [options] [binary] &amp;lt;source&amp;gt; ...

Details:
  Output formats (select at most one):
    -callgrind       Outputs a graph in callgrind format
    -comments        Output all profile comments
    -disasm          Output assembly listings annotated with samples
    -dot             Outputs a graph in DOT format
    -eog             Visualize graph through eog
    -evince          Visualize graph through evince
    -gif             Outputs a graph image in GIF format
    -gv              Visualize graph through gv
    -kcachegrind     Visualize report in KCachegrind
    -list            Output annotated source for functions matching regexp
    -pdf             Outputs a graph in PDF format
    -peek            Output callers/callees of functions matching regexp
    -png             Outputs a graph image in PNG format
    -proto           Outputs the profile in compressed protobuf format
    -ps              Outputs a graph in PS format
    -raw             Outputs a text representation of the raw profile
    -svg             Outputs a graph in SVG format
    -tags            Outputs all tags in the profile
    -text            Outputs top entries in text form
    -top             Outputs top entries in text form
    -topproto        Outputs top entries in compressed protobuf format
    -traces          Outputs all profile samples in text form
    -tree            Outputs a text rendering of call graph
    -web             Visualize graph through web browser
    -weblist         Display annotated source in a web browser

  Options:
    -call_tree       Create a context-sensitive call tree
    -compact_labels  Show minimal headers
    -divide_by       Ratio to divide all samples before visualization
    -drop_negative   Ignore negative differences
    -edgefraction    Hide edges below &amp;lt;f&amp;gt;*total
    -focus           Restricts to samples going through a node matching regexp
    -hide            Skips nodes matching regexp
    -ignore          Skips paths going through any nodes matching regexp
    -mean            Average sample value over first value (count)
    -nodecount       Max number of nodes to show
    -nodefraction    Hide nodes below &amp;lt;f&amp;gt;*total
    -noinlines       Ignore inlines.
    -normalize       Scales profile based on the base profile.
    -output          Output filename for file-based outputs
    -prune_from      Drops any functions below the matched frame.
    -relative_percentages Show percentages relative to focused subgraph
    -sample_index    Sample value to report (0-based index or name)
    -show            Only show nodes matching regexp
    -show_from       Drops functions above the highest matched frame.
    -source_path     Search path for source files
    -tagfocus        Restricts to samples with tags in range or matched by regexp
    -taghide         Skip tags matching this regexp
    -tagignore       Discard samples with tags in range or matched by regexp
    -tagshow         Only consider tags matching this regexp
    -trim            Honor nodefraction/edgefraction/nodecount defaults
    -trim_path       Path to trim from source paths before search
    -unit            Measurement units to display

  Option groups (only set one per group):
    cumulative
      -cum             Sort entries based on cumulative weight
      -flat            Sort entries based on own weight
    granularity
      -addresses       Aggregate at the address level.
      -filefunctions   Aggregate at the function level.
      -files           Aggregate at the file level.
      -functions       Aggregate at the function level.
      -lines           Aggregate at the source code line level.

  Source options:
    -seconds              Duration for time-based profile collection
    -timeout              Timeout in seconds for profile collection
    -buildid              Override build id for main binary
    -add_comment          Free-form annotation to add to the profile
                          Displayed on some reports or with pprof -comments
    -diff_base source     Source of base profile for comparison
    -base source          Source of base profile for profile subtraction
    profile.pb.gz         Profile in compressed protobuf format
    legacy_profile        Profile in legacy pprof format
    http://host/profile   URL for profile handler to retrieve
    -symbolize=           Controls source of symbol information
      none                  Do not attempt symbolization
      local                 Examine only local binaries
      fastlocal             Only get function names from local binaries
      remote                Do not examine local binaries
      force                 Force re-symbolization
    Binary                  Local path or build id of binary for symbolization
    -tls_cert             TLS client certificate file for fetching profile and symbols
    -tls_key              TLS private key file for fetching profile and symbols
    -tls_ca               TLS CA certs file for fetching profile and symbols

  Misc options:
   -http              Provide web based interface at host:port.
                      Host is optional and 'localhost' by default.
                      Port is optional and a randomly available port by default.
   -tools             Search path for object tools

  Legacy convenience options:
   -inuse_space           Same as -sample_index=inuse_space
   -inuse_objects         Same as -sample_index=inuse_objects
   -alloc_space           Same as -sample_index=alloc_space
   -alloc_objects         Same as -sample_index=alloc_objects
   -total_delay           Same as -sample_index=delay
   -contentions           Same as -sample_index=contentions
   -mean_delay            Same as -mean -sample_index=delay

  Environment Variables:
   PPROF_TMPDIR       Location for saved profiles (default $HOME/pprof)
   PPROF_TOOLS        Search path for object-level tools
   PPROF_BINARY_PATH  Search path for local binary files
                      default: $HOME/pprof/binaries
                      searches $name, $path, $buildid/$name, $path/$buildid
   * On Windows, %USERPROFILE% is used instead of $HOME
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;ID_APP_PPROF_HELP&quot;&gt;(pprof) help@1.12&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;(pprof) help
  Commands:
    callgrind        Outputs a graph in callgrind format
    comments         Output all profile comments
    disasm           Output assembly listings annotated with samples
    dot              Outputs a graph in DOT format
    eog              Visualize graph through eog
    evince           Visualize graph through evince
    gif              Outputs a graph image in GIF format
    gv               Visualize graph through gv
    kcachegrind      Visualize report in KCachegrind
    list             Output annotated source for functions matching regexp
    pdf              Outputs a graph in PDF format
    peek             Output callers/callees of functions matching regexp
    png              Outputs a graph image in PNG format
    proto            Outputs the profile in compressed protobuf format
    ps               Outputs a graph in PS format
    raw              Outputs a text representation of the raw profile
    svg              Outputs a graph in SVG format
    tags             Outputs all tags in the profile
    text             Outputs top entries in text form
    top              Outputs top entries in text form
    topproto         Outputs top entries in compressed protobuf format
    traces           Outputs all profile samples in text form
    tree             Outputs a text rendering of call graph
    web              Visualize graph through web browser
    weblist          Display annotated source in a web browser
    o/options        List options and their current values
    quit/exit/^D     Exit pprof

  Options:
    call_tree        Create a context-sensitive call tree
    compact_labels   Show minimal headers
    divide_by        Ratio to divide all samples before visualization
    drop_negative    Ignore negative differences
    edgefraction     Hide edges below &amp;lt;f&amp;gt;*total
    focus            Restricts to samples going through a node matching regexp
    hide             Skips nodes matching regexp
    ignore           Skips paths going through any nodes matching regexp
    mean             Average sample value over first value (count)
    nodecount        Max number of nodes to show
    nodefraction     Hide nodes below &amp;lt;f&amp;gt;*total
    noinlines        Ignore inlines.
    normalize        Scales profile based on the base profile.
    output           Output filename for file-based outputs
    prune_from       Drops any functions below the matched frame.
    relative_percentages Show percentages relative to focused subgraph
    sample_index     Sample value to report (0-based index or name)
    show             Only show nodes matching regexp
    show_from        Drops functions above the highest matched frame.
    source_path      Search path for source files
    tagfocus         Restricts to samples with tags in range or matched by regexp
    taghide          Skip tags matching this regexp
    tagignore        Discard samples with tags in range or matched by regexp
    tagshow          Only consider tags matching this regexp
    trim             Honor nodefraction/edgefraction/nodecount defaults
    trim_path        Path to trim from source paths before search
    unit             Measurement units to display

  Option groups (only set one per group):
    cumulative
      cum              Sort entries based on cumulative weight
      flat             Sort entries based on own weight
    granularity
      addresses        Aggregate at the address level.
      filefunctions    Aggregate at the function level.
      files            Aggregate at the file level.
      functions        Aggregate at the function level.
      lines            Aggregate at the source code line level.
  :   Clear focus/ignore/hide/tagfocus/tagignore

  type &quot;help &amp;lt;cmd|option&amp;gt;&quot; for more information
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;ID_APP_TRACE_USAGE&quot;&gt;go tool trace usage@1.12&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;$ go tool trace
Usage of 'go tool trace':
Given a trace file produced by 'go test':
	go test -trace=trace.out pkg

Open a web browser displaying trace:
	go tool trace [flags] [pkg.test] trace.out

Generate a pprof-like profile from the trace:
    go tool trace -pprof=TYPE [pkg.test] trace.out

[pkg.test] argument is required for traces produced by Go 1.6 and below.
Go 1.7 does not require the binary argument.

Supported profile types are:
    - net: network blocking profile
    - sync: synchronization blocking profile
    - syscall: syscall blocking profile
    - sched: scheduler latency profile

Flags:
	-http=addr: HTTP service address (e.g., ':6060')
	-pprof=type: print a pprof-like profile instead
	-d: print debug info such as parsed events

Note that while the various profiles available when launching
'go tool trace' work on every browser, the trace viewer itself
(the 'view trace' page) comes from the Chrome/Chromium project
and is only actively tested on that browser.
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;ID_APP_GCTRACE_SAMPLE&quot;&gt;GODEBUG=gctrace=1 sample&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;$ GODEBUG=gctrace=1 ./memory
gc 1 @11.703s 0%: 0.009+0.21+0.004 ms clock, 0.072+0/0.21/0.27+0.033 ms cpu, 4-&amp;gt;4-&amp;gt;3 MB, 5 MB goal, 8 P
gc 2 @23.103s 0%: 0.008+0.19+0.005 ms clock, 0.069+0/0.22/0.35+0.043 ms cpu, 7-&amp;gt;7-&amp;gt;7 MB, 8 MB goal, 8 P
gc 3 @45.707s 0%: 0.022+0.35+0.005 ms clock, 0.18+0/0.46/0.35+0.047 ms cpu, 14-&amp;gt;14-&amp;gt;14 MB, 15 MB goal, 8 P
gc 4 @89.806s 0%: 0.010+0.42+0.006 ms clock, 0.086+0/0.47/0.68+0.051 ms cpu, 28-&amp;gt;28-&amp;gt;28 MB, 29 MB goal, 8 P
scvg0: inuse: 47, idle: 15, sys: 63, released: 0, consumed: 63 (MB)
gc 5 @175.704s 0%: 0.010+0.34+0.005 ms clock, 0.087+0/0.44/0.85+0.047 ms cpu, 55-&amp;gt;55-&amp;gt;23 MB, 56 MB goal, 8 P
gc 6 @248.402s 0%: 0.010+0.41+0.008 ms clock, 0.086+0/0.44/0.99+0.065 ms cpu, 46-&amp;gt;46-&amp;gt;15 MB, 47 MB goal, 8 P
gc 7 @295.302s 0%: 0.010+0.20+0.004 ms clock, 0.080+0/0.25/0.55+0.035 ms cpu, 30-&amp;gt;30-&amp;gt;30 MB, 31 MB goal, 8 P
scvg1: inuse: 32, idle: 31, sys: 63, released: 0, consumed: 63 (MB)
gc 8 @386.702s 0%: 0.011+0.33+0.007 ms clock, 0.088+0/0.46/0.70+0.059 ms cpu, 58-&amp;gt;58-&amp;gt;27 MB, 60 MB goal, 8 P
scvg2: inuse: 47, idle: 15, sys: 63, released: 0, consumed: 63 (MB)
gc 9 @470.005s 0%: 0.011+0.27+0.006 ms clock, 0.093+0/0.25/0.75+0.050 ms cpu, 53-&amp;gt;53-&amp;gt;22 MB, 54 MB goal, 8 P
gc 10 @537.503s 0%: 0.010+0.28+0.009 ms clock, 0.087+0/0.27/0.58+0.076 ms cpu, 43-&amp;gt;43-&amp;gt;12 MB, 44 MB goal, 8 P
gc 11 @574.301s 0%: 0.011+0.27+0.006 ms clock, 0.089+0/0.31/0.74+0.049 ms cpu, 23-&amp;gt;23-&amp;gt;23 MB, 24 MB goal, 8 P
scvg3: inuse: 32, idle: 31, sys: 63, released: 0, consumed: 63 (MB)
gc 12 @646.001s 0%: 0.006+0.11+0.003 ms clock, 0.052+0/0.14/0.39+0.030 ms cpu, 46-&amp;gt;46-&amp;gt;14 MB, 47 MB goal, 8 P
gc 13 @691.005s 0%: 0.016+0.26+0.006 ms clock, 0.13+0/0.33/0.36+0.050 ms cpu, 28-&amp;gt;28-&amp;gt;28 MB, 29 MB goal, 8 P
scvg4: inuse: 48, idle: 15, sys: 63, released: 0, consumed: 63 (MB)
gc 14 @778.602s 0%: 0.021+0.26+0.008 ms clock, 0.17+0/0.34/0.80+0.067 ms cpu, 56-&amp;gt;56-&amp;gt;25 MB, 57 MB goal, 8 P
gc 15 @854.601s 0%: 0.013+0.29+0.008 ms clock, 0.11+0/0.34/0.77+0.064 ms cpu, 48-&amp;gt;48-&amp;gt;17 MB, 50 MB goal, 8 P
scvg5: inuse: 32, idle: 31, sys: 63, released: 0, consumed: 63 (MB)
gc 16 @907.902s 0%: 0.011+0.22+0.006 ms clock, 0.093+0/0.23/0.48+0.049 ms cpu, 34-&amp;gt;34-&amp;gt;2 MB, 35 MB goal, 8 P
gc 17 @916.902s 0%: 0.016+0.24+0.005 ms clock, 0.12+0/0.25/0.48+0.046 ms cpu, 5-&amp;gt;5-&amp;gt;5 MB, 6 MB goal, 8 P
gc 18 @934.507s 0%: 0.034+0.33+0.005 ms clock, 0.27+0/0.41/0.75+0.047 ms cpu, 11-&amp;gt;11-&amp;gt;11 MB, 12 MB goal, 8 P
gc 19 @968.802s 0%: 0.017+0.24+0.007 ms clock, 0.14+0/0.30/0.60+0.063 ms cpu, 22-&amp;gt;22-&amp;gt;22 MB, 23 MB goal, 8 P
gc 20 @1035.706s 0%: 0.071+0.25+0.006 ms clock, 0.57+0/0.33/0.61+0.049 ms cpu, 42-&amp;gt;42-&amp;gt;11 MB, 44 MB goal, 8 P
scvg6: inuse: 16, idle: 46, sys: 63, released: 0, consumed: 63 (MB)
gc 21 @1071.302s 0%: 0.011+0.24+0.006 ms clock, 0.089+0/0.28/0.72+0.048 ms cpu, 22-&amp;gt;22-&amp;gt;22 MB, 23 MB goal, 8 P
gc 22 @1140.611s 0%: 0.045+0.25+0.006 ms clock, 0.36+0/0.25/0.70+0.052 ms cpu, 44-&amp;gt;44-&amp;gt;13 MB, 45 MB goal, 8 P
gc 23 @1180.905s 0%: 0.034+0.34+0.006 ms clock, 0.27+0/0.32/0.72+0.051 ms cpu, 25-&amp;gt;25-&amp;gt;25 MB, 26 MB goal, 8 P
scvg7: inuse: 32, idle: 30, sys: 63, released: 0, consumed: 63 (MB)
gc 24 @1259.503s 0%: 0.018+0.24+0.008 ms clock, 0.14+0/0.32/0.51+0.067 ms cpu, 50-&amp;gt;50-&amp;gt;19 MB, 51 MB goal, 8 P
gc 25 @1317.902s 0%: 0.011+0.24+0.006 ms clock, 0.091+0/0.26/0.48+0.053 ms cpu, 37-&amp;gt;37-&amp;gt;6 MB, 38 MB goal, 8 P
gc 26 @1336.809s 0%: 0.034+0.22+0.006 ms clock, 0.27+0/0.27/0.53+0.053 ms cpu, 12-&amp;gt;12-&amp;gt;12 MB, 13 MB goal, 8 P
scvg8: inuse: 17, idle: 46, sys: 63, released: 0, consumed: 63 (MB)
gc 27 @1373.707s 0%: 0.037+0.29+0.006 ms clock, 0.29+0/0.33/0.78+0.051 ms cpu, 23-&amp;gt;23-&amp;gt;23 MB, 24 MB goal, 8 P
gc 28 @1445.610s 0%: 0.022+0.29+0.006 ms clock, 0.17+0/0.37/0.64+0.048 ms cpu, 46-&amp;gt;46-&amp;gt;14 MB, 47 MB goal, 8 P
gc 29 @1490.911s 0%: 0.008+0.19+0.004 ms clock, 0.067+0/0.25/0.66+0.036 ms cpu, 29-&amp;gt;29-&amp;gt;29 MB, 30 MB goal, 8 P
scvg9: inuse: 32, idle: 30, sys: 63, released: 0, consumed: 63 (MB)
gc 30 @1579.201s 0%: 0.010+0.25+0.006 ms clock, 0.083+0/0.30/0.72+0.048 ms cpu, 56-&amp;gt;56-&amp;gt;25 MB, 58 MB goal, 8 P
scvg10: inuse: 48, idle: 15, sys: 63, released: 0, consumed: 63 (MB)
gc 31 @1656.509s 0%: 0.010+0.26+0.006 ms clock, 0.085+0/0.33/0.64+0.048 ms cpu, 49-&amp;gt;49-&amp;gt;18 MB, 50 MB goal, 8 P
gc 32 @1712.403s 0%: 0.014+0.27+0.006 ms clock, 0.11+0/0.37/0.46+0.049 ms cpu, 35-&amp;gt;35-&amp;gt;4 MB, 36 MB goal, 8 P
gc 33 @1726.509s 0%: 0.011+0.22+0.006 ms clock, 0.091+0/0.27/0.51+0.050 ms cpu, 9-&amp;gt;9-&amp;gt;9 MB, 10 MB goal, 8 P
gc 34 @1754.002s 0%: 0.016+0.26+0.006 ms clock, 0.13+0/0.34/0.56+0.050 ms cpu, 17-&amp;gt;17-&amp;gt;17 MB, 18 MB goal, 8 P
scvg11: inuse: 32, idle: 30, sys: 63, released: 0, consumed: 63 (MB)
gc 35 @1807.606s 0%: 0.033+0.27+0.006 ms clock, 0.26+0/0.26/0.53+0.052 ms cpu, 34-&amp;gt;34-&amp;gt;3 MB, 35 MB goal, 8 P
gc 36 @1817.204s 0%: 0.024+0.23+0.006 ms clock, 0.19+0/0.28/0.50+0.051 ms cpu, 6-&amp;gt;6-&amp;gt;6 MB, 7 MB goal, 8 P
gc 37 @1835.905s 0%: 0.085+0.31+0.007 ms clock, 0.68+0/0.32/0.54+0.056 ms cpu, 12-&amp;gt;12-&amp;gt;12 MB, 13 MB goal, 8 P
gc 38 @1872.402s 0%: 0.011+0.25+0.009 ms clock, 0.090+0/0.30/0.63+0.074 ms cpu, 23-&amp;gt;23-&amp;gt;23 MB, 24 MB goal, 8 P
gc 39 @1943.602s 0%: 0.011+0.24+0.006 ms clock, 0.090+0/0.27/0.46+0.049 ms cpu, 45-&amp;gt;45-&amp;gt;14 MB, 46 MB goal, 8 P
scvg12: inuse: 17, idle: 46, sys: 63, released: 0, consumed: 63 (MB)
gc 40 @1987.501s 0%: 0.007+0.20+0.004 ms clock, 0.063+0/0.25/0.65+0.033 ms cpu, 28-&amp;gt;28-&amp;gt;28 MB, 29 MB goal, 8 P
gc 41 @2073.102s 0%: 0.050+0.29+0.006 ms clock, 0.40+0/0.32/0.72+0.050 ms cpu, 54-&amp;gt;54-&amp;gt;23 MB, 56 MB goal, 8 P
scvg13: inuse: 33, idle: 30, sys: 63, released: 0, consumed: 63 (MB)
gc 42 @2145.107s 0%: 0.041+0.27+0.006 ms clock, 0.33+0/0.46/0.63+0.049 ms cpu, 46-&amp;gt;46-&amp;gt;14 MB, 47 MB goal, 8 P
gc 43 @2190.606s 0%: 0.11+0.25+0.008 ms clock, 0.91+0/0.36/0.77+0.065 ms cpu, 29-&amp;gt;29-&amp;gt;29 MB, 30 MB goal, 8 P
scvg14: inuse: 48, idle: 14, sys: 63, released: 0, consumed: 63 (MB)
gc 44 @2279.311s 0%: 0.010+0.26+0.006 ms clock, 0.084+0/0.31/0.83+0.052 ms cpu, 56-&amp;gt;56-&amp;gt;25 MB, 58 MB goal, 8 P
gc 45 @2357.406s 0%: 0.061+0.27+0.006 ms clock, 0.48+0/0.31/0.68+0.050 ms cpu, 50-&amp;gt;50-&amp;gt;18 MB, 51 MB goal, 8 P
scvg15: inuse: 33, idle: 30, sys: 63, released: 0, consumed: 63 (MB)
gc 46 @2414.805s 0%: 0.010+0.16+0.014 ms clock, 0.087+0/0.19/0.33+0.11 ms cpu, 36-&amp;gt;36-&amp;gt;5 MB, 37 MB goal, 8 P
gc 47 @2431.810s 0%: 0.023+0.33+0.007 ms clock, 0.18+0/0.32/0.51+0.057 ms cpu, 10-&amp;gt;10-&amp;gt;10 MB, 11 MB goal, 8 P
gc 48 @2465.009s 0%: 0.048+0.29+0.005 ms clock, 0.38+0/0.35/0.72+0.046 ms cpu, 21-&amp;gt;21-&amp;gt;21 MB, 22 MB goal, 8 P
gc 49 @2529.707s 0%: 0.10+0.24+0.006 ms clock, 0.86+0/0.32/0.61+0.048 ms cpu, 41-&amp;gt;41-&amp;gt;10 MB, 42 MB goal, 8 P
scvg16: inuse: 17, idle: 45, sys: 63, released: 0, consumed: 63 (MB)
gc 50 @2561.012s 0%: 0.024+0.31+0.006 ms clock, 0.19+0/0.33/0.70+0.050 ms cpu, 20-&amp;gt;20-&amp;gt;20 MB, 21 MB goal, 8 P
gc 51 @2622.011s 0%: 0.010+0.30+0.007 ms clock, 0.086+0/0.35/0.56+0.056 ms cpu, 39-&amp;gt;39-&amp;gt;7 MB, 40 MB goal, 8 P
gc 52 @2646.003s 0%: 0.009+0.22+0.005 ms clock, 0.076+0/0.25/0.47+0.045 ms cpu, 15-&amp;gt;15-&amp;gt;15 MB, 16 MB goal, 8 P
gc 53 @2692.902s 0%: 0.011+0.24+0.006 ms clock, 0.093+0/0.32/0.74+0.049 ms cpu, 30-&amp;gt;30-&amp;gt;30 MB, 31 MB goal, 8 P
scvg17: 0 MB released
scvg17: inuse: 33, idle: 30, sys: 63, released: 0, consumed: 63 (MB)
gc 54 @2784.303s 0%: 0.011+0.28+0.006 ms clock, 0.093+0/0.34/0.83+0.050 ms cpu, 58-&amp;gt;58-&amp;gt;27 MB, 60 MB goal, 8 P
scvg18: inuse: 48, idle: 14, sys: 63, released: 14, consumed: 48 (MB)
gc 55 @2867.607s 0%: 0.011+0.24+0.006 ms clock, 0.088+0/0.30/0.52+0.050 ms cpu, 53-&amp;gt;53-&amp;gt;22 MB, 54 MB goal, 8 P
gc 56 @2935.203s 0%: 0.019+0.23+0.023 ms clock, 0.15+0/0.30/0.65+0.19 ms cpu, 43-&amp;gt;43-&amp;gt;12 MB, 44 MB goal, 8 P
gc 57 @2972.103s 0%: 0.034+0.32+0.006 ms clock, 0.27+0/0.40/0.45+0.050 ms cpu, 23-&amp;gt;23-&amp;gt;23 MB, 24 MB goal, 8 P
scvg19: inuse: 33, idle: 30, sys: 63, released: 16, consumed: 46 (MB)
gc 58 @3044.011s 0%: 0.025+0.29+0.005 ms clock, 0.20+0/0.28/0.72+0.047 ms cpu, 46-&amp;gt;46-&amp;gt;14 MB, 47 MB goal, 8 P
gc 59 @3089.308s 0%: 0.060+0.31+0.007 ms clock, 0.48+0/0.33/0.75+0.056 ms cpu, 29-&amp;gt;29-&amp;gt;29 MB, 30 MB goal, 8 P
scvg20: inuse: 49, idle: 14, sys: 63, released: 14, consumed: 49 (MB)
gc 60 @3177.703s 0%: 0.041+0.41+0.008 ms clock, 0.33+0/0.48/0.69+0.071 ms cpu, 56-&amp;gt;56-&amp;gt;25 MB, 58 MB goal, 8 P
gc 61 @3255.110s 0%: 0.020+0.24+0.006 ms clock, 0.16+0/0.30/0.72+0.049 ms cpu, 49-&amp;gt;49-&amp;gt;18 MB, 50 MB goal, 8 P
scvg21: inuse: 33, idle: 29, sys: 63, released: 14, consumed: 48 (MB)
gc 62 @3311.110s 0%: 0.12+0.23+0.007 ms clock, 0.97+0/0.24/0.49+0.059 ms cpu, 35-&amp;gt;35-&amp;gt;4 MB, 36 MB goal, 8 P
gc 63 @3325.511s 0%: 0.012+0.15+0.004 ms clock, 0.098+0/0.20/0.39+0.036 ms cpu, 9-&amp;gt;9-&amp;gt;9 MB, 10 MB goal, 8 P
gc 64 @3353.608s 0%: 0.043+0.24+0.006 ms clock, 0.34+0/0.36/0.50+0.049 ms cpu, 18-&amp;gt;18-&amp;gt;18 MB, 19 MB goal, 8 P
gc 65 @3408.311s 0%: 0.012+0.26+0.006 ms clock, 0.098+0/0.27/0.52+0.049 ms cpu, 35-&amp;gt;35-&amp;gt;3 MB, 36 MB goal, 8 P
gc 66 @3420.110s 0%: 0.010+0.25+0.005 ms clock, 0.087+0/0.25/0.58+0.046 ms cpu, 7-&amp;gt;7-&amp;gt;7 MB, 8 MB goal, 8 P
gc 67 @3443.110s 0%: 0.012+0.23+0.006 ms clock, 0.097+0/0.28/0.63+0.048 ms cpu, 14-&amp;gt;14-&amp;gt;14 MB, 15 MB goal, 8 P
scvg22: inuse: 17, idle: 45, sys: 63, released: 0, consumed: 63 (MB)
gc 68 @3487.903s 0%: 0.011+0.26+0.004 ms clock, 0.092+0/0.29/0.67+0.037 ms cpu, 28-&amp;gt;28-&amp;gt;28 MB, 29 MB goal, 8 P
gc 69 @3575.304s 0%: 0.011+0.24+0.006 ms clock, 0.093+0/0.33/0.87+0.050 ms cpu, 56-&amp;gt;56-&amp;gt;24 MB, 57 MB goal, 8 P
scvg23: inuse: 33, idle: 29, sys: 63, released: 20, consumed: 42 (MB)
gc 70 @3650.811s 0%: 0.036+0.30+0.006 ms clock, 0.29+0/0.30/0.62+0.048 ms cpu, 48-&amp;gt;48-&amp;gt;17 MB, 49 MB goal, 8 P
gc 71 @3703.207s 0%: 0.011+0.24+0.006 ms clock, 0.088+0/0.23/0.50+0.048 ms cpu, 33-&amp;gt;33-&amp;gt;2 MB, 34 MB goal, 8 P
gc 72 @3710.409s 0%: 0.040+0.27+0.006 ms clock, 0.32+0/0.24/0.58+0.050 ms cpu, 4-&amp;gt;4-&amp;gt;4 MB, 5 MB goal, 8 P
gc 73 @3724.511s 0%: 0.020+0.37+0.006 ms clock, 0.16+0/0.44/0.46+0.052 ms cpu, 9-&amp;gt;9-&amp;gt;9 MB, 10 MB goal, 8 P
scvg24: inuse: 18, idle: 45, sys: 63, released: 29, consumed: 34 (MB)
gc 74 @3752.012s 0%: 0.022+0.29+0.006 ms clock, 0.17+0/0.38/0.67+0.052 ms cpu, 17-&amp;gt;17-&amp;gt;17 MB, 18 MB goal, 8 P
gc 75 @3805.608s 0%: 0.080+0.24+0.006 ms clock, 0.64+0/0.24/0.55+0.051 ms cpu, 34-&amp;gt;34-&amp;gt;3 MB, 35 MB goal, 8 P
gc 76 @3815.202s 0%: 0.011+0.23+0.005 ms clock, 0.091+0/0.23/0.47+0.047 ms cpu, 6-&amp;gt;6-&amp;gt;6 MB, 7 MB goal, 8 P
gc 77 @3833.902s 0%: 0.010+0.22+0.008 ms clock, 0.085+0/0.28/0.51+0.065 ms cpu, 12-&amp;gt;12-&amp;gt;12 MB, 13 MB goal, 8 P
gc 78 @3870.403s 0%: 0.041+0.23+0.007 ms clock, 0.32+0/0.31/0.77+0.062 ms cpu, 23-&amp;gt;23-&amp;gt;23 MB, 24 MB goal, 8 P
scvg25: inuse: 33, idle: 29, sys: 63, released: 28, consumed: 35 (MB)
gc 79 @3941.505s 0%: 0.094+0.31+0.063 ms clock, 0.75+0/0.37/0.73+0.50 ms cpu, 45-&amp;gt;45-&amp;gt;14 MB, 46 MB goal, 8 P
gc 80 @3985.311s 0%: 0.080+0.22+0.006 ms clock, 0.64+0/0.31/0.47+0.049 ms cpu, 28-&amp;gt;28-&amp;gt;28 MB, 29 MB goal, 8 P
scvg26: inuse: 49, idle: 14, sys: 63, released: 14, consumed: 49 (MB)
gc 81 @4070.701s 0%: 0.009+0.18+0.004 ms clock, 0.079+0/0.23/0.53+0.036 ms cpu, 54-&amp;gt;54-&amp;gt;23 MB, 56 MB goal, 8 P
gc 82 @4142.306s 0%: 0.064+0.27+0.006 ms clock, 0.51+0/0.29/0.61+0.051 ms cpu, 46-&amp;gt;46-&amp;gt;14 MB, 47 MB goal, 8 P
gc 83 @4187.104s 0%: 0.010+0.29+0.006 ms clock, 0.080+0/0.36/0.59+0.050 ms cpu, 28-&amp;gt;28-&amp;gt;28 MB, 29 MB goal, 8 P
scvg27: inuse: 33, idle: 29, sys: 63, released: 16, consumed: 47 (MB)
gc 84 @4274.406s 0%: 0.082+0.27+0.005 ms clock, 0.65+0/0.37/0.67+0.044 ms cpu, 56-&amp;gt;56-&amp;gt;24 MB, 57 MB goal, 8 P
gc 85 @4349.811s 0%: 0.074+0.30+0.006 ms clock, 0.59+0/0.38/0.74+0.053 ms cpu, 48-&amp;gt;48-&amp;gt;17 MB, 49 MB goal, 8 P
scvg28: inuse: 18, idle: 45, sys: 63, released: 8, consumed: 54 (MB)
gc 86 @4401.808s 0%: 0.012+0.23+0.006 ms clock, 0.096+0/0.24/0.58+0.054 ms cpu, 33-&amp;gt;33-&amp;gt;2 MB, 34 MB goal, 8 P
gc 87 @4408.310s 0%: 0.012+0.23+0.006 ms clock, 0.098+0/0.28/0.52+0.052 ms cpu, 4-&amp;gt;4-&amp;gt;4 MB, 5 MB goal, 8 P
gc 88 @4421.008s 0%: 0.022+0.25+0.006 ms clock, 0.17+0/0.30/0.66+0.049 ms cpu, 8-&amp;gt;8-&amp;gt;8 MB, 9 MB goal, 8 P
gc 89 @4445.808s 0%: 0.009+0.19+0.005 ms clock, 0.076+0/0.20/0.40+0.043 ms cpu, 15-&amp;gt;15-&amp;gt;15 MB, 16 MB goal, 8 P
gc 90 @4494.207s 0%: 0.014+0.33+0.008 ms clock, 0.11+0/0.44/0.70+0.067 ms cpu, 31-&amp;gt;31-&amp;gt;31 MB, 32 MB goal, 8 P
scvg29: inuse: 34, idle: 29, sys: 63, released: 26, consumed: 36 (MB)
gc 91 @4588.509s 0%: 0.011+0.27+0.006 ms clock, 0.092+0/0.34/0.83+0.049 ms cpu, 60-&amp;gt;60-&amp;gt;29 MB, 62 MB goal, 8 P
scvg30: inuse: 49, idle: 13, sys: 63, released: 13, consumed: 49 (MB)
gc 92 @4677.504s 0%: 0.033+0.34+0.006 ms clock, 0.26+0/0.44/0.88+0.053 ms cpu, 57-&amp;gt;57-&amp;gt;25 MB, 58 MB goal, 8 P
gc 93 @4756.211s 0%: 0.011+0.33+0.006 ms clock, 0.091+0/0.34/0.64+0.048 ms cpu, 50-&amp;gt;50-&amp;gt;19 MB, 51 MB goal, 8 P
scvg31: inuse: 34, idle: 29, sys: 63, released: 16, consumed: 47 (MB)
gc 94 @4814.709s 0%: 0.035+0.29+0.007 ms clock, 0.28+0/0.30/0.53+0.058 ms cpu, 37-&amp;gt;37-&amp;gt;6 MB, 38 MB goal, 8 P
gc 95 @4833.910s 0%: 0.046+0.25+0.006 ms clock, 0.36+0/0.33/0.64+0.051 ms cpu, 12-&amp;gt;12-&amp;gt;12 MB, 13 MB goal, 8 P
gc 96 @4871.405s 0%: 0.071+0.29+0.007 ms clock, 0.57+0/0.41/0.69+0.060 ms cpu, 24-&amp;gt;24-&amp;gt;24 MB, 25 MB goal, 8 P
gc 97 @4944.505s 0%: 0.066+0.27+0.006 ms clock, 0.53+0/0.29/0.63+0.054 ms cpu, 46-&amp;gt;46-&amp;gt;15 MB, 48 MB goal, 8 P
scvg32: inuse: 18, idle: 44, sys: 63, released: 15, consumed: 47 (MB)
gc 98 @4992.106s 0%: 0.024+0.30+0.006 ms clock, 0.19+0/0.35/0.78+0.048 ms cpu, 30-&amp;gt;30-&amp;gt;30 MB, 31 MB goal, 8 P
gc 99 @5084.906s 0%: 0.013+0.26+0.006 ms clock, 0.10+0/0.33/0.82+0.051 ms cpu, 59-&amp;gt;59-&amp;gt;28 MB, 61 MB goal, 8 P
scvg33: inuse: 34, idle: 29, sys: 63, released: 14, consumed: 49 (MB)
gc 100 @5171.006s 0%: 0.012+0.30+0.007 ms clock, 0.10+0/0.36/0.90+0.057 ms cpu, 55-&amp;gt;55-&amp;gt;24 MB, 56 MB goal, 8 P
gc 101 @5244.002s 0%: 0.010+0.24+0.006 ms clock, 0.086+0/0.25/0.43+0.055 ms cpu, 46-&amp;gt;46-&amp;gt;15 MB, 48 MB goal, 8 P
scvg34: inuse: 18, idle: 44, sys: 63, released: 12, consumed: 50 (MB)
gc 102 @5291.403s 0%: 0.011+0.25+0.008 ms clock, 0.090+0/0.33/0.80+0.066 ms cpu, 30-&amp;gt;30-&amp;gt;30 MB, 31 MB goal, 8 P
gc 103 @5383.803s 0%: 0.011+0.29+0.006 ms clock, 0.092+0/0.35/0.94+0.053 ms cpu, 59-&amp;gt;59-&amp;gt;28 MB, 60 MB goal, 8 P
scvg35: inuse: 34, idle: 29, sys: 63, released: 0, consumed: 62 (MB)
gc 104 @5469.107s 0%: 0.011+0.37+0.008 ms clock, 0.090+0/0.40/0.77+0.064 ms cpu, 54-&amp;gt;54-&amp;gt;23 MB, 56 MB goal, 8 P
gc 105 @5540.506s 0%: 0.031+0.30+0.006 ms clock, 0.25+0/0.31/0.71+0.050 ms cpu, 45-&amp;gt;45-&amp;gt;14 MB, 47 MB goal, 8 P
scvg36: inuse: 18, idle: 44, sys: 63, released: 12, consumed: 50 (MB)
gc 106 @5584.907s 0%: 0.099+0.33+0.008 ms clock, 0.79+0/0.43/0.72+0.068 ms cpu, 28-&amp;gt;28-&amp;gt;28 MB, 29 MB goal, 8 P
gc 107 @5671.406s 0%: 0.031+0.18+0.005 ms clock, 0.25+0/0.21/0.61+0.040 ms cpu, 55-&amp;gt;55-&amp;gt;24 MB, 56 MB goal, 8 P
scvg37: inuse: 34, idle: 28, sys: 63, released: 17, consumed: 46 (MB)
gc 108 @5745.210s 0%: 0.012+0.27+0.006 ms clock, 0.10+0/0.31/0.67+0.049 ms cpu, 47-&amp;gt;47-&amp;gt;16 MB, 48 MB goal, 8 P
gc 109 @5794.303s 0%: 0.008+0.23+0.006 ms clock, 0.067+0.061/0.25/0.71+0.049 ms cpu, 31-&amp;gt;31-&amp;gt;31 MB, 32 MB goal, 8 P
scvg38: inuse: 50, idle: 13, sys: 63, released: 13, consumed: 50 (MB)
gc 110 @5890.006s 0%: 0.033+0.23+0.006 ms clock, 0.26+0/0.27/0.53+0.051 ms cpu, 61-&amp;gt;61-&amp;gt;30 MB, 63 MB goal, 8 P
gc 111 @5981.705s 0%: 0.016+0.22+0.005 ms clock, 0.13+0/0.30/0.50+0.042 ms cpu, 58-&amp;gt;58-&amp;gt;27 MB, 60 MB goal, 8 P
scvg39: inuse: 34, idle: 28, sys: 63, released: 13, consumed: 49 (MB)
gc 112 @6065.606s 0%: 0.020+0.29+0.004 ms clock, 0.16+0/0.37/0.71+0.036 ms cpu, 53-&amp;gt;53-&amp;gt;22 MB, 55 MB goal, 8 P
gc 113 @6134.304s 0%: 0.010+0.17+0.004 ms clock, 0.085+0/0.22/0.44+0.033 ms cpu, 44-&amp;gt;44-&amp;gt;12 MB, 45 MB goal, 8 P
scvg40: inuse: 19, idle: 44, sys: 63, released: 2, consumed: 60 (MB)
gc 114 @6173.404s 0%: 0.018+0.25+0.011 ms clock, 0.14+0/0.32/0.78+0.092 ms cpu, 25-&amp;gt;25-&amp;gt;25 MB, 26 MB goal, 8 P
gc 115 @6249.602s 0%: 0.010+0.26+0.006 ms clock, 0.085+0/0.31/0.68+0.051 ms cpu, 48-&amp;gt;48-&amp;gt;17 MB, 50 MB goal, 8 P
scvg41: inuse: 34, idle: 28, sys: 63, released: 13, consumed: 49 (MB)
gc 116 @6303.302s 0%: 0.011+0.20+0.006 ms clock, 0.092+0/0.26/0.49+0.048 ms cpu, 34-&amp;gt;34-&amp;gt;3 MB, 35 MB goal, 8 P
gc 117 @6313.105s 0%: 0.006+0.12+0.003 ms clock, 0.049+0/0.15/0.41+0.029 ms cpu, 6-&amp;gt;6-&amp;gt;6 MB, 7 MB goal, 8 P
gc 118 @6332.206s 0%: 0.011+0.33+0.006 ms clock, 0.091+0/0.33/0.72+0.052 ms cpu, 12-&amp;gt;12-&amp;gt;12 MB, 13 MB goal, 8 P
gc 119 @6369.503s 0%: 0.010+0.37+0.015 ms clock, 0.085+0/0.38/0.59+0.12 ms cpu, 23-&amp;gt;23-&amp;gt;23 MB, 24 MB goal, 8 P
gc 120 @6442.206s 0%: 0.006+0.19+0.004 ms clock, 0.051+0/0.23/0.31+0.032 ms cpu, 46-&amp;gt;46-&amp;gt;15 MB, 47 MB goal, 8 P
scvg42: 0 MB released
scvg42: inuse: 19, idle: 44, sys: 63, released: 13, consumed: 50 (MB)
gc 121 @6489.106s 0%: 0.011+0.28+0.005 ms clock, 0.093+0/0.34/0.77+0.047 ms cpu, 30-&amp;gt;30-&amp;gt;30 MB, 31 MB goal, 8 P
gc 122 @6580.502s 0%: 0.009+0.18+0.004 ms clock, 0.079+0/0.26/0.46+0.038 ms cpu, 58-&amp;gt;58-&amp;gt;27 MB, 60 MB goal, 8 P
scvg43: inuse: 34, idle: 28, sys: 63, released: 15, consumed: 48 (MB)
gc 123 @6663.801s 0%: 0.007+0.24+0.004 ms clock, 0.063+0/0.20/0.60+0.035 ms cpu, 53-&amp;gt;53-&amp;gt;22 MB, 54 MB goal, 8 P
gc 124 @6731.406s 0%: 0.015+0.26+0.007 ms clock, 0.12+0/0.32/0.56+0.063 ms cpu, 43-&amp;gt;43-&amp;gt;12 MB, 44 MB goal, 8 P
scvg44: inuse: 19, idle: 44, sys: 63, released: 34, consumed: 28 (MB)
gc 125 @6768.305s 0%: 0.013+0.26+0.007 ms clock, 0.10+0/0.42/0.64+0.062 ms cpu, 23-&amp;gt;23-&amp;gt;23 MB, 24 MB goal, 8 P
gc 126 @6840.205s 0%: 0.006+0.20+0.005 ms clock, 0.055+0/0.23/0.49+0.046 ms cpu, 46-&amp;gt;46-&amp;gt;14 MB, 47 MB goal, 8 P
gc 127 @6885.603s 0%: 0.056+0.27+0.007 ms clock, 0.45+0/0.35/0.79+0.063 ms cpu, 29-&amp;gt;29-&amp;gt;29 MB, 30 MB goal, 8 P
scvg45: inuse: 35, idle: 28, sys: 63, released: 20, consumed: 42 (MB)
gc 128 @6974.002s 0%: 0.011+0.35+0.006 ms clock, 0.091+0/0.43/0.67+0.048 ms cpu, 56-&amp;gt;56-&amp;gt;25 MB, 58 MB goal, 8 P
gc 129 @7051.503s 0%: 0.011+0.29+0.006 ms clock, 0.091+0/0.35/0.84+0.048 ms cpu, 49-&amp;gt;49-&amp;gt;18 MB, 51 MB goal, 8 P
scvg46: inuse: 19, idle: 43, sys: 63, released: 12, consumed: 50 (MB)
gc 130 @7107.703s 0%: 0.016+0.21+0.004 ms clock, 0.13+0/0.29/0.57+0.036 ms cpu, 36-&amp;gt;36-&amp;gt;4 MB, 37 MB goal, 8 P
gc 131 @7122.402s 0%: 0.011+0.26+0.006 ms clock, 0.095+0/0.25/0.53+0.052 ms cpu, 9-&amp;gt;9-&amp;gt;9 MB, 10 MB goal, 8 P
gc 132 @7151.102s 0%: 0.008+0.17+0.004 ms clock, 0.071+0/0.21/0.50+0.036 ms cpu, 18-&amp;gt;18-&amp;gt;18 MB, 19 MB goal, 8 P
scvg47: inuse: 35, idle: 28, sys: 63, released: 28, consumed: 35 (MB)
gc 133 @7207.005s 0%: 0.006+0.14+0.004 ms clock, 0.053+0/0.15/0.33+0.039 ms cpu, 35-&amp;gt;35-&amp;gt;4 MB, 36 MB goal, 8 P
gc 134 @7221.202s 0%: 0.008+0.18+0.004 ms clock, 0.066+0/0.24/0.44+0.034 ms cpu, 9-&amp;gt;9-&amp;gt;9 MB, 10 MB goal, 8 P
gc 135 @7248.901s 0%: 0.011+0.24+0.007 ms clock, 0.091+0/0.28/0.60+0.062 ms cpu, 17-&amp;gt;17-&amp;gt;17 MB, 18 MB goal, 8 P
gc 136 @7302.906s 0%: 0.007+0.13+0.005 ms clock, 0.060+0/0.15/0.34+0.041 ms cpu, 34-&amp;gt;34-&amp;gt;3 MB, 35 MB goal, 8 P
gc 137 @7313.306s 0%: 0.011+0.23+0.008 ms clock, 0.089+0/0.29/0.57+0.070 ms cpu, 6-&amp;gt;6-&amp;gt;6 MB, 7 MB goal, 8 P
gc 138 @7333.603s 0%: 0.012+0.31+0.005 ms clock, 0.096+0/0.46/0.36+0.046 ms cpu, 13-&amp;gt;13-&amp;gt;13 MB, 14 MB goal, 8 P
scvg48: 0 MB released
scvg48: inuse: 19, idle: 43, sys: 63, released: 26, consumed: 36 (MB)
gc 139 @7373.204s 0%: 0.019+0.30+0.006 ms clock, 0.15+0/0.36/0.62+0.049 ms cpu, 25-&amp;gt;25-&amp;gt;25 MB, 26 MB goal, 8 P
gc 140 @7450.306s 0%: 0.053+1.4+0.005 ms clock, 0.42+0/0.24/0.56+0.041 ms cpu, 49-&amp;gt;49-&amp;gt;18 MB, 50 MB goal, 8 P
scvg49: inuse: 35, idle: 28, sys: 63, released: 13, consumed: 50 (MB)
gc 141 @7505.801s 0%: 0.008+0.43+0.005 ms clock, 0.068+0/0.57/0.75+0.045 ms cpu, 35-&amp;gt;35-&amp;gt;4 MB, 36 MB goal, 8 P
gc 142 @7519.105s 0%: 0.008+0.20+0.004 ms clock, 0.066+0/0.25/0.37+0.035 ms cpu, 8-&amp;gt;8-&amp;gt;8 MB, 9 MB goal, 8 P
gc 143 @7545.105s 0%: 0.008+0.16+0.004 ms clock, 0.071+0/0.21/0.51+0.036 ms cpu, 16-&amp;gt;16-&amp;gt;16 MB, 17 MB goal, 8 P
gc 144 @7595.706s 0%: 0.029+0.27+0.006 ms clock, 0.23+0/0.30/0.40+0.050 ms cpu, 32-&amp;gt;32-&amp;gt;1 MB, 33 MB goal, 8 P
gc 145 @7604.502s 0%: 0.008+0.19+0.009 ms clock, 0.064+0/0.20/0.50+0.078 ms cpu, 4-&amp;gt;4-&amp;gt;4 MB, 5 MB goal, 8 P
gc 146 @7616.706s 0%: 0.008+0.19+0.005 ms clock, 0.071+0/0.25/0.19+0.041 ms cpu, 7-&amp;gt;7-&amp;gt;7 MB, 8 MB goal, 8 P
gc 147 @7640.505s 0%: 0.006+0.16+0.004 ms clock, 0.055+0/0.22/0.26+0.033 ms cpu, 15-&amp;gt;15-&amp;gt;15 MB, 16 MB goal, 8 P
scvg50: inuse: 19, idle: 43, sys: 63, released: 18, consumed: 44 (MB)
gc 148 @7686.903s 0%: 0.010+0.26+0.005 ms clock, 0.085+0/0.34/0.91+0.047 ms cpu, 29-&amp;gt;29-&amp;gt;29 MB, 30 MB goal, 8 P
gc 149 @7777.303s 0%: 0.027+0.32+0.004 ms clock, 0.21+0/0.36/0.55+0.038 ms cpu, 58-&amp;gt;58-&amp;gt;26 MB, 59 MB goal, 8 P
scvg51: inuse: 35, idle: 27, sys: 63, released: 17, consumed: 46 (MB)
gc 150 @7858.705s 0%: 0.017+0.26+0.007 ms clock, 0.13+0/0.35/0.59+0.063 ms cpu, 52-&amp;gt;52-&amp;gt;21 MB, 53 MB goal, 8 P
gc 151 @7922.606s 0%: 0.016+0.22+0.006 ms clock, 0.12+0/0.30/0.51+0.055 ms cpu, 41-&amp;gt;41-&amp;gt;9 MB, 42 MB goal, 8 P
gc 152 @7952.301s 0%: 0.011+0.18+0.004 ms clock, 0.091+0/0.20/0.46+0.033 ms cpu, 19-&amp;gt;19-&amp;gt;19 MB, 20 MB goal, 8 P
scvg52: inuse: 19, idle: 43, sys: 63, released: 4, consumed: 59 (MB)
gc 153 @8010.203s 0%: 0.043+0.32+0.006 ms clock, 0.34+0/0.34/0.67+0.053 ms cpu, 37-&amp;gt;37-&amp;gt;5 MB, 38 MB goal, 8 P
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;ID_APP_MEMORY_SAMPLE&quot;&gt;experiment/memory/memory.go&lt;/h2&gt;
&lt;noscript&gt;&lt;pre&gt;400: Invalid request
&lt;/pre&gt;&lt;/noscript&gt;
&lt;script src=&quot;https://gist.github.com/83764ceff16a8b512da22a9d3a337fea.js&quot;&gt; &lt;/script&gt;

&lt;blockquote&gt;
  &lt;p&gt;EOF&lt;/p&gt;
&lt;/blockquote&gt;
</description>
				<pubDate>Mon, 25 Mar 2019 10:01:22 +0800</pubDate>
				<link>https://xenojoshua.com/2019/03/golang-memory/</link>
				<guid isPermaLink="true">https://xenojoshua.com/2019/03/golang-memory/</guid>
			</item>
		
	</channel>
</rss>
