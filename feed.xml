<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
	<channel>
		<title>Xenojoshua</title>
		<description>Joshua's Xeno World!</description>
		<link>https://xenojoshua.com</link>
		<atom:link href="https://xenojoshua.com/feed.xml" rel="self" type="application/rss+xml" />
		
			<item>
				<title>NSQ Note</title>
				<description>&lt;h4&gt;Table of Contents&lt;/h4&gt;
&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#1-前言&quot; id=&quot;markdown-toc-1-前言&quot;&gt;1. 前言&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#2-简介&quot; id=&quot;markdown-toc-2-简介&quot;&gt;2. 简介&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#3-入门使用&quot; id=&quot;markdown-toc-3-入门使用&quot;&gt;3. 入门使用&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#31-组件&quot; id=&quot;markdown-toc-31-组件&quot;&gt;3.1 组件&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#32-监控&quot; id=&quot;markdown-toc-32-监控&quot;&gt;3.2 监控&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#4-细节深入&quot; id=&quot;markdown-toc-4-细节深入&quot;&gt;4. 细节深入&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#nsqd消息不持久&quot; id=&quot;markdown-toc-nsqd消息不持久&quot;&gt;nsqd消息不持久&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#at-least-once&quot; id=&quot;markdown-toc-at-least-once&quot;&gt;at least once&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#消息的投递是无序的&quot; id=&quot;markdown-toc-消息的投递是无序的&quot;&gt;消息的投递是无序的&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#nsqlookupd延迟&quot; id=&quot;markdown-toc-nsqlookupd延迟&quot;&gt;nsqlookupd延迟&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#性能&quot; id=&quot;markdown-toc-性能&quot;&gt;性能&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#topic和channel&quot; id=&quot;markdown-toc-topic和channel&quot;&gt;topic和channel&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#自动消失的topic和channel&quot; id=&quot;markdown-toc-自动消失的topic和channel&quot;&gt;自动消失的topic和channel&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#max-in-flight&quot; id=&quot;markdown-toc-max-in-flight&quot;&gt;max-in-flight&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#减轻gc压力&quot; id=&quot;markdown-toc-减轻gc压力&quot;&gt;减轻GC压力&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#消息生命周期&quot; id=&quot;markdown-toc-消息生命周期&quot;&gt;消息生命周期&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#admin-metrics&quot; id=&quot;markdown-toc-admin-metrics&quot;&gt;&lt;a href=&quot;https://nsq.io/components/nsqadmin.html#metrics&quot; target=&quot;_blank&quot;&gt;Admin Metrics&lt;/a&gt;&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#5-使用范例&quot; id=&quot;markdown-toc-5-使用范例&quot;&gt;5. 使用范例&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#pubbeforesub&quot; id=&quot;markdown-toc-pubbeforesub&quot;&gt;pubBeforeSub&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#samemessagemultichannel&quot; id=&quot;markdown-toc-samemessagemultichannel&quot;&gt;sameMessageMultiChannel&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#subbeforepub&quot; id=&quot;markdown-toc-subbeforepub&quot;&gt;subBeforePub&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#errormessage&quot; id=&quot;markdown-toc-errormessage&quot;&gt;errorMessage&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;1-前言&quot;&gt;1. 前言&lt;/h2&gt;
&lt;p&gt;说到消息队列一般就会直接想起Kafka、Rocket、Rabbit之类的全功能消息队列。但实际上在应用程序制作的过程中，我们也很需要一些小而精巧的消息队列用来进行某些业务上的解耦，或者降低主业务的消耗、耗时等。 类似于redis作者的这个：&lt;a href=&quot;https://github.com/antirez/disque&quot; target=&quot;_blank&quot;&gt;antirez / disque&lt;/a&gt;。其中Nsq就是一款非常小巧而实用的消息队列，特别是它还基于Go语言编写，特别符合性能要求以及当前云原生的大方向。&lt;/p&gt;

&lt;h2 id=&quot;2-简介&quot;&gt;2. 简介&lt;/h2&gt;
&lt;p&gt;Nsq的官方网站在：&lt;a href=&quot;https://nsq.io/&quot; target=&quot;_blank&quot;&gt;nsq.io&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;一些比较关键的文档位置：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://nsq.io/overview/quick_start.html&quot; target=&quot;_blank&quot;&gt;Quick Start&lt;/a&gt;：快速上手使用&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://nsq.io/overview/features_and_guarantees.html&quot; target=&quot;_blank&quot;&gt;FEATURES &amp;amp; GUARANTEES&lt;/a&gt;：一些核心功能点，和需要注意的特性&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://nsq.io/overview/faq.html&quot; target=&quot;_blank&quot;&gt;FAQ&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://nsq.io/overview/performance.html&quot; target=&quot;_blank&quot;&gt;Performance&lt;/a&gt;：官方的性能测试指标&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://nsq.io/overview/design.html&quot; target=&quot;_blank&quot;&gt;Design&lt;/a&gt;：Nsq的核心设计，应该是所有官方文档中最重要的一篇了&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://nsq.io/overview/internals.html&quot; target=&quot;_blank&quot;&gt;INTERNALS&lt;/a&gt;：一些Nsq内部实现相关的细节&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;此外，还有一份PPT，虽然年代比较久远了（2012年），但基本上把所有Nsq中比较重要的点都提及到了，如果需要快速过一遍的话，看这篇PPT也是个不错的选择：&lt;a href=&quot;https://speakerdeck.com/snakes/nsq-nyc-golang-meetup&quot; target=&quot;_blank&quot;&gt;NSQ - NYC Golang Meetup&lt;/a&gt;。&lt;/p&gt;

&lt;h2 id=&quot;3-入门使用&quot;&gt;3. 入门使用&lt;/h2&gt;
&lt;p&gt;快速入门可以查看官方文档：&lt;a href=&quot;https://nsq.io/overview/quick_start.html&quot; target=&quot;_blank&quot;&gt;Quick Start&lt;/a&gt;。Node的npm包在：&lt;a href=&quot;https://www.npmjs.com/package/nsqjs&quot; target=&quot;_blank&quot;&gt;nsqjs&lt;/a&gt;。&lt;/p&gt;

&lt;h3 id=&quot;31-组件&quot;&gt;3.1 组件&lt;/h3&gt;
&lt;p&gt;Nsq主要有3个组件：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;nsqd：真正的消息队列服务进程，消息收发都是由客户端直接和nsqd沟通完成，没有任何第三方中间成员&lt;/li&gt;
  &lt;li&gt;nsqlookupd：消息队列的拓扑管理，主要负责：
    &lt;ul&gt;
      &lt;li&gt;nsqd的注册，存活管理&lt;/li&gt;
      &lt;li&gt;topic和channel的管理，所有的topic有哪些，分别分布在哪几个nsqd上lookupd都知道&lt;/li&gt;
      &lt;li&gt;客户端会先到lookupd上查询目标的topic，找到之后再与某个匹配的nsqd进行连接，最后收发消息&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;nsqadmin：管理界面，功能非常丰富&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;关于各组件的启动参数，以及HTTP的API，都可以在官方文档中找到。需要记住的只有一点，末尾为0的端口都是TCP端口，1的端口都是HTTP端口。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://nsq.io/components/nsqd.html&quot; target=&quot;_blank&quot;&gt;NSQD&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://nsq.io/components/nsqd.html#debugging-and-profiling&quot; target=&quot;_blank&quot;&gt;Debugging and Profiling&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://nsq.io/components/nsqd.html#tls&quot; target=&quot;_blank&quot;&gt;TLS&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://nsq.io/components/nsqd.html#auth&quot; target=&quot;_blank&quot;&gt;AUTH&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://nsq.io/components/nsqd.html#end-to-end-processing-latency&quot; target=&quot;_blank&quot;&gt;End-to-End Processing Latency&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://nsq.io/components/nsqd.html#statsd--graphite-integration&quot; target=&quot;_blank&quot;&gt;Statsd / Graphite Integration&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://nsq.io/components/nsqlookupd.html&quot; target=&quot;_blank&quot;&gt;NSQLOOKUPD&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://nsq.io/components/nsqlookupd.html#deletion-and-tombstones&quot; target=&quot;_blank&quot;&gt;Deletion and Tombstones&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://nsq.io/components/nsqadmin.html&quot; target=&quot;_blank&quot;&gt;NSQADMIN&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://nsq.io/components/nsqadmin.html#statsd--graphite-integration&quot; target=&quot;_blank&quot;&gt;statsd / Graphite Integration&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://nsq.io/components/nsqadmin.html#admin-notifications&quot; target=&quot;_blank&quot;&gt;Admin Notifications&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://nsq.io/components/nsqadmin.html#metrics&quot; target=&quot;_blank&quot;&gt;Metrics&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://nsq.io/components/utilities.html&quot; target=&quot;_blank&quot;&gt;UTILITIES&lt;/a&gt;：一系列实用的Nsq工具组件
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://nsq.io/components/utilities.html#nsq_stat&quot; target=&quot;_blank&quot;&gt;nsq_stat&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://nsq.io/components/utilities.html#nsq_tail&quot; target=&quot;_blank&quot;&gt;nsq_tail&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://nsq.io/components/utilities.html#nsq_to_file&quot; target=&quot;_blank&quot;&gt;nsq_to_file&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://nsq.io/components/utilities.html#nsq_to_http&quot; target=&quot;_blank&quot;&gt;nsq_to_http&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://nsq.io/components/utilities.html#nsq_to_nsq&quot; target=&quot;_blank&quot;&gt;nsq_to_nsq&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://nsq.io/components/utilities.html#to_nsq&quot; target=&quot;_blank&quot;&gt;to_nsq&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;32-监控&quot;&gt;3.2 监控&lt;/h3&gt;
&lt;p&gt;作为go语言编写的组件，理所当然的Nsq的各组件会暴露HTTP的&lt;code&gt;/debug/pprof&lt;/code&gt;终端，作为性能查询的输出终端。&lt;/p&gt;

&lt;h2 id=&quot;4-细节深入&quot;&gt;4. 细节深入&lt;/h2&gt;
&lt;p&gt;接下来的章节，我会把所有我个人觉得比较重要的Nsq相关内容都列进去。&lt;/p&gt;

&lt;h3 id=&quot;nsqd消息不持久&quot;&gt;nsqd消息不持久&lt;/h3&gt;
&lt;p&gt;默认行为是所有收到的消息都存储在nsqd的内存中，且没有任何内建的replication机制。所以默认情况下，节点挂掉的话，消息会丢失，如果这种情况不可接受，就需要自己做一些机制来规避消息丢失。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;--mem-queue-size&lt;/code&gt;参数可以限定存储在内存中的消息数量，如果超量，则会将后续的消息存储在磁盘上。将该值设置为0可以将消息全部存储在磁盘上。&lt;/p&gt;

&lt;h3 id=&quot;at-least-once&quot;&gt;at least once&lt;/h3&gt;
&lt;p&gt;消息消费失败或超时会requeue，并在后续重新进行分发，所以一条消息可能会被多次投递到client进行消费，以保证该消息确定被消费完毕。消费者需要做好幂等，否则一条消息可能会别重复消费多次。&lt;/p&gt;

&lt;h3 id=&quot;消息的投递是无序的&quot;&gt;消息的投递是无序的&lt;/h3&gt;
&lt;p&gt;nsqd只管将消息按顺序投递出去，但消息可能因为网络原因等导致最终消费的顺序和投递的顺序不一致。&lt;/p&gt;

&lt;h3 id=&quot;nsqlookupd延迟&quot;&gt;nsqlookupd延迟&lt;/h3&gt;
&lt;p&gt;服务发现被设计为最终一致。在扩散的过程中，可能会有时间差。客户端会最终从nsqlookupd获得所有的topic信息。&lt;/p&gt;

&lt;p&gt;测试应用中很可能出现的一情况就是：nsqlookupd上并没有任何topic消息，producer创建，nsqd上创建出topic，并在之后同步topic信息到nsqlookupd。而在这之前早得多consumer就已经连上nsqlookupd并没有收到任何topic的信息，这中间会有一个时间差。consumer会静止在那里，直到配置的lookup间隔时间到了，然后consumer会再次查询nsqlookupd，并最终或得到topic信息以及所属的nsqd。&lt;/p&gt;

&lt;p&gt;可以看下这几个comment：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/nsqio/nsqio.github.io/issues/42#issuecomment-432905203&quot; target=&quot;_blank&quot;&gt;docs: clarify when topics are created automatically #42 #comment-432905203&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/nsqio/nsqio.github.io/issues/42#issuecomment-432905514&quot; target=&quot;_blank&quot;&gt;docs: clarify when topics are created automatically #42 #comment-432905514&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;性能&quot;&gt;性能&lt;/h3&gt;
&lt;p&gt;看官方文档：&lt;a href=&quot;https://nsq.io/overview/performance.html&quot; target=&quot;_blank&quot;&gt;Performance&lt;/a&gt;。&lt;/p&gt;

&lt;h3 id=&quot;topic和channel&quot;&gt;topic和channel&lt;/h3&gt;
&lt;p&gt;估计这是使用Nsq的程序员最初最难搞懂的东西。一般来说其他的消息队列都是将消息发布到topic中，然后多个consumer消费一个topic。但Nsq在topic和consumer之间还插入了一个channel的概念。&lt;/p&gt;

&lt;p&gt;这里主要是看一个图：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/resources/2020/12/nsq-note/nsq_topic_channel.gif&quot; alt=&quot;&quot; target=&quot;_blank&quot; /&gt;&lt;/p&gt;

&lt;p&gt;需要理解的最重要的概念是，同一个topic下的所有channel，都会得到进入topic的消息的拷贝。同样一份消息，进入topic后会分别拷贝并进入每一个channel，每个channel都需要各自的consumer把消息消费掉，否则就会造成消息积压。&lt;/p&gt;

&lt;p&gt;简单来说：如果你希望和一般的消息队列一样的 topic =&amp;gt; consumers，那么就让所有该topic下的消费者使用同一个channel即可。&lt;/p&gt;

&lt;p&gt;channel的设计让Nsq可以做一些其他消息队列做不到的用途，最为常见的是：消息广播。多个consumer都需要在某个业务触发的时候得到通知，那么就在某个topic下，让所有的consumer都定义一个自己的channel连接进去（topic_channel_node_1/…），这样所有的consumer都各自占据了一个channel，而所有的channel都会得到topic内消息的拷贝，所以他们会都得到同样的消息通知。&lt;/p&gt;

&lt;h3 id=&quot;自动消失的topic和channel&quot;&gt;自动消失的topic和channel&lt;/h3&gt;
&lt;p&gt;topic和channel都是持久化的，默认情况下在创建成功后，他们都是不会自动消失的，时间长了之后清理就会比较麻烦。而上面的例子中那种类似消息通知的情况，其实topic和channel都是生命周期非常短暂的，一般我们希望他们在没用了之后就被销毁掉。&lt;/p&gt;

&lt;p&gt;在topic和channel的名字后面添加&lt;code&gt;#ephemeral&lt;/code&gt;可以做到这点，当所有连接在topic或channel上的producer/consumer都断开连接之后，nsqd就会自动删除该topic或channel。&lt;/p&gt;

&lt;p&gt;需要注意的是，&lt;code&gt;#ephemeral&lt;/code&gt;命名的topic/channel在超过&lt;code&gt;--mem-queue-size&lt;/code&gt;的限制之后不会将消息写入磁盘，而是直接丢弃。这点行为上和普通的topic/channel非常不同，一定要小心注意。&lt;/p&gt;

&lt;h3 id=&quot;max-in-flight&quot;&gt;max-in-flight&lt;/h3&gt;
&lt;p&gt;客户端可以设置该值（比如说10），然后客户端在连接到nsqd的时候会发送&lt;code&gt;RDY 10&lt;/code&gt;过去，nsqd就会知道该client的同时处理能力。在接下来的消息推送过程中，nsqd会不断向该client推送消息，直到目前已分发且尚未反馈结果的消息数量达到该数值（10）为止。这是为了更好的性能，client程序如果实现了多线程的话，可以充分利用线程和CPU来消费消息，而不是只有一个线程在工作，其他的都在闲置。&lt;/p&gt;

&lt;p&gt;对于node程序来说，这个数值就没有意义了，因为node进程只有一个工作线程。&lt;/p&gt;

&lt;p&gt;还可以看下这个comment：&lt;a href=&quot;https://github.com/nsqio/go-nsq/issues/221#issuecomment-352865779&quot; target=&quot;_blank&quot;&gt;Question about concurrency and Max in Flight #221&lt;/a&gt;。&lt;/p&gt;

&lt;h3 id=&quot;减轻gc压力&quot;&gt;减轻GC压力&lt;/h3&gt;
&lt;p&gt;见官方文档：&lt;a href=&quot;https://nsq.io/overview/internals.html#reducing-gc-pressure&quot; target=&quot;_blank&quot;&gt;Reducing GC Pressure&lt;/a&gt;。&lt;/p&gt;

&lt;h3 id=&quot;消息生命周期&quot;&gt;消息生命周期&lt;/h3&gt;
&lt;p&gt;一条消息的生命周期（消费端）主要是控制在client手中，这点和普通的消息队列的设计理念完全不同，这里需要花点时间稍微整理下。&lt;/p&gt;

&lt;p&gt;消息的创建是producer连接到nsqd，并进行publish的操作，这点没有任何问题。创建成功消息就收到了，失败的话，则消息在nsqd上不存在。&lt;/p&gt;

&lt;p&gt;消息的消费由nsqd向连接的consumer进行推送：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;消息已分发且尚未反馈（未到超时时间），状态：In-Flight&lt;/li&gt;
  &lt;li&gt;消息已分发且超时没有反馈（该超时的时长是在客户端设置的！），状态：Time Out，该消息会被nsqd重新requeue（REQ）
    &lt;ul&gt;
      &lt;li&gt;消息在处理中，且耗时很长，可以由客户端进行 Touch，这样该消息就不会Time Out&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;消息发送后，可以由客户端主动进行requeue（REQ）
    &lt;ul&gt;
      &lt;li&gt;requeue行为可以附带设置延迟（Deferred）&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;消息发送后，如果客户端出错被认为是有问题的，客户端自身需要恢复，则客户端可以将该消息反馈为backoff，这个操作会导致：
    &lt;ul&gt;
      &lt;li&gt;nsqd会将该消息requeue，消息本身会再次（如果设置延迟的话，也会Deferred）分发&lt;/li&gt;
      &lt;li&gt;此外这个操作会导致客户端将自身的RDY设置为0，意味着这个客户端短时间内将拒绝处理任何消息&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;消息发送后，如果该消息之前被requeue则该消息会附带Attempts（重试）数，客户端在尝试失败后，会匹配失败次数，如果超过限制，则该消息会被DISCARD，即客户端会直接将该消息标记为Finished（FIN）
    &lt;ul&gt;
      &lt;li&gt;如果客户端的max attempts设置为0，则可以无限次重试，不会被discard&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;消息发送后，可以由客户端标记为完成Finished（FIN）&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;可以看到Nsq的客户端有很大的权利，特别是失败重试的决策是由客户端做的，如果超限消息就会被丢弃，标记为完成。&lt;/p&gt;

&lt;p&gt;更多关于Timeout相关，请见comment：&lt;a href=&quot;https://github.com/nsqio/nsq/issues/1028#issuecomment-385126434&quot; target=&quot;_blank&quot;&gt;Timeout options #1028&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;关于requeue和backoff的详细分析，可以看这篇：&lt;a href=&quot;https://github.com/judwhite/NsqSharp/wiki/NSQ-Requeue-and-Backoff&quot; target=&quot;_blank&quot;&gt;NSQ Requeue and Backoff&lt;/a&gt;。&lt;/p&gt;

&lt;h3 id=&quot;admin-metrics&quot;&gt;&lt;a href=&quot;https://nsq.io/components/nsqadmin.html#metrics&quot; target=&quot;_blank&quot;&gt;Admin Metrics&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Admin统计数据里的一些词汇可以简单解释下：&lt;/p&gt;

&lt;p&gt;Message Queues：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Depth：当前存储在内存和磁盘上的消息总量（尚未被分发）&lt;/li&gt;
  &lt;li&gt;In-Flight：目前已经被分发，但尚未被标记为 完成（FIN）、重新入队（REQ）或是超时的消息总量&lt;/li&gt;
  &lt;li&gt;Deferred：目前被重新入队且显式标记为推迟处理并且尚未到重新分发阶段的消息总量&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Statistics：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Requeued：消息因超时或被显式要求而重新入队的次数&lt;/li&gt;
  &lt;li&gt;Timed Out：消息因超过设定的超时时长未响应，而被标记为超时的次数&lt;/li&gt;
  &lt;li&gt;Messages：在节点启动之后收到的消息总数&lt;/li&gt;
  &lt;li&gt;Rate：过去两次statsd间隔间，每秒新收到的消息数量&lt;/li&gt;
  &lt;li&gt;Connections：连接总数&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Client Connections：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;NSQd Host：Address of the nsqd node this client is connected to.&lt;/li&gt;
  &lt;li&gt;In-flight：当前发送给该client等待返回的消息数量&lt;/li&gt;
  &lt;li&gt;Ready Count：当前client节点最高in-flight可能的消息数量&lt;/li&gt;
  &lt;li&gt;Finished：所有当前client节点标记为FIN的消息数量&lt;/li&gt;
  &lt;li&gt;Requeued：同上，REQ&lt;/li&gt;
  &lt;li&gt;Messages：所有发送给该client节点的消息数量&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;5-使用范例&quot;&gt;5. 使用范例&lt;/h2&gt;
&lt;p&gt;光说理论上的东西比较枯燥，实践操作也是比较重要的，下面可以通过几个例子来看下Nsq的一些行为。&lt;/p&gt;

&lt;h3 id=&quot;pubbeforesub&quot;&gt;pubBeforeSub&lt;/h3&gt;

&lt;p&gt;If there is no topic on &lt;code&gt;nsqd&lt;/code&gt; (first execution), reader will suck for a long time. Since at the first time reader connect to lookupd, there hasn’t been updated with the published topics info yet. So it will suck until readers retrieve topics info next time.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;&lt;/span&gt;pubBeforeSub:
    Two writers initialized
    Two writers publish &lt;span class=&quot;m&quot;&gt;3&lt;/span&gt; messages each into topic &lt;span class=&quot;s2&quot;&gt;&amp;quot;TOPIC1&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;total &lt;span class=&quot;m&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    One of the writer publish &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt; message into topic &lt;span class=&quot;s2&quot;&gt;&amp;quot;TOPIC2_UNI&amp;quot;&lt;/span&gt;
    Two readers created &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; topic &lt;span class=&quot;s2&quot;&gt;&amp;quot;TOPIC1&amp;quot;&lt;/span&gt; with the same channel &lt;span class=&quot;s2&quot;&gt;&amp;quot;TOPIC1_READER_CHANNEL&amp;quot;&lt;/span&gt;
    One reader created &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; topic &lt;span class=&quot;s2&quot;&gt;&amp;quot;TOPIC2_UNI&amp;quot;&lt;/span&gt; with channel &lt;span class=&quot;s2&quot;&gt;&amp;quot;TOPIC2_UNI#ephemeral&amp;quot;&lt;/span&gt;
    -
    Two readers share the total &lt;span class=&quot;m&quot;&gt;6&lt;/span&gt; messages in topic &lt;span class=&quot;s2&quot;&gt;&amp;quot;TOPIC1&amp;quot;&lt;/span&gt;
    One reader consume the message in topic &lt;span class=&quot;s2&quot;&gt;&amp;quot;TOPIC2_UNI&amp;quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;&lt;/span&gt;➜  couchnsq git:&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;master&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ✗ ./bash/nsq_run.sh
  Nsq:Writer:bgF6l bgF6l: ready +0ms
  Nsq:Writer:Plwtx Plwtx: ready +0ms
  Nsq:Reader:oiFQg oiFQg: nsqd connected: &lt;span class=&quot;s2&quot;&gt;&amp;quot;10.10.2.126:4250&amp;quot;&lt;/span&gt; +0ms
  Nsq:Reader:oiFQg oiFQg: nsqd connected: &lt;span class=&quot;s2&quot;&gt;&amp;quot;10.10.2.126:4150&amp;quot;&lt;/span&gt; +0ms
  Nsq:Reader:MmLbX MmLbX: nsqd connected: &lt;span class=&quot;s2&quot;&gt;&amp;quot;10.10.2.126:4250&amp;quot;&lt;/span&gt; +0ms
  Nsq:Reader:MmLbX MmLbX: nsqd connected: &lt;span class=&quot;s2&quot;&gt;&amp;quot;10.10.2.126:4150&amp;quot;&lt;/span&gt; +0ms
  Nsq:Reader:8hpju 8hpju: nsqd connected: &lt;span class=&quot;s2&quot;&gt;&amp;quot;10.10.2.126:4250&amp;quot;&lt;/span&gt; +0ms
  Nsq:Reader:oiFQg oiFQg: message 0e38318eeb01e000 got: &lt;span class=&quot;s2&quot;&gt;&amp;quot;{&amp;quot;&lt;/span&gt;msg&lt;span class=&quot;s2&quot;&gt;&amp;quot;:&amp;quot;&lt;/span&gt;TOPIC1:jQ77FfY8lS&lt;span class=&quot;s2&quot;&gt;&amp;quot;}&amp;quot;&lt;/span&gt; +16ms
  Nsq:Message oiFQg: message 0e38318eeb01e000 respond: &lt;span class=&quot;s2&quot;&gt;&amp;quot;0&amp;quot;&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&amp;quot;FIN 0e38318eeb01e000&lt;/span&gt;
&lt;span class=&quot;s2&quot;&gt;  Nsq:Message &amp;quot;&lt;/span&gt; +0ms
  Nsq:Reader:MmLbX MmLbX: message 0e38318eeb01e001 got: &lt;span class=&quot;s2&quot;&gt;&amp;quot;{&amp;quot;&lt;/span&gt;msg&lt;span class=&quot;s2&quot;&gt;&amp;quot;:&amp;quot;&lt;/span&gt;TOPIC1:ONvD8mH4Jq&lt;span class=&quot;s2&quot;&gt;&amp;quot;}&amp;quot;&lt;/span&gt; +16ms
  Nsq:Message MmLbX: message 0e38318eeb01e001 respond: &lt;span class=&quot;s2&quot;&gt;&amp;quot;0&amp;quot;&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&amp;quot;FIN 0e38318eeb01e001&lt;/span&gt;
&lt;span class=&quot;s2&quot;&gt;  Nsq:Message &amp;quot;&lt;/span&gt; +1ms
  Nsq:Reader:8hpju 8hpju: ready +17ms
  Nsq:Reader:MmLbX MmLbX: message 0e38318eeb01e002 got: &lt;span class=&quot;s2&quot;&gt;&amp;quot;{&amp;quot;&lt;/span&gt;msg&lt;span class=&quot;s2&quot;&gt;&amp;quot;:&amp;quot;&lt;/span&gt;TOPIC1:7xjankTlzU&lt;span class=&quot;s2&quot;&gt;&amp;quot;}&amp;quot;&lt;/span&gt; +3ms
  Nsq:Message MmLbX: message 0e38318eeb01e002 respond: &lt;span class=&quot;s2&quot;&gt;&amp;quot;0&amp;quot;&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&amp;quot;FIN 0e38318eeb01e002&lt;/span&gt;
&lt;span class=&quot;s2&quot;&gt;  Nsq:Message &amp;quot;&lt;/span&gt; +3ms
  Nsq:Reader:oiFQg oiFQg: message 0e38318eeb435000 got: &lt;span class=&quot;s2&quot;&gt;&amp;quot;{&amp;quot;&lt;/span&gt;msg&lt;span class=&quot;s2&quot;&gt;&amp;quot;:&amp;quot;&lt;/span&gt;TOPIC1:bQOiIt7BLE&lt;span class=&quot;s2&quot;&gt;&amp;quot;}&amp;quot;&lt;/span&gt; +5ms
  Nsq:Message oiFQg: message 0e38318eeb435000 respond: &lt;span class=&quot;s2&quot;&gt;&amp;quot;0&amp;quot;&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&amp;quot;FIN 0e38318eeb435000&lt;/span&gt;
&lt;span class=&quot;s2&quot;&gt;  Nsq:Message &amp;quot;&lt;/span&gt; +1ms
  Nsq:Reader:8hpju 8hpju: message 0e38318eec435000 got: &lt;span class=&quot;s2&quot;&gt;&amp;quot;{&amp;quot;&lt;/span&gt;msg&lt;span class=&quot;s2&quot;&gt;&amp;quot;:&amp;quot;&lt;/span&gt;TOPIC2_UNI:Ms10V0jtpc&lt;span class=&quot;s2&quot;&gt;&amp;quot;}&amp;quot;&lt;/span&gt; +3ms
  Nsq:Message 8hpju: message 0e38318eec435000 respond: &lt;span class=&quot;s2&quot;&gt;&amp;quot;0&amp;quot;&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&amp;quot;FIN 0e38318eec435000&lt;/span&gt;
&lt;span class=&quot;s2&quot;&gt;  Nsq:Message &amp;quot;&lt;/span&gt; +1ms
  Nsq:Reader:MmLbX MmLbX: message 0e38318eeb435001 got: &lt;span class=&quot;s2&quot;&gt;&amp;quot;{&amp;quot;&lt;/span&gt;msg&lt;span class=&quot;s2&quot;&gt;&amp;quot;:&amp;quot;&lt;/span&gt;TOPIC1:APZJDBiVP9&lt;span class=&quot;s2&quot;&gt;&amp;quot;}&amp;quot;&lt;/span&gt; +3ms
  Nsq:Message MmLbX: message 0e38318eeb435001 respond: &lt;span class=&quot;s2&quot;&gt;&amp;quot;0&amp;quot;&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&amp;quot;FIN 0e38318eeb435001&lt;/span&gt;
&lt;span class=&quot;s2&quot;&gt;  Nsq:Message &amp;quot;&lt;/span&gt; +1ms
  Nsq:Reader:MmLbX MmLbX: message 0e38318eeb435002 got: &lt;span class=&quot;s2&quot;&gt;&amp;quot;{&amp;quot;&lt;/span&gt;msg&lt;span class=&quot;s2&quot;&gt;&amp;quot;:&amp;quot;&lt;/span&gt;TOPIC1:CXF6AQVBDr&lt;span class=&quot;s2&quot;&gt;&amp;quot;}&amp;quot;&lt;/span&gt; +53ms
  Nsq:Message MmLbX: message 0e38318eeb435002 respond: &lt;span class=&quot;s2&quot;&gt;&amp;quot;0&amp;quot;&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&amp;quot;FIN 0e38318eeb435002&lt;/span&gt;
&lt;span class=&quot;s2&quot;&gt;  Nsq:Message &amp;quot;&lt;/span&gt; +53ms
^C  Nsq:Writer:bgF6l bgF6l: closed +1m
  Nsq:Writer:Plwtx Plwtx: closed +1m
  Nsq:Reader:oiFQg oiFQg: notReady +26s
  Nsq:Reader:MmLbX MmLbX: notReady +25s
  Nsq:Reader:8hpju 8hpju: notReady +26s
NsqTest: all cleared&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;samemessagemultichannel&quot;&gt;sameMessageMultiChannel&lt;/h3&gt;

&lt;p&gt;Multiple channels subscribe the same topic will receive duplicate messages.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;&lt;/span&gt;sameMessageMultiChannel:
    Two writers initialized
    One of the writer publish &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt; message into topic &lt;span class=&quot;s2&quot;&gt;&amp;quot;TOPIC_SAME&amp;quot;&lt;/span&gt;
    Two readers created &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; topic &lt;span class=&quot;s2&quot;&gt;&amp;quot;TOPIC_SAME&amp;quot;&lt;/span&gt; with two channels &lt;span class=&quot;s2&quot;&gt;&amp;quot;TOPIC_SAME_CHANNEL_1/2&amp;quot;&lt;/span&gt; subscribe the same topic
    -
    Two readers receive the same message&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;&lt;/span&gt;➜  couchnsq git:&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;master&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ✗ ./bash/nsq_run.sh
  Nsq:Writer:oeAOC oeAOC: ready +0ms
  Nsq:Writer:EdW9U EdW9U: ready +0ms
  Nsq:Reader:SuqpY SuqpY: nsqd connected: &lt;span class=&quot;s2&quot;&gt;&amp;quot;10.10.2.126:4250&amp;quot;&lt;/span&gt; +0ms
  Nsq:Reader:vKCk9 vKCk9: nsqd connected: &lt;span class=&quot;s2&quot;&gt;&amp;quot;10.10.2.126:4250&amp;quot;&lt;/span&gt; +0ms
  Nsq:Reader:vKCk9 vKCk9: ready +5ms
  Nsq:Reader:SuqpY SuqpY: ready +6ms
  Nsq:Reader:vKCk9 vKCk9: message 0e38322140035000 got: &lt;span class=&quot;s2&quot;&gt;&amp;quot;{&amp;quot;&lt;/span&gt;msg&lt;span class=&quot;s2&quot;&gt;&amp;quot;:&amp;quot;&lt;/span&gt;TOPIC_SAME:Hn4tB5UA0N&lt;span class=&quot;s2&quot;&gt;&amp;quot;}&amp;quot;&lt;/span&gt; +3ms
  Nsq:Message vKCk9: message 0e38322140035000 respond: &lt;span class=&quot;s2&quot;&gt;&amp;quot;0&amp;quot;&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&amp;quot;FIN 0e38322140035000&lt;/span&gt;
&lt;span class=&quot;s2&quot;&gt;  Nsq:Message &amp;quot;&lt;/span&gt; +0ms
  Nsq:Reader:SuqpY SuqpY: message 0e38322140035000 got: &lt;span class=&quot;s2&quot;&gt;&amp;quot;{&amp;quot;&lt;/span&gt;msg&lt;span class=&quot;s2&quot;&gt;&amp;quot;:&amp;quot;&lt;/span&gt;TOPIC_SAME:Hn4tB5UA0N&lt;span class=&quot;s2&quot;&gt;&amp;quot;}&amp;quot;&lt;/span&gt; +3ms
  Nsq:Message SuqpY: message 0e38322140035000 respond: &lt;span class=&quot;s2&quot;&gt;&amp;quot;0&amp;quot;&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&amp;quot;FIN 0e38322140035000&lt;/span&gt;
&lt;span class=&quot;s2&quot;&gt;  Nsq:Message &amp;quot;&lt;/span&gt; +0ms
^C  Nsq:Writer:oeAOC oeAOC: closed +3s
  Nsq:Writer:EdW9U EdW9U: closed +3s
  Nsq:Reader:vKCk9 vKCk9: notReady +3s
  Nsq:Reader:SuqpY SuqpY: notReady +3s
NsqTest: all cleared&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;subbeforepub&quot;&gt;subBeforePub&lt;/h3&gt;

&lt;p&gt;If the topic not deleted before execution (or first run). Reader will suck for a long time, the reason have been explained previously.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;&lt;/span&gt;subBeforePub:
    Two writers initialized
    One reader create to subscribe an non-existing topic &lt;span class=&quot;s2&quot;&gt;&amp;quot;TOPIC_UNKNOWN&amp;quot;&lt;/span&gt;
    One of the writer &lt;span class=&quot;nb&quot;&gt;wait&lt;/span&gt; 1000ms, &lt;span class=&quot;k&quot;&gt;then&lt;/span&gt; publish &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt; message into topic &lt;span class=&quot;s2&quot;&gt;&amp;quot;TOPIC_UNKNOWN&amp;quot;&lt;/span&gt;
    -
    One reader &lt;span class=&quot;nb&quot;&gt;wait&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; a long &lt;span class=&quot;nb&quot;&gt;time&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then&lt;/span&gt; receive the message&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;&lt;/span&gt;➜  couchnsq git:&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;master&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ✗ ./bash/nsq_run.sh
  Nsq:Writer:2Fr6p 2Fr6p: ready +0ms
  Nsq:Writer:vFIw5 vFIw5: ready +0ms
  Nsq:Reader:uR6Lp uR6Lp: nsqd connected: &lt;span class=&quot;s2&quot;&gt;&amp;quot;10.10.2.126:4150&amp;quot;&lt;/span&gt; +0ms
  Nsq:Reader:uR6Lp uR6Lp: ready +5ms
  Nsq:Reader:uR6Lp uR6Lp: message 0e38323df741e000 got: &lt;span class=&quot;s2&quot;&gt;&amp;quot;{&amp;quot;&lt;/span&gt;msg&lt;span class=&quot;s2&quot;&gt;&amp;quot;:&amp;quot;&lt;/span&gt;TOPIC_UNKNOWN:kCwBySUMY0&lt;span class=&quot;s2&quot;&gt;&amp;quot;}&amp;quot;&lt;/span&gt; +984ms
  Nsq:Message uR6Lp: message 0e38323df741e000 respond: &lt;span class=&quot;s2&quot;&gt;&amp;quot;0&amp;quot;&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&amp;quot;FIN 0e38323df741e000&lt;/span&gt;
&lt;span class=&quot;s2&quot;&gt;  Nsq:Message &amp;quot;&lt;/span&gt; +0ms
^C  Nsq:Writer:2Fr6p 2Fr6p: closed +3s
  Nsq:Writer:vFIw5 vFIw5: closed +3s
  Nsq:Reader:uR6Lp uR6Lp: notReady +2s
NsqTest: all cleared&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;errormessage&quot;&gt;errorMessage&lt;/h3&gt;

&lt;p&gt;Send error message, and message would be requeue with backoff in the reader, finally it would be discarded (finished).&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;quot;maxAttempts&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;&lt;/span&gt;➜  couchnsq git:&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;master&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ✗ ./bash/nsq_run.sh
  Nsq:Writer:5P9rd 5P9rd: ready +0ms
  Nsq:Writer:KKhyz KKhyz: ready +0ms
  Nsq:Reader:hSWmK hSWmK: nsqd connected: &lt;span class=&quot;s2&quot;&gt;&amp;quot;10.10.2.126:4150&amp;quot;&lt;/span&gt; +0ms
  Nsq:Reader:hSWmK hSWmK: ready +5ms
  Nsq:Reader:hSWmK hSWmK: message 0e3832a5bb01e000 got: &lt;span class=&quot;s2&quot;&gt;&amp;quot;{&amp;quot;&lt;/span&gt;msg&lt;span class=&quot;s2&quot;&gt;&amp;quot;:&amp;quot;&lt;/span&gt;should throw error:WGZ9VlLLPa&lt;span class=&quot;s2&quot;&gt;&amp;quot;}&amp;quot;&lt;/span&gt; +4ms
  Nsq:Reader:hSWmK hSWmK: message 0e3832a5bb01e000 error &lt;span class=&quot;p&quot;&gt;&amp;amp;&lt;/span&gt; requeue, attempts: &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt; +1ms
  Nsq:Message hSWmK: message 0e3832a5bb01e000 backoff +0ms
  Nsq:Message hSWmK: message 0e3832a5bb01e000 respond: &lt;span class=&quot;s2&quot;&gt;&amp;quot;1&amp;quot;&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&amp;quot;REQ 0e3832a5bb01e000 2000&lt;/span&gt;
&lt;span class=&quot;s2&quot;&gt;  Nsq:Message &amp;quot;&lt;/span&gt; +1ms
  Nsq:Reader:hSWmK hSWmK: message 0e3832a5bb01e000 got: &lt;span class=&quot;s2&quot;&gt;&amp;quot;{&amp;quot;&lt;/span&gt;msg&lt;span class=&quot;s2&quot;&gt;&amp;quot;:&amp;quot;&lt;/span&gt;should throw error:WGZ9VlLLPa&lt;span class=&quot;s2&quot;&gt;&amp;quot;}&amp;quot;&lt;/span&gt; +4s
  Nsq:Reader:hSWmK hSWmK: message 0e3832a5bb01e000 error &lt;span class=&quot;p&quot;&gt;&amp;amp;&lt;/span&gt; requeue, attempts: &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt; +0ms
  Nsq:Message hSWmK: message 0e3832a5bb01e000 backoff +4s
  Nsq:Message hSWmK: message 0e3832a5bb01e000 respond: &lt;span class=&quot;s2&quot;&gt;&amp;quot;1&amp;quot;&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&amp;quot;REQ 0e3832a5bb01e000 2000&lt;/span&gt;
&lt;span class=&quot;s2&quot;&gt;  Nsq:Message &amp;quot;&lt;/span&gt; +0ms
  Nsq:Reader:hSWmK hSWmK: message 0e3832a5bb01e000 got: &lt;span class=&quot;s2&quot;&gt;&amp;quot;{&amp;quot;&lt;/span&gt;msg&lt;span class=&quot;s2&quot;&gt;&amp;quot;:&amp;quot;&lt;/span&gt;should throw error:WGZ9VlLLPa&lt;span class=&quot;s2&quot;&gt;&amp;quot;}&amp;quot;&lt;/span&gt; +7s
  Nsq:Reader:hSWmK hSWmK: message 0e3832a5bb01e000 error &lt;span class=&quot;p&quot;&gt;&amp;amp;&lt;/span&gt; requeue, attempts: &lt;span class=&quot;m&quot;&gt;3&lt;/span&gt; +0ms
  Nsq:Message hSWmK: message 0e3832a5bb01e000 backoff +7s
  Nsq:Message hSWmK: message 0e3832a5bb01e000 respond: &lt;span class=&quot;s2&quot;&gt;&amp;quot;1&amp;quot;&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&amp;quot;REQ 0e3832a5bb01e000 2000&lt;/span&gt;
&lt;span class=&quot;s2&quot;&gt;  Nsq:Message &amp;quot;&lt;/span&gt; +0ms
  Nsq:Reader:hSWmK hSWmK: message discarded: &lt;span class=&quot;s2&quot;&gt;&amp;quot;{&amp;quot;&lt;/span&gt;msg&lt;span class=&quot;s2&quot;&gt;&amp;quot;:&amp;quot;&lt;/span&gt;should throw error:WGZ9VlLLPa&lt;span class=&quot;s2&quot;&gt;&amp;quot;}&amp;quot;&lt;/span&gt; +11s
^C  Nsq:Writer:5P9rd 5P9rd: closed +23s
  Nsq:Writer:KKhyz KKhyz: closed +23s
  Nsq:Reader:hSWmK hSWmK: notReady +2s
NsqTest: all cleared&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

</description>
				<pubDate>Thu, 31 Dec 2020 10:02:22 +0800</pubDate>
				<link>https://xenojoshua.com/2020/12/nsq-note/</link>
				<guid isPermaLink="true">https://xenojoshua.com/2020/12/nsq-note/</guid>
			</item>
		
			<item>
				<title>使用proxychains进行命令行proxy设置</title>
				<description>&lt;h4&gt;Table of Contents&lt;/h4&gt;
&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#前言&quot; id=&quot;markdown-toc-前言&quot;&gt;前言&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#安装&quot; id=&quot;markdown-toc-安装&quot;&gt;安装&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#mac下的sip问题&quot; id=&quot;markdown-toc-mac下的sip问题&quot;&gt;MAC下的SIP问题&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;前言&quot;&gt;前言&lt;/h2&gt;
&lt;p&gt;proxychains是一款相当好用的命令行命令proxy设置工具。一般来说使用ssh登录、curl、wget等一系列命令，有的时候都很需要进行proxy设置，理由么大家都懂的。这时候有像proxychains这样的工具就会非常方便。&lt;/p&gt;

&lt;p&gt;官网：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/rofl0r/proxychains-ng&quot; target=&quot;_blank&quot;&gt;rofl0r/proxychains-ng&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;安装&quot;&gt;安装&lt;/h2&gt;
&lt;p&gt;在MAC下安装仍旧非常简单：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;&lt;/span&gt;$ brew update --verbose
$ brew install proxychains-ng --verbose&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;然后创建配置文件：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;&lt;/span&gt;$ mkdir ~/.proxychains
$ vim ~/.proxychains/proxychains.conf&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;内容如下，其实也就没几条有用的：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ini&quot; data-lang=&quot;ini&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# proxychains.conf  VER 4.x&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#        HTTP, SOCKS4a, SOCKS5 tunneling proxifier with DNS.&lt;/span&gt;


&lt;span class=&quot;c1&quot;&gt;# The option below identifies how the ProxyList is treated.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# only one option should be uncommented at time,&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# otherwise the last appearing option will be accepted&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;dynamic_chain&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# Dynamic - Each connection will be done via chained proxies&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# all proxies chained in the order as they appear in the list&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# at least one proxy must be online to play in chain&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# (dead proxies are skipped)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# otherwise EINTR is returned to the app&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#strict_chain&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# Strict - Each connection will be done via chained proxies&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# all proxies chained in the order as they appear in the list&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# all proxies must be online to play in chain&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# otherwise EINTR is returned to the app&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#round_robin_chain&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# Round Robin - Each connection will be done via chained proxies&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# of chain_len length&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# all proxies chained in the order as they appear in the list&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# at least one proxy must be online to play in chain&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# (dead proxies are skipped).&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# the start of the current proxy chain is the proxy after the last&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# proxy in the previously invoked proxy chain.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# if the end of the proxy chain is reached while looking for proxies&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# start at the beginning again.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# otherwise EINTR is returned to the app&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# These semantics are not guaranteed in a multithreaded environment.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#random_chain&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# Random - Each connection will be done via random proxy&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# (or proxy chain, see  chain_len) from the list.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# this option is good to test your IDS :)&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# Make sense only if random_chain or round_robin_chain&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#chain_len = 2&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# Quiet mode (no output from library)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#quiet_mode&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# Proxy DNS requests - no leak for DNS data&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#proxy_dns&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# set the class A subnet number to use for the internal remote DNS mapping&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# we use the reserved 224.x.x.x range by default,&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# if the proxified app does a DNS request, we will return an IP from that range.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# on further accesses to this ip we will send the saved DNS name to the proxy.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# in case some control-freak app checks the returned ip, and denies to&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# connect, you can use another subnet, e.g. 10.x.x.x or 127.x.x.x.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# of course you should make sure that the proxified app does not need&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# *real* access to this subnet.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# i.e. dont use the same subnet then in the localnet section&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#remote_dns_subnet 127&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#remote_dns_subnet 10&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#remote_dns_subnet 224&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# Some timeouts in milliseconds&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;tcp_read_time_out 15000&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;tcp_connect_time_out 8000&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;### Examples for localnet exclusion&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;## localnet ranges will *not* use a proxy to connect.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;## Exclude connections to 192.168.1.0/24 with port 80&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# localnet 192.168.1.0:80/255.255.255.0&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;## Exclude connections to 192.168.100.0/24&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# localnet 192.168.100.0/255.255.255.0&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;## Exclude connections to ANYwhere with port 80&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# localnet 0.0.0.0:80/0.0.0.0&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;## RFC5735 Loopback address range&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;## if you enable this, you have to make sure remote_dns_subnet is not 127&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;## you&amp;#39;ll need to enable it if you want to use an application that&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;## connects to localhost.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# localnet 127.0.0.0/255.0.0.0&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;## RFC1918 Private Address Ranges&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# localnet 10.0.0.0/255.0.0.0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# localnet 172.16.0.0/255.240.0.0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# localnet 192.168.0.0/255.255.0.0&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# ProxyList format&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#       type  ip  port [user pass]&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#       (values separated by&amp;#39;tab&amp;#39;or&amp;#39;blank&amp;#39;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#       only numeric ipv4 addresses are valid&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#        Examples:&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#        socks5  192.168.67.78    1080    lamer    secret&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#        http    192.168.89.3     8080    justu    hidden&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#        socks4  192.168.1.49     1080&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#        http    192.168.39.93    8080&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#       proxy types: http, socks4, socks5&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#        ( auth types supported:&amp;quot;basic&amp;quot;-http&amp;quot;user/pass&amp;quot;-socks )&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;[ProxyList]&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# add proxy here ...&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# meanwile&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# defaults set to&amp;quot;tor&amp;quot;&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;socks5 127.0.0.1 6153&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;http 127.0.0.1 6152&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;这里需要注意，安装完之后的命令名为：&lt;code&gt;proxychains4&lt;/code&gt;，而不是proxychains。&lt;/p&gt;

&lt;h2 id=&quot;mac下的sip问题&quot;&gt;MAC下的SIP问题&lt;/h2&gt;
&lt;p&gt;MAC下如果使用proxychains来进行操作的话，会发现一些命令其实并没有生效。这里就会遇到一个SIP的问题，具体可以看：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://medium.com/@xiaoqinglin2018/mac-osx-%E4%BD%BF%E7%94%A8proxychains-ng-91ba61472fdf&quot; target=&quot;_blank&quot;&gt;Mac OSX 使用proxychains-ng&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;上面的处理方法是完全关闭SIP，这其实是不太可取的，这里还有另一个解决思路，见：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.tcdw.net/post/proxychains-with-sip/&quot; target=&quot;_blank&quot;&gt;故事：试图不关闭 SIP 在 macOS Sierra 上使用 proxychains-ng&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;最后使用的命令会如下：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;&lt;/span&gt;$ cp /usr/bin/ssh ~/Prog/Cmd
$
$ proxychains4 ~/Prog/Cmd/ssh -v -p &lt;span class=&quot;m&quot;&gt;22&lt;/span&gt; user@ip&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;blockquote&gt;
  &lt;p&gt;EOF&lt;/p&gt;
&lt;/blockquote&gt;
</description>
				<pubDate>Mon, 19 Oct 2020 10:02:22 +0800</pubDate>
				<link>https://xenojoshua.com/2020/10/proxychains/</link>
				<guid isPermaLink="true">https://xenojoshua.com/2020/10/proxychains/</guid>
			</item>
		
			<item>
				<title>使用frp内网穿透进行ssh登录</title>
				<description>&lt;h4&gt;Table of Contents&lt;/h4&gt;
&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#前言&quot; id=&quot;markdown-toc-前言&quot;&gt;前言&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#架构与场景理解&quot; id=&quot;markdown-toc-架构与场景理解&quot;&gt;架构与场景理解&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#安装&quot; id=&quot;markdown-toc-安装&quot;&gt;安装&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#服务端&quot; id=&quot;markdown-toc-服务端&quot;&gt;服务端&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#客户端&quot; id=&quot;markdown-toc-客户端&quot;&gt;客户端&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#最终使用&quot; id=&quot;markdown-toc-最终使用&quot;&gt;最终使用&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#links&quot; id=&quot;markdown-toc-links&quot;&gt;Links&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;前言&quot;&gt;前言&lt;/h2&gt;
&lt;p&gt;内网穿透工具frp，有需要的人肯定已经了解它是什么了，不知道的可以去官网看下：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fatedier/frp&quot; target=&quot;_blank&quot;&gt;fatedier/frp&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;架构与场景理解&quot;&gt;架构与场景理解&lt;/h2&gt;
&lt;p&gt;这块网上其实已经有相当多的文章进行过阐述了，这里就简单说一些我的理解。&lt;/p&gt;

&lt;p&gt;首先需要明确角色：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;用户：需要从外部（公网上）访问&lt;code&gt;内部服务&lt;/code&gt;的人&lt;/li&gt;
  &lt;li&gt;frp服务端：处于公网上，拥有固定IP或者固定域名的主机；必须是主机，需要可以在这台主机上安装frp的服务端程序&lt;/li&gt;
  &lt;li&gt;frp客户端：处于内网上，缺失固定IP或者从公网上无法访问得到的一些局域网内主机；同样必须是主机，必须可以安装frp的客户端程序&lt;/li&gt;
  &lt;li&gt;内部服务：可以是和frp客户端安装在同一台主机上的应用程序，也可能是和frp客户端处于同一内网的某一台主机上的一些应用程序&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;如果内部服务这台主机在公网上可以直接访问得到，那么用户就可以直接过去访问，就没有frp什么事情了。但很多情况就是如此不尽如人意，某些服务和主机就是隐藏在一些内部私有的网络里面的，在公网上是没办法直接访问的。&lt;/p&gt;

&lt;p&gt;这时候就需要在公网的主机上安装frp服务端程序，作为一个大家的目标（后续用户和frp客户端都会主动连接到这台主机上，这个主机是双向标的）。用户连接上来是为了访问内部服务，而frp客户端连接上来，则是为了告知frp服务端，内部服务到底在哪里。因为处于内网的服务，frp服务端也不能主动得知，必须frp客户端主动连接上去告知服务端，我在这里。&lt;/p&gt;

&lt;p&gt;上面是一些比较感性的理解，具体的可以看图（注意图上的&lt;code&gt;s&lt;/code&gt;和&lt;code&gt;c&lt;/code&gt;，frps就是刚才说的frp服务端，而frpc则是frp客户端）：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/resources/2020/10/frp/frp_arch.png&quot; alt=&quot;&quot; target=&quot;_blank&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;安装&quot;&gt;安装&lt;/h2&gt;
&lt;p&gt;安装分为服务端和客户端两部分。frp在大部分的linux发行版本上都是没有的，所以一般需要直接从github上下载release包，具体可以到&lt;a href=&quot;https://github.com/fatedier/frp/releases&quot; target=&quot;_blank&quot;&gt;这里&lt;/a&gt;查看。&lt;/p&gt;

&lt;p&gt;下面的例子都以ubuntu为例，应用场景都是：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;用户 =&amp;gt; frp服务端（公网） =&amp;gt; frp客户端（私有网络） =&amp;gt; 目标内部主机ssh（私有网络）
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;服务端&quot;&gt;服务端&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;&lt;/span&gt;$ uname -m
x86_64
$ wget https://github.com/fatedier/frp/releases/download/v0.34.1/frp_0.34.1_linux_amd64.tar.gz
$ tar zxvf frp_0.34.1_linux_amd64.tar.gz
$ rm ./frp_0.34.1_linux_amd64.tar.gz
$ mv -f ./frp_0.34.1_linux_amd64 ./frp
$ &lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; frp
$ vim frps.ini&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ini&quot; data-lang=&quot;ini&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;bind_port&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;7000&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;token&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;some_secret_string&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;dashboard_port&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;7500&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;dashboard_user&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;user_name&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;dashboard_pwd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;user_password&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;说明：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;bind_port：frp客户端连接frp服务端的端口号&lt;/li&gt;
  &lt;li&gt;token：frp客户端连接服务端需要一致的秘钥（客户端和服务端两者的ini配置文件里这个字串必须一致）&lt;/li&gt;
  &lt;li&gt;dashboard_port：frp服务端暴露出来，让管理员监控的面板的端口号&lt;/li&gt;
  &lt;li&gt;dashboard_user：监控面板的用户名&lt;/li&gt;
  &lt;li&gt;dashboard_pwd：监控面板的用户密码&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;接下来创建ubuntu的开机启动和daemon控制：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;&lt;/span&gt;$ sudo vim /etc/systemd/system/frps.service&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;填写内容：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ini&quot; data-lang=&quot;ini&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;[Unit]&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;Description&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;frps daemon&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;After&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;syslog.target  network.target&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;Wants&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;network.target&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;[Service]&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;Type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;simple&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;ExecStart&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/path_to_frp/frps -c /path_to_frp/frps.ini&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;Restart&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;always&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;RestartSec&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;1min&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;ExecStop&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/usr/bin/killall frps&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;[Install]&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;WantedBy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;multi-user.target&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;启动、设置开机启动、重启，三个命令：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;&lt;/span&gt;$ sudo systemctl start frps
$ sudo systemctl &lt;span class=&quot;nb&quot;&gt;enable&lt;/span&gt; frps
$ sudo systemctl restart frps&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;客户端&quot;&gt;客户端&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;&lt;/span&gt;$ uname -m
x86_64
$ wget https://github.com/fatedier/frp/releases/download/v0.34.1/frp_0.34.1_linux_amd64.tar.gz
$ tar zxvf frp_0.34.1_linux_amd64.tar.gz
$ rm ./frp_0.34.1_linux_amd64.tar.gz
$ mv -f ./frp_0.34.1_linux_amd64 ./frp
$ &lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; frp
$ vim frpc.ini&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ini&quot; data-lang=&quot;ini&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;[common]&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;server_addr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;some_ip&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;server_port&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;7000&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;token&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;some_secret_string&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;[ssh]&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;tcp&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;local_ip&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;127.0.0.1 &lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;local_port&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;22&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;remote_port&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;6000&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;说明：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;server_addr：frp服务端所在的机器的IP，也就是公网上的那台&lt;/li&gt;
  &lt;li&gt;server_port：这个端口号记得和之前服务端的配置一致&lt;/li&gt;
  &lt;li&gt;token：这个也必须和之前服务端的配置一致&lt;/li&gt;
  &lt;li&gt;local_port：内部服务所在那台机器，也就目标登录机的ssh端口号&lt;/li&gt;
  &lt;li&gt;remote_port：这个端口号，是指&lt;code&gt;frpc的local_port&lt;/code&gt;应该映射到&lt;code&gt;frps主机上的哪个端口号&lt;/code&gt;，也就是最终用户ssh登录时使用的端口号&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;仍旧需要创建ubuntu的开机启动和daemon控制：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;&lt;/span&gt;$ sudo vim /etc/systemd/system/frpc.service&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;填写内容：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ini&quot; data-lang=&quot;ini&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;[Unit]&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;Description&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;frpc daemon&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;After&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;syslog.target  network.target&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;Wants&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;network.target&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;[Service]&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;Type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;simple&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;ExecStart&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/path_to_frp/frpc -c /path_to_frp/frpc.ini&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;Restart&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;always&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;RestartSec&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;1min&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;ExecStop&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/usr/bin/killall frpc&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;[Install]&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;WantedBy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;multi-user.target&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;启动、设置开机启动、重启，三个命令：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;&lt;/span&gt;$ sudo systemctl start frpc
$ sudo systemctl &lt;span class=&quot;nb&quot;&gt;enable&lt;/span&gt; frpc
$ sudo systemctl restart frpc&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;最终使用&quot;&gt;最终使用&lt;/h2&gt;
&lt;p&gt;最终用户ssh登录的时候，使用的命令如下：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;&lt;/span&gt;$ ssh -v -p &lt;span class=&quot;m&quot;&gt;6000&lt;/span&gt; user@frps_ip&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;links&quot;&gt;Links&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fatedier/frp/issues/176&quot; target=&quot;_blank&quot;&gt;frp怎样开机启动和后台运行?#176&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/42071021&quot; target=&quot;_blank&quot;&gt;搭建frp用作内网SSH穿透&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.zjun.info/2020/frptest.html&quot; target=&quot;_blank&quot;&gt;frp内网穿透原理及实战应用&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://sspai.com/post/52523&quot; target=&quot;_blank&quot;&gt;使用frp进行内网穿透&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.hi-linux.com/posts/25686.html&quot; target=&quot;_blank&quot;&gt;推荐一款很好用的内网穿透工具 FRP&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;EOF&lt;/p&gt;
&lt;/blockquote&gt;
</description>
				<pubDate>Mon, 19 Oct 2020 10:02:22 +0800</pubDate>
				<link>https://xenojoshua.com/2020/10/frp/</link>
				<guid isPermaLink="true">https://xenojoshua.com/2020/10/frp/</guid>
			</item>
		
			<item>
				<title>Koa2 中间件范例</title>
				<description>&lt;h4&gt;Table of Contents&lt;/h4&gt;
&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#前言&quot; id=&quot;markdown-toc-前言&quot;&gt;前言&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#中间件执行顺序&quot; id=&quot;markdown-toc-中间件执行顺序&quot;&gt;中间件执行顺序&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#洋葱式的调用顺序&quot; id=&quot;markdown-toc-洋葱式的调用顺序&quot;&gt;洋葱式的调用顺序&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#中断的链式调用&quot; id=&quot;markdown-toc-中断的链式调用&quot;&gt;中断的链式调用&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#不使用await&quot; id=&quot;markdown-toc-不使用await&quot;&gt;不使用await&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#结论&quot; id=&quot;markdown-toc-结论&quot;&gt;结论&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;前言&quot;&gt;前言&lt;/h2&gt;
&lt;p&gt;发现之前对koa的中间件的理解还不够完全，这里做点笔记。&lt;/p&gt;

&lt;h2 id=&quot;中间件执行顺序&quot;&gt;中间件执行顺序&lt;/h2&gt;
&lt;p&gt;这里主要需要理解&lt;code&gt;next&lt;/code&gt;函数。这个函数有几个点：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;调用next函数，就会触发下一个中间件的业务逻辑执行（异步），但不会离开当前中间件，如果在next之后有逻辑代码的话，会正常执行&lt;/li&gt;
  &lt;li&gt;该函数调用是异步的，因此可以await等待后续的中间件执行结束返回回来&lt;/li&gt;
  &lt;li&gt;以next函数为分隔线，上面是顺序执行，下面是倒叙执行，上面的由上向下，下面的由下向上&lt;/li&gt;
  &lt;li&gt;next函数的显示执行构成了一个中间件的调用链，如果任何一个中间件没有调用next，则链条会在当前中间件中断，后续即便注册了再多的中间件也不会被执行&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;看几个例子：&lt;/p&gt;

&lt;h3 id=&quot;洋葱式的调用顺序&quot;&gt;洋葱式的调用顺序&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-typescript&quot; data-lang=&quot;typescript&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;use&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;: &lt;span class=&quot;kt&quot;&gt;Koa.Context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;next&lt;/span&gt;: &lt;span class=&quot;kt&quot;&gt;Koa.Next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;1a&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;1b&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;use&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;: &lt;span class=&quot;kt&quot;&gt;Koa.Context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;next&lt;/span&gt;: &lt;span class=&quot;kt&quot;&gt;Koa.Next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;2a&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;2b&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;use&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;: &lt;span class=&quot;kt&quot;&gt;Koa.Context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;next&lt;/span&gt;: &lt;span class=&quot;kt&quot;&gt;Koa.Next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;3a&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;3b&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;最后的输出是：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;1a
2a
3a
3b
2b
1b
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;中断的链式调用&quot;&gt;中断的链式调用&lt;/h3&gt;

&lt;p&gt;如果某个中间件没有调用next，则后续的调用链会中断。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-typescript&quot; data-lang=&quot;typescript&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;use&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;: &lt;span class=&quot;kt&quot;&gt;Koa.Context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;next&lt;/span&gt;: &lt;span class=&quot;kt&quot;&gt;Koa.Next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;1a&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;1b&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;use&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;: &lt;span class=&quot;kt&quot;&gt;Koa.Context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;next&lt;/span&gt;: &lt;span class=&quot;kt&quot;&gt;Koa.Next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;2a&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;use&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;: &lt;span class=&quot;kt&quot;&gt;Koa.Context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;next&lt;/span&gt;: &lt;span class=&quot;kt&quot;&gt;Koa.Next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;3a&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;3b&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;最后的输出是：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;1a
2a
1b
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;不使用await&quot;&gt;不使用await&lt;/h3&gt;

&lt;p&gt;如果在调用next的时候不使用await的话，当前的中间件触发下一个中间件的执行（异步）后不会等待后续中间件返回，后续的业务逻辑会&lt;code&gt;立即&lt;/code&gt;继续执行。会打乱洋葱回调的顺序。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-typescript&quot; data-lang=&quot;typescript&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;use&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;: &lt;span class=&quot;kt&quot;&gt;Koa.Context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;next&lt;/span&gt;: &lt;span class=&quot;kt&quot;&gt;Koa.Next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;1a&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;1b&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;use&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;: &lt;span class=&quot;kt&quot;&gt;Koa.Context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;next&lt;/span&gt;: &lt;span class=&quot;kt&quot;&gt;Koa.Next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;2a&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;2b&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;use&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;: &lt;span class=&quot;kt&quot;&gt;Koa.Context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;next&lt;/span&gt;: &lt;span class=&quot;kt&quot;&gt;Koa.Next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;3a&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;3b&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;最后的输出是：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;1a
2a
3a
2b
3b
1b
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;结论&quot;&gt;结论&lt;/h2&gt;
&lt;p&gt;主要有下面几点：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;制作通用的中间件的时候，必须在代码中执行&lt;code&gt;return next();&lt;/code&gt;将调用链继续下去，否则后面的中间件将会失效&lt;/li&gt;
  &lt;li&gt;一般编写中间件，如果某些业务需要等其他中间件执行结束后处理则使用&lt;code&gt;await next();&lt;/code&gt;，否则一律&lt;code&gt;return next();&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;next调用返回的是一个Promise，因此也可以使用&lt;code&gt;next().catch&lt;/code&gt;之类的方式来进行错误处理&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;EOF&lt;/p&gt;
&lt;/blockquote&gt;
</description>
				<pubDate>Thu, 02 Jul 2020 10:02:22 +0800</pubDate>
				<link>https://xenojoshua.com/2020/07/koa-middleware/</link>
				<guid isPermaLink="true">https://xenojoshua.com/2020/07/koa-middleware/</guid>
			</item>
		
			<item>
				<title>MaterialUI Notes</title>
				<description>&lt;h4&gt;Table of Contents&lt;/h4&gt;
&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#前言&quot; id=&quot;markdown-toc-前言&quot;&gt;前言&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#notes&quot; id=&quot;markdown-toc-notes&quot;&gt;Notes&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#样式&quot; id=&quot;markdown-toc-样式&quot;&gt;样式&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#栅格系统&quot; id=&quot;markdown-toc-栅格系统&quot;&gt;栅格系统&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#网格断点&quot; id=&quot;markdown-toc-网格断点&quot;&gt;网格断点&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#断点隐藏&quot; id=&quot;markdown-toc-断点隐藏&quot;&gt;断点隐藏&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#流式网格&quot; id=&quot;markdown-toc-流式网格&quot;&gt;流式网格&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#常用容器&quot; id=&quot;markdown-toc-常用容器&quot;&gt;常用容器&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#间距设置&quot; id=&quot;markdown-toc-间距设置&quot;&gt;间距设置&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#宽高尺寸设置&quot; id=&quot;markdown-toc-宽高尺寸设置&quot;&gt;宽高尺寸设置&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#颜色系统&quot; id=&quot;markdown-toc-颜色系统&quot;&gt;颜色系统&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#阴影&quot; id=&quot;markdown-toc-阴影&quot;&gt;阴影&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#层级&quot; id=&quot;markdown-toc-层级&quot;&gt;层级&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#文字铸排&quot; id=&quot;markdown-toc-文字铸排&quot;&gt;文字铸排&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#统一风格系统&quot; id=&quot;markdown-toc-统一风格系统&quot;&gt;统一风格系统&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#typescript&quot; id=&quot;markdown-toc-typescript&quot;&gt;Typescript&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;前言&quot;&gt;前言&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://material-ui.com/zh/&quot; target=&quot;_blank&quot;&gt;MaterialUI&lt;/a&gt;算是现在比较常见的UIKit了，用的人多，社区比较大，而且各种环境和框架的移植也很丰富，用起来比较简单和方便。当然使用的时候因为一些特有的概念和语法糖，还是需要一点上手时间。&lt;/p&gt;

&lt;p&gt;官方的教程：&lt;a href=&quot;https://material-ui.com/zh/getting-started/usage/#quick-start&quot; target=&quot;_blank&quot;&gt;Tutorial&lt;/a&gt;（基本上没用）。&lt;/p&gt;

&lt;p&gt;一些资源：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://material-ui.com/zh/components/material-icons/&quot; target=&quot;_blank&quot;&gt;Material Icons 图标&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://material-ui.com/zh/getting-started/installation/#font-icons&quot; target=&quot;_blank&quot;&gt;字体的安装&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://material-ui.com/store/&quot; target=&quot;_blank&quot;&gt;Material 主题商店&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;notes&quot;&gt;Notes&lt;/h2&gt;
&lt;h3 id=&quot;样式&quot;&gt;样式&lt;/h3&gt;
&lt;p&gt;直接的样式处理及样式的编程，见文档：&lt;a href=&quot;https://material-ui.com/zh/styles/basics/&quot; target=&quot;_blank&quot;&gt;@material-ui/styles&lt;/a&gt;。简单范例：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-typescript&quot; data-lang=&quot;typescript&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;react&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;makeStyles&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;@material-ui/core/styles&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Button&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;@material-ui/core/Button&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;useStyles&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;makeStyles&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;root&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;background&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;border&lt;/span&gt;: &lt;span class=&quot;kt&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;borderRadius&lt;/span&gt;: &lt;span class=&quot;kt&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;boxShadow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;0 3px 5px 2px rgba(255, 105, 135, .3)&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;white&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;kt&quot;&gt;48&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;padding&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;0 30px&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

&lt;span class=&quot;kr&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Hook() {&lt;/span&gt;
  &lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;classes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;useStyles&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Button&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;className&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;classes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;root&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Hook&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/Button&amp;gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;栅格系统&quot;&gt;栅格系统&lt;/h3&gt;
&lt;p&gt;栅格系统是布局的基础，官方文档在：&lt;a href=&quot;https://material-ui.com/zh/components/grid/&quot; target=&quot;_blank&quot;&gt;Grid 栅格&lt;/a&gt;。当然，MaterialUI也提供了直接使用&lt;a href=&quot;https://material-ui.com/zh/system/flexbox/&quot; target=&quot;_blank&quot;&gt;Flexbox&lt;/a&gt;来进行布局自定义的能力。另外，在做响应式布局的时候，&lt;a href=&quot;https://material-ui.com/zh/components/hidden/&quot; target=&quot;_blank&quot;&gt;Hidden&lt;/a&gt;组件也是非常重要的，能在某些分辨率下隐藏一些组件的显示。&lt;/p&gt;

&lt;p&gt;栅格系统使用 Grid “盒子”组件实现：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;为了达到高度的灵活性，盒子组件运用了用 CSS 的 Flexible Box 模块 。&lt;/li&gt;
  &lt;li&gt;它有两种类型的布局：containers，items。&lt;/li&gt;
  &lt;li&gt;而项目宽度以百分比设置，因此相对于其父元素，它们总是流动的和变换大小的。&lt;/li&gt;
  &lt;li&gt;子元素则自带 padding 来和其他元素间隔。&lt;/li&gt;
  &lt;li&gt;你可以找到五个网格断点：xs，sm，md，lg 和 xl。&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;网格断点&quot;&gt;网格断点&lt;/h4&gt;
&lt;p&gt;首先需要了解响应式布局的网格断点，见文档：&lt;a href=&quot;https://material-ui.com/zh/customization/breakpoints/&quot; target=&quot;_blank&quot;&gt;Breakpoints&lt;/a&gt;。要注意，虽然断点的尺寸是有预定义值的，但也是可以自定义改动的。&lt;/p&gt;

&lt;p&gt;每个断点（一个键）匹配一个固定的屏幕宽度（一个值）：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;xs，超小：0px&lt;/li&gt;
  &lt;li&gt;sm，小：600px&lt;/li&gt;
  &lt;li&gt;md，中等：960px&lt;/li&gt;
  &lt;li&gt;lg，大：1280px&lt;/li&gt;
  &lt;li&gt;xl，超大：1920px&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;value         |0px     600px    960px    1280px   1920px
key           |xs      sm       md       lg       xl
screen width  |--------|--------|--------|--------|--------&amp;gt;
range         |   xs   |   sm   |   md   |   lg   |   xl
&lt;/code&gt;&lt;/pre&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-typescript&quot; data-lang=&quot;typescript&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;// 样式的屏幕尺寸感知，并自适应&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;styles&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;theme&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;root&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;padding&lt;/span&gt;: &lt;span class=&quot;kt&quot;&gt;theme.spacing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;theme&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;breakpoints&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;down&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;sm&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;backgroundColor&lt;/span&gt;: &lt;span class=&quot;kt&quot;&gt;theme.palette.secondary.main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;theme&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;breakpoints&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;up&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;md&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;backgroundColor&lt;/span&gt;: &lt;span class=&quot;kt&quot;&gt;theme.palette.primary.main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;theme&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;breakpoints&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;up&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;lg&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;backgroundColor&lt;/span&gt;: &lt;span class=&quot;kt&quot;&gt;green&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;500&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;断点隐藏&quot;&gt;断点隐藏&lt;/h4&gt;
&lt;p&gt;一般在做响应式设计的时候，会用到&lt;a href=&quot;https://material-ui.com/zh/components/hidden/&quot; target=&quot;_blank&quot;&gt;Hidden组件&lt;/a&gt;，该组件有3组属性可以控制当前组件在某些断点情况下的显示和隐藏：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;*Up：使用任何断点&lt;code&gt;up&lt;/code&gt;属性的元素，给定的 子节点 将在&lt;code&gt;断点以及断点以上&lt;/code&gt;时被隐藏。&lt;/li&gt;
  &lt;li&gt;*Down：使用任何断点&lt;code&gt;down&lt;/code&gt;属性的元素，给定 子节点 将在&lt;code&gt;断点以及断点以下&lt;/code&gt;时被隐藏。&lt;/li&gt;
  &lt;li&gt;*Only：利用断点&lt;code&gt;only&lt;/code&gt;属性，给定 子节点 将被隐藏在&lt;code&gt;指定的断点&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;innerWidth  |xs      sm       md       lg       xl
            |--------|--------|--------|--------|--------&amp;gt;
width       |   xs   |   sm   |   md   |   lg   |   xl

smUp        |   show | hide
mdDown      |                     hide | show
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;看几个例子：&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Up&lt;/strong&gt;  &lt;br /&gt;
*Up：使用任何断点&lt;code&gt;up&lt;/code&gt;属性的元素，给定的 子节点 将在&lt;code&gt;断点以及断点以上&lt;/code&gt;时被隐藏。playground：&lt;a href=&quot;https://codesandbox.io/s/zlpm4?file=/demo.tsx&quot; target=&quot;_blank&quot;&gt;链接&lt;/a&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;className&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;{classes.container}&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;Hidden&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xsUp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;Paper&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;className&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;{classes.paper}&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;xsUp&lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;Paper&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;Hidden&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;Hidden&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;smUp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;Paper&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;className&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;{classes.paper}&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;smUp&lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;Paper&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;Hidden&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;Hidden&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;mdUp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;Paper&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;className&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;{classes.paper}&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;mdUp&lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;Paper&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;Hidden&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;Hidden&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;lgUp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;Paper&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;className&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;{classes.paper}&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;lgUp&lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;Paper&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;Hidden&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;Hidden&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xlUp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;Paper&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;className&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;{classes.paper}&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;xlUp&lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;Paper&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;Hidden&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;效果：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/resources/2020/06/material-ui/hidden-up-lg.png&quot; alt=&quot;&quot; target=&quot;_blank&quot; /&gt;
&lt;img src=&quot;/resources/2020/06/material-ui/hidden-up-md.png&quot; alt=&quot;&quot; target=&quot;_blank&quot; /&gt;
&lt;img src=&quot;/resources/2020/06/material-ui/hidden-up-sm.png&quot; alt=&quot;&quot; target=&quot;_blank&quot; /&gt;
&lt;img src=&quot;/resources/2020/06/material-ui/hidden-up-xs.png&quot; alt=&quot;&quot; target=&quot;_blank&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Down&lt;/strong&gt;  &lt;br /&gt;
*Down：使用任何断点&lt;code&gt;down&lt;/code&gt;属性的元素，给定 子节点 将在&lt;code&gt;断点以及断点以下&lt;/code&gt;时被隐藏。playground：&lt;a href=&quot;https://codesandbox.io/s/5d4xk?file=/demo.tsx&quot; target=&quot;_blank&quot;&gt;链接&lt;/a&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;className&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;{classes.container}&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;Hidden&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xsDown&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;Paper&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;className&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;{classes.paper}&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;xsDown&lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;Paper&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;Hidden&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;Hidden&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;smDown&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;Paper&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;className&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;{classes.paper}&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;smDown&lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;Paper&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;Hidden&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;Hidden&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;mdDown&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;Paper&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;className&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;{classes.paper}&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;mdDown&lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;Paper&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;Hidden&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;Hidden&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;lgDown&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;Paper&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;className&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;{classes.paper}&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;lgDown&lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;Paper&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;Hidden&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;Hidden&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xlDown&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;Paper&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;className&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;{classes.paper}&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;xlDown&lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;Paper&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;Hidden&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;效果：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/resources/2020/06/material-ui/hidden-down-lg.png&quot; alt=&quot;&quot; target=&quot;_blank&quot; /&gt;
&lt;img src=&quot;/resources/2020/06/material-ui/hidden-down-md.png&quot; alt=&quot;&quot; target=&quot;_blank&quot; /&gt;
&lt;img src=&quot;/resources/2020/06/material-ui/hidden-down-sm.png&quot; alt=&quot;&quot; target=&quot;_blank&quot; /&gt;
&lt;img src=&quot;/resources/2020/06/material-ui/hidden-down-xs.png&quot; alt=&quot;&quot; target=&quot;_blank&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Only&lt;/strong&gt;  &lt;br /&gt;
*Only：利用断点&lt;code&gt;only&lt;/code&gt;属性，给定 子节点 将被隐藏在&lt;code&gt;指定的断点&lt;/code&gt;。playground：&lt;a href=&quot;https://codesandbox.io/s/6nury?file=/demo.tsx&quot; target=&quot;_blank&quot;&gt;链接&lt;/a&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;className&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;{classes.container}&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;Hidden&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;only&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;lg&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;Paper&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;className&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;{classes.paper}&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;Hidden on lg&lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;Paper&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;Hidden&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;Hidden&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;only&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;sm&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;Paper&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;className&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;{classes.paper}&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;Hidden on sm&lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;Paper&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;Hidden&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;Hidden&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;only&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;{[&amp;#39;sm&amp;#39;,&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;lg&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;#39;]}&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;Paper&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;className&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;{classes.paper}&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;Hidden on sm and lg&lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;Paper&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;Hidden&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;效果：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/resources/2020/06/material-ui/hidden-only-lg.png&quot; alt=&quot;&quot; target=&quot;_blank&quot; /&gt;
&lt;img src=&quot;/resources/2020/06/material-ui/hidden-only-md.png&quot; alt=&quot;&quot; target=&quot;_blank&quot; /&gt;
&lt;img src=&quot;/resources/2020/06/material-ui/hidden-only-sm.png&quot; alt=&quot;&quot; target=&quot;_blank&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;流式网格&quot;&gt;流式网格&lt;/h4&gt;
&lt;p&gt;实际组件的空间占用布局是按&lt;a href=&quot;https://material-ui.com/zh/components/grid/#fluid-grids&quot; target=&quot;_blank&quot;&gt;Fluid grids 流式网格&lt;/a&gt;来排放的。举个例子：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-typescript&quot; data-lang=&quot;typescript&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;react&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;makeStyles&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;createStyles&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Theme&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;@material-ui/core/styles&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Paper&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;@material-ui/core/Paper&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Grid&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;@material-ui/core/Grid&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;useStyles&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;makeStyles&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;theme&lt;/span&gt;: &lt;span class=&quot;kt&quot;&gt;Theme&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;createStyles&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;root&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;flexGrow&lt;/span&gt;: &lt;span class=&quot;kt&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;paper&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;padding&lt;/span&gt;: &lt;span class=&quot;kt&quot;&gt;theme.spacing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;textAlign&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;center&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;color&lt;/span&gt;: &lt;span class=&quot;kt&quot;&gt;theme.palette.text.secondary&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}),&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;kr&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;CenteredGrid() {&lt;/span&gt;
  &lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;classes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;useStyles&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;className&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;classes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;root&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Grid&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;container&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;spacing&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Grid&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;xs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Paper&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;className&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;classes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;paper&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;xs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/Paper&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/Grid&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Grid&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;xs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Paper&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;className&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;classes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;paper&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;xs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/Paper&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/Grid&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Grid&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;xs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Paper&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;className&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;classes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;paper&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;xs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/Paper&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/Grid&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Grid&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;xs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Paper&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;className&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;classes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;paper&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;xs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/Paper&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/Grid&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Grid&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;xs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Paper&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;className&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;classes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;paper&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;xs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/Paper&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/Grid&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Grid&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;xs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Paper&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;className&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;classes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;paper&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;xs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/Paper&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/Grid&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Grid&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;xs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Paper&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;className&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;classes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;paper&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;xs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/Paper&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/Grid&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/Grid&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/div&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;效果：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/resources/2020/06/material-ui/grid-effect-01.png&quot; alt=&quot;&quot; target=&quot;_blank&quot; /&gt;&lt;/p&gt;

&lt;p&gt;例子中的&lt;code&gt;xs&lt;/code&gt;是指前面提到的断点。只有屏幕尺寸在xs及其上的断点的情况下，才会按此布局。里面的数值是相对的，第一行最大值为12，后面第二行的6就是其一半。这个例子的playground：&lt;a href=&quot;https://codesandbox.io/s/hpyjz?file=/demo.tsx&quot;&gt;链接&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;定义尺寸的时候可以对一个组件设置多个网格断点情况下的大小，这样做的话，可以让组件排布顺应不同的屏幕尺寸发生变化，看下面的例子：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/resources/2020/06/material-ui/grid-effect-02.png&quot; alt=&quot;&quot; target=&quot;_blank&quot; /&gt;
&lt;img src=&quot;/resources/2020/06/material-ui/grid-effect-03.png&quot; alt=&quot;&quot; target=&quot;_blank&quot; /&gt;&lt;/p&gt;

&lt;p&gt;例子中，在屏幕尺寸大于sm的情况下（从大到小匹配），sm的尺寸定义发挥作用：第二行的组件占比都为6，第二行2个组件各占一半，同样的第三行占比设为3，一行正好4个组件都放进去。&lt;/p&gt;

&lt;p&gt;然后在屏幕尺寸缩小之后，尺寸小于sm，且大于xs，则xs的尺寸定义发挥作用：原来第二行各分一半的2个组件分别占了一行，原来第三行的4个组件分为了两行，每行两个。这个例子的playground：&lt;a href=&quot;https://codesandbox.io/s/2ysg9?file=/demo.tsx&quot;&gt;链接&lt;/a&gt;。&lt;/p&gt;

&lt;h3 id=&quot;常用容器&quot;&gt;常用容器&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://material-ui.com/zh/components/container/&quot; target=&quot;_blank&quot;&gt;Container&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;页面的主要容器，一般来说所有的内容都会放在Container内。Container的最大宽度，使用&lt;code&gt;maxWidth&lt;/code&gt;来设置，里面的值需要设置刚才的断点值：xs、sm、md、lg、xl。另，Container的&lt;a href=&quot;https://material-ui.com/zh/api/container/&quot; target=&quot;_blank&quot;&gt;API文档&lt;/a&gt;，属性相关内容都在这里。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-typescript&quot; data-lang=&quot;typescript&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Container&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;maxWidth&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;sm&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://material-ui.com/zh/components/box/&quot; target=&quot;_blank&quot;&gt;Box&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;包装容器，一般用来将某几个组件包装在一起做位置偏移或样式添加等操作。Box默认为一个div，也可以使用&lt;code&gt;component&lt;/code&gt;来设置实际的HTML标签：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;Box&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;component&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;span&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;{1}&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;Button&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;Box&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://material-ui.com/zh/components/grid/&quot; target=&quot;_blank&quot;&gt;Grid&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;最基本的容器组件，通过将该组件相互嵌套使用，就可以组成非常复杂的页面布局。另，Grid的&lt;a href=&quot;https://material-ui.com/zh/api/grid/&quot; target=&quot;_blank&quot;&gt;API文档&lt;/a&gt;，组件属性需要到这里查阅。&lt;/p&gt;

&lt;p&gt;嵌套的情况下，&lt;code&gt;container&lt;/code&gt;属性表示是包在外层的Grid，&lt;code&gt;item&lt;/code&gt;则表示是从属于外层包装的Grid。如果有多层嵌套，则中间层的Grid既是container又是item。看个例子，playground在&lt;a href=&quot;https://codesandbox.io/s/jf0r8?file=/demo.tsx&quot; target=&quot;_blank&quot;&gt;链接&lt;/a&gt;：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-typescript&quot; data-lang=&quot;typescript&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;// defining FormRow&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;FormRow() {&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;React&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Fragment&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Grid&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;xs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Paper&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;className&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;classes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;paper&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/Paper&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/Grid&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Grid&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;xs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Paper&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;className&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;classes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;paper&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/Paper&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/Grid&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Grid&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;xs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Paper&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;className&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;classes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;paper&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/Paper&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/Grid&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/React.Fragment&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// using FormRow&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Grid&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;container&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;spacing&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Grid&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;container&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;xs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;spacing&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;FormRow&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/Grid&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Grid&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;container&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;xs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;spacing&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;FormRow&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/Grid&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Grid&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;container&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;xs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;spacing&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;FormRow&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/Grid&amp;gt;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/Grid&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;效果：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/resources/2020/06/material-ui/grid-effect-04.png&quot; alt=&quot;&quot; target=&quot;_blank&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;间距设置&quot;&gt;间距设置&lt;/h3&gt;
&lt;p&gt;在MaterialUI中设置间距有已经做好的语法糖，直接使用即可，文档：&lt;a href=&quot;https://material-ui.com/zh/system/spacing/&quot; target=&quot;_blank&quot;&gt;Spacing&lt;/a&gt;，还有&lt;a href=&quot;https://material-ui.com/zh/customization/spacing/&quot; target=&quot;_blank&quot;&gt;Theme Spacing&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;其中属性是其中之一：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;m - 对于设置margin&lt;/li&gt;
  &lt;li&gt;p - 对于设置padding&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;哪边边是其中之一：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;t - 对于设置* margin-top或padding-top*的类&lt;/li&gt;
  &lt;li&gt;b - 对于设置margin-bottom的类或padding-bottom的类&lt;/li&gt;
  &lt;li&gt;l - 对于设置margin-left或padding-left的类&lt;/li&gt;
  &lt;li&gt;r - 对于设置margin-right或padding-right的类&lt;/li&gt;
  &lt;li&gt;x - 对于设置* -left和* -right的类&lt;/li&gt;
  &lt;li&gt;y - 对于设置* -top和* -bottom的类&lt;/li&gt;
  &lt;li&gt;空白 - 用于在元素的所有4个边上设置边距或填充的类&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;上面提到的属性的值，是数字，意思是&lt;code&gt;几份&lt;/code&gt;。比如说&lt;code&gt;my={1}&lt;/code&gt;就是上下添加一份的margin。下面的例子中，一份就是8px（MaterialUI的默认值一份就是8px）。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-typescript&quot; data-lang=&quot;typescript&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;theme&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;spacing&lt;/span&gt;: &lt;span class=&quot;kt&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Box&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&amp;gt;&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// margin: -16px;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Box&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&amp;gt;&lt;/span&gt;   &lt;span class=&quot;c1&quot;&gt;// margin: 0px;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Box&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&amp;gt;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// margin: 4px;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Box&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&amp;gt;&lt;/span&gt;   &lt;span class=&quot;c1&quot;&gt;// margin: 16px;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;宽高尺寸设置&quot;&gt;宽高尺寸设置&lt;/h3&gt;
&lt;p&gt;见文档：&lt;a href=&quot;https://material-ui.com/zh/system/sizing/&quot; target=&quot;_blank&quot;&gt;Sizing&lt;/a&gt;。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-typescript&quot; data-lang=&quot;typescript&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Box&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&amp;gt;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Numbers in [0,1] are multiplied by 100 and converted to % values.&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Box&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;300&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&amp;gt;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Numbers are converted to pixel values.&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Box&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;75%&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&amp;gt;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// String values are used as raw CSS.&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Box&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&amp;gt;&lt;/span&gt;   &lt;span class=&quot;c1&quot;&gt;// 100%&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;颜色系统&quot;&gt;颜色系统&lt;/h3&gt;
&lt;p&gt;MaterialUI提供了配色相关的解决方案，见：&lt;a href=&quot;https://material-ui.com/zh/customization/color/&quot; target=&quot;_blank&quot;&gt;Color 颜色&lt;/a&gt;（如果需要选择颜色代码的话，就直接在这个文档页面上查找），以及&lt;a href=&quot;https://material-ui.com/zh/customization/palette/&quot; target=&quot;_blank&quot;&gt;Theme Palette&lt;/a&gt;，以及&lt;a href=&quot;https://material-ui.com/zh/system/palette/&quot; target=&quot;_blank&quot;&gt;Palette 调色&lt;/a&gt;。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-typescript&quot; data-lang=&quot;typescript&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Box&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;warning.main&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Box&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bgcolor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;info.main&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;阴影&quot;&gt;阴影&lt;/h3&gt;
&lt;p&gt;MaterialUI的阴影直接使用属性&lt;code&gt;boxShadow&lt;/code&gt;就能实现了，文档：&lt;a href=&quot;https://material-ui.com/zh/system/shadows/&quot; target=&quot;_blank&quot;&gt;Shadow&lt;/a&gt;。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-typescript&quot; data-lang=&quot;typescript&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Box&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;boxShadow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;层级&quot;&gt;层级&lt;/h3&gt;
&lt;p&gt;有时候一些元素会在同位置上进行重叠，这时候就需要确定它们的层级来进行相互覆盖的定义。在CSS中我们会使用&lt;code&gt;z-index&lt;/code&gt;来操作，在MaterialUI中，一般使用属性&lt;code&gt;zIndex&lt;/code&gt;来操作，且MaterialUI已经定义了一些，一般直接使用即可，&lt;a href=&quot;https://material-ui.com/zh/system/positions/&quot; target=&quot;_blank&quot;&gt;范例&lt;/a&gt;：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-typescript&quot; data-lang=&quot;typescript&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Box&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;zIndex&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;tooltip&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Box&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;zIndex&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;modal&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;a href=&quot;https://material-ui.com/zh/customization/z-index/&quot; target=&quot;_blank&quot;&gt;预定义数值&lt;/a&gt;：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;mobile stepper（移动设备起步）: 1000&lt;/li&gt;
  &lt;li&gt;speed dial: 1050&lt;/li&gt;
  &lt;li&gt;app bar（应用栏）：1100&lt;/li&gt;
  &lt;li&gt;drawer（抽屉）：1200&lt;/li&gt;
  &lt;li&gt;modal（浮层）：1300&lt;/li&gt;
  &lt;li&gt;snackbar：1400&lt;/li&gt;
  &lt;li&gt;tooltip（提示）：1500&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;文字铸排&quot;&gt;文字铸排&lt;/h3&gt;
&lt;p&gt;组件内文字内容的Typography，MaterialUI有属性可以直接控制，不需要手动编写CSS。见文档：&lt;a href=&quot;https://material-ui.com/zh/system/typography/&quot; target=&quot;_blank&quot;&gt;Typography&lt;/a&gt;，以及&lt;a href=&quot;https://material-ui.com/zh/customization/typography/&quot; target=&quot;_blank&quot;&gt;Theme Typography&lt;/a&gt;。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-typescript&quot; data-lang=&quot;typescript&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Box&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;textAlign&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;left&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&amp;gt;&lt;/span&gt;                &lt;span class=&quot;c1&quot;&gt;// right, left, center&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Box&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fontWeight&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;fontWeightRegular&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&amp;gt;&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// light, regular, medium, 500, bold&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Box&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fontSize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;fontSize&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&amp;gt;&lt;/span&gt;             &lt;span class=&quot;c1&quot;&gt;// default, h6.fontSize, 16&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Box&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fontStyle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;normal&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&amp;gt;&lt;/span&gt;              &lt;span class=&quot;c1&quot;&gt;// normal, italic, oblique&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Box&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;letterSpacing&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&amp;gt;&lt;/span&gt;               &lt;span class=&quot;c1&quot;&gt;// 字符间距，这里的数值就是6px&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Box&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;lineHeight&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;normal&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&amp;gt;&lt;/span&gt;             &lt;span class=&quot;c1&quot;&gt;// normal, 10&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;如果需要在页面上直接展示文字，建议使用组件Typography，见文档：&lt;a href=&quot;https://material-ui.com/zh/components/typography/&quot; target=&quot;_blank&quot;&gt;Typography&lt;/a&gt;。此外，还有&lt;a href=&quot;https://material-ui.com/zh/api/typography/&quot; target=&quot;_blank&quot;&gt;API文档&lt;/a&gt;，组件的属性需要到这里查阅。&lt;/p&gt;

&lt;p&gt;看一个例子，该例子的playground在：&lt;a href=&quot;https://codesandbox.io/s/lpul9?file=/demo.tsx&quot; target=&quot;_blank&quot;&gt;链接&lt;/a&gt;。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;Grid&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;item&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;{12}&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;sm&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;container&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;Grid&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;item&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xs&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;container&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;direction&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;column&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;spacing&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;{2}&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;Grid&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;item&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;Typography&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;gutterBottom&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;variant&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;subtitle1&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
        Standard license
      &lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;Typography&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;Typography&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;variant&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;body2&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;gutterBottom&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
        Full resolution 1920x1080 • JPEG
      &lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;Typography&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;Typography&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;variant&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;body2&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;textSecondary&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
        ID: 1030114
      &lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;Typography&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;Grid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;Grid&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;Typography&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;variant&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;body2&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;&lt;/span&gt;
        Remove
      &lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;Typography&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;Grid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;Grid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;Grid&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;Typography&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;variant&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;subtitle1&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;$19.00&lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;Typography&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;Grid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;Grid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;效果：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/resources/2020/06/material-ui/typography-effect-01.png&quot; alt=&quot;&quot; target=&quot;_blank&quot; /&gt;&lt;/p&gt;

&lt;p&gt;该组件的&lt;code&gt;noWrap&lt;/code&gt;属性默认值为false，也就是说遇到文字过长的情况下会进行回行。如果将这个属性设置为true，则文字过长的部分会被截断，并显示为省略号。&lt;/p&gt;

&lt;h3 id=&quot;统一风格系统&quot;&gt;统一风格系统&lt;/h3&gt;
&lt;p&gt;MaterialUI有一套统一的设计方案，方便开发者在App级别对所有的组件进行统一的样式及风格定义。官方文档：&lt;a href=&quot;https://material-ui.com/zh/system/basics/&quot; target=&quot;_blank&quot;&gt;@material-ui/system&lt;/a&gt;。一般来说项目大的话，肯定有需要进行这部分的调整。如果使用的是官方Store中的一些Template，一般它们已经做好了对应的功能。&lt;/p&gt;

&lt;p&gt;这部分比较庞大，细节很多。这里放一个简单例子，直观感受下：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-typescript&quot; data-lang=&quot;typescript&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;react&amp;#39;&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ThemeProvider&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;styled-components&amp;#39;&lt;/span&gt;

&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;theme&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;spacing&lt;/span&gt;: &lt;span class=&quot;kt&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;palette&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;primary&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;#007bff&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

&lt;span class=&quot;kr&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;App() {&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ThemeProvider&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;theme&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;theme&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;cm&quot;&gt;/* children */&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/ThemeProvider&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;更多的细节可以查看MaterialUI的&lt;a href=&quot;https://material-ui.com/zh/customization/theming/&quot; target=&quot;_blank&quot;&gt;Customization&lt;/a&gt;个性化文档。&lt;/p&gt;

&lt;h3 id=&quot;typescript&quot;&gt;Typescript&lt;/h3&gt;
&lt;p&gt;MaterialUI对Typescript支持很好，官方文档：&lt;a href=&quot;https://material-ui.com/zh/guides/typescript/&quot;&gt;TypeScript&lt;/a&gt;。里面细节还是有点多的，需要慢慢习惯用法。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;EOF&lt;/p&gt;
&lt;/blockquote&gt;
</description>
				<pubDate>Wed, 10 Jun 2020 10:02:22 +0800</pubDate>
				<link>https://xenojoshua.com/2020/06/material-ui/</link>
				<guid isPermaLink="true">https://xenojoshua.com/2020/06/material-ui/</guid>
			</item>
		
			<item>
				<title>Next.js Notes</title>
				<description>&lt;h4&gt;Table of Contents&lt;/h4&gt;
&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#0-前言&quot; id=&quot;markdown-toc-0-前言&quot;&gt;0. 前言&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#1-文件结构&quot; id=&quot;markdown-toc-1-文件结构&quot;&gt;1. 文件结构&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#2-路由&quot; id=&quot;markdown-toc-2-路由&quot;&gt;2. 路由&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#4-ssr-csr-static&quot; id=&quot;markdown-toc-4-ssr-csr-static&quot;&gt;4. SSR CSR Static&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#5-nextjs的其他知识点&quot; id=&quot;markdown-toc-5-nextjs的其他知识点&quot;&gt;5. Next.js的其他知识点&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#51-css相关&quot; id=&quot;markdown-toc-51-css相关&quot;&gt;5.1 CSS相关&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#52-变量配置&quot; id=&quot;markdown-toc-52-变量配置&quot;&gt;5.2 变量配置&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#53-api后端&quot; id=&quot;markdown-toc-53-api后端&quot;&gt;5.3 API后端&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#54-自定义app&quot; id=&quot;markdown-toc-54-自定义app&quot;&gt;5.4 自定义App&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#55-自定义document&quot; id=&quot;markdown-toc-55-自定义document&quot;&gt;5.5 自定义Document&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#6-react相关概念&quot; id=&quot;markdown-toc-6-react相关概念&quot;&gt;6. React相关概念&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#61-state&quot; id=&quot;markdown-toc-61-state&quot;&gt;6.1 state&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#62-effect&quot; id=&quot;markdown-toc-62-effect&quot;&gt;6.2 effect&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#7-自定义服务器&quot; id=&quot;markdown-toc-7-自定义服务器&quot;&gt;7. 自定义服务器&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#8-问题及解决&quot; id=&quot;markdown-toc-8-问题及解决&quot;&gt;8. 问题及解决&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#81-typeorm&quot; id=&quot;markdown-toc-81-typeorm&quot;&gt;8.1 TypeORM&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#资料&quot; id=&quot;markdown-toc-资料&quot;&gt;资料&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;0-前言&quot;&gt;0. 前言&lt;/h2&gt;
&lt;p&gt;最近在尝试使用&lt;a href=&quot;https://nextjs.org/&quot; target=&quot;_blank&quot;&gt;Next.js&lt;/a&gt;，虽说比直接裸用react简单不少，但还是有不少自有的特殊概念，因此这里开篇笔记，做下记录。&lt;/p&gt;

&lt;p&gt;入门Next.js可以阅读官方的教程：&lt;a href=&quot;https://nextjs.org/learn/basics/create-nextjs-app&quot; target=&quot;_blank&quot;&gt;Create a Next.js App&lt;/a&gt;。关于Next.js的优势，为什么要使用Next.js以及很多关于Next.js的细节等，可以查看这篇博文：&lt;a href=&quot;https://www.freecodecamp.org/news/the-next-js-handbook/&quot; target=&quot;_blank&quot;&gt;The Next.js Handbook&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;version&lt;code&gt;9.4.4&lt;/code&gt;已知问题（会列一些对使用有影响的）：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/vercel/next.js/issues/5214&quot; target=&quot;_blank&quot;&gt;trailing slash in link … 404 … #5214&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;1-文件结构&quot;&gt;1. 文件结构&lt;/h2&gt;
&lt;p&gt;默认被占用的路径只有两个：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;project_root/pages&lt;/code&gt;：用来作为页面路由使用&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;project_root/public&lt;/code&gt;：用来进行静态文件输出&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;2-路由&quot;&gt;2. 路由&lt;/h2&gt;
&lt;p&gt;路由部分Next.js做了简化，默认是使用文件夹的形式，在&lt;code&gt;project_root/pages/name.js|tsx&lt;/code&gt;下的文件，会映射为&lt;code&gt;your_site/name&lt;/code&gt;这个路径，见官方文档：&lt;a href=&quot;https://nextjs.org/docs/basic-features/pages&quot; target=&quot;_blank&quot;&gt;Pages&lt;/a&gt;。这样使用上非常简便，正常使用的话，就完全不需要引入第三方的类库（类似于&lt;code&gt;react-router&lt;/code&gt;），也不需要使用编程的方式在代码中定义路由。更多细节：&lt;a href=&quot;https://nextjs.org/docs/routing/introduction&quot; target=&quot;_blank&quot;&gt;Routing&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;但上述的路由不能很好支持&lt;code&gt;your_site/user/:user_id&lt;/code&gt;这样的需求。类似这样的需求在Next.js中也有解决方案，被称为&lt;code&gt;dynamic route&lt;/code&gt;。官方文档在：&lt;a href=&quot;https://nextjs.org/docs/routing/dynamic-routes&quot; target=&quot;_blank&quot;&gt;Dynamic Routes&lt;/a&gt;。只需要把page文件的名字定义为：&lt;code&gt;pages/post/[pid].js&lt;/code&gt;就OK。多参数的路径，类似：&lt;code&gt;pages/post/[pid]/[comment].js&lt;/code&gt;，也是一样处理，这种路径在query参数中获取到的object就会含有多个键。&lt;/p&gt;

&lt;p&gt;如果需要编程的方式来进行route操作的话，见文档：&lt;a href=&quot;https://nextjs.org/docs/api-reference/next/router&quot; target=&quot;_blank&quot;&gt;next/router&lt;/a&gt;。如果官方以文件夹形式管理的自动化route无法满足需求的话，还有功能强大的插件形式的route可以使用：&lt;a href=&quot;https://github.com/fridays/next-routes&quot; target=&quot;_blank&quot;&gt;Dynamic Routes for Next.js&lt;/a&gt;。&lt;/p&gt;

&lt;h2 id=&quot;4-ssr-csr-static&quot;&gt;4. SSR CSR Static&lt;/h2&gt;
&lt;p&gt;Next.js默认支持了服务端渲染等提升前端获取速度和渲染性能的功能，但这也要求开发者必须谨慎对待组件的初始化和生命周期，因为显然运行在服务端和客户端的代码在获取组件初始化需要的数据时的方法是不一样的。&lt;/p&gt;

&lt;p&gt;这部分的文档在：&lt;a href=&quot;https://nextjs.org/docs/basic-features/data-fetching&quot; target=&quot;_blank&quot;&gt;Data fetching&lt;/a&gt;，以及&lt;a href=&quot;https://nextjs.org/docs/advanced-features/automatic-static-optimization&quot; target=&quot;_blank&quot;&gt;Automatic Static Optimization&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;如果一个Page里&lt;code&gt;getServerSideProps&lt;/code&gt;或&lt;code&gt;getInitialProps&lt;/code&gt;存在的话，该Page就会被识别为服务端渲染（SSR），会在每次请求的时候进行渲染。而如果这两者皆不存在的话，该页面就会在服务器启动并构建的时候生成静态页面，后续每次请求的时候都会直接返回该静态页面。此外，在DEV模式的情况下，即便是静态渲染的Page也会在每次请求的时候触发渲染，需要注意。&lt;/p&gt;

&lt;p&gt;主要方法有以下几个：&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://nextjs.org/docs/basic-features/data-fetching#getstaticpaths-static-generation&quot; target=&quot;_blank&quot;&gt;getStaticPaths&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;这个方法一般是配合&lt;code&gt;dynamic route&lt;/code&gt;进行使用，会在Next.js服务器启动，并进行服务器静态构建的时候运行。其作用是告诉后续的&lt;code&gt;getStaticProps&lt;/code&gt;某个动态路径的可能项。如果这个page你不需要静态构建，或者这个page也不是dynamic route，那就不需要实现这个函数。&lt;/p&gt;

&lt;p&gt;举例来说&lt;code&gt;pages/user/[id].js&lt;/code&gt;代码中的&lt;code&gt;getStaticProps&lt;/code&gt;就需要返回：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-typescript&quot; data-lang=&quot;typescript&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getStaticPaths() {&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;paths&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;1&amp;#39;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;2&amp;#39;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;fallback&lt;/span&gt;: &lt;span class=&quot;kt&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;paths和fallback都是必须的键。fallback的意思是，当遇到客户端访问到一个并不存在于启动构建时制作的paths列表里的路径，Next.js应该允许客户端继续访问，还是直接返回一个404。这里要注意，如果fallback为true，也就是允许客户端继续访问的话，page代码一定要做好容错性，否则很容易导致页面报错。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://nextjs.org/docs/basic-features/data-fetching#getstaticprops-static-generation&quot; target=&quot;_blank&quot;&gt;getStaticProps&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;这个方法也是在Next.js服务器启动的时候，进行服务器静态构建的时候运行。其作用是用来给静态生成的页面提供props。同样的，如果这个page你不需要静态构建，那就不需要实现这个函数。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-typescript&quot; data-lang=&quot;typescript&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getStaticProps&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{},&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// will be passed to the page component as props&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;如果是&lt;code&gt;dynamic route&lt;/code&gt;的情况，该函数的context会包含&lt;code&gt;getStaticPaths&lt;/code&gt;提供的路径信息：&lt;code&gt;context.params = { id: '1' }&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://nextjs.org/docs/basic-features/data-fetching#getserversideprops-server-side-rendering&quot; target=&quot;_blank&quot;&gt;getServerSideProps&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;同样是运行在服务器端，但并不是在Next.js构建时候运行，而是在每一次单独的请求到达的时候触发。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-typescript&quot; data-lang=&quot;typescript&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getServerSideProps&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{},&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// will be passed to the page component as props&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://nextjs.org/docs/api-reference/data-fetching/getInitialProps&quot; target=&quot;_blank&quot;&gt;getInitialProps&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;基本上已弃用，如果是静态生成页面的话，使用&lt;code&gt;getStaticProps&lt;/code&gt;；如果是服务端渲染的话，使用&lt;code&gt;getServerSideProps&lt;/code&gt;。如果仅只是客户端渲染的页面，则使用React的effect就可以了。&lt;/p&gt;

&lt;h2 id=&quot;5-nextjs的其他知识点&quot;&gt;5. Next.js的其他知识点&lt;/h2&gt;
&lt;h3 id=&quot;51-css相关&quot;&gt;5.1 CSS相关&lt;/h3&gt;
&lt;p&gt;官方文档：&lt;a href=&quot;https://nextjs.org/docs/basic-features/built-in-css-support&quot; target=&quot;_blank&quot;&gt;Built-In CSS Support&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;Next.js的CSS有很多细节，最主要的是命名后缀的问题，使用&lt;code&gt;*.module.css&lt;/code&gt;的话，生成出来的页面上的CSS是会附带随机后缀的，就不会造成冲突。而如果需要引入global的css的话，则需要创建&lt;code&gt;pages/_app.js&lt;/code&gt;文件，在这里修改。&lt;/p&gt;

&lt;p&gt;jsx支持相关可以查阅这篇文档：&lt;a href=&quot;https://github.com/vercel/styled-jsx&quot; target=&quot;_blank&quot;&gt;styled-jsx&lt;/a&gt;。&lt;/p&gt;

&lt;h3 id=&quot;52-变量配置&quot;&gt;5.2 变量配置&lt;/h3&gt;
&lt;p&gt;环境变量的官方文档：&lt;a href=&quot;https://nextjs.org/docs/basic-features/environment-variables&quot; target=&quot;_blank&quot;&gt;Environment Variables&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;Next.js默认直接支持环境变量配置。基本上有配置相关需求就直接使用这个解决方案就OK了。&lt;/p&gt;

&lt;h3 id=&quot;53-api后端&quot;&gt;5.3 API后端&lt;/h3&gt;
&lt;p&gt;之前提到的route都是pages下的页面，一般来说还需要前后端交互使用的&lt;code&gt;/api/*&lt;/code&gt;，这个在Next.js中被称为：&lt;a href=&quot;https://nextjs.org/docs/api-routes/introduction&quot; target=&quot;_blank&quot;&gt;API Routes&lt;/a&gt;。&lt;/p&gt;

&lt;h3 id=&quot;54-自定义app&quot;&gt;5.4 自定义App&lt;/h3&gt;
&lt;p&gt;创建&lt;code&gt;pages/_app.js&lt;/code&gt;代码文件，就可以在里面进行一些应用级别的初始化工作。官方文档：&lt;a href=&quot;https://nextjs.org/docs/advanced-features/custom-app&quot; target=&quot;_blank&quot;&gt;Custom App&lt;/a&gt;。自定义App的可能需求为：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Persisting layout between page changes&lt;/li&gt;
  &lt;li&gt;Keeping state when navigating pages&lt;/li&gt;
  &lt;li&gt;Custom error handling using componentDidCatch&lt;/li&gt;
  &lt;li&gt;Inject additional data into pages&lt;/li&gt;
  &lt;li&gt;Add global CSS&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;可能的应用场景：&lt;code&gt;准备全局变量&lt;/code&gt;。在一款WEB应用中，某些数据是所有的页面都会有需求的，比如说当前session的最基本用户信息和权限信息等。而_app是所有的页面的基本入口，每个页面的渲染都会先经过它，那么其实就可以在这个代码中做这些事情。&lt;/p&gt;

&lt;p&gt;页面渲染的先后顺序：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;// Resolution order&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// On the server:&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 1. app.getInitialProps&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 2. page.getInitialProps&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 3. document.getInitialProps&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 4. app.render&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 5. page.render&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 6. document.render&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// On the server with error:&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 1. document.getInitialProps&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 2. app.render&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 3. page.render&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 4. document.render&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// On the client&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 1. app.getInitialProps&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 2. page.getInitialProps&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 3. app.render&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 4. page.render&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-typescript&quot; data-lang=&quot;typescript&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;// _app.tsx&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;App&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;AppContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;next/app&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kr&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;AppPageProps&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;AppProps&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;your_global_page_props&lt;/span&gt;: &lt;span class=&quot;kt&quot;&gt;any&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;MyApp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getInitialProps&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;appCtx&lt;/span&gt;: &lt;span class=&quot;kt&quot;&gt;AppContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;appProps&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;App&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getInitialProps&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;appCtx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;appProps&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pageProps&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;your_global_page_props&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;AppPageProps&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{...&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;appProps&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// yourpage.tsx&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;AppPageProps&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;../_app&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kr&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;YourPageProps&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;AppPageProps&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{};&lt;/span&gt;

&lt;span class=&quot;kr&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;YourPage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;: &lt;span class=&quot;kt&quot;&gt;YourPageProps&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// { your_global_page_props: &amp;quot;&amp;quot; }&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;55-自定义document&quot;&gt;5.5 自定义Document&lt;/h3&gt;
&lt;p&gt;创建&lt;code&gt;pages/_document.js&lt;/code&gt;代码文件，就可以在里面改动全局的&lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt;和&lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt;。官方文档：&lt;a href=&quot;https://nextjs.org/docs/advanced-features/custom-document&quot; target=&quot;_blank&quot;&gt;Custom Document&lt;/a&gt;。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Document is only rendered in the server.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;6-react相关概念&quot;&gt;6. React相关概念&lt;/h2&gt;
&lt;p&gt;Next.js和React的关系还是比较简单的。React本身的功能其实很简单，它就只是一个渲染引擎，而用来做应用的时候，你除了渲染之外还需要很多东西，而这些，React是给不了你的，必须你自己去组织。比如说最基本的请求路由，比如说打包用的webpack，比如说js transformation的babel，以及提升整体性能的服务端渲染和静态生成等等等等。&lt;/p&gt;

&lt;p&gt;Next.js实际上就是在React的基础上，提供这些做应用必须的组件和功能之后的框架库。所以在使用Next.js进行开发的时候，React的知识也是必须的，否则就无法正确处理渲染相关的问题了。作为基本的使用者，React其实只有3大组的概念是必须要厘清楚的。&lt;/p&gt;

&lt;h3 id=&quot;61-state&quot;&gt;6.1 state&lt;/h3&gt;
&lt;p&gt;React的官方文档在：&lt;a href=&quot;https://reactjs.org/docs/hooks-state.html&quot; target=&quot;_blank&quot;&gt;Using the State Hook&lt;/a&gt;。主要代码其实就只有一句：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-typescript&quot; data-lang=&quot;typescript&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;setCount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;useState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;code&gt;useState&lt;/code&gt;函数接受一个状态的默认值，然后返回一个数组，数组的0位是state变量，1位是改变这个state变量的方法，名字可以自己命名。&lt;/p&gt;

&lt;p&gt;State的值调整需要注意内存的问题，有的时候不是仅仅只是修改对象的值就可以了。特别是遇到复杂的state，一个object或者数组里有嵌套的object和数组的时候，需要非常注意内存拷贝的问题。具体的可以看这个帖子：&lt;a href=&quot;https://stackoverflow.com/a/49502115&quot; target=&quot;_blank&quot;&gt;React: how to update state.item[1] in state using setState?&lt;/a&gt;。&lt;/p&gt;

&lt;h3 id=&quot;62-effect&quot;&gt;6.2 effect&lt;/h3&gt;
&lt;p&gt;React的官方文档在：&lt;a href=&quot;https://reactjs.org/docs/hooks-effect.html&quot; target=&quot;_blank&quot;&gt;Using the Effect Hook - React&lt;/a&gt;。只要是涉及到状态变化的，都属于effect的范畴。一个React组件里可以使用&lt;code&gt;useEffect&lt;/code&gt;函数注册多个effect事件。第二个参数的指定可以决定该effect事件应该在什么时候触发。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;[]&lt;/code&gt;，效果同&lt;code&gt;componentDidMount&lt;/code&gt;，仅只在组件mount的时候触发一次。同时，在这种effect中提供一个回调函数返回，则等同于&lt;code&gt;componentWillUnmount&lt;/code&gt;，这个回调函数会在组件被unmount的时候被触发，用来做析构。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-typescript&quot; data-lang=&quot;typescript&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;useEffect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// your effect here&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{};&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// unmount&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;code&gt;无参数&lt;/code&gt;，效果同&lt;code&gt;componentDidUpdate&lt;/code&gt;，每次组件re-render都会触发。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-typescript&quot; data-lang=&quot;typescript&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;useEffect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// your effect here&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// no optional argument&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;code&gt;[foo]&lt;/code&gt;，在数组中放入prop或state，则该effect只会在这个prop或state发生变化的时候触发。这个数组里可以放入复数的变量，表示监听多个变量的变化，任何一个发生变化都会触发该effect。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-typescript&quot; data-lang=&quot;typescript&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;useEffect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// your effect here&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;7-自定义服务器&quot;&gt;7. 自定义服务器&lt;/h2&gt;
&lt;p&gt;在大部分情况下，使用&lt;code&gt;next [start]&lt;/code&gt;命令启动的服务器就已经足够满足需求了，但某些时候，我们仍旧有需求需要自定义一些服务端的功能，这时候就需要改造Next.js自带的服务端功能了。&lt;/p&gt;

&lt;p&gt;官方文档在：&lt;a href=&quot;https://nextjs.org/docs/advanced-features/custom-server&quot; target=&quot;_blank&quot;&gt;Custom Server&lt;/a&gt;。koa的例子可以在官方范例代码库中进行查看：&lt;a href=&quot;https://github.com/vercel/next.js/tree/master/examples/custom-server-koa&quot; target=&quot;_blank&quot;&gt;Custom Koa Server example&lt;/a&gt;。此外，还有一篇博客讲得不错：&lt;a href=&quot;https://cloudreports.net/nextjs-koajs-create-custom-nextjs-server-with-koajs/&quot; target=&quot;_blank&quot;&gt;NextJs + KoaJs Create custom NextJs server with KoaJs&lt;/a&gt;。以及，另一个例子可以参考：&lt;a href=&quot;https://github.com/fridays/next-routes#on-the-server&quot; target=&quot;_blank&quot;&gt;fridays/next-routes#on-the-server&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;不过官方的文档给出的信息其实也相当有限，没有任何对于&lt;code&gt;next&lt;/code&gt;命令的细致解释，如果想要知道官方启动命令实际上做了什么，就只能去阅读源码了。简单看了下，除了启动服务器之外，next命令还是做了不少事情的，如果想要在保证这些功能的情况下兼容koa的话，是相当困难的。&lt;/p&gt;

&lt;p&gt;这里更建议的做法是启一个纯粹的koa后端作为API的服务器，而将基本的前端页面和pages交给Next.js来进行服务。这样就可以绕开必须改动或者无法使用next命令的情况。&lt;/p&gt;

&lt;h2 id=&quot;8-问题及解决&quot;&gt;8. 问题及解决&lt;/h2&gt;
&lt;h3 id=&quot;81-typeorm&quot;&gt;8.1 TypeORM&lt;/h3&gt;
&lt;p&gt;初始Versions&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;next: 9.4.4
typeorm: 0.0.25
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;在添加一系列typeorm相关代码之后，next.js的编译会遇到报错（无法正常build）：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Syntax error: Support for the experimental syntax 'decorators-legacy' isn't currently enabled
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;解决方法见：&lt;a href=&quot;https://stackoverflow.com/a/52765213&quot; target=&quot;_blank&quot;&gt;Syntax error - Support for the experimental syntax ‘decorators-legacy’ isn’t currently enabled&lt;/a&gt;，需要在项目根目录添加文件&lt;code&gt;.babelrc&lt;/code&gt;，并添加内容（关于babel的客制化，官方文档见：&lt;a href=&quot;https://nextjs.org/docs/advanced-features/customizing-babel-config&quot; target=&quot;_blank&quot;&gt;Customizing Babel Config&lt;/a&gt;）：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;quot;plugins&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
      &lt;span class=&quot;s2&quot;&gt;&amp;quot;@babel/plugin-proposal-decorators&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;quot;legacy&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;quot;presets&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&amp;quot;next/babel&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;当然还需要安装扩展：&lt;code&gt;yarn add @babel/plugin-proposal-decorators -D&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;接下来会遇到第二个报错：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;error - ./node_modules/typeorm/browser/driver/DriverFactory.js
Attempted import error: 'AuroraDataApiPostgresDriver' is not exported from './postgres/PostgresDriver'.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;解决方法见：&lt;a href=&quot;https://github.com/typeorm/typeorm/issues/6110&quot; target=&quot;_blank&quot;&gt;Typeorm/browser cannot be compiled since version 0.2.25 #6110&lt;/a&gt;，解决方案简单粗暴，将typeorm的版本降到&lt;code&gt;0.2.24&lt;/code&gt;即可。&lt;/p&gt;

&lt;p&gt;然后会遇到第三个报错：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;warn  - ./node_modules/typeorm/browser/driver/react-native/ReactNativeDriver.js
Module not found: Can't resolve 'react-native-sqlite-storage' in './node_modules/typeorm/browser/driver/react-native'
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;解决方法见：&lt;a href=&quot;https://github.com/typeorm/typeorm/issues/2158#issuecomment-626984473&quot; target=&quot;_blank&quot;&gt;browser: Can’t resolve ‘react-native-sqlite-storage’ #2158&lt;/a&gt;。创建一个假的stub package即可。&lt;/p&gt;

&lt;p&gt;然后就可以在&lt;code&gt;_app.tsx:MyApp.getInitialProps&lt;/code&gt;进行数据库连接的初始化。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-typescript&quot; data-lang=&quot;typescript&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;getConnection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;instanceof&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ConnectionNotFoundError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;createConnection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Database&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getConnectionOptions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;到实际使用的时候最后仍旧会有问题（参见：&lt;a href=&quot;https://github.com/vercel/next.js/discussions/12254&quot; target=&quot;_blank&quot;&gt;Use TypeORM with Next.js #12254&lt;/a&gt;）：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;RepositoryNotFoundError: No repository for &quot;...&quot; was found. Looks like this entity is not registered in current &quot;default&quot; connection?
...
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;简单来说就是和数据库的连接正常建立了，但本地的entities文件找不到。我尝试过很多方法来解决这个问题，但最终都不能很好解决。猜想可能是next会创建build文件，而build文件中找不到entities（虽然我也尝试过给予entities绝对路径，但最后也不行）。最后还是放弃了在SSR中使用typeorm，所有的next.js中的数据访问全部都通过API来访问后端的koa服务器来解决，不再进行服务器代码直接处理。&lt;/p&gt;

&lt;p&gt;这样当然会有不小的性能损耗，其实绕开typeorm直接在服务器自己建立连接来访问数据库也是可行的，不过小项目就算了，代码量多了维护起来比较麻烦。&lt;/p&gt;

&lt;h2 id=&quot;资料&quot;&gt;资料&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://nextjs.org/&quot; target=&quot;_blank&quot;&gt;Next.js&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://nextjs.org/learn/basics/create-nextjs-app&quot; target=&quot;_blank&quot;&gt;Create a Next.js App&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/news/the-next-js-handbook/&quot; target=&quot;_blank&quot;&gt;The Next.js Handbook&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://learnku.com/articles/40668&quot; target=&quot;_blank&quot;&gt;Next.js 入门超详解教程&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/vercel/next.js/issues/7607&quot; target=&quot;_blank&quot;&gt;[RFC] Dynamic Routes&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fridays/next-routes&quot; target=&quot;_blank&quot;&gt;fridays/next-routes&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://github.com/fridays/next-routes/issues/19&quot; target=&quot;_blank&quot;&gt;Koa usage #19&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://web.dev/route-prefetching-in-nextjs/&quot; target=&quot;_blank&quot;&gt;Route prefetching in Next.js&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://reactjs.org/docs/hooks-state.html&quot; target=&quot;_blank&quot;&gt;Using the State Hook - React&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://reactjs.org/docs/hooks-effect.html&quot; target=&quot;_blank&quot;&gt;Using the Effect Hook - React&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.robinwieruch.de/react-hooks-fetch-data&quot; target=&quot;_blank&quot;&gt;How to fetch data with React Hooks?&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://overreacted.io/zh-hans/a-complete-guide-to-useeffect/&quot; target=&quot;_blank&quot;&gt;useEffect 完整指南&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://blog.carbonfive.com/replacing-component-lifecycle-methods-with-react-hooks/&quot; target=&quot;_blank&quot;&gt;Replacing Component Lifecycle Methods with React Hooks&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/a/54004148&quot; target=&quot;_blank&quot;&gt;Should I use one or many useEffect in component?&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/vercel/next.js/issues/2252&quot; target=&quot;_blank&quot;&gt;Where to store persistent/global data? #2252&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://juejin.im/post/5d8ad2c7518825091471fd26&quot; target=&quot;_blank&quot;&gt;Next.js实践总结 - 登录授权验证最佳方案&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://juejin.im/post/5c07a0bbf265da613438308c&quot; target=&quot;_blank&quot;&gt;Next.js脚手架进阶 — 封装fetch &amp;amp;&amp;amp; 增加中间件&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://juejin.im/post/5b868b45e51d4538ae4db7ca&quot; target=&quot;_blank&quot;&gt;Next.js踩坑入门系列（三）— 目录重构&amp;amp;&amp;amp;再谈路由&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://cloudreports.net/nextjs-koajs-create-custom-nextjs-server-with-koajs/&quot; target=&quot;_blank&quot;&gt;NextJs + KoaJs Create custom NextJs server with KoaJs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;EOF&lt;/p&gt;
&lt;/blockquote&gt;
</description>
				<pubDate>Tue, 09 Jun 2020 10:02:22 +0800</pubDate>
				<link>https://xenojoshua.com/2020/06/nextjs-note/</link>
				<guid isPermaLink="true">https://xenojoshua.com/2020/06/nextjs-note/</guid>
			</item>
		
			<item>
				<title>youtube-dl 及 ffmpeg 相关</title>
				<description>&lt;h4&gt;Table of Contents&lt;/h4&gt;
&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#1-youtube-dl-403&quot; id=&quot;markdown-toc-1-youtube-dl-403&quot;&gt;1. youtube-dl 403&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#2-手动下载及视频剪辑相关&quot; id=&quot;markdown-toc-2-手动下载及视频剪辑相关&quot;&gt;2. 手动下载及视频剪辑相关&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;1-youtube-dl-403&quot;&gt;1. youtube-dl 403&lt;/h2&gt;

&lt;p&gt;在使用&lt;a href=&quot;https://github.com/ytdl-org/youtube-dl&quot; target=&quot;_blank&quot;&gt;youtube-dl&lt;/a&gt;进行下载的时候，时不时会遇到403报错，导致无法正常进行下载。搜了下，github上关于403报错的issue还真不少，有效的解决方案全部是要求使用extension从浏览器中导出cookie信息到文件，然后使用&lt;code&gt;--cookies&lt;/code&gt;导入，就能正常使用了。但实际上操作下来，仍旧会报错。&lt;/p&gt;

&lt;p&gt;其实只需要一个简单命令就能解决了：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;&lt;/span&gt;$ youtube-dl --rm-cache-dir&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;2-手动下载及视频剪辑相关&quot;&gt;2. 手动下载及视频剪辑相关&lt;/h2&gt;

&lt;p&gt;有的时候因为某些原因，使用软件下载不是很好处理，就需要手动操作，一般来说可用的下载网站随便google下就能找到，这里列几个：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;https://bitdownloader.com/en2&lt;/li&gt;
  &lt;li&gt;https://www.savethevideo.com/download&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;下载下来的某些源是没有音频的，就需要手动处理下：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# 抽取withsound.mp4中的音频到audio.aac文件&lt;/span&gt;
$ ffmpeg -i withsound.mp4 -vn -acodec copy audio.aac
&lt;span class=&quot;c1&quot;&gt;# 不改变任何内容，直接结合视频/音频封装为MKV/MP4&lt;/span&gt;
$ ffmpeg -i videoplayback.webm -i audio.aac -c:v copy -c:a copy -strict experimental output.mkv
$ ffmpeg -i videoplayback.mp4 -i audio.aac -c:v copy -c:a copy -strict experimental output.mp4&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;blockquote&gt;
  &lt;p&gt;EOF&lt;/p&gt;
&lt;/blockquote&gt;
</description>
				<pubDate>Mon, 18 May 2020 14:02:22 +0800</pubDate>
				<link>https://xenojoshua.com/2020/05/youtube-dl/</link>
				<guid isPermaLink="true">https://xenojoshua.com/2020/05/youtube-dl/</guid>
			</item>
		
			<item>
				<title>Golang Concurrency</title>
				<description>&lt;h4&gt;Table of Contents&lt;/h4&gt;
&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#1-前言&quot; id=&quot;markdown-toc-1-前言&quot;&gt;1. 前言&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#2-资料&quot; id=&quot;markdown-toc-2-资料&quot;&gt;2. 资料&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#3-额外的几点&quot; id=&quot;markdown-toc-3-额外的几点&quot;&gt;3. 额外的几点&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;1-前言&quot;&gt;1. 前言&lt;/h2&gt;

&lt;p&gt;Go语言的并发支持在语言上是第一级原生直接支持的，就像异步事件在Node.js上是语言原生支持的一样。Go语言的并发与其他语言的多线程使用还有点不太一样，在使用的时候需要从思路上理解这个”原生支持”的概念，才能用好。因此这篇博文就对其中的一些内容做个整理，此外在&lt;a href=&quot;https://github.com/agreatfool/golang-practice&quot; target=&quot;_blank&quot;&gt;golang-practice&lt;/a&gt;这个代码库中进行实践操作，并进行监控观察效果。&lt;/p&gt;

&lt;h2 id=&quot;2-资料&quot;&gt;2. 资料&lt;/h2&gt;

&lt;p&gt;因着Go语言在国内的火热，大量分析和资料其实都有了，这里我尽量多做整理，不做重复发明轮子的无用功：&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;channel &amp;amp; goroutine&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=Mzg3MTA0NDQ1OQ==&amp;amp;mid=2247483671&amp;amp;idx=1&amp;amp;sn=1706ffa6deee44a367c34ef84448f55f&quot; target=&quot;_blank&quot;&gt;Golang并发模型：轻松入门流水线模型&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;channel的基本运用&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=Mzg3MTA0NDQ1OQ==&amp;amp;mid=2247483680&amp;amp;idx=1&amp;amp;sn=de463ebbd088c0acf6c2f0b5f179f38d&quot; target=&quot;_blank&quot;&gt;Golang并发模型：轻松入门流水线FAN模式&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;channel的多routine协同工作&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=Mzg3MTA0NDQ1OQ==&amp;amp;mid=2247483702&amp;amp;idx=1&amp;amp;sn=50825426986120a0b306e0f6da176951&quot; target=&quot;_blank&quot;&gt;Golang并发模型：轻松入门select&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;select的使用，routine的情况判断&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=Mzg3MTA0NDQ1OQ==&amp;amp;mid=2247483714&amp;amp;idx=1&amp;amp;sn=383e060fbf824d956dab6dc0a5555352&quot; target=&quot;_blank&quot;&gt;Golang并发模型：select进阶&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;select的高级运用，需要排除的select的分支处理，select的阻塞运用等&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=Mzg3MTA0NDQ1OQ==&amp;amp;mid=2247483689&amp;amp;idx=1&amp;amp;sn=7dfed7ffb000752a456125513ed99c26&quot; target=&quot;_blank&quot;&gt;Golang并发模型：并发协程的优雅退出&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;routine的退出方法&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=Mzg3MTA0NDQ1OQ==&amp;amp;mid=2247483724&amp;amp;idx=1&amp;amp;sn=6890ab956c2f0020e9107ef60a388d5b&quot; target=&quot;_blank&quot;&gt;Golang并发模型：轻松入门协程池&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;和FAN模式有异曲同工之妙&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=Mzg3MTA0NDQ1OQ==&amp;amp;mid=2247483788&amp;amp;idx=1&amp;amp;sn=3b9d237029bfaa02847b4dacdc118173&quot; target=&quot;_blank&quot;&gt;Golang并发：再也不愁选channel还是选锁&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;channel和锁的选择问题，根据情况有不同的选择&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/m8HjfS0tJCibD8hSRIxrBA&quot; target=&quot;_blank&quot;&gt;Golang并发模型：一招教你无阻塞读写通道&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;巧用select，在阻塞的情况下进入到不同的分支做到零等待&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=Mzg3MTA0NDQ1OQ==&amp;amp;mid=2247483803&amp;amp;idx=1&amp;amp;sn=7be293f3d03e892058bebbdebed68cb5&quot; target=&quot;_blank&quot;&gt;总结了才知道，原来channel有这么多用法！&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;总结了所有的channel用法和细节&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;sync &amp;amp; lock&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=Mzg3MTA0NDQ1OQ==&amp;amp;mid=2247483768&amp;amp;idx=1&amp;amp;sn=dd94f808b9ee48d0fe2661d9a5efdd96&quot; target=&quot;_blank&quot;&gt;Golang并发的次优选择：sync包&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;sync包及锁的基本运用&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;3-额外的几点&quot;&gt;3. 额外的几点&lt;/h2&gt;

&lt;p&gt;上面的资料可能因为时间问题，没有提到Context，实际上在真实场景中，对多routine的退出协作使用的更多的是context：&lt;a href=&quot;https://blog.golang.org/context&quot; target=&quot;_blank&quot;&gt;Go Concurrency Patterns: Context&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;channel和锁之间的选择简单来说就是：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;如果有共享内存需要在多个routine之间共用，选择锁&lt;/li&gt;
  &lt;li&gt;如果所有的内存都无需在routine之间共享，选择channel&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;EOF&lt;/p&gt;
&lt;/blockquote&gt;
</description>
				<pubDate>Sun, 03 May 2020 13:02:22 +0800</pubDate>
				<link>https://xenojoshua.com/2020/05/golang-concurrency/</link>
				<guid isPermaLink="true">https://xenojoshua.com/2020/05/golang-concurrency/</guid>
			</item>
		
			<item>
				<title>grpc_tools_node_protoc_ts 对 @grpc/grpc-js 的支持</title>
				<description>&lt;h4&gt;Table of Contents&lt;/h4&gt;
&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#1-grpcgrpc-js&quot; id=&quot;markdown-toc-1-grpcgrpc-js&quot;&gt;1. @grpc/grpc-js&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;1-grpcgrpc-js&quot;&gt;1. @grpc/grpc-js&lt;/h2&gt;
&lt;p&gt;最近&lt;a href=&quot;https://www.npmjs.com/package/grpc_tools_node_protoc_ts&quot; target=&quot;_blank&quot;&gt;grpc_tools_node_protoc_ts&lt;/a&gt;收到一个issue，问我可不可以支持&lt;a href=&quot;https://www.npmjs.com/package/@grpc/grpc-js&quot; target=&quot;_blank&quot;&gt;@grpc/grpc-js&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;这个库倒是不陌生，前几年就已经有了，只不过一直都没有过1.0的正式版本，一直在开发阶段。最近看了下，已经到&lt;code&gt;1.0.1&lt;/code&gt;版本了，基本上功能完备。和提issue的人讨论了下，主要诉求是使用这个纯js实现的库做到更小的docker镜像，以及在electron这种容器中使用的时候更容易构建。应该说理由还是相当充分的，于是就花了1天多点的时间做了下migration。&lt;/p&gt;

&lt;p&gt;因为版本做完之后用英文已经写过一遍文档了，这里就不啰嗦了，直接看英语文档即可：&lt;a href=&quot;https://github.com/agreatfool/grpc_tools_node_protoc_ts/blob/master/doc/grpcjs_support.md&quot; target=&quot;_blank&quot;&gt;@grpc/grpc-js support&lt;/a&gt;。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;EOF&lt;/p&gt;
&lt;/blockquote&gt;
</description>
				<pubDate>Thu, 23 Apr 2020 20:02:22 +0800</pubDate>
				<link>https://xenojoshua.com/2020/04/grpc-js-support/</link>
				<guid isPermaLink="true">https://xenojoshua.com/2020/04/grpc-js-support/</guid>
			</item>
		
			<item>
				<title>grpc-tools@1.8.1 安装问题</title>
				<description>&lt;h4&gt;Table of Contents&lt;/h4&gt;
&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#1-问题&quot; id=&quot;markdown-toc-1-问题&quot;&gt;1. 问题&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#2-解决&quot; id=&quot;markdown-toc-2-解决&quot;&gt;2. 解决&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;1-问题&quot;&gt;1. 问题&lt;/h2&gt;
&lt;p&gt;安装最新版本&lt;code&gt;grpc-tools@1.8.1&lt;/code&gt;的时候遇到了不少问题，这里做下记录。&lt;/p&gt;

&lt;p&gt;环境：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# OS
# MacOS@10.14.6
$ node --version
# v10.15.2
$ npm --version
# 6.14.4
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;安装1.8.1版本的时候，直接使用npm进行会报错：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ npm install grpc-tools@1.8.1 -g

npm install grpc-tools@1.8.1 -g
/usr/local/bin/grpc_tools_node_protoc -&amp;gt; /usr/local/lib/node_modules/grpc-tools/bin/protoc.js
/usr/local/bin/grpc_tools_node_protoc_plugin -&amp;gt; /usr/local/lib/node_modules/grpc-tools/bin/protoc_plugin.js

&amp;gt; grpc-tools@1.8.1 install /usr/local/lib/node_modules/grpc-tools
&amp;gt; node-pre-gyp install

node-pre-gyp WARN Using needle for node-pre-gyp https download
node-pre-gyp ERR! install error
node-pre-gyp ERR! stack Error: 503 status code downloading tarball https://node-precompiled-binaries.grpc.io/grpc-tools/v1.8.1/darwin-x64.tar.gz
node-pre-gyp ERR! stack     at PassThrough.&amp;lt;anonymous&amp;gt; (/usr/local/lib/node_modules/grpc-tools/node_modules/node-pre-gyp/lib/install.js:149:27)
node-pre-gyp ERR! stack     at PassThrough.emit (events.js:194:15)
node-pre-gyp ERR! stack     at ClientRequest.&amp;lt;anonymous&amp;gt; (/usr/local/lib/node_modules/grpc-tools/node_modules/needle/lib/needle.js:482:9)
node-pre-gyp ERR! stack     at Object.onceWrapper (events.js:277:13)
node-pre-gyp ERR! stack     at ClientRequest.emit (events.js:189:13)
node-pre-gyp ERR! stack     at HTTPParser.parserOnIncomingClient [as onIncoming] (_http_client.js:556:21)
node-pre-gyp ERR! stack     at HTTPParser.parserOnHeadersComplete (_http_common.js:109:17)
node-pre-gyp ERR! stack     at Socket.socketOnData (_http_client.js:442:20)
node-pre-gyp ERR! stack     at Socket.emit (events.js:189:13)
node-pre-gyp ERR! stack     at addChunk (_stream_readable.js:284:12)
node-pre-gyp ERR! System Darwin 18.7.0
node-pre-gyp ERR! command &quot;/usr/local/bin/node&quot; &quot;/usr/local/lib/node_modules/grpc-tools/node_modules/.bin/node-pre-gyp&quot; &quot;install&quot;
node-pre-gyp ERR! cwd /usr/local/lib/node_modules/grpc-tools
node-pre-gyp ERR! node -v v10.15.2
node-pre-gyp ERR! node-pre-gyp -v v0.12.0
node-pre-gyp ERR! not ok
503 status code downloading tarball https://node-precompiled-binaries.grpc.io/grpc-tools/v1.8.1/darwin-x64.tar.gz
npm ERR! code ELIFECYCLE
npm ERR! errno 1
npm ERR! grpc-tools@1.8.1 install: `node-pre-gyp install`
npm ERR! Exit status 1
npm ERR!
npm ERR! Failed at the grpc-tools@1.8.1 install script.
npm ERR! This is probably not a problem with npm. There is likely additional logging output above.

npm ERR! A complete log of this run can be found in:
npm ERR!     /Users/Jonathan/.npm/_logs/2020-04-22T01_31_02_124Z-debug.log
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;2-解决&quot;&gt;2. 解决&lt;/h2&gt;
&lt;p&gt;多番尝试之后，直接下载&lt;a href=&quot;https://github.com/grpc/grpc-node&quot; target=&quot;_blank&quot;&gt;https://github.com/grpc/grpc-node&lt;/a&gt;代码到本地，然后将解压文件中的&lt;code&gt;packages/grpc-tools&lt;/code&gt;拷贝到&lt;code&gt;/usr/local/lib/node_modules&lt;/code&gt;文件夹下。&lt;/p&gt;

&lt;p&gt;这样就能使用npm命令检查到这个包了（虽然仍有部分报错信息）：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ npm list -g --depth=0 | grep grpc-tools
# ├── grpc-tools@1.8.1
# npm ERR! missing: node-pre-gyp@^0.12.0, required by grpc-tools@1.8.1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;但实际使用的时候仍旧会有问题：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Error: spawn /usr/local/lib/node_modules/grpc-tools/bin/protoc ENOENT
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;意思是说找不到包下的bin文件夹下的&lt;code&gt;protoc&lt;/code&gt;文件，之前bin文件的链接是这么做的：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;/usr/local/bin/grpc_tools_node_protoc -&amp;gt; /usr/local/lib/node_modules/grpc-tools/bin/protoc.js
/usr/local/bin/grpc_tools_node_protoc_plugin -&amp;gt; /usr/local/lib/node_modules/grpc-tools/bin/protoc_plugin.js
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;包的bin文件夹下面也确实有这两个js文件，但确实没有不带js后缀的bin文件。&lt;/p&gt;

&lt;p&gt;然后下载了之前安装错误时候提到的那个tar包：&lt;a href=&quot;https://node-precompiled-binaries.grpc.io/grpc-tools/v1.8.1/darwin-x64.tar.gz&quot; target=&quot;_blank&quot;&gt;https://node-precompiled-binaries.grpc.io/grpc-tools/v1.8.1/darwin-x64.tar.gz&lt;/a&gt;，解压之后发现里面就只有一个bin文件夹，而文件夹内就正好有两个不带js后缀的bin文件，将这两个解压出来的文件放到&lt;code&gt;/usr/local/lib/node_modules/grpc-tools/bin&lt;/code&gt;下。后续就能正常使用了。&lt;/p&gt;

&lt;p&gt;至于为什么会503报错，以及为什么bin文件夹下有两套文件，这个就暂时先不去考虑了。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;EOF&lt;/p&gt;
&lt;/blockquote&gt;
</description>
				<pubDate>Wed, 22 Apr 2020 09:52:22 +0800</pubDate>
				<link>https://xenojoshua.com/2020/04/grpc-tools/</link>
				<guid isPermaLink="true">https://xenojoshua.com/2020/04/grpc-tools/</guid>
			</item>
		
	</channel>
</rss>
