<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
	<channel>
		<title>Xenojoshua</title>
		<description>Joshua's Xeno World!</description>
		<link>https://xenojoshua.com</link>
		<atom:link href="https://xenojoshua.com/feed.xml" rel="self" type="application/rss+xml" />
		
			<item>
				<title>使用Drone进行CI支持</title>
				<description>&lt;h4&gt;Table of Contents&lt;/h4&gt;
&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#1-前言&quot; id=&quot;markdown-toc-1-前言&quot;&gt;1. 前言&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#2-概念&quot; id=&quot;markdown-toc-2-概念&quot;&gt;2. 概念&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#21-pipeline&quot; id=&quot;markdown-toc-21-pipeline&quot;&gt;2.1 &lt;a href=&quot;https://docs.drone.io/configure/pipeline/&quot; target=&quot;_blank&quot;&gt;pipeline&lt;/a&gt;&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#22-step&quot; id=&quot;markdown-toc-22-step&quot;&gt;2.2 &lt;a href=&quot;https://docker-runner.docs.drone.io/configuration/steps/&quot; target=&quot;_blank&quot;&gt;step&lt;/a&gt;&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#23-workspace&quot; id=&quot;markdown-toc-23-workspace&quot;&gt;2.3 &lt;a href=&quot;https://docker-runner.docs.drone.io/configuration/workspace/&quot; target=&quot;_blank&quot;&gt;workspace&lt;/a&gt;&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#24-trigger&quot; id=&quot;markdown-toc-24-trigger&quot;&gt;2.4 &lt;a href=&quot;https://docker-runner.docs.drone.io/configuration/trigger/&quot; target=&quot;_blank&quot;&gt;trigger&lt;/a&gt;&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#25-condition&quot; id=&quot;markdown-toc-25-condition&quot;&gt;2.5 &lt;a href=&quot;https://docker-runner.docs.drone.io/configuration/conditions/&quot; target=&quot;_blank&quot;&gt;condition&lt;/a&gt;&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#3-架构--multiple-pipeline--parallelism&quot; id=&quot;markdown-toc-3-架构--multiple-pipeline--parallelism&quot;&gt;3. 架构 &amp;amp; Multiple Pipeline &amp;amp; Parallelism&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#31-架构&quot; id=&quot;markdown-toc-31-架构&quot;&gt;3.1 架构&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#32-multiple-pipeline&quot; id=&quot;markdown-toc-32-multiple-pipeline&quot;&gt;3.2 Multiple Pipeline&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#33-parallelism&quot; id=&quot;markdown-toc-33-parallelism&quot;&gt;3.3 Parallelism&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#4-使用&quot; id=&quot;markdown-toc-4-使用&quot;&gt;4. 使用&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#41-server安装--运行&quot; id=&quot;markdown-toc-41-server安装--运行&quot;&gt;4.1 Server：安装 &amp;amp; 运行&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#411-oauth2准备&quot; id=&quot;markdown-toc-411-oauth2准备&quot;&gt;4.1.1 OAuth2准备&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#412-启动drone&quot; id=&quot;markdown-toc-412-启动drone&quot;&gt;4.1.2 启动drone&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#413-oauth2授权&quot; id=&quot;markdown-toc-413-oauth2授权&quot;&gt;4.1.3 OAuth2授权&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#414-ui同步--激活代码库&quot; id=&quot;markdown-toc-414-ui同步--激活代码库&quot;&gt;4.1.4 UI同步 &amp;amp; 激活代码库&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#415-api秘钥&quot; id=&quot;markdown-toc-415-api秘钥&quot;&gt;4.1.5 API秘钥&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#42-runner安装--运行&quot; id=&quot;markdown-toc-42-runner安装--运行&quot;&gt;4.2 Runner：安装 &amp;amp; 运行&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#421-安装&quot; id=&quot;markdown-toc-421-安装&quot;&gt;4.2.1 安装&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#422-运行&quot; id=&quot;markdown-toc-422-运行&quot;&gt;4.2.2 运行&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#43-ui秘钥设置&quot; id=&quot;markdown-toc-43-ui秘钥设置&quot;&gt;4.3 UI秘钥设置&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#44-私有registry&quot; id=&quot;markdown-toc-44-私有registry&quot;&gt;4.4 私有Registry&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#45-部署--多点事件触发&quot; id=&quot;markdown-toc-45-部署--多点事件触发&quot;&gt;4.5 部署 &amp;amp; 多点事件触发&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#451-drone-api--drone-cli&quot; id=&quot;markdown-toc-451-drone-api--drone-cli&quot;&gt;4.5.1 drone api | drone cli&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#452-plugin&quot; id=&quot;markdown-toc-452-plugin&quot;&gt;4.5.2 plugin&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#453-webhook-plugin&quot; id=&quot;markdown-toc-453-webhook-plugin&quot;&gt;4.5.3 webhook plugin&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#454-webhook-fake&quot; id=&quot;markdown-toc-454-webhook-fake&quot;&gt;4.5.4 webhook fake&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#455-waiting-hack&quot; id=&quot;markdown-toc-455-waiting-hack&quot;&gt;4.5.5 waiting hack&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;1-前言&quot;&gt;1. 前言&lt;/h1&gt;
&lt;p&gt;Drone是一个Golang技术栈的CI解决方案，功能和Jenkins之类的CI工具类似。&lt;/p&gt;

&lt;p&gt;优点：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Golang编写，分发及搭建非常容易（镜像体积很小）&lt;/li&gt;
  &lt;li&gt;Golang编写，运行时占用资源极小（特指和Java栈的一系列工具比较）&lt;/li&gt;
  &lt;li&gt;构建运行时以镜像优先，保证在不同平台的构建结果一致&lt;/li&gt;
  &lt;li&gt;优秀的设计，支持插件化提供强大的功能支持&lt;/li&gt;
  &lt;li&gt;现代化的UI，开箱即用，甩开Jenkins之类有历史包袱的工具几条街&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;缺点：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;较年轻，文档工作需要强化&lt;/li&gt;
  &lt;li&gt;插件的数量和质量，以及插件的文档支持需要强化&lt;/li&gt;
  &lt;li&gt;功能尚不能说强大，和Jenkins之类的老牌CI相比差距较大&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;简单选择：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Drone：
    &lt;ul&gt;
      &lt;li&gt;小型团队，对新技术适应能力较强的团队&lt;/li&gt;
      &lt;li&gt;对功能的丰富性要求并不是很高，但要求性能强大功能稳定&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Jenkins：
    &lt;ul&gt;
      &lt;li&gt;对功能的丰富性要求较高，要求任何情况任何需求都能快速应对&lt;/li&gt;
      &lt;li&gt;运维人员对Jenkins非常熟悉可以很快上手使用&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;相关资源：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;官方站点：&lt;a href=&quot;https://drone.io/&quot; target=&quot;_blank&quot;&gt;drone.io&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;文档站点：&lt;a href=&quot;https://docs.drone.io/&quot; target=&quot;_blank&quot;&gt;docs.drone.io&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;官方论坛：&lt;a href=&quot;https://discourse.drone.io/&quot; target=&quot;_blank&quot;&gt;discourse.drone.io&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;2-概念&quot;&gt;2. 概念&lt;/h1&gt;
&lt;h2 id=&quot;21-pipeline&quot;&gt;2.1 &lt;a href=&quot;https://docs.drone.io/configure/pipeline/&quot; target=&quot;_blank&quot;&gt;pipeline&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;pipeline是drone的核心概念&lt;/li&gt;
  &lt;li&gt;pipeline一般负责完成一个&lt;code&gt;任务&lt;/code&gt;：构建、发布、部署，其内部会有多个行为共同组成一个pipeline&lt;/li&gt;
  &lt;li&gt;pipeline在drone里是进行分类的，按类型有多种种类，常用的有：
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://docker-runner.docs.drone.io/configuration/&quot; target=&quot;_blank&quot;&gt;docker&lt;/a&gt;：所有的构建行为都在临时docker容器内进行，跨平台保证行为一致
        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;https://exec-runner.docs.drone.io/configuration/variables/&quot; target=&quot;_blank&quot;&gt;Environment Variables&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://exec-runner.docs.drone.io/configuration/&quot; target=&quot;_blank&quot;&gt;exec&lt;/a&gt;：所有的构建行为都在runner所在主机上进行，一般用在某些不方便放在容器内运行的工作，e.g xcode项目的构建
        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;https://docker-runner.docs.drone.io/configuration/environment/variables/&quot; target=&quot;_blank&quot;&gt;Environment Variables&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://ssh-runner.docs.drone.io/configuration/&quot; target=&quot;_blank&quot;&gt;ssh&lt;/a&gt;：构建行为通过ssh执行远程命令进行
        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;https://ssh-runner.docs.drone.io/configuration/variables/&quot; target=&quot;_blank&quot;&gt;Environment Variables&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;22-step&quot;&gt;2.2 &lt;a href=&quot;https://docker-runner.docs.drone.io/configuration/steps/&quot; target=&quot;_blank&quot;&gt;step&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;pipeline里的每一个操作被称为&lt;code&gt;step&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;组织多个&lt;code&gt;step&lt;/code&gt;可以完成一个特定的pipeline，e.g
    &lt;ul&gt;
      &lt;li&gt;构建pipeline：clone、安装依赖、单元测试、打包、制作镜像、推送镜像&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;23-workspace&quot;&gt;2.3 &lt;a href=&quot;https://docker-runner.docs.drone.io/configuration/workspace/&quot; target=&quot;_blank&quot;&gt;workspace&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;构建运行的工作空间，在不同的环境下其位置会有所不同&lt;/li&gt;
  &lt;li&gt;Posix系统（含docker容器），工作空间在：&lt;code&gt;/tmp/drone-${RANDOM}/drone/src&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;OSX系统，工作空间在：&lt;code&gt;/private/var/folders/...&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Win系统，工作空间在：&lt;code&gt;C:\windows\drone-%RANDOM%\drone\src&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;有一点要强调下，如果在bash脚本中访问当前pipeline的&lt;code&gt;~&lt;/code&gt;或&lt;code&gt;$HOME&lt;/code&gt;，获得的地址就是workspace的根目录，而&lt;code&gt;不是&lt;/code&gt;当前runner的用户home&lt;/li&gt;
  &lt;li&gt;此外，workspace是临时的，会在pipeline创建的时候产生，并在完成的时候被销毁&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;24-trigger&quot;&gt;2.4 &lt;a href=&quot;https://docker-runner.docs.drone.io/configuration/trigger/&quot; target=&quot;_blank&quot;&gt;trigger&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;trigger决定当前的&lt;code&gt;pipeline&lt;/code&gt;是否要&lt;code&gt;触发&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;trigger有很多类型：
    &lt;ul&gt;
      &lt;li&gt;根据分支：e.g 是否dev分支&lt;/li&gt;
      &lt;li&gt;根据事件：e.g 是否tag事件（注意，tag和分支trigger不能同时存在，因为tag是不区分分支的）&lt;/li&gt;
      &lt;li&gt;根据reference：e.g refs/tags/**&lt;/li&gt;
      &lt;li&gt;根据代码库：e.g octocat/hello-world&lt;/li&gt;
      &lt;li&gt;根据runner实例：e.g drone.instance1.com&lt;/li&gt;
      &lt;li&gt;根据状态触发：e.g failure&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;25-condition&quot;&gt;2.5 &lt;a href=&quot;https://docker-runner.docs.drone.io/configuration/conditions/&quot; target=&quot;_blank&quot;&gt;condition&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;condition决定当前的&lt;code&gt;step&lt;/code&gt;是否要&lt;code&gt;触发&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;condition有很多类型：
    &lt;ul&gt;
      &lt;li&gt;根据分支：e.g 是否dev分支&lt;/li&gt;
      &lt;li&gt;根据事件：e.g 是否tag事件（注意，tag和分支condition不能同时存在，因为tag是不区分分支的）&lt;/li&gt;
      &lt;li&gt;根据reference：e.g refs/tags/**&lt;/li&gt;
      &lt;li&gt;根据代码库：e.g octocat/hello-world&lt;/li&gt;
      &lt;li&gt;根据runner实例：e.g drone.instance1.com&lt;/li&gt;
      &lt;li&gt;根据状态触发：e.g failure&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;3-架构--multiple-pipeline--parallelism&quot;&gt;3. 架构 &amp;amp; Multiple Pipeline &amp;amp; Parallelism&lt;/h1&gt;
&lt;h2 id=&quot;31-架构&quot;&gt;3.1 架构&lt;/h2&gt;
&lt;p&gt;Drone这个CI其实很简单，也说不上什么架构。一般Drone会有一个单点Server，在git工具上注册好webhook接收事件，然后启动多个Runner来处理Server上产生的任务。这些Runner可以在同一台主机上，也可以分散在多台不同的主机上，官方文档的指引中要求不要将runner和server放在同一台主机上。&lt;/p&gt;

&lt;h2 id=&quot;32-multiple-pipeline&quot;&gt;3.2 Multiple Pipeline&lt;/h2&gt;
&lt;p&gt;官方说明：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Drone supports configuring and orchestrating multiple pipelines. This is useful when you need to fan-out and distribute your build tasks across multiple machines to reduce build times, or to execute your build tasks across multiple platforms (e.g. amd64 and arm64).&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;用途1：&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;在处理大型项目任务的时候，将任务拆散，分散到不同的物理机上进行并行处理，加速整个构建进程。如果是不同主机的话，需要用到&lt;code&gt;2.4&lt;/code&gt;提到的pipeline trigger，将不同的pipeline设定好自己的运行目标主机。保证同一个repo在不同主机上触发的时候，只有当前主机（runner）应该执行的pipeline得到执行。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;用途2：&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;确定pipeline之间的先后顺序，通过在pipeline一级定义&lt;code&gt;depends_on&lt;/code&gt;来申明相互之间的依赖关系。这里特别需要注意的是：pipeline之间是不共享workspace的。所以每一步都需要单独做类似于依赖安装之类的工作，这需要特别小心。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt;
&lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;pipeline&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# ...&lt;/span&gt;

&lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt;
&lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;pipeline&lt;/span&gt;
&lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;p3&lt;/span&gt;

&lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;steps&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;notify&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# ...&lt;/span&gt;

&lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;depends_on&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;p1&lt;/span&gt;
  &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;p2&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;33-parallelism&quot;&gt;3.3 Parallelism&lt;/h2&gt;
&lt;p&gt;这部分内容与 Multiple Pipeline 的关系，和之前讲过的 trigger 与 condition 的关系一样。Multiple Pipeline 是pipeline级别的，而Parallelism则是step级别的，本质上仍旧是并行运行。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;pipeline&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# ...&lt;/span&gt;

&lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;steps&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# ...&lt;/span&gt;

&lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;s3&lt;/span&gt;
  &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;commands&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# ...&lt;/span&gt;
  &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;depends_on&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;s1&lt;/span&gt;
    &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;s2&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h1 id=&quot;4-使用&quot;&gt;4. 使用&lt;/h1&gt;
&lt;h2 id=&quot;41-server安装--运行&quot;&gt;4.1 Server：安装 &amp;amp; 运行&lt;/h2&gt;
&lt;h3 id=&quot;411-oauth2准备&quot;&gt;4.1.1 OAuth2准备&lt;/h3&gt;
&lt;p&gt;需要在git repo软件上申请一个OAuth应用。这里我使用的是Gitea，就拿它来做演示：&lt;/p&gt;

&lt;p&gt;点击：&lt;code&gt;右上角头像 &amp;gt; 设置（下拉菜单） &amp;gt; 应用（页面中间）&lt;/code&gt;，打开的页面是管理用户级别的&lt;code&gt;Access Tokens&lt;/code&gt;和&lt;code&gt;OAuth2应用&lt;/code&gt;的。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/resources/2019/12/drone-ci/oauth1.png&quot; alt=&quot;&quot; target=&quot;_blank&quot; /&gt;&lt;/p&gt;

&lt;p&gt;找到：&lt;code&gt;创建新的 OAuth2 应用程序&lt;/code&gt;这一栏，输入：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;应用名称：这名字后面用不到，填可理解的内容即可&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;重定向 URI&lt;/code&gt;：http://&lt;code&gt;${drone_host}:${drone_ip}&lt;/code&gt;/login&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/resources/2019/12/drone-ci/oauth2.png&quot; alt=&quot;&quot; target=&quot;_blank&quot; /&gt;&lt;/p&gt;

&lt;p&gt;点击&lt;code&gt;创建应用&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;在打开的页面上显示了OAuth2应用的相关信息，这里需要记下：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;客户端ID&lt;/li&gt;
  &lt;li&gt;客户端秘钥&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/resources/2019/12/drone-ci/oauth3.png&quot; alt=&quot;&quot; target=&quot;_blank&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;412-启动drone&quot;&gt;4.1.2 启动drone&lt;/h3&gt;
&lt;p&gt;Golang应用程序，使用上最容易的方式仍旧是镜像：&lt;a href=&quot;https://hub.docker.com/r/drone/drone&quot; target=&quot;_blank&quot;&gt;drone/drone&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;drone服务器启动时的环境变量文档在：&lt;a href=&quot;https://docs.drone.io/installation/reference/&quot; target=&quot;_blank&quot;&gt;Drone Documentation &amp;gt; Installation &amp;gt; Reference&lt;/a&gt;。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;&lt;/span&gt;$ docker run -it -d &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    --name drone-server &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    -p &lt;span class=&quot;m&quot;&gt;18980&lt;/span&gt;:80 &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    --log-driver&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;json-file &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    --log-opt max-size&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;512m &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    -v /tmp/drone/data:/data &lt;span class=&quot;se&quot;&gt;\ &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# sqlite db file&lt;/span&gt;
    -e &lt;span class=&quot;nv&quot;&gt;DRONE_LOGS_DEBUG&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    -e &lt;span class=&quot;nv&quot;&gt;DRONE_LOGS_COLOR&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    -e &lt;span class=&quot;nv&quot;&gt;DRONE_LOGS_PRETTY&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    -e &lt;span class=&quot;nv&quot;&gt;DRONE_LOGS_TRACE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    -e &lt;span class=&quot;nv&quot;&gt;DRONE_AGENTS_ENABLED&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\ &lt;/span&gt;                                             &lt;span class=&quot;c1&quot;&gt;# drone server running with no agents, start runners manually&lt;/span&gt;
    -e &lt;span class=&quot;nv&quot;&gt;DRONE_GITEA_SKIP_VERIFY&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\ &lt;/span&gt;                                          &lt;span class=&quot;c1&quot;&gt;# gitea: use http protocol&lt;/span&gt;
    -e &lt;span class=&quot;nv&quot;&gt;DRONE_GITEA_SERVER&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;http://host.docker.internal:13000 &lt;span class=&quot;se&quot;&gt;\ &lt;/span&gt;                  &lt;span class=&quot;c1&quot;&gt;# gitea: server address with protocol&lt;/span&gt;
    -e &lt;span class=&quot;nv&quot;&gt;DRONE_GITEA_CLIENT_ID&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;fd023edb-7976-4d50-a92f-b16612683240 &lt;span class=&quot;se&quot;&gt;\ &lt;/span&gt;            &lt;span class=&quot;c1&quot;&gt;# gitea: oauth client id&lt;/span&gt;
    -e &lt;span class=&quot;nv&quot;&gt;DRONE_GITEA_CLIENT_SECRET&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;S4Q6PktE3dKNHPUzZrTdyNJsTThwal4doUWf6jf4eRA&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\ &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# gitea: oauth client secret &lt;/span&gt;
    -e &lt;span class=&quot;nv&quot;&gt;DRONE_RPC_SECRET&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;d9856af41ffe31f5e8025be020e981be &lt;span class=&quot;se&quot;&gt;\ &lt;/span&gt;                     &lt;span class=&quot;c1&quot;&gt;# drone: runner shall connect server with this secret&lt;/span&gt;
    -e &lt;span class=&quot;nv&quot;&gt;DRONE_SERVER_HOST&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;host.docker.internal:18980 &lt;span class=&quot;se&quot;&gt;\ &lt;/span&gt;                          &lt;span class=&quot;c1&quot;&gt;# drone: server address without protocol&lt;/span&gt;
    -e &lt;span class=&quot;nv&quot;&gt;DRONE_SERVER_PROTO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;http &lt;span class=&quot;se&quot;&gt;\ &lt;/span&gt;                                               &lt;span class=&quot;c1&quot;&gt;# drone: server with http protocol&lt;/span&gt;
    drone/drone:1.6.3&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;413-oauth2授权&quot;&gt;4.1.3 OAuth2授权&lt;/h3&gt;
&lt;p&gt;访问drone的地址：&lt;code&gt;http://host.docker.internal:18980&lt;/code&gt;，会跳转到gitea进行授权，授权完成后会跳转回drone。这时应该就已经以刚才制作OAuth2应用的用户身份登录drone了。&lt;/p&gt;

&lt;p&gt;这里说明下，因为gitea和drone都运行在容器内，他们之间相互访问是通过容器名来进行的，而host主机访问这两者都是通过loopback地址，两者之间存在差异，会导致OAuth的过程失败。因此这里统一使用docker MAC desktop版本的&lt;code&gt;host.docker.internal&lt;/code&gt;域名来贯通内部和外部。但需要额外修改host主机的&lt;code&gt;/etc/hosts&lt;/code&gt;配置，把这个host解析为loopback地址。&lt;/p&gt;

&lt;h3 id=&quot;414-ui同步--激活代码库&quot;&gt;4.1.4 UI同步 &amp;amp; 激活代码库&lt;/h3&gt;
&lt;p&gt;刚完成授权的账户是没有任何代码库的，打开drone首页发现是空列表（即便当前通过OAuth2授权的账号在gitea内有代码库）：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/resources/2019/12/drone-ci/drone1.png&quot; alt=&quot;&quot; target=&quot;_blank&quot; /&gt;&lt;/p&gt;

&lt;p&gt;点击右上角的&lt;code&gt;SYNC&lt;/code&gt;就会开始和gitea同步账户的代码库数据，完成后即可获得所有当前账号在gitea内所拥有的代码库列表：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/resources/2019/12/drone-ci/drone2.png&quot; alt=&quot;&quot; target=&quot;_blank&quot; /&gt;&lt;/p&gt;

&lt;p&gt;这时候账号下的drone项目都是&lt;code&gt;未激活&lt;/code&gt;状态，需要点击面板上项目右边的&lt;code&gt;ACTIVATE&lt;/code&gt;进行激活：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/resources/2019/12/drone-ci/drone3.png&quot; alt=&quot;&quot; target=&quot;_blank&quot; /&gt;
&lt;img src=&quot;/resources/2019/12/drone-ci/drone4.png&quot; alt=&quot;&quot; target=&quot;_blank&quot; /&gt;&lt;/p&gt;

&lt;p&gt;点击&lt;code&gt;SAVE&lt;/code&gt;保存即可。经过这几个操作，drone即激活了对这几个代码库的webhook事件监听。&lt;/p&gt;

&lt;p&gt;至此为止drone本体的安装基本上完成了，后续还需要配置下runner。&lt;/p&gt;

&lt;h3 id=&quot;415-api秘钥&quot;&gt;4.1.5 API秘钥&lt;/h3&gt;
&lt;p&gt;点击右上角的用户头像，然后点击&lt;code&gt;User settings&lt;/code&gt;会打开用户的设置页面。在这个页面上能找到用户的token。如果有需要使用drone API的话（或者是cli命令行工具），这个token是必须的。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/resources/2019/12/drone-ci/drone7.png&quot; alt=&quot;&quot; target=&quot;_blank&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;42-runner安装--运行&quot;&gt;4.2 Runner：安装 &amp;amp; 运行&lt;/h2&gt;
&lt;h3 id=&quot;421-安装&quot;&gt;4.2.1 安装&lt;/h3&gt;
&lt;p&gt;服务器设置完成后，如果没有单独安装和运行runner，服务器上所有触发的事件都会是&lt;code&gt;Pending&lt;/code&gt;状态，而且没有任何日志。&lt;/p&gt;

&lt;p&gt;关于Pending的debug，可以看下官方的一篇帖子：&lt;a href=&quot;https://discourse.drone.io/t/builds-are-stuck-in-pending-status/4437&quot; target=&quot;_blank&quot;&gt;Builds are Stuck in Pending Status&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;Runner的安装见官方文档：&lt;a href=&quot;https://docs.drone.io/installation/runners/&quot; target=&quot;_blank&quot;&gt;Drone Documentation &amp;gt; Installation &amp;gt; Runners&lt;/a&gt;。Runner也分不同的类型，一般常用的是：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.drone.io/installation/runners/exec/&quot; target=&quot;_blank&quot;&gt;Exec Runner&lt;/a&gt;：直接运行在主机上的runner&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.drone.io/installation/runners/docker/&quot; target=&quot;_blank&quot;&gt;Docker Runner&lt;/a&gt;：运行在docker容器内的runner&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Runner的类型和pipeline的类型并不要求一致，runner只是pipeline的运行者，不管是什么类型的pipeline，都可以在任何类型的runner上运作。举例来说，一个docker类型的pipeline，在exec runner上就会在主机上启动docker容器并运行，而docker runner则是直接在docker容器内运行。&lt;/p&gt;

&lt;h3 id=&quot;422-运行&quot;&gt;4.2.2 运行&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Exec Runner&lt;/strong&gt;
Exec Runner需要手动在&lt;code&gt;~/.drone-runner-exec/config&lt;/code&gt;创建一个配置文件：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;DRONE_DEBUG&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;DRONE_LOG_FILE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/tmp/drone-runner-exec.txt
&lt;span class=&quot;nv&quot;&gt;DRONE_LOG_FILE_MAX_SIZE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;50&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;DRONE_RPC_DUMP_HTTP&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;DRONE_RPC_DUMP_HTTP_BODY&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;DRONE_RPC_PROTO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;http
&lt;span class=&quot;nv&quot;&gt;DRONE_RPC_HOST&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;host.docker.internal:18980
&lt;span class=&quot;nv&quot;&gt;DRONE_RPC_SECRET&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;d9856af41ffe31f5e8025be020e981be
&lt;span class=&quot;nv&quot;&gt;DRONE_RUNNER_PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$HOME&lt;/span&gt;/.yarn/bin:&lt;span class=&quot;nv&quot;&gt;$HOME&lt;/span&gt;/.config/yarn/global/node_modules/.bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;更多的配置项可以查阅官方文档：&lt;a href=&quot;https://exec-runner.docs.drone.io/installation/reference/&quot; target=&quot;_blank&quot;&gt;Exec Runner &amp;gt; Installation &amp;gt; Configuration Reference&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;配置文件里最重要的是&lt;code&gt;DRONE_RPC_HOST&lt;/code&gt;&lt;code&gt;DRONE_RPC_SECRET&lt;/code&gt;这两项。修改完成后记得重启runner：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;&lt;/span&gt;$ drone-runner-exec service stop &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; drone-runner-exec service start&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Runner在执行pipeline操作时候的用户即是runner启动时的用户，这需要非常小心，否则会搞错用户导致权限错误。此外，在2.3 workspace的时候也提到过了，在runner执行pipeline的时候，&lt;code&gt;~&lt;/code&gt;指向的是workspace的根目录，而不是用户的home，这点要非常小心。&lt;/p&gt;

&lt;p&gt;举例来说，存放在&lt;code&gt;$HOME/.docker&lt;/code&gt;下的凭证在exec runner运行的时候是不可访问的（&lt;code&gt;~&lt;/code&gt;会定位到workspace而不是&lt;code&gt;$HOME&lt;/code&gt;），这会导致私有registry的访问失败。同样的，pipeline运行时的PATH也不同于用户自身的PATH，需要在配置文件中设置好&lt;code&gt;DRONE_RUNNER_PATH&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Docker Runner&lt;/strong&gt;
这部分就非常简单了，无非就是一个docker容器，直接使用对应的官方镜像即可：&lt;a href=&quot;https://hub.docker.com/r/drone/drone-runner-docker&quot; target=&quot;_blank&quot;&gt;drone/drone-runner-docker&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;相关配置项可以查阅官方文档：&lt;a href=&quot;https://docker-runner.docs.drone.io/installation/reference/&quot; target=&quot;_blank&quot;&gt;Docker Runner &amp;gt; Installation &amp;gt; Configuration Reference&lt;/a&gt;。&lt;/p&gt;

&lt;h2 id=&quot;43-ui秘钥设置&quot;&gt;4.3 UI秘钥设置&lt;/h2&gt;
&lt;p&gt;在执行pipeline的时候不可避免需要访问一些密码秘钥之类的信息，而构建过程中，理论上runner只能访问代码库里的内容。这就造成了问题，因为代码库并不是安全的存放秘钥的地方。针对这样的问题，drone有对应的解决方案。&lt;/p&gt;

&lt;p&gt;在drone ui仓库的设置中，有一处：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/resources/2019/12/drone-ci/drone5.png&quot; alt=&quot;&quot; target=&quot;_blank&quot; /&gt;&lt;/p&gt;

&lt;p&gt;设置完成后，就会保存在drone系统中：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/resources/2019/12/drone-ci/drone6.png&quot; alt=&quot;&quot; target=&quot;_blank&quot; /&gt;&lt;/p&gt;

&lt;p&gt;后续在pipeline可以如下的形式进行访问：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;pipeline&lt;/span&gt;
&lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;default&lt;/span&gt;

&lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;steps&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;build&lt;/span&gt;
  &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;alpine&lt;/span&gt;
  &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;environment&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;USERNAME&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;from_secret&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;docker_username&lt;/span&gt;
    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;PASSWORD&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;from_secret&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;docker_password&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;更多关于secret的设置及访问，可以参见官方文档：&lt;a href=&quot;https://docs.drone.io/configure/secrets/&quot; target=&quot;_blank&quot;&gt;Drone Documentation &amp;gt; Configuration &amp;gt; Secrets&lt;/a&gt;。在这方面，drone支持得非常全面，甚至外部的加密设施也可以支持访问。&lt;/p&gt;

&lt;h2 id=&quot;44-私有registry&quot;&gt;4.4 私有Registry&lt;/h2&gt;
&lt;p&gt;在pipeline应用的过程中，比较常见的问题是对于私有registry的访问。毕竟现在的CI基本上都围绕着镜像打转，抓取镜像进行部署或者构建镜像向上推送都是常见需求。&lt;/p&gt;

&lt;p&gt;官方对此也有解决方案：&lt;a href=&quot;https://discourse.drone.io/t/how-to-pull-private-images-with-1-0/3155&quot; target=&quot;_blank&quot;&gt;How to pull private images with 1.0&lt;/a&gt;。&lt;/p&gt;

&lt;h2 id=&quot;45-部署--多点事件触发&quot;&gt;4.5 部署 &amp;amp; 多点事件触发&lt;/h2&gt;
&lt;p&gt;上述的内容基本上把CI的最基础的应用都讲到了，如果只是简单的&lt;code&gt;提交代码 &amp;gt; 触发webhook &amp;gt; drone pipeline&lt;/code&gt;这个流程的话，是没有问题的。&lt;/p&gt;

&lt;p&gt;那么接下来就可以考虑下稍微复杂点的需求：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;项目的构建和部署需要分开&lt;/li&gt;
  &lt;li&gt;构建定义为一个pipeline&lt;/li&gt;
  &lt;li&gt;部署定义为一个pipeline&lt;/li&gt;
  &lt;li&gt;部署pipeline应该由构建pipeline异步触发&lt;/li&gt;
  &lt;li&gt;部署pipeline应该和构建pipeline解耦，两者可能发生在完全隔离的两个物理机的runner上&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;然后我简单说下结论：在当前的版本（drone/drone:1.6.3），这个需求&lt;code&gt;做不到&lt;/code&gt;，如果是按官方的API和功能的话。而使用一些非官方的hacking思路，则可以做到&lt;code&gt;基本上一致的效果&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;根据一开始说的，如果单独只是一个构建pipeline，很简单就能做到。而如果要实现刚才列出的需求，就需要在构建pipeline完成并退出之前触发一个额外的事件，只要能触发额外的事件，再配合上：trigger &amp;amp; condition，保证代码库的pipeline启动的时候，只有部署pipeline进入工作，且只有正确的runner实例进入工作，那一切就通了。&lt;/p&gt;

&lt;p&gt;那么，能不能手动触发一个部署呢？研究了下官方的资料，发现正常途径基本上做不到，只有一些非正常的思路才可以做到。下面说下思路。&lt;/p&gt;

&lt;h3 id=&quot;451-drone-api--drone-cli&quot;&gt;4.5.1 drone api | drone cli&lt;/h3&gt;
&lt;p&gt;首先想到的是看看官方的API中有没有可用的命令（cli实际上就是官方API的封装）：&lt;a href=&quot;https://docs.drone.io/api/overview/&quot; target=&quot;_blank&quot;&gt;API文档&lt;/a&gt;、&lt;a href=&quot;https://docs.drone.io/cli/install/&quot; target=&quot;_blank&quot;&gt;CLI文档&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;发现官方有一个命令：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;&lt;/span&gt;$ drone build promote --help
  NAME:
     drone build promote - promote a build
  
  USAGE:
     drone build promote &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;command&lt;/span&gt; options&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &amp;lt;repo/name&amp;gt; &amp;lt;build&amp;gt; &amp;lt;environment&amp;gt;
  
  OPTIONS:
     --param value, -p value  custom parameters to be injected into the job environment. Format: &lt;span class=&quot;nv&quot;&gt;KEY&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;value
     --format value           format output &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;default: &lt;span class=&quot;s2&quot;&gt;&amp;quot;...&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;结合&lt;code&gt;.drone.yml&lt;/code&gt;使用：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;pipeline&lt;/span&gt;
&lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;exec&lt;/span&gt;
&lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;test&lt;/span&gt;

&lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;platform&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;darwin&lt;/span&gt;
  &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;arch&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;amd64&lt;/span&gt;

&lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;steps&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;test&lt;/span&gt;
    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;commands&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;echo &amp;quot;tested&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;when&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;tag&lt;/span&gt;

&lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt;
&lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;pipeline&lt;/span&gt;
&lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;exec&lt;/span&gt;
&lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;build&lt;/span&gt;

&lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;platform&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;darwin&lt;/span&gt;
  &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;arch&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;amd64&lt;/span&gt;

&lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;steps&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;build&lt;/span&gt;
    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;commands&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;echo &amp;quot;built&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;when&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;tag&lt;/span&gt;

&lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;depends_on&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;test&lt;/span&gt;

&lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt;
&lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;pipeline&lt;/span&gt;
&lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;exec&lt;/span&gt;
&lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;notify&lt;/span&gt;

&lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;platform&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;darwin&lt;/span&gt;
  &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;arch&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;amd64&lt;/span&gt;

&lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;steps&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;notify&lt;/span&gt;
    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;commands&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;drone build promote fullstack/gateway 100 production&lt;/span&gt;
    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;environment&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;DRONE_SERVER&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;http://host.docker.internal:18980&lt;/span&gt;
      &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;DRONE_TOKEN&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;K5i8g6PMlLM3tWaPDRagigPkBrl1YKGu&lt;/span&gt;
    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;when&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;tag&lt;/span&gt;

&lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;depends_on&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;build&lt;/span&gt;

&lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt;
&lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;pipeline&lt;/span&gt;
&lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;exec&lt;/span&gt;
&lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;deploy&lt;/span&gt;

&lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;platform&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;darwin&lt;/span&gt;
  &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;arch&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;amd64&lt;/span&gt;

&lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;steps&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;deploy&lt;/span&gt;
    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;commands&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;echo &amp;quot;deployed&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;when&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;promote&lt;/span&gt;
      &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;production&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;测试后发现，如果&lt;code&gt;build&lt;/code&gt;参数给的是已经存在的构建的话，则会重复之前的构建流程；而如果给的是一个很大的不存在该build的值（比如上面举例的100），则构建在notify这一步失败，并报错：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;&lt;/span&gt;+ drone build promote fullstack/gateway &lt;span class=&quot;m&quot;&gt;100&lt;/span&gt; production
client error &lt;span class=&quot;m&quot;&gt;404&lt;/span&gt;: &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;message&amp;quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&amp;quot;sql: no rows in result set&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;查找了下相关资料，并没有找到官方文档，仅在论坛中找到几篇讨论：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://discourse.drone.io/t/manually-trigger-a-build/874/8&quot; target=&quot;_blank&quot;&gt;Manually trigger a build&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://discourse.drone.io/t/promoting-a-build-by-branch/4755&quot; target=&quot;_blank&quot;&gt;Promoting a build by branch&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/drone/drone/issues/2679#issue-435262568&quot; target=&quot;_blank&quot;&gt;Trigger build for Branch, Commit&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;根据官方人员的解释：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;When you deploy, you are essentially “promoting” a build, which means you need to provide the build number you are promoting, and the environment you are promoting to. For example:&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;drone deploy octocat/hello-world 42 production&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;In the above example, you are promoting build 42 to production. This will execute a deployment event in the system with environment name production.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;也就是说你只能对&lt;code&gt;已经存在&lt;/code&gt;的build进行触发让这个&lt;code&gt;已经测试构建完成的&lt;/code&gt;build进行部署，而不能从头创建一个新的build。也就是说，上述的工具能大致满足上面提出的那串需求，但本质上还是不同的：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;测试构建等必须是一个单独的行为，需要先行做完，并形成一个完成的build&lt;/li&gt;
  &lt;li&gt;需要手动触发（因为你需要确认build号，所以这个行为必然是手动的，不可能自动化）这个完成的build，让yaml中配置为promote的event触发，进行部署&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;452-plugin&quot;&gt;4.5.2 plugin&lt;/h3&gt;
&lt;p&gt;官方有一个插件叫：&lt;a href=&quot;http://plugins.drone.io/drone-plugins/drone-downstream/&quot; target=&quot;_blank&quot;&gt;Downstream Build&lt;/a&gt;。乍看之下貌似是满足需求的，但我实际扒了下源码，发现这个插件的本质其实就是封装了下官方的API。所以实际上和4.5.1一样，不行。&lt;/p&gt;

&lt;h3 id=&quot;453-webhook-plugin&quot;&gt;4.5.3 webhook plugin&lt;/h3&gt;
&lt;p&gt;后续的思路是尝试使用webhook插件，在构建pipeline完成之后用webhook触发一个构建：&lt;a href=&quot;http://plugins.drone.io/drone-plugins/drone-webhook/&quot; target=&quot;_blank&quot;&gt;Webhook&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;文档工作总是半吊子，参数有几个根本不知道具体应该填什么，只能随便尝试下：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;&lt;/span&gt;$ docker run --rm &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
          -e &lt;span class=&quot;nv&quot;&gt;PLUGIN_URLS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;http://host.docker.internal:18980/hook &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
          -e &lt;span class=&quot;nv&quot;&gt;PLUGIN_USERNAME&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;root &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
          -e &lt;span class=&quot;nv&quot;&gt;PLUGIN_PASSWORD&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Abcd1234_ &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
          -e &lt;span class=&quot;nv&quot;&gt;PLUGIN_DEBUG&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
          -e &lt;span class=&quot;nv&quot;&gt;PLUGIN_SKIP_VERIFY&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
          -e &lt;span class=&quot;nv&quot;&gt;DRONE_REPO_OWNER&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;fullstack &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
          -e &lt;span class=&quot;nv&quot;&gt;DRONE_REPO_NAME&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;gateway &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
          -e &lt;span class=&quot;nv&quot;&gt;DRONE_COMMIT_SHA&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;2087d78f48 &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
          -e &lt;span class=&quot;nv&quot;&gt;DRONE_COMMIT_BRANCH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;master &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
          -e &lt;span class=&quot;nv&quot;&gt;DRONE_BUILD_EVENT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;deployment &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
          plugins/webhook:latest
Webhook &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;
  URL: http://host.docker.internal:18980/hook
  METHOD: POST
  HEADERS: map&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Authorization:&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Basic &lt;span class=&quot;nv&quot;&gt;cm9vdDpBYmNkMTIzNF8&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=]&lt;/span&gt; Content-Type:&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;application/json&lt;span class=&quot;o&quot;&gt;]]&lt;/span&gt;
  REQUEST BODY: &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;repo&amp;quot;&lt;/span&gt;:&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;owner&amp;quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&amp;quot;fullstack&amp;quot;&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&amp;quot;name&amp;quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&amp;quot;gateway&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&amp;quot;build&amp;quot;&lt;/span&gt;:&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;tag&amp;quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&amp;quot;event&amp;quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&amp;quot;deployment&amp;quot;&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&amp;quot;number&amp;quot;&lt;/span&gt;:0,&lt;span class=&quot;s2&quot;&gt;&amp;quot;commit&amp;quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&amp;quot;2087d78f48&amp;quot;&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&amp;quot;ref&amp;quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&amp;quot;refs/heads/master&amp;quot;&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&amp;quot;branch&amp;quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&amp;quot;master&amp;quot;&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&amp;quot;author&amp;quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&amp;quot;message&amp;quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&amp;quot;status&amp;quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&amp;quot;success&amp;quot;&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&amp;quot;link&amp;quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&amp;quot;started&amp;quot;&lt;/span&gt;:0,&lt;span class=&quot;s2&quot;&gt;&amp;quot;created&amp;quot;&lt;/span&gt;:0&lt;span class=&quot;o&quot;&gt;}}&lt;/span&gt;

  RESPONSE STATUS: &lt;span class=&quot;m&quot;&gt;200&lt;/span&gt; OK
  RESPONSE BODY:&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;返回结果是200，正常，但结果本身为&lt;code&gt;空&lt;/code&gt;。查看drone的UI发现实际上没有任何build被触发。这就很无奈了，这里的问题可能出在：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;操作者：给的参数不正确&lt;/li&gt;
  &lt;li&gt;webhook插件：没有发送正确的webhook请求&lt;/li&gt;
  &lt;li&gt;drone服务器：忽略了不正确的webhook请求&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;无论如何，后续如果要继续的话就需要看源码了，插件的以及服务器的源码。&lt;/p&gt;

&lt;h3 id=&quot;454-webhook-fake&quot;&gt;4.5.4 webhook fake&lt;/h3&gt;
&lt;p&gt;到这里就是非正常思路了。&lt;/p&gt;

&lt;p&gt;因为gitea可以正常触发drone的webhook，思路就是使用curl仿造gitea的请求，发送到drone。其实drone官方也有对webhook的描述：&lt;a href=&quot;https://discourse.drone.io/t/how-to-use-global-webhooks/3755&quot; target=&quot;_blank&quot;&gt;How to use Global Webhooks&lt;/a&gt;，但实在是没什么正式的支持，API之类的易用性的工具都没有，只有这篇文章。&lt;/p&gt;

&lt;p&gt;gitea官方有webhook相关的文档：&lt;a href=&quot;https://docs.gitea.io/en-us/webhooks/&quot; target=&quot;_blank&quot;&gt;Webhooks&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;gitea的钩子可以在这里找到，点击下面的链接可以查看请求细节：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/resources/2019/12/drone-ci/gitea1.png&quot; alt=&quot;&quot; target=&quot;_blank&quot; /&gt;
&lt;img src=&quot;/resources/2019/12/drone-ci/gitea2.png&quot; alt=&quot;&quot; target=&quot;_blank&quot; /&gt;
&lt;img src=&quot;/resources/2019/12/drone-ci/gitea3.png&quot; alt=&quot;&quot; target=&quot;_blank&quot; /&gt;&lt;/p&gt;

&lt;p&gt;当然这也非常麻烦，而且gitea发送出去的webhook请求里有非常多repo详细信息，如果要做到自动化的话，这块的获取也是很麻烦的一件事情。&lt;/p&gt;

&lt;h3 id=&quot;455-waiting-hack&quot;&gt;4.5.5 waiting hack&lt;/h3&gt;
&lt;p&gt;另一个非正常思路就是定义一个pipeline，仅在指定的runner上运行，然后命令中执行脚本，查询私有registry，看目标仓库（镜像）的目标tag是否存在，存在的话就进行部署。而在其他的runner上进行构建和镜像推送操作。&lt;/p&gt;

&lt;p&gt;这样就能做到一开始提的需求，虽然恶心了点。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;EOF&lt;/p&gt;
&lt;/blockquote&gt;
</description>
				<pubDate>Mon, 23 Dec 2019 10:36:22 +0800</pubDate>
				<link>https://xenojoshua.com/2019/12/drone-ci/</link>
				<guid isPermaLink="true">https://xenojoshua.com/2019/12/drone-ci/</guid>
			</item>
		
			<item>
				<title>在Docker中使用Node</title>
				<description>&lt;h4&gt;Table of Contents&lt;/h4&gt;
&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#1-前言&quot; id=&quot;markdown-toc-1-前言&quot;&gt;1. 前言&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#2-镜像制作&quot; id=&quot;markdown-toc-2-镜像制作&quot;&gt;2. 镜像制作&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#21-npm&quot; id=&quot;markdown-toc-21-npm&quot;&gt;2.1 npm&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#22-镜像制作&quot; id=&quot;markdown-toc-22-镜像制作&quot;&gt;2.2 镜像制作&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#23-镜像stage&quot; id=&quot;markdown-toc-23-镜像stage&quot;&gt;2.3 镜像stage&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#3-集群处理及反向代理&quot; id=&quot;markdown-toc-3-集群处理及反向代理&quot;&gt;3. 集群处理及反向代理&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#31-pm2--nginx&quot; id=&quot;markdown-toc-31-pm2--nginx&quot;&gt;3.1 pm2 + nginx&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#32-docker-compose--nginx&quot; id=&quot;markdown-toc-32-docker-compose--nginx&quot;&gt;3.2 docker-compose + nginx&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#4-健康检查&quot; id=&quot;markdown-toc-4-健康检查&quot;&gt;4. 健康检查&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;1-前言&quot;&gt;1. 前言&lt;/h1&gt;
&lt;p&gt;在Docker中使用Node，中间遇到了相当多的问题，这里就简单记录下，以防忘记。下述的所有范例都是使用typescript进行逻辑编写的，并在Docker中进行编译制作镜像的，周知。&lt;/p&gt;

&lt;h1 id=&quot;2-镜像制作&quot;&gt;2. 镜像制作&lt;/h1&gt;
&lt;h2 id=&quot;21-npm&quot;&gt;2.1 npm&lt;/h2&gt;
&lt;p&gt;在Dockerfile里的npm安装记得要加上&lt;code&gt;--unsafe-perm&lt;/code&gt;，具体可以看：&lt;a href=&quot;https://github.com/grpc/grpc-node/issues/604&quot; target=&quot;_blank&quot;&gt;grpc/grpc-node#604&lt;/a&gt;。&lt;/p&gt;

&lt;h2 id=&quot;22-镜像制作&quot;&gt;2.2 镜像制作&lt;/h2&gt;
&lt;p&gt;Docker的&lt;code&gt;COPY&lt;/code&gt;命令是将命令对应的文件夹&lt;code&gt;下&lt;/code&gt;的所有内容拷贝到目标位置，而不包含命令中的文件夹本身，这是必须先了解的基础。&lt;/p&gt;

&lt;p&gt;一般来说node项目的资源都会比较多比较散，不会像go应用程序一样build完成之后就是一个binary文件，node会有很多零碎的文件和代码都必须拷贝到镜像里。这里就需要先制作一个context。&lt;/p&gt;

&lt;p&gt;假设项目的文件夹结构如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;/- 
 | bash /-              # bash脚本
 |       | compose.sh   # 制作compose配置文件的脚本
 |       | docker.sh    # 制作镜像的脚本
 | build                # 编译完成的js文件
 | node_modules         # npm包
 | schema               # sql文件
 | src                  # typescript源码
 | .gitignore
 | Dockerfile
 | package.json
 | config.yml
 | README.md
 | tsconfig.json
 | tslint.json
 | yarn.lock
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;则可以使用如下脚本制作一个context子集，并进行镜像制作：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;ch&quot;&gt;#!/usr/bin/env bash&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;FULLPATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;dirname &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$0&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;pwd&lt;/span&gt; -P &lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;si&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;FULLPATH&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;/..

&lt;span class=&quot;nv&quot;&gt;VERSION&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;cat ./package.json &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; jq -r &lt;span class=&quot;s1&quot;&gt;&amp;#39;.version&amp;#39;&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# prepare docker context&lt;/span&gt;
rm -rf ./docker                 &lt;span class=&quot;c1&quot;&gt;# 删除之前的context，如果有的话&lt;/span&gt;
mkdir -p ./docker/context       &lt;span class=&quot;c1&quot;&gt;# 制作context文件夹&lt;/span&gt;
mkdir -p ./docker/context/pm2   &lt;span class=&quot;c1&quot;&gt;# 制作PM2日志文件夹，后面会说到&lt;/span&gt;
cp -r &lt;span class=&quot;se&quot;&gt;\ &lt;/span&gt;                        &lt;span class=&quot;c1&quot;&gt;# 拷贝制作镜像需要的资源到context内&lt;/span&gt;
    src &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    config.yml &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    package.json &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    tsconfig.json &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    tslint.json &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    yarn.lock &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    ./docker/context

&lt;span class=&quot;c1&quot;&gt;# build image&lt;/span&gt;
docker build &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    --no-cache &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    --tag your_app_name:&lt;span class=&quot;si&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;VERSION&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    --file ./Dockerfile &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    ./docker

&lt;span class=&quot;c1&quot;&gt;# remove images without tags&lt;/span&gt;
docker rmi &lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;docker images &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; awk &lt;span class=&quot;s1&quot;&gt;&amp;#39;/^&amp;lt;none&amp;gt;/ {print $3}&amp;#39;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;# 当制作tag重复的镜像时，这个命令就很有用&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# remove tmp file&lt;/span&gt;
rm -rf ./docker

&lt;span class=&quot;c1&quot;&gt;# push image&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;ORIGIN_TAG&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;you_app_name:&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;VERSION&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;TARGET_TAG&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;your_dockerhub_account/you_app_name:&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;VERSION&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;
docker tag &lt;span class=&quot;si&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;ORIGIN_TAG&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;si&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;TARGET_TAG&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;
docker push &lt;span class=&quot;si&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;TARGET_TAG&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;23-镜像stage&quot;&gt;2.3 镜像stage&lt;/h2&gt;
&lt;p&gt;node的镜像在制作过程中，需要一些命令进行辅助，而这些命令在基准的node镜像上是不存在的，因此就需要在Dockerfile中先npm安装它们。比如说typescript、yarn等。而这些安装行为都会显著增大镜像的体积，因此这里就需要使用到按stage进行构建的技术。&lt;/p&gt;

&lt;p&gt;官方文档在：&lt;a href=&quot;https://docs.docker.com/develop/develop-images/multistage-build/&quot; target=&quot;_blank&quot;&gt;Use multi-stage builds&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;先放一个例子：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-docker&quot; data-lang=&quot;docker&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; node:10.16.3-alpine as builder&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;WORKDIR&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; /opt&lt;/span&gt;

COPY ./context ./

&lt;span class=&quot;k&quot;&gt;RUN&lt;/span&gt; npm i typescript -g --unsafe-perm &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    npm i --only&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;prod --unsafe-perm --loglevel verbose &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    tsc

&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; node:10.16.3-alpine&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;WORKDIR&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; /app&lt;/span&gt;

COPY --from&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;builder /opt .

&lt;span class=&quot;k&quot;&gt;ENTRYPOINT&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; [&amp;quot;node&amp;quot;, &amp;quot;./build/index.js&amp;quot;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;该Dockerfile的上半部分将&lt;code&gt;./context&lt;/code&gt;下的所有内容拷贝到&lt;code&gt;/opt&lt;/code&gt;这个工作路径下。然后安装了typescript，并根据&lt;code&gt;package.json&lt;/code&gt;的内容进行npm包的安装。接下来使用刚才安装好的typescript命令&lt;code&gt;tsc&lt;/code&gt;根据&lt;code&gt;tsconfig.json&lt;/code&gt;的配置将src文件夹下的源码编译为&lt;code&gt;build&lt;/code&gt;文件夹下的js源码。&lt;/p&gt;

&lt;p&gt;从下半部分的&lt;code&gt;FROM node:10.16.3-alpine&lt;/code&gt;开始，起了一个干净的node镜像，并将&lt;code&gt;builder&lt;/code&gt;这个阶段做好的内容从builder阶段的&lt;code&gt;/opt&lt;/code&gt;文件夹下拷贝到&lt;code&gt;/app&lt;/code&gt;下。这里仍旧需要注意&lt;code&gt;COPY&lt;/code&gt;命令是不会拷贝目标文件夹自身的，只会拷贝文件夹下的内容。这样制作完成的镜像中就不会包含之前安装的typescript了。&lt;/p&gt;

&lt;p&gt;这个例子简单了点，只有一个typescript，如果在构建过程中还要用到一些其他东西的话，效果（体积变化）就会非常明显。&lt;/p&gt;

&lt;h1 id=&quot;3-集群处理及反向代理&quot;&gt;3. 集群处理及反向代理&lt;/h1&gt;
&lt;p&gt;node作为一个单进程单线程的应用程序，在利用CPU上实在是不行，所以就需要一些外部程序的辅助来充分利用物理CPU。一般有两个解决方案。下述解决方案中的Nginx跑在容器里或跑在主机上都是可以的，没有任何区别。&lt;/p&gt;

&lt;h2 id=&quot;31-pm2--nginx&quot;&gt;3.1 pm2 + nginx&lt;/h2&gt;
&lt;p&gt;这个解决方案只需要启动一个应用程序容器，在容器内使用PM2对应用程序进行cluster化，由PM2监听单个端口并转发所有的进入请求。在应用程序容器之外，由Nginx处理所有到达主机的请求。&lt;/p&gt;

&lt;p&gt;这里就涉及到在容器内使用PM2。首先需要安装PM2，需要在之前范例中的Dockerfile中的&lt;code&gt;COPY --from=builder /opt .&lt;/code&gt;之后添加一行：&lt;code&gt;RUN npm i pm2 -g --unsafe-perm --loglevel verbose&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;然后在容器运行的&lt;code&gt;ENTRYPOINT&lt;/code&gt;上，需要修改成：&lt;code&gt;ENTRYPOINT [&quot;pm2-runtime&quot;, &quot;start&quot;, &quot;./build/index.js&quot;]&lt;/code&gt;。这里注意，启动命令中使用的不是&lt;code&gt;pm2&lt;/code&gt;而是&lt;code&gt;pm2-runtime&lt;/code&gt;。这个命令是为了在容器内使用而专门特化出来的，普通的pm2命令在启动后就会转后台，导致容器退出。&lt;/p&gt;

&lt;p&gt;此外，在使用时可以附加一些参数：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;&lt;/span&gt;docker run -d -it --name your_app_name &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    -p &lt;span class=&quot;m&quot;&gt;3000&lt;/span&gt;:3000 &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    -v dir_of_host:/app/pm2 &lt;span class=&quot;se&quot;&gt;\ &lt;/span&gt;                      &lt;span class=&quot;c1&quot;&gt;# 映射到主机上的日志文件路径&lt;/span&gt;
    your_app_name:version &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    --name&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;your_app_name_in_pm2 &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    --instances&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;max &lt;span class=&quot;se&quot;&gt;\ &lt;/span&gt;                              &lt;span class=&quot;c1&quot;&gt;# 以cluster模式启动pm2，并按CPU数量启动node应用的进程&lt;/span&gt;
    --output&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/app/pm2/your_app_name.stdout.log &lt;span class=&quot;se&quot;&gt;\ &lt;/span&gt;   &lt;span class=&quot;c1&quot;&gt;# 输出日志到pm2文件夹下，也就是之前在做context时特地做出来的文件夹&lt;/span&gt;
    --error&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/app/pm2/your_app_name.stderr.log &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;32-docker-compose--nginx&quot;&gt;3.2 docker-compose + nginx&lt;/h2&gt;
&lt;p&gt;这个方案比较粗暴，之前提到的Dockerfile不需要改动，容器仍旧只有一个进程一个线程，容器本身并不做任何改动。而是使用docker-compose命令启动多个容器，然后在Nginx中配置upstream来进行反向代理负载均衡。&lt;/p&gt;

&lt;p&gt;使用如下bash脚本来生成compose配置文件：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;ch&quot;&gt;#!/usr/bin/env bash&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;FULLPATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;dirname &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$0&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;pwd&lt;/span&gt; -P &lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;si&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;FULLPATH&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;/..

&lt;span class=&quot;nv&quot;&gt;VERSION&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;cat ./package.json &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; jq -r &lt;span class=&quot;s1&quot;&gt;&amp;#39;.version&amp;#39;&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;CONF&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;FULLPATH&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;/../compose.yml

&lt;span class=&quot;nv&quot;&gt;PROCESS_COUNT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;8&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;PORT_BASE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;3000&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;COMPOSE_TEMPLATE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;cat &lt;span class=&quot;s&quot;&gt;&amp;lt;&amp;lt;-EOC&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;version: &amp;quot;2.1&amp;quot;&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;networks:&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;  net:&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;    driver: bridge&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;services:&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;EOC&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; generate_compose&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;OUTPUT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;COMPOSE_TEMPLATE&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;((&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; i&amp;lt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PROCESS_COUNT&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; i++ &lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
        &lt;span class=&quot;nv&quot;&gt;ID&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;nv&quot;&gt;PORT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$((&lt;/span&gt;PORT_BASE &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; ID&lt;span class=&quot;k&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;

        &lt;span class=&quot;nv&quot;&gt;SERVICE_TEMPLATE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;cat &lt;span class=&quot;s&quot;&gt;&amp;lt;&amp;lt;-EOS&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;  you_app_name_${ID}:&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;    image: your_dockerhub_account/you_app_name:${VERSION}&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;    container_name: you_app_name_${ID}&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;    hostname: you_app_name_${ID}&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;    networks:&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;      - net&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;    ports:&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;      - ${PORT}:3000&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;    logging:&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;      driver: json-file&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;      options:&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;        max-size: 512m&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;    restart: always&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;    volumes:&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;      - dir_of_host:/app/pm2&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;    command: [&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;      &amp;quot;--name=your_app_name_in_pm2_${ID}&amp;quot;,&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;      &amp;quot;--instances=max&amp;quot;,&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;      &amp;quot;--output=/app/pm2/your_app_name_${ID}.stdout.log&amp;quot;,&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;      &amp;quot;--error=/app/pm2/your_app_name_${ID}.stderr.log&amp;quot;&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;    ]&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;EOS&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;

        &lt;span class=&quot;nv&quot;&gt;NL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;$&amp;#39;\n&amp;#39;&lt;/span&gt;
        &lt;span class=&quot;nv&quot;&gt;OUTPUT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;OUTPUT&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;NL&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;SERVICE_TEMPLATE&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;

    &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;OUTPUT&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt; &amp;gt; &lt;span class=&quot;si&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;CONF&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

generate_compose&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;当然也可以编写一个脚本来制作nginx的配置文件，这里就简略点，直接改了：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;&lt;/span&gt;upstream upstream_node &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    server &lt;span class=&quot;m&quot;&gt;127&lt;/span&gt;.0.0.1:3001 &lt;span class=&quot;nv&quot;&gt;max_fails&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;fail_timeout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;60&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;weight&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    server &lt;span class=&quot;m&quot;&gt;127&lt;/span&gt;.0.0.1:3002 &lt;span class=&quot;nv&quot;&gt;max_fails&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;fail_timeout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;60&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;weight&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    server &lt;span class=&quot;m&quot;&gt;127&lt;/span&gt;.0.0.1:3003 &lt;span class=&quot;nv&quot;&gt;max_fails&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;fail_timeout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;60&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;weight&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    server &lt;span class=&quot;m&quot;&gt;127&lt;/span&gt;.0.0.1:3004 &lt;span class=&quot;nv&quot;&gt;max_fails&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;fail_timeout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;60&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;weight&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    server &lt;span class=&quot;m&quot;&gt;127&lt;/span&gt;.0.0.1:3005 &lt;span class=&quot;nv&quot;&gt;max_fails&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;fail_timeout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;60&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;weight&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    server &lt;span class=&quot;m&quot;&gt;127&lt;/span&gt;.0.0.1:3006 &lt;span class=&quot;nv&quot;&gt;max_fails&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;fail_timeout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;60&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;weight&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    server &lt;span class=&quot;m&quot;&gt;127&lt;/span&gt;.0.0.1:3007 &lt;span class=&quot;nv&quot;&gt;max_fails&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;fail_timeout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;60&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;weight&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    server &lt;span class=&quot;m&quot;&gt;127&lt;/span&gt;.0.0.1:3008 &lt;span class=&quot;nv&quot;&gt;max_fails&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;fail_timeout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;60&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;weight&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

server &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    listen &lt;span class=&quot;m&quot;&gt;80&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    listen &lt;span class=&quot;m&quot;&gt;443&lt;/span&gt; ssl&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    ssl_protocols TLSv1 TLSv1.1 TLSv1.2&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    ssl_prefer_server_ciphers on&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    ssl_certificate         cert/yourapp.youhost.com.key.pem&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    ssl_certificate_key     cert/yourapp.youhost.com.key&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    ssl_dhparam             cert/dhparam.pem&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    access_log /var/log/nginx/yourapp.youhost.com.access.log&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    error_log /var/log/nginx/yourapp.youhost.com.error.log&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    root /usr/share/nginx/html&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    index index.html index.htm&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    server_name yourapp.youhost.com&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    location / &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        proxy_set_header x-Forwarded-For &lt;span class=&quot;nv&quot;&gt;$proxy_add_x_forwarded_for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        proxy_set_header HOST &lt;span class=&quot;nv&quot;&gt;$http_host&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        proxy_set_header X-Forwarded-Proto https&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        proxy_redirect http:// https://&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        proxy_connect_timeout &lt;span class=&quot;m&quot;&gt;240&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        proxy_send_timeout &lt;span class=&quot;m&quot;&gt;240&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        proxy_read_timeout &lt;span class=&quot;m&quot;&gt;240&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        proxy_pass http://upstream_node&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h1 id=&quot;4-健康检查&quot;&gt;4. 健康检查&lt;/h1&gt;
&lt;p&gt;在容器内运行的node程序，可以设置一个专门用来进行健康检查的端点，然后在运行时进行配置，这样docker就可以了解程序是否存活。在配合consul等服务发现程序使用时，也可以使用该端点。&lt;/p&gt;

&lt;p&gt;应用程序代码改动：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-typescript&quot; data-lang=&quot;typescript&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;use&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;: &lt;span class=&quot;kt&quot;&gt;Koa.Context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;/health&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;status&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;body&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;OK&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Docker compose yml改动：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;restart&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;always&lt;/span&gt;
&lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;healthcheck&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;wget http://127.0.0.1:3000/health -q -O - &amp;gt; /dev/null 2&amp;gt;&amp;amp;1&lt;/span&gt;
  &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;interval&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;10s&lt;/span&gt;
  &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;timeout&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;20s&lt;/span&gt;
  &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;retries&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;10&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;blockquote&gt;
  &lt;p&gt;EOF&lt;/p&gt;
&lt;/blockquote&gt;
</description>
				<pubDate>Wed, 11 Dec 2019 10:36:22 +0800</pubDate>
				<link>https://xenojoshua.com/2019/12/node-in-docker/</link>
				<guid isPermaLink="true">https://xenojoshua.com/2019/12/node-in-docker/</guid>
			</item>
		
			<item>
				<title>在VirtualBox中安装Tor</title>
				<description>&lt;h4&gt;Table of Contents&lt;/h4&gt;
&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#1-前言&quot; id=&quot;markdown-toc-1-前言&quot;&gt;1. 前言&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#2-virtualbox&quot; id=&quot;markdown-toc-2-virtualbox&quot;&gt;2. VirtualBox&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#3-linux&quot; id=&quot;markdown-toc-3-linux&quot;&gt;3. Linux&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#4-tor&quot; id=&quot;markdown-toc-4-tor&quot;&gt;4. Tor&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;1-前言&quot;&gt;1. 前言&lt;/h1&gt;
&lt;p&gt;就是一篇简单的笔记。&lt;/p&gt;

&lt;h1 id=&quot;2-virtualbox&quot;&gt;2. VirtualBox&lt;/h1&gt;
&lt;p&gt;这块不需要很详细的讲解，基本上只要从官网下载binary直接使用即可。镜像需要提前下载好，VirtualBox安装比较奇怪的一点是，虚拟机的创建和操作系统的安装是分开的，会先创建出虚拟机实例，然后才是加载镜像进行虚拟机操作系统的安装。这点有点和其他的虚拟机不太相同。&lt;/p&gt;

&lt;p&gt;VirtualBox虚拟机的显示自适应需要额外设置，比较麻烦。显示设置的屏幕里，需要把显卡控制器改成：&lt;code&gt;VBoxSVGA&lt;/code&gt;。&lt;/p&gt;

&lt;h1 id=&quot;3-linux&quot;&gt;3. Linux&lt;/h1&gt;
&lt;p&gt;这里使用的是Ubuntu Desktop版本，因为后续安装和使用Tor最简单的做法就是直接使用官方的Tor Browser，也正因此需要桌面版本的操作系统。如果对安全有更高的要求，可以使用FreeBSD操作系统。&lt;/p&gt;

&lt;p&gt;软件安装：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;&lt;/span&gt;$ sudo apt-get install build-essential
$ sudo apt-get install wget vim&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;安装virtualbox的辅助程序&lt;code&gt;Devices &amp;gt; Insert Guest Additions CD Image&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;按个人喜好，可选安装：&lt;a href=&quot;https://linuxize.com/post/how-to-install-sublime-text-3-on-ubuntu-18-04/&quot; target=&quot;_blank&quot;&gt;sublime text3&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;安装privoxy，用来给需要HTTP代理的应用程序做前置入口，将这些HTTP流量转为socks5流量，进入到tor：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;&lt;/span&gt;$ sudo apt-get install privoxy&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;修改配置文件&lt;code&gt;/etc/privoxy/config&lt;/code&gt;：添加&lt;code&gt;forward-socks5 / localhost:9150 .&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;后续可以在命令行下设置：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;http_proxy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;http://127.0.0.1:8118
&lt;span class=&quot;nb&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;https_proxy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;http://127.0.0.1:8118&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;命令行流量就全走tor了。命令行下，可以使用&lt;code&gt;curl ipinfo.io&lt;/code&gt;来查看当前IP的位置。&lt;/p&gt;

&lt;p&gt;在tor安装成功之前，虚拟机肯定也是需要代理的，否则tor软件根本下不下来。可以通过Linux操作系统&lt;code&gt;网络配置&lt;/code&gt;设置代理：&lt;/p&gt;

&lt;p&gt;将所有的HTTP(s)代理设置成：192.168.xx.xx:xxxx，socks设置成192.168.xx.xx:xxxx。&lt;/p&gt;

&lt;p&gt;命令行下则：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;http_proxy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;http://192.168.xx.xx:xxxx
&lt;span class=&quot;nb&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;https_proxy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;http://192.168.xx.xx:xxxx&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h1 id=&quot;4-tor&quot;&gt;4. Tor&lt;/h1&gt;
&lt;p&gt;安装就直接从官网上下载Tor Browser，解压即可使用。配置文件位置：&lt;code&gt;Browser/TorBrowser/Data/Tor/torrc&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;国内使用的时候必须使用网桥，按软件提示直接选一个可用的网桥，或从数据库申请一个网桥即可。注意，从数据库申请下来的网桥不一定就是可用的，还是需要连接测试。如果有条件的话，可以在Tor Browser之前再自己做一个跳板，这样效果会好很多，无论是从隐匿性上来说，还是从可用性上来说。&lt;/p&gt;

&lt;p&gt;Tor Browser在连接完成之后，会在本地打开一个端口&lt;code&gt;9150&lt;/code&gt;，提供本地的socks5连接。但软件并不提供HTTP和HTTPS代理，需要之前提到过的privoxy软件进行转换即可。&lt;/p&gt;

&lt;p&gt;对Tor的节点进行限制，直接在之前提到的配置文件里添加内容即可，注意不要修改网桥相关的配置内容，那些是软件自动生成添加的：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;## 以下为排除的节点(StrictNodes 1为坚决执行)&lt;/span&gt;
ExcludeNodes &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;cn&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;hk&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;mo&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;kp&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;ir&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;cu&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;vn&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;ru&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;by&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;sd&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;kz&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;uz&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;pk&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;kg&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;tj&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;tm&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;tr&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;sy&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;sg&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;th&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;ph&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;my&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;lk&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
ExcludeExitNodes &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;cn&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;hk&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;mo&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;kp&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;ir&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;cu&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;vn&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;ru&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;by&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;sd&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;kz&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;uz&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;pk&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;kg&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;tj&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;tm&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;tr&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;sy&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;sg&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;th&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;ph&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;my&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;lk&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#ExcludeNodes 是指排除节点，即把括号中的国家的节点从tor链路上除去&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#ExcludeExitNodes 是指“排除“出口”节点”，即tor的出口节点要排除括号中的国家的节点&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;## 指定出口节点：&lt;/span&gt;
StrictNodes &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;
ExitNodes &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;us&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#这里us是指限定美国的ip为出口ip，你可以改为任何国家，国家代码请参考：https://zh.wikipedia.org/zh-cn/ISO_3166-1&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;轻量级过滤：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;&lt;/span&gt;ExcludeNodes &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;cn&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;hk&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;mo&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
ExcludeExitNodes &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;cn&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;hk&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;mo&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;kp&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;ir&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;cu&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;vn&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;sd&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;pk&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;sy&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
StrictNodes &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;blockquote&gt;
  &lt;p&gt;EOF&lt;/p&gt;
&lt;/blockquote&gt;
</description>
				<pubDate>Fri, 20 Sep 2019 10:36:22 +0800</pubDate>
				<link>https://xenojoshua.com/2019/09/virtualbox-tor/</link>
				<guid isPermaLink="true">https://xenojoshua.com/2019/09/virtualbox-tor/</guid>
			</item>
		
			<item>
				<title>分布式系统实战</title>
				<description>&lt;h4&gt;Table of Contents&lt;/h4&gt;
&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#1-前言&quot; id=&quot;markdown-toc-1-前言&quot;&gt;1. 前言&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#11-相关资源清单&quot; id=&quot;markdown-toc-11-相关资源清单&quot;&gt;1.1 相关资源清单&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#PRACTICE_CODE&quot; id=&quot;markdown-toc-PRACTICE_CODE&quot;&gt;1.1.1 实践代码&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#112-组件实验代码&quot; id=&quot;markdown-toc-112-组件实验代码&quot;&gt;1.1.2 组件实验代码&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#113-go语言实验代码&quot; id=&quot;markdown-toc-113-go语言实验代码&quot;&gt;1.1.3 go语言实验代码&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#114-组件专题&quot; id=&quot;markdown-toc-114-组件专题&quot;&gt;1.1.4 组件专题&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#COMPONENT_LIST&quot; id=&quot;markdown-toc-COMPONENT_LIST&quot;&gt;2. 组件清单&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#3-架构&quot; id=&quot;markdown-toc-3-架构&quot;&gt;3. 架构&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#31-组件列表&quot; id=&quot;markdown-toc-31-组件列表&quot;&gt;3.1 组件列表&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#311-部分未实践组件&quot; id=&quot;markdown-toc-311-部分未实践组件&quot;&gt;3.1.1 部分未实践组件&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#32-数据模型&quot; id=&quot;markdown-toc-32-数据模型&quot;&gt;3.2 数据模型&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#33-业务流程&quot; id=&quot;markdown-toc-33-业务流程&quot;&gt;3.3 业务流程&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#34-系统架构&quot; id=&quot;markdown-toc-34-系统架构&quot;&gt;3.4 系统架构&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#35-部署拓扑&quot; id=&quot;markdown-toc-35-部署拓扑&quot;&gt;3.5 部署拓扑&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#4-测试&quot; id=&quot;markdown-toc-4-测试&quot;&gt;4. 测试&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#TEST_TARGET&quot; id=&quot;markdown-toc-TEST_TARGET&quot;&gt;4.1 测试目标&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#42-测试硬件&quot; id=&quot;markdown-toc-42-测试硬件&quot;&gt;4.2 测试硬件&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#43-测试规划&quot; id=&quot;markdown-toc-43-测试规划&quot;&gt;4.3 测试规划&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#44-监控清单&quot; id=&quot;markdown-toc-44-监控清单&quot;&gt;4.4 监控清单&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#45-部署工程&quot; id=&quot;markdown-toc-45-部署工程&quot;&gt;4.5 部署工程&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#46-测试执行--报告制作&quot; id=&quot;markdown-toc-46-测试执行--报告制作&quot;&gt;4.6 测试执行 &amp;amp; 报告制作&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#461-获取elasticsearchkibana数据&quot; id=&quot;markdown-toc-461-获取elasticsearchkibana数据&quot;&gt;4.6.1 获取Elasticsearch（Kibana）数据&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#462-获取jaeger数据&quot; id=&quot;markdown-toc-462-获取jaeger数据&quot;&gt;4.6.2 获取Jaeger数据&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#5-报告&quot; id=&quot;markdown-toc-5-报告&quot;&gt;5. 报告&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#51-第一次测试&quot; id=&quot;markdown-toc-51-第一次测试&quot;&gt;5.1 第一次测试&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#52-第二次测试&quot; id=&quot;markdown-toc-52-第二次测试&quot;&gt;5.2 第二次测试&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#appendix&quot; id=&quot;markdown-toc-appendix&quot;&gt;Appendix&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#MONITORING_LIST&quot; id=&quot;markdown-toc-MONITORING_LIST&quot;&gt;监控清单&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#host&quot; id=&quot;markdown-toc-host&quot;&gt;Host&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#container&quot; id=&quot;markdown-toc-container&quot;&gt;Container&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#memcached&quot; id=&quot;markdown-toc-memcached&quot;&gt;Memcached&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#mysql&quot; id=&quot;markdown-toc-mysql&quot;&gt;MySQL&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#prometheus&quot; id=&quot;markdown-toc-prometheus&quot;&gt;Prometheus&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#kafka-jmx&quot; id=&quot;markdown-toc-kafka-jmx&quot;&gt;Kafka JMX&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#kafka-exporter&quot; id=&quot;markdown-toc-kafka-exporter&quot;&gt;Kafka Exporter&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#jaeger-agent&quot; id=&quot;markdown-toc-jaeger-agent&quot;&gt;Jaeger Agent&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#jaeger-collector&quot; id=&quot;markdown-toc-jaeger-collector&quot;&gt;Jaeger Collector&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#filebeat&quot; id=&quot;markdown-toc-filebeat&quot;&gt;Filebeat&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#elasticsearch&quot; id=&quot;markdown-toc-elasticsearch&quot;&gt;Elasticsearch&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#golang&quot; id=&quot;markdown-toc-golang&quot;&gt;Golang&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;1-前言&quot;&gt;1. 前言&lt;/h1&gt;
&lt;p&gt;分布式系统因其使用的组件较多，复杂度较高，较难掌握。常说，写出一个能跑的东西很简单，但要全面掌握一门技术，并能够在任何情况下解决其发生的问题，则要难得多得多。分布式系统的难，更多的在于使用的组件多，每一个组件如果都需要掌握其从设计到运行的一系列技术细节就非常困难。此外，分布式系统的监控和分析也很难，也是因其组件多造成的，一个请求流转于多个组件之间，就很难定位当问题发生的时候其源头何在。&lt;/p&gt;

&lt;p&gt;在长期的工作中，一直都没有实地进行实践的机会（公司体量、投入、团队管理等各种因素），因此就萌生了自己做一个实践项目，然后在云服务器上部署进行测试实验的念头。在此付诸实行。&lt;/p&gt;

&lt;h2 id=&quot;11-相关资源清单&quot;&gt;1.1 相关资源清单&lt;/h2&gt;
&lt;p&gt;下面将大量资料进行清单整理，方便后续取用。&lt;/p&gt;

&lt;h3 id=&quot;PRACTICE_CODE&quot;&gt;1.1.1 实践代码&lt;/h3&gt;
&lt;p&gt;该项目的实际实践代码在：&lt;a href=&quot;https://github.com/agreatfool/dist-system-practice/tree/master/golang/src/dist-system-practice&quot; target=&quot;_blank&quot;&gt;dist-system-practice/golang/src/dist-system-practice/&lt;/a&gt;。该处的README主要提供了：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;应用程序（Web、Service、Consumer）的环境变量清单&lt;/li&gt;
  &lt;li&gt;开发环境的组件清单及端口描述&lt;/li&gt;
  &lt;li&gt;开发环境的部署及启动命令&lt;/li&gt;
  &lt;li&gt;代码文件结构描述&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;线上环境的部署、启动、测试、导出数据等功能的相关实现在脚本：&lt;a href=&quot;https://github.com/agreatfool/dist-system-practice/blob/master/golang/src/dist-system-practice/bash/prod/cluster/src/index.ts&quot; target=&quot;_blank&quot;&gt;cluster/src/index.ts&lt;/a&gt;。其功能及使用描述在：&lt;a href=&quot;https://github.com/agreatfool/dist-system-practice/blob/master/golang/src/dist-system-practice/bash/prod/cluster/README.md&quot; target=&quot;_blank&quot;&gt;README.md&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;线上服务器拓扑及服务网格相关的配置在：&lt;a href=&quot;https://github.com/agreatfool/dist-system-practice/blob/master/golang/src/dist-system-practice/bash/prod/cluster/src/index.ts#L22&quot;&gt;index.ts#L22&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;Grafana数据导出相关配置在：&lt;a href=&quot;https://github.com/agreatfool/dist-system-practice/blob/master/golang/src/dist-system-practice/bash/prod/cluster/src/index.ts#L151&quot; target=&quot;_blank&quot;&gt;index.ts#L151&lt;/a&gt;。&lt;/p&gt;

&lt;h3 id=&quot;112-组件实验代码&quot;&gt;1.1.2 组件实验代码&lt;/h3&gt;
&lt;p&gt;部分组件的简单实验代码在：&lt;a href=&quot;https://github.com/agreatfool/dist-system-practice/tree/master/experiment&quot; target=&quot;_blank&quot;&gt;dist-system-practice/experiment/&lt;/a&gt;。&lt;/p&gt;

&lt;h3 id=&quot;113-go语言实验代码&quot;&gt;1.1.3 go语言实验代码&lt;/h3&gt;
&lt;p&gt;go语言的简单实验代码在：&lt;a href=&quot;https://github.com/agreatfool/dist-system-practice/tree/master/golang/src/experiment&quot; target=&quot;_blank&quot;&gt;dist-system-practice/golang/src/experiment/&lt;/a&gt;。&lt;/p&gt;

&lt;h3 id=&quot;114-组件专题&quot;&gt;1.1.4 组件专题&lt;/h3&gt;
&lt;p&gt;对于项目中使用到的一系列组件，我这里都做过比较深入的使用测试及调研，并制作了一系列的专题博文。可以参见列表：&lt;a href=&quot;#COMPONENT_LIST&quot;&gt;2. 组件清单&lt;/a&gt;。&lt;/p&gt;

&lt;h1 id=&quot;COMPONENT_LIST&quot;&gt;2. 组件清单&lt;/h1&gt;
&lt;p&gt;实践项目中（计划）使用到了如下组件：&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;组件&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;角色&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;专题&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Golang&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;应用程序&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;a href=&quot;/2019/02/golang-note/&quot; target=&quot;_blank&quot;&gt;Golang Notes&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;MySQL&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;数据库&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Draft&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Memcached&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;缓存&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;a href=&quot;/2019/05/memcached-note/&quot; target=&quot;_blank&quot;&gt;Memcached Notes&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Docker&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;底层容器&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;a href=&quot;/2019/01/docker-note/&quot; target=&quot;_blank&quot;&gt;Docker Notes&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Envoy&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;代理入口&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;a href=&quot;/2019/05/envoy-note/&quot; target=&quot;_blank&quot;&gt;Envoy Notes&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;gRPC&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;组件通讯&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;a href=&quot;/2019/05/grpc-note/&quot; target=&quot;_blank&quot;&gt;gRPC Notes&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Kafka&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;消息队列&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;a href=&quot;/2019/04/kafka-note/&quot; target=&quot;_blank&quot;&gt;Kafka Notes&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Prometheus&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;监控系统&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;a href=&quot;/2019/04/prometheus-note/&quot; target=&quot;_blank&quot;&gt;Prometheus Notes&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Grafana&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;监控UI&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;a href=&quot;/2019/04/grafana-note/&quot; target=&quot;_blank&quot;&gt;Grafana Notes&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Jaeger&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;链路追踪&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;a href=&quot;/2019/04/jaeger-note/&quot; target=&quot;_blank&quot;&gt;Jaeger Notes&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Cassandra&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;数据库&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Draft&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Elasticsearch&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;聚合分析&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;a href=&quot;/2019/04/elasticsearch-note/&quot; target=&quot;_blank&quot;&gt;Elasticsearch Notes&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Kubernetes&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;容器管理&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;TODO&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Istio&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;服务编排&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;TODO&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Linux&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;操作系统&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Draft&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;201902之前，Golang、Docker、Kafka、Elasticsearch、Grafana、Prometheus、Jaeger于我的相关积累基本为0，基本上完全没直接接触过（实践），而到了6月底，我已经可以很熟练启动、使用这些组件，更重要的是完全理解它们的设计、架构，以及性能和部分调优手段。&lt;/p&gt;

&lt;p&gt;对于”程序”的理解，以及超快的学习速度和学习能力，才是程序员能够在软件行业一直活下去的关键，我一直如此深信。&lt;/p&gt;

&lt;h1 id=&quot;3-架构&quot;&gt;3. 架构&lt;/h1&gt;
&lt;p&gt;因为是一个实验性项目，应用程序的逻辑和架构做的非常简单。&lt;/p&gt;

&lt;h2 id=&quot;31-组件列表&quot;&gt;3.1 组件列表&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Web：go语言编写的web服务器，整个集群的入口&lt;/li&gt;
  &lt;li&gt;Service：go语言编写的gRPC服务器，web收到请求后不进行任何业务实际处理，直接通过gRPC发到Service，由Service处理完成后返回&lt;/li&gt;
  &lt;li&gt;Consumer：go语言编写的Kafka消费者，处理部分Service安排到Kafka的异步任务&lt;/li&gt;
  &lt;li&gt;Kafka：负责将部分Service的运算进行消息入队，并分发给Consumer处理（异步、解耦）&lt;/li&gt;
  &lt;li&gt;MySQL：应用程序的存储服务&lt;/li&gt;
  &lt;li&gt;Memcached：应用程序的缓存服务&lt;/li&gt;
  &lt;li&gt;Filebeat：负责将Web、Service、Consumer产生的有用日志（过滤）上传到Elasticsearch集群&lt;/li&gt;
  &lt;li&gt;Elasticsearch、Kibana：负责将Web、Service、Consumer产生的业务日志索引入库，以便后续查询&lt;/li&gt;
  &lt;li&gt;Cassandra：Jaeger Tracing的存储服务&lt;/li&gt;
  &lt;li&gt;Jaeger（Agent、Collector、Query）：负责接收Web、Service、Consumer发出的Span、Trace数据，入库以便后续查询&lt;/li&gt;
  &lt;li&gt;*Exporter：负责将各组件的状态以HTTP的方式输出出来&lt;/li&gt;
  &lt;li&gt;Prometheus：将 *Exporter 输出的数据采集，并录入到时序数据库中，以便后续查询&lt;/li&gt;
  &lt;li&gt;Grafana：负责将各组件的观察需求固定化，对Prometheus时序数据库进行查询，绘制图表&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;311-部分未实践组件&quot;&gt;3.1.1 部分未实践组件&lt;/h2&gt;
&lt;p&gt;部分列在&lt;a href=&quot;#COMPONENT_LIST&quot;&gt;2. 组件清单&lt;/a&gt;中的组件实际上并未实际使用。因时间和精力的原因，只能割舍掉了。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Envoy：整体业务过于简单，不存在在Web服务器之前架设Envoy的必要性；而内部架构也过于简单，不存在架设Envoy作为内部流量控制入口的必要性&lt;/li&gt;
  &lt;li&gt;Kubernetes：实践复杂度过高，因精力原因放弃&lt;/li&gt;
  &lt;li&gt;Istio：实践复杂度过高，因精力原因放弃&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;32-数据模型&quot;&gt;3.2 数据模型&lt;/h2&gt;

&lt;p&gt;整个业务流程中只涉及到一个数据模型：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-go&quot; data-lang=&quot;go&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Work&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;Id&lt;/span&gt;            &lt;span class=&quot;kt&quot;&gt;uint32&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;Viewed&lt;/span&gt;        &lt;span class=&quot;kt&quot;&gt;uint32&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;AchievedCount&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;uint32&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;Achievement&lt;/span&gt;   &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;IsPlanned&lt;/span&gt;     &lt;span class=&quot;kt&quot;&gt;bool&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;PlannedAt&lt;/span&gt;     &lt;span class=&quot;nx&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Time&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;AchievedAt&lt;/span&gt;    &lt;span class=&quot;nx&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Time&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;Created&lt;/span&gt;       &lt;span class=&quot;nx&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Time&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;Updated&lt;/span&gt;       &lt;span class=&quot;nx&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Time&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;Id：自增长主键，每一条Work数据唯一&lt;/li&gt;
  &lt;li&gt;Viewed：是一个累加的int型，每次&lt;code&gt;/viewed&lt;/code&gt;API访问，该值+1&lt;/li&gt;
  &lt;li&gt;AchievedCount：是一个累加的int型，每次完成&lt;code&gt;/plan&lt;/code&gt;API的任务推送及Consumer的achievement更新之后，该值+1&lt;/li&gt;
  &lt;li&gt;Achievement：该值由Service的&lt;code&gt;/plan&lt;/code&gt;API推送任务到Kafka，然后由Consumer获取任务之后进行运算并更新&lt;/li&gt;
  &lt;li&gt;IsPlanned：状态标识，当&lt;code&gt;/plan&lt;/code&gt;API完成之后标记为true，当Consumer运算并更新完成后标记为false&lt;/li&gt;
  &lt;li&gt;PlannedAt：时间&lt;/li&gt;
  &lt;li&gt;AchievedAt：时间&lt;/li&gt;
  &lt;li&gt;Created：时间&lt;/li&gt;
  &lt;li&gt;Updated：时间&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;33-业务流程&quot;&gt;3.3 业务流程&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Web服务器&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;应用程序的入口为go语言编写的web服务器（Web），提供5个API（所有的API都不要求提供WorkId，会在API内部自行随机一个WorkId进行处理，方便后续自动化测试）：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;/work&lt;/code&gt;：获取Work数据，并返回&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;/viewed&lt;/code&gt;：获取Work数据，并返回Viewed值&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;/achievement&lt;/code&gt;：获取Work数据，并返回Achievement值&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;/plan&lt;/code&gt;：获取Work数据，并将任务安排到Kafka队列，更新IsPlanned以及PlannedAt字段的值&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;/api&lt;/code&gt;：根据设置好的概率（可配置）抽取上述4个接口中的一个进行执行，实际上的性能测试入口&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Consumer消费者&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Kafka的消费者为go语言编写的服务器，对消息进行处理：从Kafka中获取任务，根据Id获取Work数据，根据计算因子计算出Achievement字符串值，更新IsPlanned、AchievedAt、Achievement字段的值。&lt;/p&gt;

&lt;h2 id=&quot;34-系统架构&quot;&gt;3.4 系统架构&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;/resources/2019/07/dist-system-practice/logic_flow.png&quot; alt=&quot;&quot; target=&quot;_blank&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;*Exporter&lt;/code&gt;这部分比较简略，因为基本上每个组件都有自己的Exporter，要详实还原实际的架构这图就没法看了。因此就只简单列出了go app相关的几条线。&lt;/p&gt;

&lt;h2 id=&quot;35-部署拓扑&quot;&gt;3.5 部署拓扑&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;/resources/2019/07/dist-system-practice/topology.png&quot; alt=&quot;&quot; target=&quot;_blank&quot; /&gt;&lt;/p&gt;

&lt;p&gt;因预算关系，Elasticsearch和Kafka集群的分布并不是特别理想，不过也只能这样了。此外，图中还少了一个&lt;code&gt;Client&lt;/code&gt;节点，专门用来运行Vegeta压测客户端的，因比较简单这里就没有绘制上去。&lt;/p&gt;

&lt;h1 id=&quot;4-测试&quot;&gt;4. 测试&lt;/h1&gt;
&lt;h2 id=&quot;TEST_TARGET&quot;&gt;4.1 测试目标&lt;/h2&gt;
&lt;p&gt;制定测试目标一般需要以下步骤：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;固定拓扑架构：尽量按线上真实情景的拓扑架构进行测试，如果规模过大的话，可以按比缩小（虽然会失真）&lt;/li&gt;
  &lt;li&gt;设定业务指标：同时在线100万、PV10亿等&lt;/li&gt;
  &lt;li&gt;将业务指标转化为可测试的程序指标：QPS、DB Transaction/s&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;这样就可以针对可测试的程序指标进行测试了。&lt;/p&gt;

&lt;p&gt;而更进一步的测试目标可以细分为两类：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;测试指标达标：当前系统可以负载起目标需求，在此基础上还可以找出系统的最高负载瓶颈点，并提出优化方案&lt;/li&gt;
  &lt;li&gt;测试指标未达标：当前系统未可以负载起目标需求，需要找出系统的瓶颈，并提出优化方案；后续需要多轮测试以验证优化的执行情况&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;就当前的项目来说，因为是纯粹的模拟测试项目，所以不存在真实的业务需求和业务指标，因此无法设定具体的程序指标，也就无从谈起是否达标的问题。只能说通过测试慢慢摸索当前架构的性能峰值，以及瓶颈点：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;在固定硬件规格、程序拓扑架构之后，逐步提升客户端的QPS，查看系统负载的上升情况，找出系统最高负载值，并找出系统整体的瓶颈点&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;42-测试硬件&quot;&gt;4.2 测试硬件&lt;/h2&gt;
&lt;p&gt;这次的测试选用的是Linode的云服务器，在选择的时候首先考虑的当然是国内的服务商，但发现像我这样只需要短期使用资源的客户（几个小时到1天左右）国内的服务商的付费方式太糟糕了。一般来说国内的服务商都是按月付费，所谓的按时收费其单价换算下来要比按月付费高得多得多，因此实际上是不可用的。&lt;/p&gt;

&lt;p&gt;海外服务商一开始考虑使用Vultr，毕竟性价比是最高的，但后来发现Vultr对客户有非常严格的限制，如果需要租用大量机器或高性能机器的话，需要发Ticket进行人工审核。不出意外，我这样短期租用的客户被拒了。最后只能选用Linode，Linode在这方面倒是没有额外的限制，随开随用。&lt;/p&gt;

&lt;p&gt;实际使用的是Linode的16G机型：6 CPU、16G RAM、320G Storage。简单Benchmark结果如下：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;&lt;/span&gt;$ wget -qO- bench.sh &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; bash

----------------------------------------------------------------------
CPU model            : AMD EPYC &lt;span class=&quot;m&quot;&gt;7601&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;32&lt;/span&gt;-Core Processor
Number of cores      : &lt;span class=&quot;m&quot;&gt;6&lt;/span&gt;
CPU frequency        : &lt;span class=&quot;m&quot;&gt;2199&lt;/span&gt;.996 MHz
Total size of Disk   : &lt;span class=&quot;m&quot;&gt;315&lt;/span&gt;.0 GB &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;.2 GB Used&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
Total amount of Mem  : &lt;span class=&quot;m&quot;&gt;16040&lt;/span&gt; MB &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;120&lt;/span&gt; MB Used&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
Total amount of Swap : &lt;span class=&quot;m&quot;&gt;511&lt;/span&gt; MB &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt; MB Used&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
System uptime        : &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt; days, &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt; hour &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt; min
Load average         : &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;.29, &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;.22, &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;.09
OS                   : Ubuntu &lt;span class=&quot;m&quot;&gt;18&lt;/span&gt;.04.2 LTS
Arch                 : x86_64 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;64&lt;/span&gt; Bit&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
Kernel               : &lt;span class=&quot;m&quot;&gt;4&lt;/span&gt;.15.0-50-generic
----------------------------------------------------------------------
I/O speed&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;1st run&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;   : &lt;span class=&quot;m&quot;&gt;892&lt;/span&gt; MB/s
I/O speed&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;2nd run&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;   : &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;.1 GB/s
I/O speed&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;3rd run&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;   : &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;.0 GB/s
Average I/O speed    : &lt;span class=&quot;m&quot;&gt;1014&lt;/span&gt;.1 MB/s
----------------------------------------------------------------------
Node Name                       IPv4 address            Download Speed
CacheFly                        &lt;span class=&quot;m&quot;&gt;205&lt;/span&gt;.234.175.175         144MB/s
Linode, Tokyo, JP               &lt;span class=&quot;m&quot;&gt;106&lt;/span&gt;.187.96.148          &lt;span class=&quot;m&quot;&gt;20&lt;/span&gt;.7MB/s
Linode, Singapore, SG           &lt;span class=&quot;m&quot;&gt;139&lt;/span&gt;.162.23.4            &lt;span class=&quot;m&quot;&gt;6&lt;/span&gt;.48MB/s
Linode, London, UK              &lt;span class=&quot;m&quot;&gt;176&lt;/span&gt;.58.107.39           &lt;span class=&quot;m&quot;&gt;9&lt;/span&gt;.71MB/s
Linode, Frankfurt, DE           &lt;span class=&quot;m&quot;&gt;139&lt;/span&gt;.162.130.8           &lt;span class=&quot;m&quot;&gt;15&lt;/span&gt;.4MB/s
Linode, Fremont, CA             &lt;span class=&quot;m&quot;&gt;50&lt;/span&gt;.116.14.9             205MB/s
Softlayer, Dallas, TX           &lt;span class=&quot;m&quot;&gt;173&lt;/span&gt;.192.68.18           &lt;span class=&quot;m&quot;&gt;44&lt;/span&gt;.9MB/s
Softlayer, Seattle, WA          &lt;span class=&quot;m&quot;&gt;67&lt;/span&gt;.228.112.250          &lt;span class=&quot;m&quot;&gt;44&lt;/span&gt;.8MB/s
Softlayer, Frankfurt, DE        &lt;span class=&quot;m&quot;&gt;159&lt;/span&gt;.122.69.4            &lt;span class=&quot;m&quot;&gt;4&lt;/span&gt;.92MB/s
Softlayer, Singapore, SG        &lt;span class=&quot;m&quot;&gt;119&lt;/span&gt;.81.28.170           &lt;span class=&quot;m&quot;&gt;8&lt;/span&gt;.21MB/s
Softlayer, HongKong, CN         &lt;span class=&quot;m&quot;&gt;119&lt;/span&gt;.81.130.170          &lt;span class=&quot;m&quot;&gt;10&lt;/span&gt;.4MB/s
----------------------------------------------------------------------
Node Name                       IPv6 address            Download Speed
Linode, Atlanta, GA             &lt;span class=&quot;m&quot;&gt;2600&lt;/span&gt;:3c02::4b           &lt;span class=&quot;m&quot;&gt;39&lt;/span&gt;.3MB/s
Linode, Dallas, TX              &lt;span class=&quot;m&quot;&gt;2600&lt;/span&gt;:3c00::4b           &lt;span class=&quot;m&quot;&gt;28&lt;/span&gt;.9MB/s
Linode, Newark, NJ              &lt;span class=&quot;m&quot;&gt;2600&lt;/span&gt;:3c03::4b           &lt;span class=&quot;m&quot;&gt;18&lt;/span&gt;.3MB/s
Linode, Singapore, SG           &lt;span class=&quot;m&quot;&gt;2400&lt;/span&gt;:8901::4b           &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;.36MB/s
Linode, Tokyo, JP               &lt;span class=&quot;m&quot;&gt;2400&lt;/span&gt;:8900::4b           &lt;span class=&quot;m&quot;&gt;20&lt;/span&gt;.5MB/s
Softlayer, San Jose, CA         &lt;span class=&quot;m&quot;&gt;2607&lt;/span&gt;:f0d0:2601:2a::4    &lt;span class=&quot;m&quot;&gt;95&lt;/span&gt;.4MB/s
...
----------------------------------------------------------------------&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;&lt;/span&gt;$ &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;curl -s wget.racing/nench.sh &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; bash&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&amp;gt;&lt;span class=&quot;p&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; tee nench.log

-------------------------------------------------
nench.sh v2019.06.29 -- https://git.io/nench.sh
benchmark timestamp:    &lt;span class=&quot;m&quot;&gt;2019&lt;/span&gt;-07-12 &lt;span class=&quot;m&quot;&gt;05&lt;/span&gt;:48:17 UTC
-------------------------------------------------

Processor:    AMD EPYC &lt;span class=&quot;m&quot;&gt;7601&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;32&lt;/span&gt;-Core Processor
CPU cores:    &lt;span class=&quot;m&quot;&gt;6&lt;/span&gt;
Frequency:    &lt;span class=&quot;m&quot;&gt;2199&lt;/span&gt;.996 MHz
RAM:          15G
Swap:         511M
Kernel:       Linux &lt;span class=&quot;m&quot;&gt;4&lt;/span&gt;.15.0-50-generic x86_64

Disks:
sda  &lt;span class=&quot;m&quot;&gt;319&lt;/span&gt;.5G  HDD
sdb    512M  HDD

CPU: SHA256-hashing &lt;span class=&quot;m&quot;&gt;500&lt;/span&gt; MB
&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;.962 seconds
CPU: bzip2-compressing &lt;span class=&quot;m&quot;&gt;500&lt;/span&gt; MB
&lt;span class=&quot;m&quot;&gt;6&lt;/span&gt;.310 seconds
CPU: AES-encrypting &lt;span class=&quot;m&quot;&gt;500&lt;/span&gt; MB
&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;.362 seconds

ioping: seek rate
min/avg/max/mdev &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;62&lt;/span&gt;.2 us / &lt;span class=&quot;m&quot;&gt;112&lt;/span&gt;.5 us / &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;.94 ms / &lt;span class=&quot;m&quot;&gt;75&lt;/span&gt;.5 us
ioping: sequential &lt;span class=&quot;nb&quot;&gt;read&lt;/span&gt; speed
generated &lt;span class=&quot;m&quot;&gt;16&lt;/span&gt;.5 k requests in &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;.00 s, &lt;span class=&quot;m&quot;&gt;4&lt;/span&gt;.03 GiB, &lt;span class=&quot;m&quot;&gt;3&lt;/span&gt;.30 k iops, &lt;span class=&quot;m&quot;&gt;824&lt;/span&gt;.3 MiB/s

dd: sequential write speed
1st run:    &lt;span class=&quot;m&quot;&gt;855&lt;/span&gt;.45 MiB/s
2nd run:    &lt;span class=&quot;m&quot;&gt;1049&lt;/span&gt;.04 MiB/s
3rd run:    &lt;span class=&quot;m&quot;&gt;1049&lt;/span&gt;.04 MiB/s
average:    &lt;span class=&quot;m&quot;&gt;984&lt;/span&gt;.51 MiB/s

IPv4 speedtests
your IPv4:    &lt;span class=&quot;m&quot;&gt;173&lt;/span&gt;.255.252.xxxx

Cachefly CDN:         &lt;span class=&quot;m&quot;&gt;175&lt;/span&gt;.13 MiB/s
Leaseweb &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;NL&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;:        &lt;span class=&quot;m&quot;&gt;13&lt;/span&gt;.85 MiB/s
Softlayer DAL &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;US&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;:   &lt;span class=&quot;m&quot;&gt;38&lt;/span&gt;.74 MiB/s
Online.net &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;FR&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;:      &lt;span class=&quot;m&quot;&gt;11&lt;/span&gt;.06 MiB/s
OVH BHS &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;CA&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;:         &lt;span class=&quot;m&quot;&gt;16&lt;/span&gt;.75 MiB/s

IPv6 speedtests
your IPv6:    &lt;span class=&quot;m&quot;&gt;2600&lt;/span&gt;:3c01::xxxx

Leaseweb &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;NL&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;:        &lt;span class=&quot;m&quot;&gt;7&lt;/span&gt;.77 MiB/s
Softlayer DAL &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;US&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;:   &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;.00 MiB/s
Online.net &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;FR&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;:      &lt;span class=&quot;m&quot;&gt;8&lt;/span&gt;.44 MiB/s
OVH BHS &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;CA&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;:         &lt;span class=&quot;m&quot;&gt;17&lt;/span&gt;.60 MiB/s
-------------------------------------------------&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;我是很想把CPU上到至少8个核，但囿于预算，还是降了一档。&lt;/p&gt;

&lt;h2 id=&quot;43-测试规划&quot;&gt;4.3 测试规划&lt;/h2&gt;
&lt;p&gt;上面在&lt;a href=&quot;#TEST_TARGET&quot;&gt;4.1 测试目标&lt;/a&gt;的时候提到了设定目标需要固定程序拓扑架构，但即便在程序架构固定的情况下，仍旧有大量细节（参数、配置）是可以微调变动的：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;客户端连接数量：最大连接数，越大的最大连接数意味着越高的并发请求可能，而提升并发意味着负载的显著上升&lt;/li&gt;
  &lt;li&gt;客户端请求速率：同时到达服务器的请求数量，即并发请求数量，并发数量的上升最终体现在这个指标的提升上&lt;/li&gt;
  &lt;li&gt;数据库表量级：不同数据量的数据库表，其性能也会显著不同，因此在测试的时候也可以变动下表数据量再进行测试&lt;/li&gt;
  &lt;li&gt;数据库连接：少量的连接不足以处理请求，但过大的连接数也会显著降低性能，这方面也是一个测试点&lt;/li&gt;
  &lt;li&gt;gRPC连接池容量：虽然gRPC的Go客户端对于并发的处理非常好，但连接池仍旧在某些情况下有其作用，如何找出合理的并发池容量也是可选的测试条目之一&lt;/li&gt;
  &lt;li&gt;Kafka目标Topic的分片数量：提升分片数量会降低写入的性能，但更多的分片意味着更多的消费者，消息的处理速度会上升&lt;/li&gt;
  &lt;li&gt;Elasticsearch集群的Node数量：提升节点会降低写入性能，但会提升查询性能&lt;/li&gt;
  &lt;li&gt;JVM设置：各个用到JVM的软件一般都需要很精细地对JVM进行配置和调优，才能很好地发挥性能，而这方面的配置变化对测试的影响也很大&lt;/li&gt;
  &lt;li&gt;消费者计算因子：随着因子数值的调大，计算量会显著上升，最终会体现在Consumer角色的负载上升，以及Kafka队列的堆积不能及时消费等&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;测试的规划制定需要固定大部分的变量、配置，仅修改少部分，然后进行多次测试，横向比较性能的变化，就可以找出当前架构的最佳性能表现设置。&lt;/p&gt;

&lt;h2 id=&quot;44-监控清单&quot;&gt;4.4 监控清单&lt;/h2&gt;
&lt;p&gt;下面是一份当前程序架构中需要进行重点监控的程序指标清单。这部分太长了，我放到最后的&lt;a href=&quot;#MONITORING_LIST&quot;&gt;Appendix &amp;gt; 监控清单&lt;/a&gt;里，以便不影响下文的阅读。&lt;/p&gt;

&lt;h2 id=&quot;45-部署工程&quot;&gt;4.5 部署工程&lt;/h2&gt;
&lt;p&gt;部署工作：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;在Linode服务商这里申请开服务器&lt;/li&gt;
  &lt;li&gt;因Linode不支持在开服务器的时候直接部署SSH Key，需要使用命令来部署：ssh-copy-id -i ~/.ssh/id_rsa.pub root@xxx.xxx.xxx.xxx&lt;/li&gt;
  &lt;li&gt;使用&lt;a href=&quot;#PRACTICE_CODE&quot;&gt;1.1.1 实践代码&lt;/a&gt;提到的线上部署脚本进行部署：
    &lt;ul&gt;
      &lt;li&gt;./cluster.sh --machine&lt;/li&gt;
      &lt;li&gt;./cluster.sh --image&lt;/li&gt;
      &lt;li&gt;./cluster.sh --deploy --machine-type=all&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;使用 ./cluster.sh --docker-ps --machine-type=all 来观察是否启动正常&lt;/li&gt;
  &lt;li&gt;打开 MONITER_IP:9090 来查看是否所有的监控节点都正常在线&lt;/li&gt;
  &lt;li&gt;打开 MONITER_IP:5601 来设置ES内的Index Pattern&lt;/li&gt;
  &lt;li&gt;使用 curl -v http://WEB_IP:8000/work 等入口测试是否正常运行&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;46-测试执行--报告制作&quot;&gt;4.6 测试执行 &amp;amp; 报告制作&lt;/h2&gt;
&lt;p&gt;部署完成之后：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;记录测试开始时间&lt;/li&gt;
  &lt;li&gt;修改cluster.sh内相关配置&lt;/li&gt;
  &lt;li&gt;运行 ./cluster.sh --stress --machine-type=all 获得测试命令&lt;/li&gt;
  &lt;li&gt;在Client Host上执行测试命令开始测试，并观察实时报表中的报错数及响应时长变化（如有大量错误和大量超时，需要中断测试，并查找原因）&lt;/li&gt;
  &lt;li&gt;打开 MONITER_IP:9090 观察监控节点是否正常在线&lt;/li&gt;
  &lt;li&gt;打开 MONITER_IP:3000 观察监控指标变化&lt;/li&gt;
  &lt;li&gt;在测试完成前，使用pprof获取30秒间隔的两份堆内存dump（Web、Service、Consumer都需要）：
    &lt;ul&gt;
      &lt;li&gt;go tool pprof http://HOST:PORT/debug/pprof/heap
        &lt;ul&gt;
          &lt;li&gt;Saved profile in /Users/XXX/pprof/pprof.web.alloc_objects.alloc_space.inuse_objects.inuse_space.001.pb.gz&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;go tool pprof -png /Users/XXX/pprof/pprof.web.alloc_objects.alloc_space.inuse_objects.inuse_space.001.pb.gz &amp;gt; web_heap.png&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;在测试完成之前，使用pprof获取30秒的CPU dump（Web、Service、Consumer都需要）：
    &lt;ul&gt;
      &lt;li&gt;go tool pprof http://HOST:PORT/debug/pprof/profile?seconds=30
        &lt;ul&gt;
          &lt;li&gt;Saved profile in /Users/XXX/pprof/pprof.web.samples.cpu.001.pb.gz&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;go tool pprof -png /Users/XXX/pprof/pprof.web.samples.cpu.001.pb.gz &amp;gt; web_cpu.png&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;测试完成后：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;记录测试结束时间&lt;/li&gt;
  &lt;li&gt;修改cluster.sh内相关配置&lt;/li&gt;
  &lt;li&gt;使用 ./cluster.sh --report 导出测试结果数据&lt;/li&gt;
  &lt;li&gt;手动获取Elasticsearch数据，并填入到报表模板中
    &lt;ul&gt;
      &lt;li&gt;获取时间段内所有Web请求数量，与客户端报表中数值进行比对是否匹配&lt;/li&gt;
      &lt;li&gt;获取时间段内所有的Consumer请求数量，与Web请求中的 /plan 数量进行比对是否匹配&lt;/li&gt;
      &lt;li&gt;获取时间段内所有Web请求API类型的配比，与配置项中的数值进行比对是否匹配&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;手动获取Jaeger数据，并填入到报表模板中
    &lt;ul&gt;
      &lt;li&gt;时间段内各Web API的耗时图表&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;将压测执行客户端的报表数据填入到报表模板中&lt;/li&gt;
  &lt;li&gt;将之前导出的CPU和堆内存Profiling数据以图片形式导出，并填入到报表模板中&lt;/li&gt;
  &lt;li&gt;修改导出的报表模板，添加测试实际配置数据，并编写结论板块内容&lt;/li&gt;
  &lt;li&gt;将完工的所有内容提交到代码库中：
    &lt;ul&gt;
      &lt;li&gt;cluster/report/XXXXX/images&lt;/li&gt;
      &lt;li&gt;cluster/report/XXXXX/report_XXXXX.md&lt;/li&gt;
      &lt;li&gt;cluster/report/XXXXX/pprof/* 导出的CPU和堆内存dump&lt;/li&gt;
      &lt;li&gt;cluster/output/*&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;461-获取elasticsearchkibana数据&quot;&gt;4.6.1 获取Elasticsearch（Kibana）数据&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;获取所有Web请求数：
    &lt;ul&gt;
      &lt;li&gt;打开Discover &amp;gt; dist-web-web-7.0.0-*&lt;/li&gt;
      &lt;li&gt;调整时间成绝对时间&lt;/li&gt;
      &lt;li&gt;查看左上角的Hit数：1,552 hits&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;获取所有Consumer请求数：
    &lt;ul&gt;
      &lt;li&gt;打开Discover &amp;gt; dist-consumer-consumer-7.0.0-*&lt;/li&gt;
      &lt;li&gt;调整时间成绝对时间&lt;/li&gt;
      &lt;li&gt;查看左上角的Hit数：81 hits&lt;/li&gt;
      &lt;li&gt;比率验证：81 / 1552 = 5.21%；OK&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;获取API GetWork请求数：
    &lt;ul&gt;
      &lt;li&gt;打开Discover &amp;gt; dist-web-web-7.0.0-*&lt;/li&gt;
      &lt;li&gt;调整时间成绝对时间&lt;/li&gt;
      &lt;li&gt;在Filter中输入：&lt;code&gt;api: apiGetWork&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;查看左上角的Hit数：704 hits&lt;/li&gt;
      &lt;li&gt;比率验证：704 / 1552 = 45.36%；OK&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;获取API UpdateViewed请求数：
    &lt;ul&gt;
      &lt;li&gt;打开Discover &amp;gt; dist-web-web-7.0.0-*&lt;/li&gt;
      &lt;li&gt;调整时间成绝对时间&lt;/li&gt;
      &lt;li&gt;在Filter中输入：&lt;code&gt;api: apiUpdateViewed&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;查看左上角的Hit数：364 hits&lt;/li&gt;
      &lt;li&gt;比率验证：364 / 1552 = 23.45%；OK&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;获取API GetAchievement请求数：
    &lt;ul&gt;
      &lt;li&gt;打开Discover &amp;gt; dist-web-web-7.0.0-*&lt;/li&gt;
      &lt;li&gt;调整时间成绝对时间&lt;/li&gt;
      &lt;li&gt;在Filter中输入：&lt;code&gt;api: apiGetAchievement&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;查看左上角的Hit数：403 hits&lt;/li&gt;
      &lt;li&gt;比率验证：403 / 1552 = 25.96%；OK&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;获取API PlanWork请求数：
    &lt;ul&gt;
      &lt;li&gt;打开Discover &amp;gt; dist-web-web-7.0.0-*&lt;/li&gt;
      &lt;li&gt;调整时间成绝对时间&lt;/li&gt;
      &lt;li&gt;在Filter中输入：&lt;code&gt;api: apiPlanWork&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;查看左上角的Hit数：81 hits&lt;/li&gt;
      &lt;li&gt;数量验证：与Consumer计数匹配；OK&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;P.S 使用&lt;code&gt;level: error&lt;/code&gt;过滤条件查找错误日志，如果是没有上传日志的service服务等，则需要：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;docker-machine ssh service&lt;/li&gt;
  &lt;li&gt;docker logs --tail 1000 app_service | grep ERROR&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;462-获取jaeger数据&quot;&gt;4.6.2 获取Jaeger数据&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;打开Jaeger Query&lt;/li&gt;
  &lt;li&gt;将Lookback设置为：Custom Time Range&lt;/li&gt;
  &lt;li&gt;设置Start Time和End Time&lt;/li&gt;
  &lt;li&gt;设置Service为：app.web&lt;/li&gt;
  &lt;li&gt;设置Operation为：
    &lt;ul&gt;
      &lt;li&gt;Web.HandleApi.apiGetWork&lt;/li&gt;
      &lt;li&gt;Web.HandleApi.apiUpdateViewed&lt;/li&gt;
      &lt;li&gt;Web.HandleApi.apiGetAchievement&lt;/li&gt;
      &lt;li&gt;Web.HandleApi.apiPlanWork&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;设置Limit Results为最大值1500&lt;/li&gt;
  &lt;li&gt;查看右上角的耗时分布图以及查询数&lt;/li&gt;
  &lt;li&gt;选择几个耗时比较大的个例，点击观察原因&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;5-报告&quot;&gt;5. 报告&lt;/h1&gt;
&lt;p&gt;经过实机测试，报告如下，有兴趣的可以打开看看：&lt;/p&gt;

&lt;h2 id=&quot;51-第一次测试&quot;&gt;5.1 第一次测试&lt;/h2&gt;
&lt;p&gt;1000qps测试发现瓶颈点（预设瓶颈，意料之中）Consumer CPU消耗过于剧烈。&lt;/p&gt;

&lt;p&gt;报告：&lt;a href=&quot;/resources/2019/07/dist-system-practice/report_1562948039960.pdf&quot; target=&quot;_blank&quot;&gt;report_1562948039960.pdf&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;52-第二次测试&quot;&gt;5.2 第二次测试&lt;/h2&gt;
&lt;p&gt;解决Consumer的瓶颈问题，并对其进行验证。&lt;/p&gt;

&lt;p&gt;报告：&lt;a href=&quot;/resources/2019/07/dist-system-practice/report_1562981458710.pdf&quot; target=&quot;_blank&quot;&gt;report_1562981458710.pdf&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;因预算和时间等原因，后续并没有展开更多的测试，仅两次，一次演示问题的发现，一次演示问题的解决和验证。&lt;/p&gt;

&lt;h1 id=&quot;appendix&quot;&gt;Appendix&lt;/h1&gt;
&lt;h2 id=&quot;MONITORING_LIST&quot;&gt;监控清单&lt;/h2&gt;
&lt;h3 id=&quot;host&quot;&gt;Host&lt;/h3&gt;
&lt;p&gt;Dashboard uid: 9CWBz0bik&lt;/p&gt;

&lt;p&gt;Graph params:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;var-interval=5s 调整图表的采样间隔，最低5s&lt;/li&gt;
  &lt;li&gt;var-env=All 固定值&lt;/li&gt;
  &lt;li&gt;var-name=All 固定值&lt;/li&gt;
  &lt;li&gt;var-node=192.168.3.111%3A9100 label_values(node_exporter_build_info,instance)&lt;/li&gt;
  &lt;li&gt;var-maxmount= 固定值&lt;/li&gt;
  &lt;li&gt;panelId=13 根据图表，编号各自不同&lt;/li&gt;
  &lt;li&gt;width=1000&amp;amp;height=500 图表大小&lt;/li&gt;
  &lt;li&gt;tz=Asia%2FShanghai 用户时区&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Sample graph link: &lt;a href=&quot;http://127.0.0.1:3000/render/d-solo/9CWBz0bik/nodes?orgId=1&amp;amp;var-interval=5s&amp;amp;var-env=All&amp;amp;var-name=All&amp;amp;var-node=192.168.3.111%3A9100&amp;amp;var-maxmount=&amp;amp;from=1562202150372&amp;amp;to=1562205750372&amp;amp;panelId=13&amp;amp;width=1000&amp;amp;height=500&amp;amp;tz=Asia%2FShanghai&quot; target=&quot;_blank&quot;&gt;link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Monitoring items:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;系统运行时间
    &lt;ul&gt;
      &lt;li&gt;panelId=15&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;CPU 核数
    &lt;ul&gt;
      &lt;li&gt;panelId=14&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;内存总量
    &lt;ul&gt;
      &lt;li&gt;panelId=75&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;CPU使用率（5m）
    &lt;ul&gt;
      &lt;li&gt;panelId=167&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;CPU iowait（5m）
    &lt;ul&gt;
      &lt;li&gt;panelId=20&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;内存使用率
    &lt;ul&gt;
      &lt;li&gt;panelId=172&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;当前打开的文件描述符
    &lt;ul&gt;
      &lt;li&gt;panelId=16&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;根分区使用率
    &lt;ul&gt;
      &lt;li&gt;panelId=166&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;系统平均负载
    &lt;ul&gt;
      &lt;li&gt;panelId=13&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;磁盘总空间
    &lt;ul&gt;
      &lt;li&gt;panelId=171&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;各分区可用空间
    &lt;ul&gt;
      &lt;li&gt;panelId=164&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;CPU使用率、磁盘每秒的I/O操作耗费时间（%）
    &lt;ul&gt;
      &lt;li&gt;panelId=7&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;内存信息
    &lt;ul&gt;
      &lt;li&gt;panelId=156&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;磁盘读写速率（IOPS）
    &lt;ul&gt;
      &lt;li&gt;panelId=161&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;磁盘读写容量大小
    &lt;ul&gt;
      &lt;li&gt;panelId=168&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;磁盘IO读写时间
    &lt;ul&gt;
      &lt;li&gt;panelId=160&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;网络流量
    &lt;ul&gt;
      &lt;li&gt;panelId=157&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;TCP 连接情况
    &lt;ul&gt;
      &lt;li&gt;panelId=158&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;container&quot;&gt;Container&lt;/h3&gt;
&lt;p&gt;Dashboard uid: PV1XyHnWz&lt;/p&gt;

&lt;p&gt;Graph params:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;refresh=30s 不生效，但建议保留&lt;/li&gt;
  &lt;li&gt;var-containergroup=All 固定值&lt;/li&gt;
  &lt;li&gt;var-interval=30s 调整图表的采样间隔，最低30s&lt;/li&gt;
  &lt;li&gt;var-server=192.168.3.111 label_values(node_boot_time_seconds, instance) /([^:]+):.*/ 去掉了instance的port&lt;/li&gt;
  &lt;li&gt;var-name=prometheus 容器名&lt;/li&gt;
  &lt;li&gt;panelId=8 根据图表，编号各自不同&lt;/li&gt;
  &lt;li&gt;width=1000&amp;amp;height=500 图表大小&lt;/li&gt;
  &lt;li&gt;tz=Asia%2FShanghai 用户时区&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Sample graph link: &lt;a href=&quot;http://127.0.0.1:3000/render/d-solo/PV1XyHnWz/docker-and-system-monitoring?orgId=1&amp;amp;from=1562200204905&amp;amp;to=1562203804906&amp;amp;refresh=30s&amp;amp;var-containergroup=All&amp;amp;var-interval=30s&amp;amp;var-server=192.168.3.111&amp;amp;var-name=prometheus&amp;amp;panelId=8&amp;amp;width=1000&amp;amp;height=500&amp;amp;tz=Asia%2FShanghai&quot; target=&quot;_blank&quot;&gt;link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Monitoring items:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Received Network Traffic per Container
    &lt;ul&gt;
      &lt;li&gt;容器收到的网络流量&lt;/li&gt;
      &lt;li&gt;panelId=8&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Sent Network Traffic per Container
    &lt;ul&gt;
      &lt;li&gt;容器发送的网络流量&lt;/li&gt;
      &lt;li&gt;panelId=9&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;CPU Usage per Container
    &lt;ul&gt;
      &lt;li&gt;容器消耗的CPU&lt;/li&gt;
      &lt;li&gt;panelId=1&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Memory Usage per Container
    &lt;ul&gt;
      &lt;li&gt;容器消耗的内存&lt;/li&gt;
      &lt;li&gt;panelId=10&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Memory Swap per Container
    &lt;ul&gt;
      &lt;li&gt;容器的交换内存&lt;/li&gt;
      &lt;li&gt;panelId=34&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;memcached&quot;&gt;Memcached&lt;/h3&gt;
&lt;p&gt;Dashboard uid: NgzwcO7Zz&lt;/p&gt;

&lt;p&gt;Graph params:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;var-node=memcached-exporter%3A9150 label_values(memcached_up, instance)&lt;/li&gt;
  &lt;li&gt;panelId=1 根据图表，编号各自不同&lt;/li&gt;
  &lt;li&gt;width=1000&amp;amp;height=500 图表大小&lt;/li&gt;
  &lt;li&gt;tz=Asia%2FShanghai 用户时区&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Sample graph link: &lt;a href=&quot;http://127.0.0.1:3000/render/d-solo/NgzwcO7Zz/prometheus-memcached?orgId=1&amp;amp;from=1562203120775&amp;amp;to=1562206720775&amp;amp;var-node=memcached-exporter%3A9150&amp;amp;panelId=1&amp;amp;width=1000&amp;amp;height=500&amp;amp;tz=Asia%2FShanghai&quot; target=&quot;_blank&quot;&gt;link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Monitoring items:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;% Hit ratio
    &lt;ul&gt;
      &lt;li&gt;命中率&lt;/li&gt;
      &lt;li&gt;panelId=1&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Connections
    &lt;ul&gt;
      &lt;li&gt;连接数&lt;/li&gt;
      &lt;li&gt;panelId=4&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Get / Set ratio
    &lt;ul&gt;
      &lt;li&gt;Get Set比率&lt;/li&gt;
      &lt;li&gt;panelId=3&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Commands
    &lt;ul&gt;
      &lt;li&gt;按种类显示命令执行的数量&lt;/li&gt;
      &lt;li&gt;panelId=2&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;evicts / reclaims
    &lt;ul&gt;
      &lt;li&gt;Key驱逐数量&lt;/li&gt;
      &lt;li&gt;panelId=8&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Read / written bytes
    &lt;ul&gt;
      &lt;li&gt;网络流量&lt;/li&gt;
      &lt;li&gt;panelId=6&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Total memory usage
    &lt;ul&gt;
      &lt;li&gt;内存使用率&lt;/li&gt;
      &lt;li&gt;panelId=7&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Items in cache
    &lt;ul&gt;
      &lt;li&gt;内存中Key数量&lt;/li&gt;
      &lt;li&gt;panelId=5&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;mysql&quot;&gt;MySQL&lt;/h3&gt;
&lt;p&gt;Dashboard uid: MQWgroiiz&lt;/p&gt;

&lt;p&gt;Graph params:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;var-interval=1m 调整图表的采样间隔，最低1s&lt;/li&gt;
  &lt;li&gt;var-host=mysqld-exporter%3A9104 label_values(mysql_up, instance)&lt;/li&gt;
  &lt;li&gt;panelId=1 根据图表，编号各自不同&lt;/li&gt;
  &lt;li&gt;width=1000&amp;amp;height=500 图表大小&lt;/li&gt;
  &lt;li&gt;tz=Asia%2FShanghai 用户时区&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Sample graph link: &lt;a href=&quot;http://127.0.0.1:3000/render/d-solo/MQWgroiiz/mysql-overview?orgId=1&amp;amp;from=1562165395404&amp;amp;to=1562208595404&amp;amp;var-interval=1m&amp;amp;var-host=mysqld-exporter%3A9104&amp;amp;panelId=92&amp;amp;width=1000&amp;amp;height=500&amp;amp;tz=Asia%2FShanghai&quot; target=&quot;_blank&quot;&gt;link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Monitoring items:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;MySQL Connections
    &lt;ul&gt;
      &lt;li&gt;连接状态&lt;/li&gt;
      &lt;li&gt;panelId=92&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;MySQL Aborted Connections
    &lt;ul&gt;
      &lt;li&gt;退出的连接统计&lt;/li&gt;
      &lt;li&gt;panelId=47&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;MySQL Client Thread Activity
    &lt;ul&gt;
      &lt;li&gt;线程活动状态&lt;/li&gt;
      &lt;li&gt;panelId=10&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;MySQL Thread Cache
    &lt;ul&gt;
      &lt;li&gt;线程池状态&lt;/li&gt;
      &lt;li&gt;panelId=11&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;MySQL Questions
    &lt;ul&gt;
      &lt;li&gt;查询数量&lt;/li&gt;
      &lt;li&gt;panelId=53&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;MySQL Slow Queries
    &lt;ul&gt;
      &lt;li&gt;慢查询数量&lt;/li&gt;
      &lt;li&gt;panelId=48&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;MySQL Table Locks
    &lt;ul&gt;
      &lt;li&gt;表锁状态&lt;/li&gt;
      &lt;li&gt;panelId=32&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;MySQL Network Traffic
    &lt;ul&gt;
      &lt;li&gt;网络流量统计&lt;/li&gt;
      &lt;li&gt;panelId=9&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;MySQL Network Usage Hourly
    &lt;ul&gt;
      &lt;li&gt;网络流量统计/小时&lt;/li&gt;
      &lt;li&gt;panelId=381&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;MySQL Internal Memory Overview
    &lt;ul&gt;
      &lt;li&gt;内部内存使用状态&lt;/li&gt;
      &lt;li&gt;panelId=50&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Top Command Counters
    &lt;ul&gt;
      &lt;li&gt;执行命令按种类分类数量&lt;/li&gt;
      &lt;li&gt;panelId=14&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Top Command Counters Hourly
    &lt;ul&gt;
      &lt;li&gt;命令数量/小时&lt;/li&gt;
      &lt;li&gt;panelId=39&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;MySQL Query Cache Memory
    &lt;ul&gt;
      &lt;li&gt;缓存使用量&lt;/li&gt;
      &lt;li&gt;panelId=46&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;MySQL Query Cache Activity
    &lt;ul&gt;
      &lt;li&gt;缓存命中状态&lt;/li&gt;
      &lt;li&gt;panelId=45&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;MySQL File Openings
    &lt;ul&gt;
      &lt;li&gt;实时打开的文件数量&lt;/li&gt;
      &lt;li&gt;panelId=43&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;MySQL Open Files
    &lt;ul&gt;
      &lt;li&gt;打开文件统计&lt;/li&gt;
      &lt;li&gt;panelId=41&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;prometheus&quot;&gt;Prometheus&lt;/h3&gt;
&lt;p&gt;Dashboard uid: 54e7hO7Wk&lt;/p&gt;

&lt;p&gt;Graph params:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;var-job=prometheus 固定值&lt;/li&gt;
  &lt;li&gt;var-instance=prometheus 固定值&lt;/li&gt;
  &lt;li&gt;var-interval=1h 调整图表的采样间隔，最低1h&lt;/li&gt;
  &lt;li&gt;panelId=1 根据图表，编号各自不同&lt;/li&gt;
  &lt;li&gt;width=1000&amp;amp;height=500 图表大小&lt;/li&gt;
  &lt;li&gt;tz=Asia%2FShanghai 用户时区&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Sample graph link: &lt;a href=&quot;http://127.0.0.1:3000/render/d-solo/54e7hO7Wk/prometheus-2-0-overview?orgId=1&amp;amp;panelId=33&amp;amp;var-job=prometheus&amp;amp;var-instance=prometheus%3A9090&amp;amp;var-interval=1h&amp;amp;from=1562307966107&amp;amp;to=1562311566107&amp;amp;width=1000&amp;amp;height=500&amp;amp;tz=Asia%2FShanghai&quot; target=&quot;_blank&quot;&gt;link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Monitoring items:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Series Count
    &lt;ul&gt;
      &lt;li&gt;时序数量&lt;/li&gt;
      &lt;li&gt;panelId=3&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Failures and Errors
    &lt;ul&gt;
      &lt;li&gt;采样出错&lt;/li&gt;
      &lt;li&gt;panelId=33&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Appended Samples per Second
    &lt;ul&gt;
      &lt;li&gt;每秒采样数量&lt;/li&gt;
      &lt;li&gt;panelId=4&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Scrape Duration
    &lt;ul&gt;
      &lt;li&gt;采样耗时&lt;/li&gt;
      &lt;li&gt;panelId=29&lt;/li&gt;
      &lt;li&gt;该图表按instance进行显示，因此如果需要查询某个特定服务的采样抓取耗时，需要调整该参数，不能固定使用prometheus&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Prometheus Engine Query Duration Seconds
    &lt;ul&gt;
      &lt;li&gt;查询耗时情况&lt;/li&gt;
      &lt;li&gt;panelId=15&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;kafka-jmx&quot;&gt;Kafka JMX&lt;/h3&gt;
&lt;p&gt;Dashboard uid: chanjarster-jvm-dashboard&lt;/p&gt;

&lt;p&gt;Graph params:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;var-datasource=Prometheus 固定值&lt;/li&gt;
  &lt;li&gt;var-job=kafka 固定值&lt;/li&gt;
  &lt;li&gt;var-instance=kafka_1%3A7071 label_values(jvm_info{job=”$job”},instance)&lt;/li&gt;
  &lt;li&gt;var-mempool=All 固定值&lt;/li&gt;
  &lt;li&gt;var-memarea=All 固定值&lt;/li&gt;
  &lt;li&gt;panelId=1 根据图表，编号各自不同&lt;/li&gt;
  &lt;li&gt;width=1000&amp;amp;height=500 图表大小&lt;/li&gt;
  &lt;li&gt;tz=Asia%2FShanghai 用户时区&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Sample graph link: &lt;a href=&quot;http://127.0.0.1:3000/render/d-solo/chanjarster-jvm-dashboard/kafka-jmx-dashboard?orgId=1&amp;amp;panelId=29&amp;amp;from=1562309167160&amp;amp;to=1562312767160&amp;amp;var-datasource=Prometheus&amp;amp;var-job=kafka&amp;amp;var-instance=kafka_1%3A7071&amp;amp;var-mempool=All&amp;amp;var-memarea=All&amp;amp;width=1000&amp;amp;height=500&amp;amp;tz=Asia%2FShanghai&quot; target=&quot;_blank&quot;&gt;link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Monitoring items:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Open file descriptors
    &lt;ul&gt;
      &lt;li&gt;文件打开情况&lt;/li&gt;
      &lt;li&gt;panelId=38&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;CPU load
    &lt;ul&gt;
      &lt;li&gt;CPU使用情况，含JVM的统计区分&lt;/li&gt;
      &lt;li&gt;panelId=29&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Memory area [heap]
    &lt;ul&gt;
      &lt;li&gt;堆内存使用情况&lt;/li&gt;
      &lt;li&gt;panelId=8&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Memory area [nonheap]
    &lt;ul&gt;
      &lt;li&gt;堆外内存使用情况&lt;/li&gt;
      &lt;li&gt;panelId=45&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;GC count increase
    &lt;ul&gt;
      &lt;li&gt;GC数量&lt;/li&gt;
      &lt;li&gt;panelId=6&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;GC time
    &lt;ul&gt;
      &lt;li&gt;GC耗时&lt;/li&gt;
      &lt;li&gt;panelId=5&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Threads used
    &lt;ul&gt;
      &lt;li&gt;线程数量&lt;/li&gt;
      &lt;li&gt;panelId=3&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Physical memory
    &lt;ul&gt;
      &lt;li&gt;物理内存情况&lt;/li&gt;
      &lt;li&gt;panelId=44&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;kafka-exporter&quot;&gt;Kafka Exporter&lt;/h3&gt;
&lt;p&gt;Dashboard uid: jwPKIsniz&lt;/p&gt;

&lt;p&gt;Graph params:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;var-job=kafka-exporter 固定值&lt;/li&gt;
  &lt;li&gt;var-instance=kafka_exporter%3A9308 label_values(kafka_consumergroup_current_offset{job=~”$job”}, instance)&lt;/li&gt;
  &lt;li&gt;var-topic=All 固定值，可调整&lt;/li&gt;
  &lt;li&gt;panelId=1 根据图表，编号各自不同&lt;/li&gt;
  &lt;li&gt;width=1000&amp;amp;height=500 图表大小&lt;/li&gt;
  &lt;li&gt;tz=Asia%2FShanghai 用户时区&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Sample graph link: &lt;a href=&quot;http://127.0.0.1:3000/render/d-solo/jwPKIsniz/kafka-exporter-overview?orgId=1&amp;amp;panelId=14&amp;amp;from=1562309984557&amp;amp;to=1562313584557&amp;amp;var-job=kafka-exporter&amp;amp;var-instance=kafka_exporter%3A9308&amp;amp;var-topic=All&amp;amp;width=1000&amp;amp;height=500&amp;amp;tz=Asia%2FShanghai&quot; target=&quot;_blank&quot;&gt;link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Monitoring items:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Message in per second
    &lt;ul&gt;
      &lt;li&gt;每秒消息数量&lt;/li&gt;
      &lt;li&gt;panelId=14&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Lag by Consumer Group
    &lt;ul&gt;
      &lt;li&gt;消费组延迟&lt;/li&gt;
      &lt;li&gt;panelId=12&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Message in per minute
    &lt;ul&gt;
      &lt;li&gt;每分钟消息数量&lt;/li&gt;
      &lt;li&gt;panelId=16&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Message consume per minute
    &lt;ul&gt;
      &lt;li&gt;每分钟消息消费&lt;/li&gt;
      &lt;li&gt;panelId=18&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;jaeger-agent&quot;&gt;Jaeger Agent&lt;/h3&gt;
&lt;p&gt;Dashboard uid: Z8ieXpnWk&lt;/p&gt;

&lt;p&gt;Graph params:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;var-node=jagent_web%3A5778 label_values(jaeger_agent_thrift_udp_server_queue_size, instance)&lt;/li&gt;
  &lt;li&gt;panelId=1 根据图表，编号各自不同&lt;/li&gt;
  &lt;li&gt;width=1000&amp;amp;height=500 图表大小&lt;/li&gt;
  &lt;li&gt;tz=Asia%2FShanghai 用户时区&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Sample graph link: &lt;a href=&quot;http://127.0.0.1:3000/render/d-solo/Z8ieXpnWk/jaeger-agent?tab=advanced&amp;amp;orgId=1&amp;amp;panelId=6&amp;amp;from=1562311474404&amp;amp;to=1562315074404&amp;amp;var-node=jagent_web%3A5778&amp;amp;width=1000&amp;amp;height=500&amp;amp;tz=Asia%2FShanghai&quot; target=&quot;_blank&quot;&gt;link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Monitoring items:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Reporter batches submitted
    &lt;ul&gt;
      &lt;li&gt;Reporter批量提交数（提交至collector）&lt;/li&gt;
      &lt;li&gt;panelId=6&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Reporter batches failures
    &lt;ul&gt;
      &lt;li&gt;Reporter批量提交失败数&lt;/li&gt;
      &lt;li&gt;panelId=8&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Reporter spans submitted
    &lt;ul&gt;
      &lt;li&gt;Reporter span提交数量&lt;/li&gt;
      &lt;li&gt;panelId=10&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Reporter spans failures
    &lt;ul&gt;
      &lt;li&gt;Reporter span提交失败数&lt;/li&gt;
      &lt;li&gt;panelId=12&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Queue size
    &lt;ul&gt;
      &lt;li&gt;Receiver等待队列（从app过来）&lt;/li&gt;
      &lt;li&gt;panelId=24&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Read errors
    &lt;ul&gt;
      &lt;li&gt;ReceiverUDP读取错误数&lt;/li&gt;
      &lt;li&gt;panelId=26&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Packets processed
    &lt;ul&gt;
      &lt;li&gt;Receiver处理的包数量&lt;/li&gt;
      &lt;li&gt;panelId=20&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Packets dropped
    &lt;ul&gt;
      &lt;li&gt;Receiver丢弃的包数量&lt;/li&gt;
      &lt;li&gt;panelId=22&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;jaeger-collector&quot;&gt;Jaeger Collector&lt;/h3&gt;
&lt;p&gt;Dashboard uid: mb6-JR5iz&lt;/p&gt;

&lt;p&gt;Graph params:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;var-node=jcollector_1%3A14268 label_values(jaeger_collector_queue_length, instance)&lt;/li&gt;
  &lt;li&gt;panelId=1 根据图表，编号各自不同&lt;/li&gt;
  &lt;li&gt;width=1000&amp;amp;height=500 图表大小&lt;/li&gt;
  &lt;li&gt;tz=Asia%2FShanghai 用户时区&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Sample graph link: &lt;a href=&quot;http://127.0.0.1:3000/render/d-solo/mb6-JR5iz/jaeger-collector?orgId=1&amp;amp;var-node=jcollector_1%3A14268&amp;amp;from=1562312765270&amp;amp;to=1562316365270&amp;amp;panelId=20&amp;amp;width=1000&amp;amp;height=500&amp;amp;tz=Asia%2FShanghai&quot; target=&quot;_blank&quot;&gt;link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Monitoring items:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Traces received
    &lt;ul&gt;
      &lt;li&gt;收到的trace数量&lt;/li&gt;
      &lt;li&gt;panelId=20&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Traces rejected
    &lt;ul&gt;
      &lt;li&gt;拒绝的trace数量&lt;/li&gt;
      &lt;li&gt;panelId=22&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Spans received
    &lt;ul&gt;
      &lt;li&gt;收到的span数量&lt;/li&gt;
      &lt;li&gt;panelId=18&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Spans dropped
    &lt;ul&gt;
      &lt;li&gt;丢弃的span数量&lt;/li&gt;
      &lt;li&gt;panelId=4&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Spans rejected
    &lt;ul&gt;
      &lt;li&gt;拒绝的span数量&lt;/li&gt;
      &lt;li&gt;panelId=24&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Queue length
    &lt;ul&gt;
      &lt;li&gt;队列长度&lt;/li&gt;
      &lt;li&gt;panelId=2&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Span queue latency - 95 percentile
    &lt;ul&gt;
      &lt;li&gt;span处理时长 95%&lt;/li&gt;
      &lt;li&gt;panelId=10&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Save latency - 95 percentile
    &lt;ul&gt;
      &lt;li&gt;数据库存储时长 95%&lt;/li&gt;
      &lt;li&gt;panelId=26&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Cassandra attempts
    &lt;ul&gt;
      &lt;li&gt;cassandra数据库请求数量&lt;/li&gt;
      &lt;li&gt;panelId=16&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Cassandra errors
    &lt;ul&gt;
      &lt;li&gt;cassandra数据库报错&lt;/li&gt;
      &lt;li&gt;panelId=12&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;filebeat&quot;&gt;Filebeat&lt;/h3&gt;
&lt;p&gt;Dashboard uid: oF_Qr14Zz&lt;/p&gt;

&lt;p&gt;Graph params:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;var-node=filebeat_exporter%3A9479 label_values(filebeat_uptime_seconds, instance)&lt;/li&gt;
  &lt;li&gt;panelId=1 根据图表，编号各自不同&lt;/li&gt;
  &lt;li&gt;width=1000&amp;amp;height=500 图表大小&lt;/li&gt;
  &lt;li&gt;tz=Asia%2FShanghai 用户时区&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Sample graph link: &lt;a href=&quot;http://127.0.0.1:3000/render/d-solo/oF_Qr14Zz/filebeat?orgId=1&amp;amp;from=1562313566558&amp;amp;to=1562317166558&amp;amp;var-node=filebeat_exporter%3A9479&amp;amp;panelId=2&amp;amp;width=1000&amp;amp;height=500&amp;amp;tz=Asia%2FShanghai&quot; target=&quot;_blank&quot;&gt;link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Monitoring items:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Harvester
    &lt;ul&gt;
      &lt;li&gt;追踪文件的状态&lt;/li&gt;
      &lt;li&gt;panelId=2&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;IO errors
    &lt;ul&gt;
      &lt;li&gt;IO错误&lt;/li&gt;
      &lt;li&gt;panelId=8&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Filebeat events
    &lt;ul&gt;
      &lt;li&gt;filebeat事件&lt;/li&gt;
      &lt;li&gt;panelId=4&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Output events
    &lt;ul&gt;
      &lt;li&gt;输出事件&lt;/li&gt;
      &lt;li&gt;panelId=6&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Pipeline events
    &lt;ul&gt;
      &lt;li&gt;管线事件&lt;/li&gt;
      &lt;li&gt;panelId=10&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Pipeline queue
    &lt;ul&gt;
      &lt;li&gt;管线队列&lt;/li&gt;
      &lt;li&gt;panelId=12&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;elasticsearch&quot;&gt;Elasticsearch&lt;/h3&gt;
&lt;p&gt;Dashboard uid: FNysokSWk&lt;/p&gt;

&lt;p&gt;Graph params:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;var-interval=5m 调整图表的采样间隔，最低5m&lt;/li&gt;
  &lt;li&gt;var-cluster=es_cluster 固定值&lt;/li&gt;
  &lt;li&gt;var-name=es_1 label_values(elasticsearch_indices_docs{cluster=”$cluster”, name!=””},name)&lt;/li&gt;
  &lt;li&gt;var-instance=es_exporter%3A9114 固定值&lt;/li&gt;
  &lt;li&gt;panelId=1 根据图表，编号各自不同&lt;/li&gt;
  &lt;li&gt;width=1000&amp;amp;height=500 图表大小&lt;/li&gt;
  &lt;li&gt;tz=Asia%2FShanghai 用户时区&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Sample graph link: &lt;a href=&quot;http://127.0.0.1:3000/render/d-solo/FNysokSWk/elasticsearch?orgId=1&amp;amp;from=1562315066925&amp;amp;to=1562318666925&amp;amp;var-interval=5m&amp;amp;var-cluster=docker-cluster&amp;amp;var-name=es_1&amp;amp;var-instance=es_exporter%3A9114&amp;amp;panelId=50&amp;amp;width=1000&amp;amp;height=500&amp;amp;tz=Asia%2FShanghai&quot; target=&quot;_blank&quot;&gt;link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Monitoring items:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Pending tasks
    &lt;ul&gt;
      &lt;li&gt;集群未完成工作数&lt;/li&gt;
      &lt;li&gt;panelId=16&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Load average
    &lt;ul&gt;
      &lt;li&gt;节点负载&lt;/li&gt;
      &lt;li&gt;panelId=30&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;CPU usage
    &lt;ul&gt;
      &lt;li&gt;节点CPU使用&lt;/li&gt;
      &lt;li&gt;panelId=88&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;JVM memory usage
    &lt;ul&gt;
      &lt;li&gt;节点内存使用&lt;/li&gt;
      &lt;li&gt;panelId=31&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;GC count
    &lt;ul&gt;
      &lt;li&gt;GC次数&lt;/li&gt;
      &lt;li&gt;panelId=7&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;GC time
    &lt;ul&gt;
      &lt;li&gt;GC耗时&lt;/li&gt;
      &lt;li&gt;panelId=27&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Total translog operations
    &lt;ul&gt;
      &lt;li&gt;持久化操作数&lt;/li&gt;
      &lt;li&gt;panelId=77&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Total translog size in bytes
    &lt;ul&gt;
      &lt;li&gt;持久化容量&lt;/li&gt;
      &lt;li&gt;panelId=78&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Tripped for breakers
    &lt;ul&gt;
      &lt;li&gt;断路器触发次数&lt;/li&gt;
      &lt;li&gt;panelId=79&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Estimated size in bytes of breaker
    &lt;ul&gt;
      &lt;li&gt;断路器触发限制&lt;/li&gt;
      &lt;li&gt;panelId=80&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Disk usage
    &lt;ul&gt;
      &lt;li&gt;磁盘用量&lt;/li&gt;
      &lt;li&gt;panelId=32&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Network usage
    &lt;ul&gt;
      &lt;li&gt;网络用量&lt;/li&gt;
      &lt;li&gt;panelId=47&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Documents count on node
    &lt;ul&gt;
      &lt;li&gt;文档数量&lt;/li&gt;
      &lt;li&gt;panelId=1&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Documents indexed rate
    &lt;ul&gt;
      &lt;li&gt;文档索引数&lt;/li&gt;
      &lt;li&gt;panelId=24&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Documents merged rate
    &lt;ul&gt;
      &lt;li&gt;文档合并率&lt;/li&gt;
      &lt;li&gt;panelId=26&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Documents merged bytes
    &lt;ul&gt;
      &lt;li&gt;文档合并量&lt;/li&gt;
      &lt;li&gt;panelId=52&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Query time
    &lt;ul&gt;
      &lt;li&gt;查询耗时&lt;/li&gt;
      &lt;li&gt;panelId=33&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Indexing time
    &lt;ul&gt;
      &lt;li&gt;索引耗时&lt;/li&gt;
      &lt;li&gt;panelId=5&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Merging time
    &lt;ul&gt;
      &lt;li&gt;合并耗时&lt;/li&gt;
      &lt;li&gt;panelId=3&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Total Operations rate
    &lt;ul&gt;
      &lt;li&gt;所有操作速率&lt;/li&gt;
      &lt;li&gt;panelId=48&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Total Operations time
    &lt;ul&gt;
      &lt;li&gt;所有操作耗时&lt;/li&gt;
      &lt;li&gt;panelId=49&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;golang&quot;&gt;Golang&lt;/h3&gt;
&lt;p&gt;Dashboard uid: ypFZFgvmz&lt;/p&gt;

&lt;p&gt;Graph params:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;var-job=go-apps 固定值&lt;/li&gt;
  &lt;li&gt;var-interval=1m 调整图表的采样间隔，最低1m&lt;/li&gt;
  &lt;li&gt;var-node=192.168.3.111%3A8000 label_values(go_memstats_alloc_bytes, instance)&lt;/li&gt;
  &lt;li&gt;panelId=1 根据图表，编号各自不同&lt;/li&gt;
  &lt;li&gt;width=1000&amp;amp;height=500 图表大小&lt;/li&gt;
  &lt;li&gt;tz=Asia%2FShanghai 用户时区&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Sample graph link: &lt;a href=&quot;http://127.0.0.1:3000/render/d-solo/ypFZFgvmz/go-processes?orgId=1&amp;amp;from=1562314327587&amp;amp;to=1562317927587&amp;amp;var-job=go-apps&amp;amp;var-interval=1m&amp;amp;var-node=192.168.3.111%3A8000&amp;amp;panelId=1&amp;amp;width=1000&amp;amp;height=500&amp;amp;tz=Asia%2FShanghai&quot; target=&quot;_blank&quot;&gt;link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Monitoring items:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Heap memory
    &lt;ul&gt;
      &lt;li&gt;堆内存用量&lt;/li&gt;
      &lt;li&gt;panelId=1&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Heap memory trends
    &lt;ul&gt;
      &lt;li&gt;堆内存申请和释放情况&lt;/li&gt;
      &lt;li&gt;panelId=4&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Heap objects
    &lt;ul&gt;
      &lt;li&gt;堆内存对象数量&lt;/li&gt;
      &lt;li&gt;panelId=2&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Heap system alloc
    &lt;ul&gt;
      &lt;li&gt;堆内存向系统申请和释放情况&lt;/li&gt;
      &lt;li&gt;panelId=5&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;GC rate
    &lt;ul&gt;
      &lt;li&gt;GC频次&lt;/li&gt;
      &lt;li&gt;panelId=3&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Next gc target
    &lt;ul&gt;
      &lt;li&gt;下次GC触发容量&lt;/li&gt;
      &lt;li&gt;panelId=6&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;GC duration quantiles
    &lt;ul&gt;
      &lt;li&gt;GC耗时情况，分25% 50% 90%三段&lt;/li&gt;
      &lt;li&gt;panelId=8&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Goroutines count
    &lt;ul&gt;
      &lt;li&gt;goroutine数量&lt;/li&gt;
      &lt;li&gt;panelId=7&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Threads count
    &lt;ul&gt;
      &lt;li&gt;线程数量&lt;/li&gt;
      &lt;li&gt;panelId=10&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;EOF&lt;/p&gt;
&lt;/blockquote&gt;
</description>
				<pubDate>Sat, 13 Jul 2019 15:36:22 +0800</pubDate>
				<link>https://xenojoshua.com/2019/07/dist-system-practice/</link>
				<guid isPermaLink="true">https://xenojoshua.com/2019/07/dist-system-practice/</guid>
			</item>
		
			<item>
				<title>Memcached Notes</title>
				<description>&lt;h4&gt;Table of Contents&lt;/h4&gt;
&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#1-前言&quot; id=&quot;markdown-toc-1-前言&quot;&gt;1. 前言&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#2-清单&quot; id=&quot;markdown-toc-2-清单&quot;&gt;2. 清单&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#21-mixi的系列博文&quot; id=&quot;markdown-toc-21-mixi的系列博文&quot;&gt;2.1 Mixi的系列博文&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#22-自撰的系列博文&quot; id=&quot;markdown-toc-22-自撰的系列博文&quot;&gt;2.2 自撰的系列博文&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;1-前言&quot;&gt;1. 前言&lt;/h1&gt;
&lt;p&gt;早年对memcached有过一系列非常深入的研究分析，并形成了大量的文字积累。memcached这个软件在那么多年中也并没有什么很大的变化，毕竟它要服务的功能相对来说还是非常稳定的，就那么一小块，做好就好了。&lt;/p&gt;

&lt;p&gt;因为文章年代都比较久远了，现在要找都需要到tag里去搜，就比较麻烦。因此在这里做一个综合，把所有的内容都罗列进来。&lt;/p&gt;

&lt;h1 id=&quot;2-清单&quot;&gt;2. 清单&lt;/h1&gt;
&lt;h2 id=&quot;21-mixi的系列博文&quot;&gt;2.1 Mixi的系列博文&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;/2011/04/memcached-anatomy-001/&quot; target=&quot;_blank&quot;&gt;memcached完全剖析–1. memcached的基础&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/2011/04/memcached-anatomy-002/&quot; target=&quot;_blank&quot;&gt;memcached全面剖析–2.理解memcached的内存存储&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/2011/04/memcached-anatomy-003/&quot; target=&quot;_blank&quot;&gt;memcached全面剖析–3.memcached的删除机制和发展方向&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/2011/04/memcached-anatomy-004/&quot; target=&quot;_blank&quot;&gt;memcached全面剖析–4. memcached的分布式算法&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/2011/04/memcached-anatomy-005/&quot; target=&quot;_blank&quot;&gt;memcached全面剖析–5. memcached的应用和兼容程序&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;22-自撰的系列博文&quot;&gt;2.2 自撰的系列博文&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;/2011/04/deep-in-memcached-how-it-works/&quot; target=&quot;_blank&quot;&gt;Memcached深入理解 - memcached究竟是如何运作的&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/2011/04/deep-in-memcached-learning-official-protocol-stats/&quot; target=&quot;_blank&quot;&gt;Memcached深入理解 – 理解官方protocol中的统计方法&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/2011/04/deep-in-memcached-how-to-monitor/&quot; target=&quot;_blank&quot;&gt;Memcached深入理解 - memcached的监控&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;EOF&lt;/p&gt;
&lt;/blockquote&gt;
</description>
				<pubDate>Sat, 11 May 2019 10:01:22 +0800</pubDate>
				<link>https://xenojoshua.com/2019/05/memcached-note/</link>
				<guid isPermaLink="true">https://xenojoshua.com/2019/05/memcached-note/</guid>
			</item>
		
			<item>
				<title>Golang Pipeline</title>
				<description>&lt;h4&gt;Table of Contents&lt;/h4&gt;
&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#1-前言&quot; id=&quot;markdown-toc-1-前言&quot;&gt;1. 前言&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#2-channel实验范例&quot; id=&quot;markdown-toc-2-channel实验范例&quot;&gt;2. Channel实验范例&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#3-go-concurrency-patterns-pipelines-and-cancellation&quot; id=&quot;markdown-toc-3-go-concurrency-patterns-pipelines-and-cancellation&quot;&gt;3. Go Concurrency Patterns: Pipelines and cancellation&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#31-什么是pipeline&quot; id=&quot;markdown-toc-31-什么是pipeline&quot;&gt;3.1 什么是Pipeline&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#32-cancel-channel-done&quot; id=&quot;markdown-toc-32-cancel-channel-done&quot;&gt;3.2 Cancel: Channel Done&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#33-cancel-context&quot; id=&quot;markdown-toc-33-cancel-context&quot;&gt;3.3 Cancel: Context&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#资料&quot; id=&quot;markdown-toc-资料&quot;&gt;资料&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#链接&quot; id=&quot;markdown-toc-链接&quot;&gt;链接&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;1-前言&quot;&gt;1. 前言&lt;/h1&gt;
&lt;p&gt;学习一门新语言最简单的就是那些顺序执行的语言，会了PHP，换JAVA、Python、Ruby，无非就是语法更换下，上stackoverflow查下：”python字符串拼接”之类的，看下怎么写就完事了。难的是那些有特殊编程思维的语言，比如说JavaScript，异步原生，写代码要非常小心注意异步的返回如何处理，否则就会明明看着是先A后B，执行的时候却成了先B再A。就这方面来说，Go语言也属于后者，属于那种&lt;code&gt;语法看会简单，实际学精很难&lt;/code&gt;的语言，而Golang难就难在goroutine以及channel带来的功能上。&lt;/p&gt;

&lt;p&gt;之前在查看Go语言的gRPC第三方库的时候，其代码对channel的运用非常灵活：&lt;a href=&quot;https://github.com/processout/grpc-go-pool/blob/master/pool.go&quot; target=&quot;_blank&quot;&gt;grpc-go-pool/pool.go&lt;/a&gt;。深感需要加深这块的理解。&lt;/p&gt;

&lt;p&gt;在学习的时候，找到了一篇官方之前的博客，时间比较早了（2014年），但还算有用：&lt;a href=&quot;https://blog.golang.org/pipelines&quot; target=&quot;_blank&quot;&gt;Go Concurrency Patterns: Pipelines and cancellation&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;不过语言还是一直在发展的，目前在进行批量的routine控制以及退出触发的方面，最佳的解决方案是&lt;code&gt;context&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;接下来，一点点开始。&lt;/p&gt;

&lt;h1 id=&quot;2-channel实验范例&quot;&gt;2. Channel实验范例&lt;/h1&gt;
&lt;p&gt;在阅读官方博文之前，先自己着手做一些范例代码，加深对于&lt;a href=&quot;/2019/03/golang-basic/#ID_CHANNEL&quot;&gt;Golang Basic &amp;gt; 2.4 通道 / 信道 channel&lt;/a&gt;的理解。&lt;/p&gt;

&lt;p&gt;我做了点简单的演示范例：&lt;a href=&quot;https://github.com/agreatfool/dist-system-practice/tree/master/golang/src/experiment/channel&quot; target=&quot;_blank&quot;&gt;dist-system-practice/golang/src/experiment/channel/&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;只需要结果的话，可以直接读README：&lt;a href=&quot;https://github.com/agreatfool/dist-system-practice/blob/master/golang/src/experiment/channel/README.md&quot; target=&quot;_blank&quot;&gt;dist-system-practice/golang/src/experiment/channel/README.md&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;当中有几点比较有意思：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;slice值进出channel之后，&lt;code&gt;地址&lt;/code&gt;并&lt;code&gt;没有改变&lt;/code&gt;，和pointer是一样的结果&lt;/li&gt;
  &lt;li&gt;channel在无buffer的情况下，很容易就会阻塞，导致routine睡眠，必须小心处理&lt;/li&gt;
  &lt;li&gt;带buffer的channel，在buffer耗尽之后也是同样的结果，实际上来说也必须小心阻塞&lt;/li&gt;
  &lt;li&gt;虽然向关闭的通道写数据会引起panic，但向关闭的通道&lt;code&gt;读数据&lt;/code&gt;却&lt;code&gt;不会&lt;/code&gt;，只会获得通道类型的&lt;code&gt;默认值&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;有一张图，很好地将一系列状态以及操作结果整理了出来，可以参考：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/resources/2019/05/golang-pipeline/close_chan.png&quot; alt=&quot;&quot; target=&quot;_blank&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;3-go-concurrency-patterns-pipelines-and-cancellation&quot;&gt;3. Go Concurrency Patterns: Pipelines and cancellation&lt;/h1&gt;
&lt;p&gt;这里并不会通篇翻译：&lt;a href=&quot;https://blog.golang.org/pipelines&quot; target=&quot;_blank&quot;&gt;Go Concurrency Patterns: Pipelines and cancellation&lt;/a&gt;，有需要的可以看&lt;a href=&quot;https://imdiot.github.io/2016/01/01/Go%20Concurrency%20Patterns-Pipelines%20and%20cancellation.html&quot; target=&quot;_blank&quot;&gt;这篇&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;此外，本章后半也会涉及到&lt;code&gt;context&lt;/code&gt;，毕竟这家伙才是现在的准标准。&lt;/p&gt;

&lt;h2 id=&quot;31-什么是pipeline&quot;&gt;3.1 什么是Pipeline&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;通过输入channel从&lt;code&gt;上游&lt;/code&gt;接收值&lt;/li&gt;
  &lt;li&gt;对这些数据执行某些函数，通常是生成一些新的值&lt;/li&gt;
  &lt;li&gt;通过输出channel发送值到&lt;code&gt;下游&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;而在这一系列的交棒过程中，&lt;code&gt;错误&lt;/code&gt;的发生和事务的&lt;code&gt;取消&lt;/code&gt;是正常的情况，必须要进行&lt;code&gt;处理&lt;/code&gt;，否则的话作为下游的routine可能会一直等待已经错误退出或取消事务的上游routine，导致&lt;code&gt;资源泄露&lt;/code&gt;。使用的难点就在这里。&lt;/p&gt;

&lt;h2 id=&quot;32-cancel-channel-done&quot;&gt;3.2 Cancel: Channel Done&lt;/h2&gt;
&lt;p&gt;官方博文中的代码范例写的非常散，因为有多处重复修改，这里提供一份完整拼接的版本：&lt;a href=&quot;https://github.com/agreatfool/dist-system-practice/blob/master/golang/src/experiment/pipeline/pipeline.go&quot; target=&quot;_blank&quot;&gt;experiment/pipeline/pipeline.go&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;官方博文通篇都阅读了的话，撇开行文中的Dummy业务逻辑不谈，可以了解到该文主要还是谈了如何对出问题的routine进行退出通知。官方的博文中使用的方法是申明一个类型为&lt;code&gt;struct{}&lt;/code&gt;的Dummy通道，关闭该通道来进行退出消息的传送。&lt;/p&gt;

&lt;p&gt;通过：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-go&quot; data-lang=&quot;go&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;go&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;defer&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// HL&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;range&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;nums&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;out&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;done&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
			&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// HL&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;以这样的方式，监听&lt;code&gt;done&lt;/code&gt;通道的关闭，退出routine函数，并设置defer函数，在routine函数退出的时候，清理对应的资源并关闭通道。这种编码解决方法确实能解决问题，但非常难看，也没有层级退出的概念。&lt;/p&gt;

&lt;h2 id=&quot;33-cancel-context&quot;&gt;3.3 Cancel: Context&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;done通道&lt;/code&gt;确实能在功能上达到要求，但尚欠缺了一些要素，因此后续就有&lt;code&gt;context&lt;/code&gt;这个包的出现。相关的学习可以阅读：&lt;a href=&quot;https://deepzz.com/post/golang-context-package-notes.html&quot; target=&quot;_blank&quot;&gt;快速掌握 Golang context 包，简单示例&lt;/a&gt;。此外，还有官方博客：&lt;a href=&quot;https://blog.golang.org/context&quot; target=&quot;_blank&quot;&gt;Go Concurrency Patterns: Context&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;一些概念和规范这里做下引用：&lt;/p&gt;

&lt;p&gt;Context 的调用应该是链式的，通过&lt;code&gt;WithCancel&lt;/code&gt;，&lt;code&gt;WithDeadline&lt;/code&gt;，&lt;code&gt;WithTimeout&lt;/code&gt;或&lt;code&gt;WithValue&lt;/code&gt;派生出新的 Context。当父 Context 被取消时，其派生的所有 Context 都将取消。&lt;/p&gt;

&lt;p&gt;通过&lt;code&gt;context.WithXXX&lt;/code&gt;都将返回新的 Context 和 CancelFunc。调用 CancelFunc 将取消子代，移除父代对子代的引用，并且停止所有定时器。未能调用 CancelFunc 将泄漏子代，直到父代被取消或定时器触发。&lt;code&gt;go vet&lt;/code&gt;工具检查所有流程控制路径上使用 CancelFuncs。&lt;/p&gt;

&lt;p&gt;遵循以下规则，以保持包之间的接口一致，并启用静态分析工具以检查上下文传播。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;不要将 Contexts 放入结构体，相反&lt;code&gt;context&lt;/code&gt;应该作为第一个参数传入，命名为ctx。&lt;code&gt;func DoSomething（ctx context.Context，arg Arg）error { // ... use ctx ... }&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;即使函数允许，也不要传入&lt;code&gt;nil&lt;/code&gt;的 Context。如果不知道用哪种 Context，可以使用&lt;code&gt;context.TODO()&lt;/code&gt;。&lt;/li&gt;
  &lt;li&gt;使用context的Value相关方法只应该用于在程序和接口中传递的和请求相关的元数据，不要用它来传递一些可选的参数&lt;/li&gt;
  &lt;li&gt;相同的 Context 可以传递给在不同的&lt;code&gt;goroutine&lt;/code&gt;；Context 是并发安全的。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;用法：&lt;/p&gt;

&lt;p&gt;Done函数会返回一个channel，用来进行close通知（本质上还是之前的那一套）：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-go&quot; data-lang=&quot;go&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;gen&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;chan&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;go&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Done&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
			&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// returning not to leak the goroutine&lt;/span&gt;
		&lt;span class=&quot;c1&quot;&gt;//...&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//...&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//...&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cancel&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;WithCancel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Background&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;defer&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cancel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// cancel when we are finished consuming integers&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;此外，还有一篇老王的：&lt;a href=&quot;https://blog.huoding.com/2019/04/15/730&quot; target=&quot;_blank&quot;&gt;Golang之Context的迷思&lt;/a&gt;，可以好好读下。&lt;/p&gt;

&lt;h1 id=&quot;资料&quot;&gt;资料&lt;/h1&gt;
&lt;h2 id=&quot;链接&quot;&gt;链接&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/processout/grpc-go-pool/blob/master/pool.go&quot; target=&quot;_blank&quot;&gt;grpc-go-pool/pool.go&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://blog.golang.org/pipelines&quot; target=&quot;_blank&quot;&gt;Go Concurrency Patterns: Pipelines and cancellation&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://imdiot.github.io/2016/01/01/Go%20Concurrency%20Patterns-Pipelines%20and%20cancellation.html&quot; target=&quot;_blank&quot;&gt;『译』Go Concurrency Patterns: Pipelines and cancellation&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://deepzz.com/post/golang-context-package-notes.html&quot; target=&quot;_blank&quot;&gt;快速掌握 Golang context 包，简单示例&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://blog.huoding.com/2019/04/15/730&quot; target=&quot;_blank&quot;&gt;Golang之Context的迷思&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;EOF&lt;/p&gt;
&lt;/blockquote&gt;
</description>
				<pubDate>Fri, 10 May 2019 10:01:22 +0800</pubDate>
				<link>https://xenojoshua.com/2019/05/golang-pipeline/</link>
				<guid isPermaLink="true">https://xenojoshua.com/2019/05/golang-pipeline/</guid>
			</item>
		
			<item>
				<title>Envoy Notes</title>
				<description>&lt;h4&gt;Table of Contents&lt;/h4&gt;
&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#1-前言&quot; id=&quot;markdown-toc-1-前言&quot;&gt;1. 前言&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#2-选型--比较&quot; id=&quot;markdown-toc-2-选型--比较&quot;&gt;2. 选型 &amp;amp; 比较&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#3-benchmark&quot; id=&quot;markdown-toc-3-benchmark&quot;&gt;3. Benchmark&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#4-架构&quot; id=&quot;markdown-toc-4-架构&quot;&gt;4. 架构&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#5-使用&quot; id=&quot;markdown-toc-5-使用&quot;&gt;5. 使用&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#51-镜像&quot; id=&quot;markdown-toc-51-镜像&quot;&gt;5.1 镜像&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#52-配置&quot; id=&quot;markdown-toc-52-配置&quot;&gt;5.2 配置&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#53-负载均衡front-proxy范例&quot; id=&quot;markdown-toc-53-负载均衡front-proxy范例&quot;&gt;5.3 负载均衡Front Proxy范例&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#ID_ADMIN&quot; id=&quot;markdown-toc-ID_ADMIN&quot;&gt;6. Admin&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#7-监控&quot; id=&quot;markdown-toc-7-监控&quot;&gt;7. 监控&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#8-todo&quot; id=&quot;markdown-toc-8-todo&quot;&gt;8. TODO&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#资料&quot; id=&quot;markdown-toc-资料&quot;&gt;资料&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#链接&quot; id=&quot;markdown-toc-链接&quot;&gt;链接&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#ID_APP_STATS&quot; id=&quot;markdown-toc-ID_APP_STATS&quot;&gt;stats prometheus&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;1-前言&quot;&gt;1. 前言&lt;/h1&gt;
&lt;p&gt;Envoy应该说是云原生这个概念起来之后的代理应用No.1。在当前的发展趋势下，使用Envoy来解决代理需求应该是最佳方案。&lt;/p&gt;

&lt;p&gt;中文手册：&lt;a href=&quot;http://www.servicemesher.com/envoy/&quot; target=&quot;_blank&quot;&gt;Envoy 官方文档中文版&lt;/a&gt;。当前（&lt;strong&gt;2019-05-07&lt;/strong&gt;）Envoy的最新版本是&lt;code&gt;1.10&lt;/code&gt;，和中文的文档之间有几个小版本的跨度，需要注意。&lt;/p&gt;

&lt;h1 id=&quot;2-选型--比较&quot;&gt;2. 选型 &amp;amp; 比较&lt;/h1&gt;
&lt;p&gt;作为新生代的代理应用，在使用之前必然会有一个为什么的疑问，为什么需要使用Envoy，它和Nginx以及HAProxy这类老牌代理应用相比，好在哪里。&lt;/p&gt;

&lt;p&gt;有一篇不错的博文可以阅读下：&lt;a href=&quot;https://blog.getambassador.io/envoy-vs-nginx-vs-haproxy-why-the-open-source-ambassador-api-gateway-chose-envoy-23826aed79ef&quot; target=&quot;_blank&quot;&gt;Envoy vs NGINX vs HAProxy: Why the open source Ambassador API Gateway chose Envoy&lt;/a&gt;。作者最主要的Concern在于两点：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Nginx之类的其他软件，部分有商业版本和社区版本的区分，而社区版本普遍功能较为简陋，不能完全满足需求&lt;/li&gt;
  &lt;li&gt;HAProxy之类的老牌软件，因为各种原因，功能演进都非常缓慢，不能跟上日益高速发展的云原生技术&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;说穿了就是功能不足，无论是商业原因还是研发原因还是资源原因。&lt;/p&gt;

&lt;p&gt;那么Envoy能提供什么功能：&lt;a href=&quot;http://www.servicemesher.com/envoy/intro/what_is_envoy.html&quot; target=&quot;_blank&quot;&gt;Envoy 是什么？&lt;/a&gt;。可以看到Envoy提供的功能实在是太强大了，基本上现在主流的Proxy需求在Envoy身上都能得到满足。&lt;/p&gt;

&lt;p&gt;官方也有一篇横向比较：&lt;a href=&quot;http://www.servicemesher.com/envoy/intro/comparison.html&quot; target=&quot;_blank&quot;&gt;与类似系统比较&lt;/a&gt;。&lt;/p&gt;

&lt;h1 id=&quot;3-benchmark&quot;&gt;3. Benchmark&lt;/h1&gt;
&lt;p&gt;功能之后就是性能，那么和老牌的Nginx以及HAProxy等比较起来，Envoy的性能又如何呢。这里可以看下：&lt;a href=&quot;https://www.loggly.com/blog/benchmarking-5-popular-load-balancers-nginx-haproxy-envoy-traefik-and-alb/&quot; target=&quot;_blank&quot;&gt;Benchmarking 5 Popular Load Balancers: Nginx, HAProxy, Envoy, Traefik, and ALB&lt;/a&gt;。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Envoy came out as the overall winner in this benchmark. It had the highest throughput in terms of requests per second.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;文章发布时间是：&lt;code&gt;10 Dec 2018&lt;/code&gt;，应该说还是非常具有时效性的。&lt;/p&gt;

&lt;p&gt;&lt;img style=&quot;background-color:transparent;&quot; target=&quot;_blank&quot; src=&quot;/resources/2019/05/envoy-note/envoy-benchmark-01.png&quot; /&gt;
&lt;img style=&quot;background-color:transparent;&quot; target=&quot;_blank&quot; src=&quot;/resources/2019/05/envoy-note/envoy-benchmark-02.png&quot; /&gt;
&lt;img style=&quot;background-color:transparent;&quot; target=&quot;_blank&quot; src=&quot;/resources/2019/05/envoy-note/envoy-benchmark-03.png&quot; /&gt;
&lt;img style=&quot;background-color:transparent;&quot; target=&quot;_blank&quot; src=&quot;/resources/2019/05/envoy-note/envoy-benchmark-04.png&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;4-架构&quot;&gt;4. 架构&lt;/h1&gt;
&lt;p&gt;除了在Nginx中比较常见的作为流量入口的代理模式之外，Envoy还介绍了一种作为服务网格总线的架构模式：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/resources/2019/05/envoy-note/arch-service-to-service.png&quot; alt=&quot;&quot; target=&quot;_blank&quot; /&gt;&lt;/p&gt;

&lt;p&gt;这种设计将Envoy作为面向服务架构（SOA）内部的所有流量的通信总线来使用。此设计将服务和服务之间的关系遮蔽了起来，服务集群只需要知道自己的Envoy在哪里即可，后续的流量就全部交给Envoy，而Envoy之间则通过服务发现将整个服务网格链接起来。&lt;/p&gt;

&lt;h1 id=&quot;5-使用&quot;&gt;5. 使用&lt;/h1&gt;
&lt;h2 id=&quot;51-镜像&quot;&gt;5.1 镜像&lt;/h2&gt;
&lt;p&gt;一般使用镜像的方式进行安装：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;docker pull envoyproxy/envoy:v1.10.0
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;启动：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;docker run --rm -it -d \
    --name envoy-test \
    --network=envoy-test-net \
    -p 9901:9901 \
    -p 9988:9988 \
    -v ${PATH}/conf:/etc/envoy \
    -v ${PATH}/log:/tmp \
    envoyproxy/envoy:v1.10.0
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;镜像中配置文件的位置为：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;/etc/envoy/envoy.yaml
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;可以通过volume进行对应的配置文件覆盖。&lt;/p&gt;

&lt;h2 id=&quot;52-配置&quot;&gt;5.2 配置&lt;/h2&gt;
&lt;p&gt;因功能实在是太强大，Envoy的配置也就比较复杂，官方文档配置方面的总纲在：&lt;a href=&quot;http://www.servicemesher.com/envoy/configuration/configuration.html&quot; target=&quot;_blank&quot;&gt;配置参考&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;此外，因Envoy的消息都是通过Protobuf来进行设计的，因此可以查看源代码来阅读配置项：&lt;a href=&quot;https://github.com/envoyproxy/envoy/tree/v1.10.0/api/envoy/config&quot; target=&quot;_blank&quot;&gt;envoy/api/envoy/config/&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;另外，官方代码库也给了很多配置范例：&lt;a href=&quot;https://github.com/envoyproxy/envoy/tree/master/examples&quot; target=&quot;_blank&quot;&gt;envoy/examples/&lt;/a&gt;。以及：几个sandbox范例：&lt;a href=&quot;http://www.servicemesher.com/envoy/start/sandboxes.html&quot; target=&quot;_blank&quot;&gt;Sandbox&lt;/a&gt;。最适合新手查看的应该是：&lt;a href=&quot;http://www.servicemesher.com/envoy/start/sandboxes/front_proxy.html&quot; target=&quot;_blank&quot;&gt;前端代理&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;有一篇&lt;a href=&quot;https://www.katacoda.com/envoyproxy/scenarios/migrating-from-nginx-to-envoy&quot; target=&quot;_blank&quot;&gt;Migrating from NGINX to Envoy Proxy by envoyproxy&lt;/a&gt;相当不错。以范例的形式讲解了Nginx的配置如何翻译到Envoy。&lt;/p&gt;

&lt;p&gt;几个重要的配置项：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.envoyproxy.io/docs/envoy/v1.10.0/operations/admin&quot; target=&quot;_blank&quot;&gt;Administration interface&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.envoyproxy.io/docs/envoy/v1.10.0/api-v2/api/v2/lds.proto&quot; target=&quot;_blank&quot;&gt;Listener&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.envoyproxy.io/docs/envoy/v1.10.0/api-v2/api/v2/listener/listener.proto#envoy-api-msg-listener-filter&quot; target=&quot;_blank&quot;&gt;listener.Filter&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.envoyproxy.io/docs/envoy/v1.10.0/api-v2/config/filter/network/http_connection_manager/v2/http_connection_manager.proto#envoy-api-msg-config-filter-network-http-connection-manager-v2-httpfilter&quot; target=&quot;_blank&quot;&gt;HttpFilter&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.envoyproxy.io/docs/envoy/v1.10.0/api-v2/api/v2/cds.proto#cluster&quot; target=&quot;_blank&quot;&gt;Cluster&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.envoyproxy.io/docs/envoy/v1.10.0/api-v2/api/v2/route/route.proto#envoy-api-msg-route-virtualhost&quot; target=&quot;_blank&quot;&gt;route.VirtualHost&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;细节这里就不展开了，实在是篇幅太大。简单的范例可以直接看官方给的例子。&lt;/p&gt;

&lt;h2 id=&quot;53-负载均衡front-proxy范例&quot;&gt;5.3 负载均衡Front Proxy范例&lt;/h2&gt;
&lt;p&gt;简单的带负载均衡的Front Proxy范例可以看：&lt;a href=&quot;https://github.com/agreatfool/dist-system-practice/tree/master/experiment/envoy&quot; target=&quot;_blank&quot;&gt;dist-system-practice/experiment/envoy/&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;踩过的几个坑：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;监听端的地址都必须是&lt;code&gt;0.0.0.0&lt;/code&gt;，不能是127.0.0.1，否则在容器里收不到外部请求&lt;/li&gt;
  &lt;li&gt;将其他的网络服务作为upstream使用时，必须与envoy连接在同一个docker network中&lt;/li&gt;
  &lt;li&gt;clusters配置中的端点地址可以使用其他&lt;code&gt;docker容器的名字&lt;/code&gt;作为address&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;ID_ADMIN&quot;&gt;6. Admin&lt;/h1&gt;
&lt;p&gt;在Envoy的配置中有一个&lt;code&gt;admin&lt;/code&gt;节点可以用来配置admin功能访问：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;admin&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;access_log_path&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;/tmp/admin_access.log&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;profile_path&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;/tmp/envoy.prof&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;address&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;socket_address&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;address&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;127.0.0.1&lt;/span&gt;
      &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;port_value&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;9901&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;提供一些admin相关功能，文档可以看：&lt;a href=&quot;https://www.envoyproxy.io/docs/envoy/v1.10.0/operations/admin&quot; target=&quot;_blank&quot;&gt;Administration interface&lt;/a&gt;。功能列表东西还真不少。&lt;/p&gt;

&lt;p&gt;需要注意：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;All mutations must be sent as HTTP POST operations. When a mutation is requested via GET, the request has no effect, and an HTTP 400 (Invalid Request) response is returned.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;7-监控&quot;&gt;7. 监控&lt;/h1&gt;
&lt;p&gt;监控一样可以使用Prometheus进行Metrics采集。Envoy在启动的时候必须配置&lt;a href=&quot;#ID_ADMIN&quot;&gt;6. Admin&lt;/a&gt;，然后就可以在&lt;code&gt;http://127.0.0.1:9901/stats/prometheus&lt;/code&gt;获取到Metrics。&lt;/p&gt;

&lt;p&gt;本文在最后的附录部分留了一份样例：&lt;a href=&quot;#ID_APP_STATS&quot;&gt;stats prometheus&lt;/a&gt;。&lt;/p&gt;

&lt;h1 id=&quot;8-todo&quot;&gt;8. TODO&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;Envoy的内部架构&lt;/li&gt;
  &lt;li&gt;Envoy的高可用设计&lt;/li&gt;
  &lt;li&gt;Envoy热加载的设计原理&lt;/li&gt;
  &lt;li&gt;Envoy的集群使用&lt;/li&gt;
  &lt;li&gt;Envoy的其他高级功能使用范例&lt;/li&gt;
  &lt;li&gt;Envoy的Metrics理解&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;资料&quot;&gt;资料&lt;/h1&gt;
&lt;h2 id=&quot;链接&quot;&gt;链接&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://jvns.ca/blog/2018/10/27/envoy-basics/&quot; target=&quot;_blank&quot;&gt;Some Envoy basics&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.servicemesher.com/envoy/&quot; target=&quot;_blank&quot;&gt;Envoy 官方文档中文版&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://blog.getambassador.io/envoy-vs-nginx-vs-haproxy-why-the-open-source-ambassador-api-gateway-chose-envoy-23826aed79ef&quot; target=&quot;_blank&quot;&gt;Envoy vs NGINX vs HAProxy: Why the open source Ambassador API Gateway chose Envoy&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.loggly.com/blog/benchmarking-5-popular-load-balancers-nginx-haproxy-envoy-traefik-and-alb/&quot; target=&quot;_blank&quot;&gt;Benchmarking 5 Popular Load Balancers: Nginx, HAProxy, Envoy, Traefik, and ALB&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.katacoda.com/envoyproxy/scenarios/migrating-from-nginx-to-envoy&quot; target=&quot;_blank&quot;&gt;Migrating from NGINX to Envoy Proxy by envoyproxy&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;ID_APP_STATS&quot;&gt;stats prometheus&lt;/h2&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_listener_admin_http_downstream_rq_xx counter&lt;/span&gt;
envoy_listener_admin_http_downstream_rq_xx&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_response_code_class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;1&amp;quot;&lt;/span&gt;,envoy_http_conn_manager_prefix&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;admin&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
envoy_listener_admin_http_downstream_rq_xx&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_response_code_class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;2&amp;quot;&lt;/span&gt;,envoy_http_conn_manager_prefix&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;admin&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;
envoy_listener_admin_http_downstream_rq_xx&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_response_code_class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;4&amp;quot;&lt;/span&gt;,envoy_http_conn_manager_prefix&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;admin&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_listener_admin_downstream_cx_destroy counter&lt;/span&gt;
envoy_listener_admin_downstream_cx_destroy&lt;span class=&quot;o&quot;&gt;{}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_listener_admin_downstream_cx_total counter&lt;/span&gt;
envoy_listener_admin_downstream_cx_total&lt;span class=&quot;o&quot;&gt;{}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;
envoy_listener_admin_http_downstream_rq_xx&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_response_code_class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;5&amp;quot;&lt;/span&gt;,envoy_http_conn_manager_prefix&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;admin&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
envoy_listener_admin_http_downstream_rq_xx&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_response_code_class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;3&amp;quot;&lt;/span&gt;,envoy_http_conn_manager_prefix&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;admin&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_listener_admin_downstream_pre_cx_timeout counter&lt;/span&gt;
envoy_listener_admin_downstream_pre_cx_timeout&lt;span class=&quot;o&quot;&gt;{}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_listener_admin_http_downstream_rq_completed counter&lt;/span&gt;
envoy_listener_admin_http_downstream_rq_completed&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;admin&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_listener_admin_no_filter_chain_match counter&lt;/span&gt;
envoy_listener_admin_no_filter_chain_match&lt;span class=&quot;o&quot;&gt;{}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_cluster_manager_update_out_of_merge_window counter&lt;/span&gt;
envoy_cluster_manager_update_out_of_merge_window&lt;span class=&quot;o&quot;&gt;{}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_http_downstream_flow_control_resumed_reading_total counter&lt;/span&gt;
envoy_http_downstream_flow_control_resumed_reading_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;admin&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_http_downstream_cx_http2_total counter&lt;/span&gt;
envoy_http_downstream_cx_http2_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;admin&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_listener_manager_listener_added counter&lt;/span&gt;
envoy_listener_manager_listener_added&lt;span class=&quot;o&quot;&gt;{}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_http_downstream_rq_overload_close counter&lt;/span&gt;
envoy_http_downstream_rq_overload_close&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;admin&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_listener_manager_listener_create_success counter&lt;/span&gt;
envoy_listener_manager_listener_create_success&lt;span class=&quot;o&quot;&gt;{}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;4&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_http_downstream_cx_http1_total counter&lt;/span&gt;
envoy_http_downstream_cx_http1_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;admin&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_stats_overflow counter&lt;/span&gt;
envoy_stats_overflow&lt;span class=&quot;o&quot;&gt;{}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_listener_manager_listener_create_failure counter&lt;/span&gt;
envoy_listener_manager_listener_create_failure&lt;span class=&quot;o&quot;&gt;{}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_http_downstream_cx_destroy_remote counter&lt;/span&gt;
envoy_http_downstream_cx_destroy_remote&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;admin&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_http_downstream_rq_non_relative_path counter&lt;/span&gt;
envoy_http_downstream_rq_non_relative_path&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;admin&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_http_no_route counter&lt;/span&gt;
envoy_http_no_route&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;async-client&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_cluster_manager_cluster_updated counter&lt;/span&gt;
envoy_cluster_manager_cluster_updated&lt;span class=&quot;o&quot;&gt;{}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_http_rs_too_large counter&lt;/span&gt;
envoy_http_rs_too_large&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;admin&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_http_downstream_rq_tx_reset counter&lt;/span&gt;
envoy_http_downstream_rq_tx_reset&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;admin&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_server_watchdog_mega_miss counter&lt;/span&gt;
envoy_server_watchdog_mega_miss&lt;span class=&quot;o&quot;&gt;{}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_access_log_file_flushed_by_timer counter&lt;/span&gt;
envoy_access_log_file_flushed_by_timer&lt;span class=&quot;o&quot;&gt;{}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;14&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_http_downstream_cx_rx_bytes_total counter&lt;/span&gt;
envoy_http_downstream_cx_rx_bytes_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;admin&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1029&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_http_downstream_flow_control_paused_reading_total counter&lt;/span&gt;
envoy_http_downstream_flow_control_paused_reading_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;admin&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_http_downstream_rq_completed counter&lt;/span&gt;
envoy_http_downstream_rq_completed&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;admin&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_listener_manager_listener_removed counter&lt;/span&gt;
envoy_listener_manager_listener_removed&lt;span class=&quot;o&quot;&gt;{}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_http_downstream_rq_xx counter&lt;/span&gt;
envoy_http_downstream_rq_xx&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_response_code_class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;4&amp;quot;&lt;/span&gt;,envoy_http_conn_manager_prefix&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;admin&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_access_log_file_reopen_failed counter&lt;/span&gt;
envoy_access_log_file_reopen_failed&lt;span class=&quot;o&quot;&gt;{}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_http_rq_direct_response counter&lt;/span&gt;
envoy_http_rq_direct_response&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;async-client&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_http_downstream_rq_ws_on_non_ws_route counter&lt;/span&gt;
envoy_http_downstream_rq_ws_on_non_ws_route&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;admin&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_cluster_manager_cluster_updated_via_merge counter&lt;/span&gt;
envoy_cluster_manager_cluster_updated_via_merge&lt;span class=&quot;o&quot;&gt;{}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_cluster_manager_cluster_added counter&lt;/span&gt;
envoy_cluster_manager_cluster_added&lt;span class=&quot;o&quot;&gt;{}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_runtime_override_dir_exists counter&lt;/span&gt;
envoy_runtime_override_dir_exists&lt;span class=&quot;o&quot;&gt;{}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_http_downstream_rq_http2_total counter&lt;/span&gt;
envoy_http_downstream_rq_http2_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;admin&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_http_downstream_rq_response_before_rq_complete counter&lt;/span&gt;
envoy_http_downstream_rq_response_before_rq_complete&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;admin&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_listener_manager_listener_modified counter&lt;/span&gt;
envoy_listener_manager_listener_modified&lt;span class=&quot;o&quot;&gt;{}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_runtime_deprecated_feature_use counter&lt;/span&gt;
envoy_runtime_deprecated_feature_use&lt;span class=&quot;o&quot;&gt;{}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;21&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_http_downstream_cx_idle_timeout counter&lt;/span&gt;
envoy_http_downstream_cx_idle_timeout&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;admin&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_http_rq_redirect counter&lt;/span&gt;
envoy_http_rq_redirect&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;async-client&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_http_downstream_rq_too_large counter&lt;/span&gt;
envoy_http_downstream_rq_too_large&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;admin&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_http_downstream_cx_protocol_error counter&lt;/span&gt;
envoy_http_downstream_cx_protocol_error&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;admin&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_http_downstream_rq_timeout counter&lt;/span&gt;
envoy_http_downstream_rq_timeout&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;admin&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_runtime_override_dir_not_exists counter&lt;/span&gt;
envoy_runtime_override_dir_not_exists&lt;span class=&quot;o&quot;&gt;{}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_runtime_load_error counter&lt;/span&gt;
envoy_runtime_load_error&lt;span class=&quot;o&quot;&gt;{}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_access_log_file_write_completed counter&lt;/span&gt;
envoy_access_log_file_write_completed&lt;span class=&quot;o&quot;&gt;{}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;4&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_http_no_cluster counter&lt;/span&gt;
envoy_http_no_cluster&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;async-client&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_http_rq_reset_after_downstream_response_started counter&lt;/span&gt;
envoy_http_rq_reset_after_downstream_response_started&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;async-client&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_server_watchdog_miss counter&lt;/span&gt;
envoy_server_watchdog_miss&lt;span class=&quot;o&quot;&gt;{}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
envoy_http_downstream_rq_xx&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_response_code_class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;3&amp;quot;&lt;/span&gt;,envoy_http_conn_manager_prefix&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;admin&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_cluster_manager_cluster_removed counter&lt;/span&gt;
envoy_cluster_manager_cluster_removed&lt;span class=&quot;o&quot;&gt;{}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_server_debug_assertion_failures counter&lt;/span&gt;
envoy_server_debug_assertion_failures&lt;span class=&quot;o&quot;&gt;{}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_cluster_manager_update_merge_cancelled counter&lt;/span&gt;
envoy_cluster_manager_update_merge_cancelled&lt;span class=&quot;o&quot;&gt;{}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_http_downstream_cx_overload_disable_keepalive counter&lt;/span&gt;
envoy_http_downstream_cx_overload_disable_keepalive&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;admin&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_http_downstream_cx_upgrades_total counter&lt;/span&gt;
envoy_http_downstream_cx_upgrades_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;admin&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
envoy_http_downstream_rq_xx&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_response_code_class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;1&amp;quot;&lt;/span&gt;,envoy_http_conn_manager_prefix&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;admin&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_http_downstream_cx_tx_bytes_total counter&lt;/span&gt;
envoy_http_downstream_cx_tx_bytes_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;admin&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5132&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_http_downstream_cx_destroy counter&lt;/span&gt;
envoy_http_downstream_cx_destroy&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;admin&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
envoy_http_downstream_rq_xx&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_response_code_class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;5&amp;quot;&lt;/span&gt;,envoy_http_conn_manager_prefix&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;admin&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_http_downstream_cx_destroy_local_active_rq counter&lt;/span&gt;
envoy_http_downstream_cx_destroy_local_active_rq&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;admin&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_http_downstream_cx_drain_close counter&lt;/span&gt;
envoy_http_downstream_cx_drain_close&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;admin&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_http_downstream_rq_http1_total counter&lt;/span&gt;
envoy_http_downstream_rq_http1_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;admin&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_http_downstream_cx_destroy_active_rq counter&lt;/span&gt;
envoy_http_downstream_cx_destroy_active_rq&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;admin&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_access_log_file_write_buffered counter&lt;/span&gt;
envoy_access_log_file_write_buffered&lt;span class=&quot;o&quot;&gt;{}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;6&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_http_downstream_cx_destroy_local counter&lt;/span&gt;
envoy_http_downstream_cx_destroy_local&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;admin&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
envoy_http_downstream_rq_xx&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_response_code_class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;2&amp;quot;&lt;/span&gt;,envoy_http_conn_manager_prefix&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;admin&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_http_rq_total counter&lt;/span&gt;
envoy_http_rq_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;async-client&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_http_downstream_cx_total counter&lt;/span&gt;
envoy_http_downstream_cx_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;admin&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_http_downstream_rq_total counter&lt;/span&gt;
envoy_http_downstream_rq_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;admin&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_runtime_load_success counter&lt;/span&gt;
envoy_runtime_load_success&lt;span class=&quot;o&quot;&gt;{}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_cluster_manager_cluster_modified counter&lt;/span&gt;
envoy_cluster_manager_cluster_modified&lt;span class=&quot;o&quot;&gt;{}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_http_downstream_rq_rx_reset counter&lt;/span&gt;
envoy_http_downstream_rq_rx_reset&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;admin&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_http_downstream_rq_idle_timeout counter&lt;/span&gt;
envoy_http_downstream_rq_idle_timeout&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;admin&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_http_downstream_cx_delayed_close_timeout counter&lt;/span&gt;
envoy_http_downstream_cx_delayed_close_timeout&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;admin&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_http_downstream_cx_destroy_remote_active_rq counter&lt;/span&gt;
envoy_http_downstream_cx_destroy_remote_active_rq&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;admin&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_http_downstream_cx_ssl_total counter&lt;/span&gt;
envoy_http_downstream_cx_ssl_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;admin&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_cluster_upstream_cx_idle_timeout counter&lt;/span&gt;
envoy_cluster_upstream_cx_idle_timeout&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_cluster_upstream_cx_destroy_local counter&lt;/span&gt;
envoy_cluster_upstream_cx_destroy_local&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_cluster_upstream_cx_close_notify counter&lt;/span&gt;
envoy_cluster_upstream_cx_close_notify&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_cluster_upstream_flow_control_paused_reading_total counter&lt;/span&gt;
envoy_cluster_upstream_flow_control_paused_reading_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_cluster_upstream_cx_connect_timeout counter&lt;/span&gt;
envoy_cluster_upstream_cx_connect_timeout&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_cluster_upstream_rq_xx counter&lt;/span&gt;
envoy_cluster_upstream_rq_xx&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_response_code_class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;2&amp;quot;&lt;/span&gt;,envoy_cluster_name&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_cluster_upstream_rq_cancelled counter&lt;/span&gt;
envoy_cluster_upstream_rq_cancelled&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_cluster_upstream_cx_overflow counter&lt;/span&gt;
envoy_cluster_upstream_cx_overflow&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_cluster_upstream_cx_destroy_local_with_active_rq counter&lt;/span&gt;
envoy_cluster_upstream_cx_destroy_local_with_active_rq&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_cluster_upstream_internal_redirect_succeeded_total counter&lt;/span&gt;
envoy_cluster_upstream_internal_redirect_succeeded_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_cluster_lb_subsets_fallback counter&lt;/span&gt;
envoy_cluster_lb_subsets_fallback&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_cluster_lb_zone_routing_sampled counter&lt;/span&gt;
envoy_cluster_lb_zone_routing_sampled&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_cluster_upstream_cx_connect_attempts_exceeded counter&lt;/span&gt;
envoy_cluster_upstream_cx_connect_attempts_exceeded&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_cluster_upstream_rq_per_try_timeout counter&lt;/span&gt;
envoy_cluster_upstream_rq_per_try_timeout&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_cluster_upstream_cx_tx_bytes_total counter&lt;/span&gt;
envoy_cluster_upstream_cx_tx_bytes_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1065&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_cluster_upstream_flow_control_resumed_reading_total counter&lt;/span&gt;
envoy_cluster_upstream_flow_control_resumed_reading_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_cluster_original_dst_host_invalid counter&lt;/span&gt;
envoy_cluster_original_dst_host_invalid&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_cluster_lb_subsets_created counter&lt;/span&gt;
envoy_cluster_lb_subsets_created&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_cluster_external_upstream_rq_completed counter&lt;/span&gt;
envoy_cluster_external_upstream_rq_completed&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_cluster_upstream_cx_rx_bytes_total counter&lt;/span&gt;
envoy_cluster_upstream_cx_rx_bytes_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;715&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_cluster_upstream_flow_control_backed_up_total counter&lt;/span&gt;
envoy_cluster_upstream_flow_control_backed_up_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_cluster_update_success counter&lt;/span&gt;
envoy_cluster_update_success&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;58&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_cluster_update_no_rebuild counter&lt;/span&gt;
envoy_cluster_update_no_rebuild&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;56&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_cluster_upstream_cx_destroy_remote_with_active_rq counter&lt;/span&gt;
envoy_cluster_upstream_cx_destroy_remote_with_active_rq&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_cluster_lb_zone_cluster_too_small counter&lt;/span&gt;
envoy_cluster_lb_zone_cluster_too_small&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_cluster_lb_zone_routing_all_directly counter&lt;/span&gt;
envoy_cluster_lb_zone_routing_all_directly&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_cluster_upstream_cx_protocol_error counter&lt;/span&gt;
envoy_cluster_upstream_cx_protocol_error&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_cluster_external_upstream_rq_xx counter&lt;/span&gt;
envoy_cluster_external_upstream_rq_xx&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_response_code_class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;2&amp;quot;&lt;/span&gt;,envoy_cluster_name&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_cluster_external_upstream_rq counter&lt;/span&gt;
envoy_cluster_external_upstream_rq&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_response_code&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;200&amp;quot;&lt;/span&gt;,envoy_cluster_name&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_cluster_upstream_rq_completed counter&lt;/span&gt;
envoy_cluster_upstream_rq_completed&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_cluster_update_attempt counter&lt;/span&gt;
envoy_cluster_update_attempt&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;58&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_cluster_lb_recalculate_zone_structures counter&lt;/span&gt;
envoy_cluster_lb_recalculate_zone_structures&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_cluster_upstream_rq_pending_overflow counter&lt;/span&gt;
envoy_cluster_upstream_rq_pending_overflow&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_cluster_bind_errors counter&lt;/span&gt;
envoy_cluster_bind_errors&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_cluster_upstream_rq_retry_overflow counter&lt;/span&gt;
envoy_cluster_upstream_rq_retry_overflow&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_cluster_upstream_rq counter&lt;/span&gt;
envoy_cluster_upstream_rq&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_response_code&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;200&amp;quot;&lt;/span&gt;,envoy_cluster_name&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_cluster_lb_zone_number_differs counter&lt;/span&gt;
envoy_cluster_lb_zone_number_differs&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_cluster_upstream_cx_none_healthy counter&lt;/span&gt;
envoy_cluster_upstream_cx_none_healthy&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_cluster_lb_zone_no_capacity_left counter&lt;/span&gt;
envoy_cluster_lb_zone_no_capacity_left&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_cluster_update_failure counter&lt;/span&gt;
envoy_cluster_update_failure&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_cluster_upstream_rq_timeout counter&lt;/span&gt;
envoy_cluster_upstream_rq_timeout&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_cluster_upstream_cx_destroy_remote counter&lt;/span&gt;
envoy_cluster_upstream_cx_destroy_remote&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_cluster_upstream_cx_max_requests counter&lt;/span&gt;
envoy_cluster_upstream_cx_max_requests&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_cluster_upstream_internal_redirect_failed_total counter&lt;/span&gt;
envoy_cluster_upstream_internal_redirect_failed_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_cluster_upstream_flow_control_drained_total counter&lt;/span&gt;
envoy_cluster_upstream_flow_control_drained_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_cluster_lb_local_cluster_not_ok counter&lt;/span&gt;
envoy_cluster_lb_local_cluster_not_ok&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_cluster_upstream_rq_rx_reset counter&lt;/span&gt;
envoy_cluster_upstream_rq_rx_reset&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_cluster_upstream_cx_destroy counter&lt;/span&gt;
envoy_cluster_upstream_cx_destroy&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_cluster_lb_subsets_selected counter&lt;/span&gt;
envoy_cluster_lb_subsets_selected&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_cluster_lb_subsets_removed counter&lt;/span&gt;
envoy_cluster_lb_subsets_removed&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_cluster_upstream_cx_http1_total counter&lt;/span&gt;
envoy_cluster_upstream_cx_http1_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_cluster_upstream_cx_connect_fail counter&lt;/span&gt;
envoy_cluster_upstream_cx_connect_fail&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_cluster_upstream_rq_pending_total counter&lt;/span&gt;
envoy_cluster_upstream_rq_pending_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_cluster_lb_zone_routing_cross_zone counter&lt;/span&gt;
envoy_cluster_lb_zone_routing_cross_zone&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_cluster_lb_healthy_panic counter&lt;/span&gt;
envoy_cluster_lb_healthy_panic&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_cluster_upstream_cx_total counter&lt;/span&gt;
envoy_cluster_upstream_cx_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_cluster_upstream_cx_http2_total counter&lt;/span&gt;
envoy_cluster_upstream_cx_http2_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_cluster_upstream_cx_destroy_with_active_rq counter&lt;/span&gt;
envoy_cluster_upstream_cx_destroy_with_active_rq&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_cluster_upstream_rq_total counter&lt;/span&gt;
envoy_cluster_upstream_rq_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_cluster_upstream_rq_retry_success counter&lt;/span&gt;
envoy_cluster_upstream_rq_retry_success&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_cluster_lb_subsets_fallback_panic counter&lt;/span&gt;
envoy_cluster_lb_subsets_fallback_panic&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_cluster_upstream_rq_pending_failure_eject counter&lt;/span&gt;
envoy_cluster_upstream_rq_pending_failure_eject&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_cluster_membership_change counter&lt;/span&gt;
envoy_cluster_membership_change&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_cluster_upstream_rq_retry counter&lt;/span&gt;
envoy_cluster_upstream_rq_retry&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_cluster_retry_or_shadow_abandoned counter&lt;/span&gt;
envoy_cluster_retry_or_shadow_abandoned&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_cluster_upstream_rq_maintenance_mode counter&lt;/span&gt;
envoy_cluster_upstream_rq_maintenance_mode&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_cluster_upstream_rq_tx_reset counter&lt;/span&gt;
envoy_cluster_upstream_rq_tx_reset&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_cluster_update_empty counter&lt;/span&gt;
envoy_cluster_update_empty&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_listener_http_downstream_rq_xx counter&lt;/span&gt;
envoy_listener_http_downstream_rq_xx&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_response_code_class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;1&amp;quot;&lt;/span&gt;,envoy_http_conn_manager_prefix&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ingress_http&amp;quot;&lt;/span&gt;,envoy_listener_address&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.0.0.0_9988&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
envoy_listener_http_downstream_rq_xx&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_response_code_class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;4&amp;quot;&lt;/span&gt;,envoy_http_conn_manager_prefix&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ingress_http&amp;quot;&lt;/span&gt;,envoy_listener_address&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.0.0.0_9988&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_listener_downstream_cx_destroy counter&lt;/span&gt;
envoy_listener_downstream_cx_destroy&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_listener_address&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.0.0.0_9988&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
envoy_listener_http_downstream_rq_xx&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_response_code_class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;3&amp;quot;&lt;/span&gt;,envoy_http_conn_manager_prefix&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ingress_http&amp;quot;&lt;/span&gt;,envoy_listener_address&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.0.0.0_9988&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
envoy_listener_http_downstream_rq_xx&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_response_code_class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;2&amp;quot;&lt;/span&gt;,envoy_http_conn_manager_prefix&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ingress_http&amp;quot;&lt;/span&gt;,envoy_listener_address&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.0.0.0_9988&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_listener_downstream_pre_cx_timeout counter&lt;/span&gt;
envoy_listener_downstream_pre_cx_timeout&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_listener_address&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.0.0.0_9988&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
envoy_listener_http_downstream_rq_xx&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_response_code_class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;5&amp;quot;&lt;/span&gt;,envoy_http_conn_manager_prefix&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ingress_http&amp;quot;&lt;/span&gt;,envoy_listener_address&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.0.0.0_9988&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_listener_http_downstream_rq_completed counter&lt;/span&gt;
envoy_listener_http_downstream_rq_completed&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ingress_http&amp;quot;&lt;/span&gt;,envoy_listener_address&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.0.0.0_9988&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_listener_no_filter_chain_match counter&lt;/span&gt;
envoy_listener_no_filter_chain_match&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_listener_address&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.0.0.0_9988&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_listener_downstream_cx_total counter&lt;/span&gt;
envoy_listener_downstream_cx_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_listener_address&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.0.0.0_9988&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
envoy_http_downstream_rq_tx_reset&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ingress_http&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
envoy_http_downstream_rq_xx&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_response_code_class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;5&amp;quot;&lt;/span&gt;,envoy_http_conn_manager_prefix&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ingress_http&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
envoy_http_downstream_cx_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ingress_http&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
envoy_http_downstream_cx_destroy_remote_active_rq&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ingress_http&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
envoy_http_downstream_cx_http1_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ingress_http&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
envoy_http_downstream_rq_overload_close&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ingress_http&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_http_tracing_random_sampling counter&lt;/span&gt;
envoy_http_tracing_random_sampling&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ingress_http&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
envoy_http_no_route&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ingress_http&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
envoy_http_downstream_cx_destroy_remote&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ingress_http&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
envoy_http_downstream_cx_protocol_error&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ingress_http&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
envoy_http_downstream_rq_response_before_rq_complete&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ingress_http&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
envoy_http_rq_direct_response&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ingress_http&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
envoy_http_downstream_flow_control_resumed_reading_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ingress_http&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
envoy_http_downstream_cx_destroy_local_active_rq&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ingress_http&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
envoy_http_downstream_rq_http1_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ingress_http&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
envoy_http_rq_reset_after_downstream_response_started&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ingress_http&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_http_tracing_service_forced counter&lt;/span&gt;
envoy_http_tracing_service_forced&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ingress_http&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
envoy_http_downstream_cx_overload_disable_keepalive&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ingress_http&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
envoy_http_downstream_rq_ws_on_non_ws_route&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ingress_http&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
envoy_http_downstream_rq_xx&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_response_code_class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;3&amp;quot;&lt;/span&gt;,envoy_http_conn_manager_prefix&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ingress_http&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
envoy_http_downstream_cx_rx_bytes_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ingress_http&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;390&lt;/span&gt;
envoy_http_downstream_cx_idle_timeout&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ingress_http&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
envoy_http_downstream_rq_xx&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_response_code_class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;1&amp;quot;&lt;/span&gt;,envoy_http_conn_manager_prefix&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ingress_http&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
envoy_http_downstream_rq_idle_timeout&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ingress_http&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
envoy_http_rs_too_large&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ingress_http&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
envoy_http_downstream_rq_completed&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ingress_http&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
envoy_http_no_cluster&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ingress_http&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
envoy_http_downstream_cx_destroy_local&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ingress_http&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
envoy_http_downstream_rq_rx_reset&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ingress_http&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
envoy_http_rq_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ingress_http&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_http_tracing_not_traceable counter&lt;/span&gt;
envoy_http_tracing_not_traceable&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ingress_http&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
envoy_http_downstream_cx_tx_bytes_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ingress_http&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;840&lt;/span&gt;
envoy_http_downstream_cx_delayed_close_timeout&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ingress_http&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
envoy_http_downstream_cx_drain_close&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ingress_http&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
envoy_http_downstream_flow_control_paused_reading_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ingress_http&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
envoy_http_downstream_rq_timeout&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ingress_http&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
envoy_http_downstream_cx_destroy&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ingress_http&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
envoy_http_rq_redirect&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ingress_http&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_http_tracing_health_check counter&lt;/span&gt;
envoy_http_tracing_health_check&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ingress_http&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
envoy_http_downstream_rq_xx&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_response_code_class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;2&amp;quot;&lt;/span&gt;,envoy_http_conn_manager_prefix&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ingress_http&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
envoy_http_downstream_cx_ssl_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ingress_http&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
envoy_http_downstream_rq_too_large&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ingress_http&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_http_tracing_client_enabled counter&lt;/span&gt;
envoy_http_tracing_client_enabled&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ingress_http&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
envoy_http_downstream_rq_xx&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_response_code_class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;4&amp;quot;&lt;/span&gt;,envoy_http_conn_manager_prefix&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ingress_http&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
envoy_http_downstream_cx_upgrades_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ingress_http&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
envoy_http_downstream_rq_http2_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ingress_http&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
envoy_http_downstream_rq_non_relative_path&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ingress_http&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
envoy_http_downstream_cx_http2_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ingress_http&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
envoy_http_downstream_cx_destroy_active_rq&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ingress_http&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
envoy_http_downstream_rq_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ingress_http&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_listener_admin_downstream_pre_cx_active gauge&lt;/span&gt;
envoy_listener_admin_downstream_pre_cx_active&lt;span class=&quot;o&quot;&gt;{}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_listener_admin_downstream_cx_active gauge&lt;/span&gt;
envoy_listener_admin_downstream_cx_active&lt;span class=&quot;o&quot;&gt;{}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_http_downstream_cx_active gauge&lt;/span&gt;
envoy_http_downstream_cx_active&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;admin&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_listener_manager_total_listeners_draining gauge&lt;/span&gt;
envoy_listener_manager_total_listeners_draining&lt;span class=&quot;o&quot;&gt;{}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_server_parent_connections gauge&lt;/span&gt;
envoy_server_parent_connections&lt;span class=&quot;o&quot;&gt;{}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_runtime_admin_overrides_active gauge&lt;/span&gt;
envoy_runtime_admin_overrides_active&lt;span class=&quot;o&quot;&gt;{}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_cluster_manager_active_clusters gauge&lt;/span&gt;
envoy_cluster_manager_active_clusters&lt;span class=&quot;o&quot;&gt;{}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_cluster_manager_warming_clusters gauge&lt;/span&gt;
envoy_cluster_manager_warming_clusters&lt;span class=&quot;o&quot;&gt;{}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_listener_manager_total_listeners_active gauge&lt;/span&gt;
envoy_listener_manager_total_listeners_active&lt;span class=&quot;o&quot;&gt;{}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_http_downstream_cx_http1_active gauge&lt;/span&gt;
envoy_http_downstream_cx_http1_active&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;admin&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_server_uptime gauge&lt;/span&gt;
envoy_server_uptime&lt;span class=&quot;o&quot;&gt;{}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;140&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_server_memory_heap_size gauge&lt;/span&gt;
envoy_server_memory_heap_size&lt;span class=&quot;o&quot;&gt;{}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5242880&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_server_days_until_first_cert_expiring gauge&lt;/span&gt;
envoy_server_days_until_first_cert_expiring&lt;span class=&quot;o&quot;&gt;{}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2147483647&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_server_hot_restart_epoch gauge&lt;/span&gt;
envoy_server_hot_restart_epoch&lt;span class=&quot;o&quot;&gt;{}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_server_total_connections gauge&lt;/span&gt;
envoy_server_total_connections&lt;span class=&quot;o&quot;&gt;{}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_server_concurrency gauge&lt;/span&gt;
envoy_server_concurrency&lt;span class=&quot;o&quot;&gt;{}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;4&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_server_version gauge&lt;/span&gt;
envoy_server_version&lt;span class=&quot;o&quot;&gt;{}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;15294198&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_server_memory_allocated gauge&lt;/span&gt;
envoy_server_memory_allocated&lt;span class=&quot;o&quot;&gt;{}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;3875056&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_http_downstream_cx_rx_bytes_buffered gauge&lt;/span&gt;
envoy_http_downstream_cx_rx_bytes_buffered&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;admin&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;513&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_access_log_file_write_total_buffered gauge&lt;/span&gt;
envoy_access_log_file_write_total_buffered&lt;span class=&quot;o&quot;&gt;{}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_listener_manager_total_listeners_warming gauge&lt;/span&gt;
envoy_listener_manager_total_listeners_warming&lt;span class=&quot;o&quot;&gt;{}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_http_downstream_cx_upgrades_active gauge&lt;/span&gt;
envoy_http_downstream_cx_upgrades_active&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;admin&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_http_downstream_rq_active gauge&lt;/span&gt;
envoy_http_downstream_rq_active&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;admin&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_runtime_num_keys gauge&lt;/span&gt;
envoy_runtime_num_keys&lt;span class=&quot;o&quot;&gt;{}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_http_downstream_cx_tx_bytes_buffered gauge&lt;/span&gt;
envoy_http_downstream_cx_tx_bytes_buffered&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;admin&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_server_live gauge&lt;/span&gt;
envoy_server_live&lt;span class=&quot;o&quot;&gt;{}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_http_downstream_cx_ssl_active gauge&lt;/span&gt;
envoy_http_downstream_cx_ssl_active&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;admin&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_http_downstream_cx_http2_active gauge&lt;/span&gt;
envoy_http_downstream_cx_http2_active&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;admin&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_cluster_circuit_breakers_high_rq_retry_open gauge&lt;/span&gt;
envoy_cluster_circuit_breakers_high_rq_retry_open&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_cluster_max_host_weight gauge&lt;/span&gt;
envoy_cluster_max_host_weight&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_cluster_circuit_breakers_default_cx_open gauge&lt;/span&gt;
envoy_cluster_circuit_breakers_default_cx_open&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_cluster_circuit_breakers_high_rq_open gauge&lt;/span&gt;
envoy_cluster_circuit_breakers_high_rq_open&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_cluster_circuit_breakers_default_rq_open gauge&lt;/span&gt;
envoy_cluster_circuit_breakers_default_rq_open&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_cluster_membership_healthy gauge&lt;/span&gt;
envoy_cluster_membership_healthy&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_cluster_lb_subsets_active gauge&lt;/span&gt;
envoy_cluster_lb_subsets_active&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_cluster_circuit_breakers_default_rq_pending_open gauge&lt;/span&gt;
envoy_cluster_circuit_breakers_default_rq_pending_open&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_cluster_upstream_cx_active gauge&lt;/span&gt;
envoy_cluster_upstream_cx_active&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_cluster_upstream_rq_pending_active gauge&lt;/span&gt;
envoy_cluster_upstream_rq_pending_active&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_cluster_version gauge&lt;/span&gt;
envoy_cluster_version&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_cluster_upstream_cx_tx_bytes_buffered gauge&lt;/span&gt;
envoy_cluster_upstream_cx_tx_bytes_buffered&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_cluster_membership_total gauge&lt;/span&gt;
envoy_cluster_membership_total&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_cluster_circuit_breakers_default_rq_retry_open gauge&lt;/span&gt;
envoy_cluster_circuit_breakers_default_rq_retry_open&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_cluster_circuit_breakers_default_cx_pool_open gauge&lt;/span&gt;
envoy_cluster_circuit_breakers_default_cx_pool_open&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_cluster_circuit_breakers_high_rq_pending_open gauge&lt;/span&gt;
envoy_cluster_circuit_breakers_high_rq_pending_open&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_cluster_membership_degraded gauge&lt;/span&gt;
envoy_cluster_membership_degraded&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_cluster_circuit_breakers_high_cx_open gauge&lt;/span&gt;
envoy_cluster_circuit_breakers_high_cx_open&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_cluster_upstream_rq_active gauge&lt;/span&gt;
envoy_cluster_upstream_rq_active&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_cluster_circuit_breakers_high_cx_pool_open gauge&lt;/span&gt;
envoy_cluster_circuit_breakers_high_cx_pool_open&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_cluster_upstream_cx_rx_bytes_buffered gauge&lt;/span&gt;
envoy_cluster_upstream_cx_rx_bytes_buffered&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_listener_downstream_pre_cx_active gauge&lt;/span&gt;
envoy_listener_downstream_pre_cx_active&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_listener_address&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.0.0.0_9988&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_listener_downstream_cx_active gauge&lt;/span&gt;
envoy_listener_downstream_cx_active&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_listener_address&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.0.0.0_9988&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
envoy_http_downstream_cx_upgrades_active&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ingress_http&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
envoy_http_downstream_cx_tx_bytes_buffered&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ingress_http&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
envoy_http_downstream_cx_active&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ingress_http&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
envoy_http_downstream_cx_http1_active&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ingress_http&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
envoy_http_downstream_cx_http2_active&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ingress_http&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
envoy_http_downstream_cx_rx_bytes_buffered&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ingress_http&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
envoy_http_downstream_rq_active&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ingress_http&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
envoy_http_downstream_cx_ssl_active&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ingress_http&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_listener_admin_downstream_cx_length_ms histogram&lt;/span&gt;
envoy_listener_admin_downstream_cx_length_ms_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;le&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.5&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
envoy_listener_admin_downstream_cx_length_ms_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;le&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
envoy_listener_admin_downstream_cx_length_ms_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;le&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;5&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
envoy_listener_admin_downstream_cx_length_ms_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;le&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;10&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
envoy_listener_admin_downstream_cx_length_ms_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;le&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;25&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
envoy_listener_admin_downstream_cx_length_ms_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;le&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;50&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
envoy_listener_admin_downstream_cx_length_ms_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;le&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;100&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
envoy_listener_admin_downstream_cx_length_ms_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;le&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;250&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
envoy_listener_admin_downstream_cx_length_ms_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;le&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;500&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
envoy_listener_admin_downstream_cx_length_ms_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;le&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;1000&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
envoy_listener_admin_downstream_cx_length_ms_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;le&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;2500&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
envoy_listener_admin_downstream_cx_length_ms_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;le&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;5000&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
envoy_listener_admin_downstream_cx_length_ms_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;le&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;10000&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
envoy_listener_admin_downstream_cx_length_ms_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;le&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;30000&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
envoy_listener_admin_downstream_cx_length_ms_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;le&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;60000&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
envoy_listener_admin_downstream_cx_length_ms_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;le&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;300000&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
envoy_listener_admin_downstream_cx_length_ms_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;le&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;600000&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
envoy_listener_admin_downstream_cx_length_ms_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;le&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;1800000&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
envoy_listener_admin_downstream_cx_length_ms_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;le&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;3600000&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
envoy_listener_admin_downstream_cx_length_ms_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;le&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;+Inf&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
envoy_listener_admin_downstream_cx_length_ms_sum&lt;span class=&quot;o&quot;&gt;{}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
envoy_listener_admin_downstream_cx_length_ms_count&lt;span class=&quot;o&quot;&gt;{}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_http_downstream_rq_time histogram&lt;/span&gt;
envoy_http_downstream_rq_time_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;admin&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.5&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;
envoy_http_downstream_rq_time_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;admin&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;
envoy_http_downstream_rq_time_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;admin&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;5&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;
envoy_http_downstream_rq_time_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;admin&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;10&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;
envoy_http_downstream_rq_time_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;admin&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;25&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;
envoy_http_downstream_rq_time_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;admin&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;50&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;
envoy_http_downstream_rq_time_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;admin&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;100&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;
envoy_http_downstream_rq_time_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;admin&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;250&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;
envoy_http_downstream_rq_time_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;admin&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;500&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;
envoy_http_downstream_rq_time_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;admin&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;1000&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;
envoy_http_downstream_rq_time_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;admin&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;2500&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;
envoy_http_downstream_rq_time_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;admin&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;5000&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;
envoy_http_downstream_rq_time_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;admin&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;10000&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;
envoy_http_downstream_rq_time_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;admin&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;30000&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;
envoy_http_downstream_rq_time_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;admin&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;60000&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;
envoy_http_downstream_rq_time_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;admin&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;300000&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;
envoy_http_downstream_rq_time_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;admin&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;600000&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;
envoy_http_downstream_rq_time_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;admin&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;1800000&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;
envoy_http_downstream_rq_time_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;admin&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;3600000&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;
envoy_http_downstream_rq_time_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;admin&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;+Inf&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;
envoy_http_downstream_rq_time_sum&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;admin&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
envoy_http_downstream_rq_time_count&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;admin&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_http_downstream_cx_length_ms histogram&lt;/span&gt;
envoy_http_downstream_cx_length_ms_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;admin&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.5&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
envoy_http_downstream_cx_length_ms_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;admin&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
envoy_http_downstream_cx_length_ms_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;admin&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;5&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
envoy_http_downstream_cx_length_ms_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;admin&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;10&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
envoy_http_downstream_cx_length_ms_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;admin&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;25&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
envoy_http_downstream_cx_length_ms_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;admin&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;50&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
envoy_http_downstream_cx_length_ms_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;admin&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;100&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
envoy_http_downstream_cx_length_ms_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;admin&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;250&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
envoy_http_downstream_cx_length_ms_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;admin&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;500&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
envoy_http_downstream_cx_length_ms_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;admin&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;1000&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
envoy_http_downstream_cx_length_ms_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;admin&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;2500&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
envoy_http_downstream_cx_length_ms_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;admin&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;5000&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
envoy_http_downstream_cx_length_ms_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;admin&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;10000&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
envoy_http_downstream_cx_length_ms_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;admin&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;30000&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
envoy_http_downstream_cx_length_ms_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;admin&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;60000&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
envoy_http_downstream_cx_length_ms_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;admin&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;300000&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
envoy_http_downstream_cx_length_ms_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;admin&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;600000&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
envoy_http_downstream_cx_length_ms_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;admin&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;1800000&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
envoy_http_downstream_cx_length_ms_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;admin&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;3600000&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
envoy_http_downstream_cx_length_ms_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;admin&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;+Inf&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
envoy_http_downstream_cx_length_ms_sum&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;admin&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
envoy_http_downstream_cx_length_ms_count&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;admin&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_cluster_upstream_cx_connect_ms histogram&lt;/span&gt;
envoy_cluster_upstream_cx_connect_ms_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.5&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
envoy_cluster_upstream_cx_connect_ms_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
envoy_cluster_upstream_cx_connect_ms_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;5&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
envoy_cluster_upstream_cx_connect_ms_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;10&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
envoy_cluster_upstream_cx_connect_ms_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;25&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
envoy_cluster_upstream_cx_connect_ms_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;50&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
envoy_cluster_upstream_cx_connect_ms_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;100&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
envoy_cluster_upstream_cx_connect_ms_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;250&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
envoy_cluster_upstream_cx_connect_ms_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;500&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
envoy_cluster_upstream_cx_connect_ms_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;1000&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
envoy_cluster_upstream_cx_connect_ms_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;2500&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
envoy_cluster_upstream_cx_connect_ms_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;5000&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
envoy_cluster_upstream_cx_connect_ms_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;10000&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
envoy_cluster_upstream_cx_connect_ms_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;30000&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
envoy_cluster_upstream_cx_connect_ms_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;60000&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
envoy_cluster_upstream_cx_connect_ms_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;300000&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
envoy_cluster_upstream_cx_connect_ms_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;600000&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
envoy_cluster_upstream_cx_connect_ms_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;1800000&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
envoy_cluster_upstream_cx_connect_ms_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;3600000&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
envoy_cluster_upstream_cx_connect_ms_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;+Inf&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
envoy_cluster_upstream_cx_connect_ms_sum&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
envoy_cluster_upstream_cx_connect_ms_count&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_cluster_upstream_cx_length_ms histogram&lt;/span&gt;
envoy_cluster_upstream_cx_length_ms_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.5&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
envoy_cluster_upstream_cx_length_ms_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
envoy_cluster_upstream_cx_length_ms_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;5&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
envoy_cluster_upstream_cx_length_ms_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;10&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
envoy_cluster_upstream_cx_length_ms_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;25&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
envoy_cluster_upstream_cx_length_ms_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;50&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
envoy_cluster_upstream_cx_length_ms_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;100&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
envoy_cluster_upstream_cx_length_ms_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;250&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
envoy_cluster_upstream_cx_length_ms_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;500&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
envoy_cluster_upstream_cx_length_ms_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;1000&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
envoy_cluster_upstream_cx_length_ms_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;2500&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
envoy_cluster_upstream_cx_length_ms_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;5000&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
envoy_cluster_upstream_cx_length_ms_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;10000&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
envoy_cluster_upstream_cx_length_ms_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;30000&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
envoy_cluster_upstream_cx_length_ms_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;60000&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
envoy_cluster_upstream_cx_length_ms_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;300000&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
envoy_cluster_upstream_cx_length_ms_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;600000&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
envoy_cluster_upstream_cx_length_ms_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;1800000&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
envoy_cluster_upstream_cx_length_ms_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;3600000&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
envoy_cluster_upstream_cx_length_ms_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;+Inf&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
envoy_cluster_upstream_cx_length_ms_sum&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;25250&lt;/span&gt;
envoy_cluster_upstream_cx_length_ms_count&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_cluster_external_upstream_rq_time histogram&lt;/span&gt;
envoy_cluster_external_upstream_rq_time_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.5&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;
envoy_cluster_external_upstream_rq_time_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;
envoy_cluster_external_upstream_rq_time_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;5&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;3&lt;/span&gt;
envoy_cluster_external_upstream_rq_time_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;10&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
envoy_cluster_external_upstream_rq_time_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;25&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
envoy_cluster_external_upstream_rq_time_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;50&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
envoy_cluster_external_upstream_rq_time_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;100&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
envoy_cluster_external_upstream_rq_time_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;250&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
envoy_cluster_external_upstream_rq_time_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;500&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
envoy_cluster_external_upstream_rq_time_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;1000&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
envoy_cluster_external_upstream_rq_time_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;2500&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
envoy_cluster_external_upstream_rq_time_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;5000&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
envoy_cluster_external_upstream_rq_time_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;10000&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
envoy_cluster_external_upstream_rq_time_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;30000&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
envoy_cluster_external_upstream_rq_time_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;60000&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
envoy_cluster_external_upstream_rq_time_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;300000&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
envoy_cluster_external_upstream_rq_time_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;600000&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
envoy_cluster_external_upstream_rq_time_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;1800000&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
envoy_cluster_external_upstream_rq_time_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;3600000&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
envoy_cluster_external_upstream_rq_time_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;+Inf&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
envoy_cluster_external_upstream_rq_time_sum&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;17&lt;/span&gt;.200000000000002842170943040401
envoy_cluster_external_upstream_rq_time_count&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_cluster_upstream_rq_time histogram&lt;/span&gt;
envoy_cluster_upstream_rq_time_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.5&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;
envoy_cluster_upstream_rq_time_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;
envoy_cluster_upstream_rq_time_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;5&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;3&lt;/span&gt;
envoy_cluster_upstream_rq_time_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;10&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
envoy_cluster_upstream_rq_time_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;25&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
envoy_cluster_upstream_rq_time_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;50&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
envoy_cluster_upstream_rq_time_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;100&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
envoy_cluster_upstream_rq_time_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;250&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
envoy_cluster_upstream_rq_time_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;500&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
envoy_cluster_upstream_rq_time_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;1000&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
envoy_cluster_upstream_rq_time_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;2500&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
envoy_cluster_upstream_rq_time_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;5000&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
envoy_cluster_upstream_rq_time_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;10000&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
envoy_cluster_upstream_rq_time_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;30000&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
envoy_cluster_upstream_rq_time_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;60000&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
envoy_cluster_upstream_rq_time_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;300000&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
envoy_cluster_upstream_rq_time_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;600000&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
envoy_cluster_upstream_rq_time_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;1800000&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
envoy_cluster_upstream_rq_time_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;3600000&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
envoy_cluster_upstream_rq_time_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;+Inf&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
envoy_cluster_upstream_rq_time_sum&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;17&lt;/span&gt;.200000000000002842170943040401
envoy_cluster_upstream_rq_time_count&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_cluster_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http_service&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# TYPE envoy_listener_downstream_cx_length_ms histogram&lt;/span&gt;
envoy_listener_downstream_cx_length_ms_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_listener_address&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.0.0.0_9988&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.5&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
envoy_listener_downstream_cx_length_ms_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_listener_address&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.0.0.0_9988&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
envoy_listener_downstream_cx_length_ms_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_listener_address&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.0.0.0_9988&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;5&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;3&lt;/span&gt;
envoy_listener_downstream_cx_length_ms_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_listener_address&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.0.0.0_9988&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;10&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;4&lt;/span&gt;
envoy_listener_downstream_cx_length_ms_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_listener_address&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.0.0.0_9988&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;25&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
envoy_listener_downstream_cx_length_ms_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_listener_address&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.0.0.0_9988&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;50&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
envoy_listener_downstream_cx_length_ms_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_listener_address&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.0.0.0_9988&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;100&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
envoy_listener_downstream_cx_length_ms_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_listener_address&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.0.0.0_9988&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;250&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
envoy_listener_downstream_cx_length_ms_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_listener_address&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.0.0.0_9988&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;500&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
envoy_listener_downstream_cx_length_ms_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_listener_address&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.0.0.0_9988&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;1000&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
envoy_listener_downstream_cx_length_ms_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_listener_address&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.0.0.0_9988&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;2500&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
envoy_listener_downstream_cx_length_ms_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_listener_address&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.0.0.0_9988&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;5000&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
envoy_listener_downstream_cx_length_ms_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_listener_address&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.0.0.0_9988&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;10000&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
envoy_listener_downstream_cx_length_ms_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_listener_address&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.0.0.0_9988&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;30000&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
envoy_listener_downstream_cx_length_ms_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_listener_address&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.0.0.0_9988&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;60000&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
envoy_listener_downstream_cx_length_ms_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_listener_address&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.0.0.0_9988&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;300000&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
envoy_listener_downstream_cx_length_ms_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_listener_address&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.0.0.0_9988&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;600000&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
envoy_listener_downstream_cx_length_ms_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_listener_address&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.0.0.0_9988&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;1800000&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
envoy_listener_downstream_cx_length_ms_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_listener_address&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.0.0.0_9988&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;3600000&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
envoy_listener_downstream_cx_length_ms_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_listener_address&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.0.0.0_9988&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;+Inf&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
envoy_listener_downstream_cx_length_ms_sum&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_listener_address&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.0.0.0_9988&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;28&lt;/span&gt;.6999999999999992894572642399
envoy_listener_downstream_cx_length_ms_count&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_listener_address&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.0.0.0_9988&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
envoy_http_downstream_rq_time_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ingress_http&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.5&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
envoy_http_downstream_rq_time_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ingress_http&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
envoy_http_downstream_rq_time_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ingress_http&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;5&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;3&lt;/span&gt;
envoy_http_downstream_rq_time_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ingress_http&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;10&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
envoy_http_downstream_rq_time_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ingress_http&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;25&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
envoy_http_downstream_rq_time_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ingress_http&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;50&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
envoy_http_downstream_rq_time_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ingress_http&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;100&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
envoy_http_downstream_rq_time_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ingress_http&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;250&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
envoy_http_downstream_rq_time_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ingress_http&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;500&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
envoy_http_downstream_rq_time_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ingress_http&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;1000&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
envoy_http_downstream_rq_time_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ingress_http&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;2500&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
envoy_http_downstream_rq_time_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ingress_http&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;5000&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
envoy_http_downstream_rq_time_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ingress_http&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;10000&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
envoy_http_downstream_rq_time_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ingress_http&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;30000&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
envoy_http_downstream_rq_time_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ingress_http&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;60000&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
envoy_http_downstream_rq_time_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ingress_http&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;300000&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
envoy_http_downstream_rq_time_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ingress_http&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;600000&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
envoy_http_downstream_rq_time_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ingress_http&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;1800000&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
envoy_http_downstream_rq_time_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ingress_http&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;3600000&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
envoy_http_downstream_rq_time_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ingress_http&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;+Inf&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
envoy_http_downstream_rq_time_sum&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ingress_http&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;19&lt;/span&gt;.25
envoy_http_downstream_rq_time_count&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ingress_http&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
envoy_http_downstream_cx_length_ms_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ingress_http&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.5&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
envoy_http_downstream_cx_length_ms_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ingress_http&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
envoy_http_downstream_cx_length_ms_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ingress_http&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;5&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;3&lt;/span&gt;
envoy_http_downstream_cx_length_ms_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ingress_http&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;10&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;4&lt;/span&gt;
envoy_http_downstream_cx_length_ms_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ingress_http&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;25&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
envoy_http_downstream_cx_length_ms_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ingress_http&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;50&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
envoy_http_downstream_cx_length_ms_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ingress_http&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;100&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
envoy_http_downstream_cx_length_ms_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ingress_http&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;250&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
envoy_http_downstream_cx_length_ms_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ingress_http&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;500&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
envoy_http_downstream_cx_length_ms_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ingress_http&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;1000&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
envoy_http_downstream_cx_length_ms_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ingress_http&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;2500&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
envoy_http_downstream_cx_length_ms_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ingress_http&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;5000&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
envoy_http_downstream_cx_length_ms_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ingress_http&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;10000&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
envoy_http_downstream_cx_length_ms_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ingress_http&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;30000&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
envoy_http_downstream_cx_length_ms_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ingress_http&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;60000&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
envoy_http_downstream_cx_length_ms_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ingress_http&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;300000&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
envoy_http_downstream_cx_length_ms_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ingress_http&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;600000&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
envoy_http_downstream_cx_length_ms_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ingress_http&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;1800000&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
envoy_http_downstream_cx_length_ms_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ingress_http&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;3600000&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
envoy_http_downstream_cx_length_ms_bucket&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ingress_http&amp;quot;&lt;/span&gt;,le&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;+Inf&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
envoy_http_downstream_cx_length_ms_sum&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ingress_http&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;28&lt;/span&gt;.6999999999999992894572642399
envoy_http_downstream_cx_length_ms_count&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;envoy_http_conn_manager_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ingress_http&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;blockquote&gt;
  &lt;p&gt;EOF&lt;/p&gt;
&lt;/blockquote&gt;
</description>
				<pubDate>Wed, 08 May 2019 10:01:22 +0800</pubDate>
				<link>https://xenojoshua.com/2019/05/envoy-note/</link>
				<guid isPermaLink="true">https://xenojoshua.com/2019/05/envoy-note/</guid>
			</item>
		
			<item>
				<title>gRPC Notes</title>
				<description>&lt;h4&gt;Table of Contents&lt;/h4&gt;
&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#1-前言&quot; id=&quot;markdown-toc-1-前言&quot;&gt;1. 前言&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#2-基本资料及网络问题&quot; id=&quot;markdown-toc-2-基本资料及网络问题&quot;&gt;2. 基本资料及网络问题&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#21-go-support-for-protocol-buffers&quot; id=&quot;markdown-toc-21-go-support-for-protocol-buffers&quot;&gt;2.1 Go support for Protocol Buffers&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#22-grpc-basics-go&quot; id=&quot;markdown-toc-22-grpc-basics-go&quot;&gt;2.2 gRPC Basics: Go&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#23-grpc-enhanced-example&quot; id=&quot;markdown-toc-23-grpc-enhanced-example&quot;&gt;2.3 gRPC enhanced example&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#24-网络问题&quot; id=&quot;markdown-toc-24-网络问题&quot;&gt;2.4 网络问题&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#3-并发编程&quot; id=&quot;markdown-toc-3-并发编程&quot;&gt;3. 并发编程&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#31-go语言的grpc并发&quot; id=&quot;markdown-toc-31-go语言的grpc并发&quot;&gt;3.1 Go语言的gRPC并发&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#ID_CONCURRENCY_DOC&quot; id=&quot;markdown-toc-ID_CONCURRENCY_DOC&quot;&gt;3.2 并发相关官方文档&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#concurrency&quot; id=&quot;markdown-toc-concurrency&quot;&gt;Concurrency&lt;/a&gt;            &lt;ul&gt;
              &lt;li&gt;&lt;a href=&quot;#clients&quot; id=&quot;markdown-toc-clients&quot;&gt;Clients&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href=&quot;#streams&quot; id=&quot;markdown-toc-streams&quot;&gt;Streams&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href=&quot;#servers&quot; id=&quot;markdown-toc-servers&quot;&gt;Servers&lt;/a&gt;&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#33-并发范例&quot; id=&quot;markdown-toc-33-并发范例&quot;&gt;3.3 并发范例&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#331-代码差异&quot; id=&quot;markdown-toc-331-代码差异&quot;&gt;3.3.1 代码差异&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#332-顺序执行&quot; id=&quot;markdown-toc-332-顺序执行&quot;&gt;3.3.2 顺序执行&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#333-并发执行&quot; id=&quot;markdown-toc-333-并发执行&quot;&gt;3.3.3 并发执行&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#34-连接池&quot; id=&quot;markdown-toc-34-连接池&quot;&gt;3.4 连接池&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#35-benchmark&quot; id=&quot;markdown-toc-35-benchmark&quot;&gt;3.5 Benchmark&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#测试硬件&quot; id=&quot;markdown-toc-测试硬件&quot;&gt;测试硬件&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#客户端及服务器启动命令&quot; id=&quot;markdown-toc-客户端及服务器启动命令&quot;&gt;客户端及服务器启动命令&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#测试结果&quot; id=&quot;markdown-toc-测试结果&quot;&gt;测试结果&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#结论&quot; id=&quot;markdown-toc-结论&quot;&gt;结论&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#4-负载均衡&quot; id=&quot;markdown-toc-4-负载均衡&quot;&gt;4. 负载均衡&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#5-状态检查&quot; id=&quot;markdown-toc-5-状态检查&quot;&gt;5. 状态检查&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#6-interceptor&quot; id=&quot;markdown-toc-6-interceptor&quot;&gt;6. Interceptor&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#7-debug&quot; id=&quot;markdown-toc-7-debug&quot;&gt;7. Debug&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#8-监控&quot; id=&quot;markdown-toc-8-监控&quot;&gt;8. 监控&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#资料&quot; id=&quot;markdown-toc-资料&quot;&gt;资料&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#链接&quot; id=&quot;markdown-toc-链接&quot;&gt;链接&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;1-前言&quot;&gt;1. 前言&lt;/h1&gt;
&lt;p&gt;首先需要申明本文并不是通泛的对gRPC的讲解，而是以Golang为基础的一篇gRPC偏应用方向的博文。因此后面的所有技术点和使用范例都会以Go语言为基础。此外，本文中对gRPC偏基础方面的内容不会涉猎过多，而是更多讲解gRPC偏设计方向的技术点。&lt;/p&gt;

&lt;h1 id=&quot;2-基本资料及网络问题&quot;&gt;2. 基本资料及网络问题&lt;/h1&gt;
&lt;h2 id=&quot;21-go-support-for-protocol-buffers&quot;&gt;2.1 Go support for Protocol Buffers&lt;/h2&gt;
&lt;p&gt;关于使用Go语言的情况下的一系列protobuf相关技术点，可以参阅：&lt;a href=&quot;https://github.com/golang/protobuf&quot; target=&quot;_blank&quot;&gt;golang/protobuf&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;主要需要关注的点有几个：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;安装：除了标准的protobuf（protoc）之外，还需要安装go的插件：&lt;code&gt;protoc-gen-go&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;插件：protoc如果要使用go的插件，且需要生成service相关代码的话，需要在&lt;code&gt;go_out&lt;/code&gt;中附带上&lt;code&gt;plugins=grpc:&lt;/code&gt;字符串，e.g：&lt;code&gt;--go_out=plugins=grpc:${OUTPUT_PATH}&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;包管理：protobuf的包定义和go语言的习惯用法有不少差异，使用前建议阅读：&lt;a href=&quot;https://github.com/golang/protobuf#packages-and-input-paths&quot; target=&quot;_blank&quot;&gt;Packages and input paths&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;默认的包名不会转换成相对文件夹，e.g：&lt;code&gt;package com.book&lt;/code&gt;会生成&lt;code&gt;com_book&lt;/code&gt;文件夹，而不是&lt;code&gt;com/book&lt;/code&gt;这样的嵌套文件夹&lt;/li&gt;
      &lt;li&gt;go的包路径可以使用：&lt;code&gt;option go_package = ...&lt;/code&gt;来设定&lt;/li&gt;
      &lt;li&gt;在某些全局编译的情况下，可以：&lt;code&gt;--go_out=$GOPATH&lt;/code&gt;，直接输出到GOPATH&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;生成出来的代码相关规范：&lt;a href=&quot;https://github.com/golang/protobuf#generated-code&quot; target=&quot;_blank&quot;&gt;Generated code&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;protoc插件的额外参数：&lt;a href=&quot;https://github.com/golang/protobuf#parameters&quot; target=&quot;_blank&quot;&gt;Parameters&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;22-grpc-basics-go&quot;&gt;2.2 gRPC Basics: Go&lt;/h2&gt;
&lt;p&gt;初次使用Go语言来编写gRPC代码，请阅读文档：&lt;a href=&quot;https://github.com/grpc/grpc-go/blob/master/examples/gotutorial.md&quot; target=&quot;_blank&quot;&gt;grpc-go/examples/gotutorial.md&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;对于gRPC非常熟悉的程序员可以跳过这个文档，基本上这个文档是面向新手的指引，但是范例代码都使用的是Go语言。&lt;/p&gt;

&lt;h2 id=&quot;23-grpc-enhanced-example&quot;&gt;2.3 gRPC enhanced example&lt;/h2&gt;
&lt;p&gt;进阶的Go语言gRPC代码可以阅读范例：&lt;a href=&quot;https://github.com/grpc/grpc-go/tree/master/examples/route_guide&quot; target=&quot;_blank&quot;&gt;grpc-go/examples/route_guide/&lt;/a&gt;。这个范例代码里加入了单向和双向流的范例，算是比较进阶和完整的范例代码了。&lt;/p&gt;

&lt;p&gt;我的实验项目中也有比较完整的应用范例代码，相对官方的范例来说少了点不伦不类的业务逻辑，对于只需要了解技术的读者来说更友好：&lt;a href=&quot;https://github.com/agreatfool/dist-system-practice/tree/master/golang/src/experiment/grpc/samples/book&quot; target=&quot;_blank&quot;&gt;dist-system-practice/golang/src/experiment/grpc/samples/book/&lt;/a&gt;。&lt;/p&gt;

&lt;h2 id=&quot;24-网络问题&quot;&gt;2.4 网络问题&lt;/h2&gt;
&lt;p&gt;因国情原因，Go的包安装会遇到一些网络问题：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/grpc/grpc-go/issues/1959&quot; target=&quot;_blank&quot;&gt;go get not working unrecognized import path “google.golang.org/grpc” #1959&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/grpc/grpc-go/issues/1780&quot; target=&quot;_blank&quot;&gt;go get -u google.golang.org/grpc i/o timeout #1780&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;这种情况的最佳对应方法是在命令行下设置HTTP和HTTPS代理：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;http_proxy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;http://127.0.0.1:6152
&lt;span class=&quot;nb&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;https_proxy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;http://127.0.0.1:6152
go get -u ...&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h1 id=&quot;3-并发编程&quot;&gt;3. 并发编程&lt;/h1&gt;
&lt;h2 id=&quot;31-go语言的grpc并发&quot;&gt;3.1 Go语言的gRPC并发&lt;/h2&gt;
&lt;p&gt;关于在Go语言中使用gRPC的并发问题在官方的issues中已经有很多了：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/grpc/grpc-go/issues/682&quot; target=&quot;_blank&quot;&gt;Best practices for reusing connections, concurrency #682&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/grpc/grpc-go/issues/85&quot; target=&quot;_blank&quot;&gt;Concurrency #85&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/grpc/grpc-go/issues/1345&quot; target=&quot;_blank&quot;&gt;Add section on concurrency to documentation #1345&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;上述的三个issues都可以仔细阅读下，提出的问题都非常有代表性。从一系列的问题中可以看出，官方对于gRPC的并发其实是有一些指导意见的，但并没有很好的文档化（至少之前如此）。而目前对这些问题已经有部分解答了，请继续阅读下去。&lt;/p&gt;

&lt;h2 id=&quot;ID_CONCURRENCY_DOC&quot;&gt;3.2 并发相关官方文档&lt;/h2&gt;
&lt;p&gt;在&lt;a href=&quot;https://github.com/grpc/grpc-go/pull/2034/files&quot; target=&quot;_blank&quot;&gt;这个提交&lt;/a&gt;中，官方添加了对于并发相关的官方指引。正式的文档地址是在：&lt;a href=&quot;https://github.com/grpc/grpc-go/blob/master/Documentation/concurrency.md&quot; target=&quot;_blank&quot;&gt;grpc-go/Documentation/concurrency.md&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;这里做下简单翻译：&lt;/p&gt;

&lt;h3 id=&quot;concurrency&quot;&gt;Concurrency&lt;/h3&gt;
&lt;p&gt;一般来说，gRPC-go提供了对并发友好的API。下文是一些指引。&lt;/p&gt;

&lt;h4 id=&quot;clients&quot;&gt;Clients&lt;/h4&gt;
&lt;p&gt;一个&lt;a href=&quot;https://godoc.org/google.golang.org/grpc#ClientConn&quot; target=&quot;_blank&quot;&gt;ClientConn&lt;/a&gt;可以被安全地并发访问。以&lt;a href=&quot;https://github.com/grpc/grpc-go/blob/master/examples/helloworld/greeter_client/main.go#L43&quot; target=&quot;_blank&quot;&gt;helloworld&lt;/a&gt;作为范例，程序员可以在多个goroutine之间共享一个ClientConn来创建多个GreeterClient客户端类型。在这种使用情况下，RPCs会并行传输。&lt;/p&gt;

&lt;h4 id=&quot;streams&quot;&gt;Streams&lt;/h4&gt;
&lt;p&gt;当使用&lt;a href=&quot;https://godoc.org/google.golang.org/grpc#Stream&quot; target=&quot;_blank&quot;&gt;Stream&lt;/a&gt;的时候，程序员必须小心避免从不同的goroutine向同一个stream发送多次&lt;code&gt;SendMsg&lt;/code&gt;或&lt;code&gt;RecvMsg&lt;/code&gt;请求。换句话来说，如果有一个goroutine向stream中发送SendMsg，然后在同一时间有另一个goroutine向stream中发送RecvMsg，这样做是安全的。但在不同的goroutine中同时向同一个stream发送SendMsg，或是RecvMsg则是不安全的。&lt;/p&gt;

&lt;h4 id=&quot;servers&quot;&gt;Servers&lt;/h4&gt;
&lt;p&gt;每个被附到已注册服务器上的RPC处理器都会在其自身的goroutine中运作。举例来说，&lt;a href=&quot;https://github.com/grpc/grpc-go/blob/master/examples/helloworld/greeter_server/main.go#L41&quot; target=&quot;_blank&quot;&gt;SayHello&lt;/a&gt;会在其自身的goroutine中被调用到。同样的，streaming RPC也是一样，route guide例子可以在&lt;a href=&quot;https://github.com/grpc/grpc-go/blob/master/examples/route_guide/server/server.go#L126&quot; target=&quot;_blank&quot;&gt;这里&lt;/a&gt;看得到。&lt;/p&gt;

&lt;h2 id=&quot;33-并发范例&quot;&gt;3.3 并发范例&lt;/h2&gt;
&lt;p&gt;我在实验项目中做了点并发的范例，可以看下：&lt;a href=&quot;https://github.com/agreatfool/dist-system-practice/tree/master/golang/src/experiment/grpc/samples/concurrency&quot; target=&quot;_blank&quot;&gt;dist-system-practice/golang/src/experiment/grpc/samples/concurrency/&lt;/a&gt;。&lt;/p&gt;

&lt;h3 id=&quot;331-代码差异&quot;&gt;3.3.1 代码差异&lt;/h3&gt;
&lt;p&gt;服务端代码是一致的，根据&lt;a href=&quot;#ID_CONCURRENCY_DOC&quot;&gt;3.2 并发相关官方文档&lt;/a&gt;，服务端的所有请求都是自然并发的，无需代码特殊处理。但客户端则需要自行编码处理。&lt;/p&gt;

&lt;p&gt;顺序执行：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-go&quot; data-lang=&quot;go&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;start&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Now&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Echo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;EchoRequest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int64&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)});&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;nil&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Fatalf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;[Client] singleConnSequence: err: %v&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Now&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;elapsed&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Sub&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;[Client] singleConnSequence: response: %v, consumed: %v&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;elapsed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;并发执行：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-go&quot; data-lang=&quot;go&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;waitgroup&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sync&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;WaitGroup&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;waitgroup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;go&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;start&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Now&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Echo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;EchoRequest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int64&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)});&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;nil&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Fatalf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;[Client] singleConnConcurrency: err: %v&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Now&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;elapsed&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Sub&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;[Client] singleConnConcurrency: response: %v, consumed: %v&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;elapsed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;waitgroup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Done&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;waitgroup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Wait&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;332-顺序执行&quot;&gt;3.3.2 顺序执行&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;# 启动服务器
DELAY_NO_5=true go run server.go

# 启动客户端，发送请求
MODE=CONN_ONE_SEQUENCE go run client.go
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;# 客户端输出
2019/05/03 13:58:23 [Client] singleConnSequence: response: id:1 , consumed: 4.284231ms
2019/05/03 13:58:23 [Client] singleConnSequence: response: id:2 , consumed: 381.818µs
2019/05/03 13:58:23 [Client] singleConnSequence: response: id:3 , consumed: 361.608µs
2019/05/03 13:58:23 [Client] singleConnSequence: response: id:4 , consumed: 332.662µs
2019/05/03 13:58:24 [Client] singleConnSequence: response: id:5 , consumed: 1.004485058s
2019/05/03 13:58:24 [Client] singleConnSequence: response: id:6 , consumed: 470.532µs
2019/05/03 13:58:24 [Client] singleConnSequence: response: id:7 , consumed: 468.148µs
2019/05/03 13:58:24 [Client] singleConnSequence: response: id:8 , consumed: 389.214µs
2019/05/03 13:58:24 [Client] singleConnSequence: response: id:9 , consumed: 418.01µs
2019/05/03 13:58:25 [Client] singleConnSequence: response: id:10 , consumed: 1.003602442s

# 服务器输出
2019/05/03 13:58:23 [Server] Echo: request: id:1
2019/05/03 13:58:23 [Server] Echo: response: id:1
2019/05/03 13:58:23 [Server] Echo: request: id:2
2019/05/03 13:58:23 [Server] Echo: response: id:2
2019/05/03 13:58:23 [Server] Echo: request: id:3
2019/05/03 13:58:23 [Server] Echo: response: id:3
2019/05/03 13:58:23 [Server] Echo: request: id:4
2019/05/03 13:58:23 [Server] Echo: response: id:4
2019/05/03 13:58:23 [Server] Echo: request: id:5
2019/05/03 13:58:24 [Server] Echo: response: id:5
2019/05/03 13:58:24 [Server] Echo: request: id:6
2019/05/03 13:58:24 [Server] Echo: response: id:6
2019/05/03 13:58:24 [Server] Echo: request: id:7
2019/05/03 13:58:24 [Server] Echo: response: id:7
2019/05/03 13:58:24 [Server] Echo: request: id:8
2019/05/03 13:58:24 [Server] Echo: response: id:8
2019/05/03 13:58:24 [Server] Echo: request: id:9
2019/05/03 13:58:24 [Server] Echo: response: id:9
2019/05/03 13:58:24 [Server] Echo: request: id:10
2019/05/03 13:58:25 [Server] Echo: response: id:10
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;333-并发执行&quot;&gt;3.3.3 并发执行&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;# 启动服务器
DELAY_NO_5=true go run server.go

# 启动客户端，发送请求
MODE=CONN_ONE_CONCURRENCY go run client.go
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;# 客户端输出
2019/05/03 13:54:41 [Client] singleConnConcurrency: response: id:9 , consumed: 5.651184ms
2019/05/03 13:54:41 [Client] singleConnConcurrency: response: id:6 , consumed: 5.595945ms
2019/05/03 13:54:41 [Client] singleConnConcurrency: response: id:2 , consumed: 5.693124ms
2019/05/03 13:54:41 [Client] singleConnConcurrency: response: id:4 , consumed: 5.637734ms
2019/05/03 13:54:41 [Client] singleConnConcurrency: response: id:1 , consumed: 5.592096ms
2019/05/03 13:54:41 [Client] singleConnConcurrency: response: id:3 , consumed: 5.58596ms
2019/05/03 13:54:41 [Client] singleConnConcurrency: response: id:7 , consumed: 5.652258ms
2019/05/03 13:54:41 [Client] singleConnConcurrency: response: id:8 , consumed: 5.658945ms
2019/05/03 13:54:42 [Client] singleConnConcurrency: response: id:10 , consumed: 1.008472004s
2019/05/03 13:54:42 [Client] singleConnConcurrency: response: id:5 , consumed: 1.008440948s

# 服务器输出
2019/05/03 13:54:41 [Server] Echo: request: id:3
2019/05/03 13:54:41 [Server] Echo: response: id:3
2019/05/03 13:54:41 [Server] Echo: request: id:1
2019/05/03 13:54:41 [Server] Echo: response: id:1
2019/05/03 13:54:41 [Server] Echo: request: id:6
2019/05/03 13:54:41 [Server] Echo: response: id:6
2019/05/03 13:54:41 [Server] Echo: request: id:10
2019/05/03 13:54:41 [Server] Echo: request: id:8
2019/05/03 13:54:41 [Server] Echo: response: id:8
2019/05/03 13:54:41 [Server] Echo: request: id:9
2019/05/03 13:54:41 [Server] Echo: response: id:9
2019/05/03 13:54:41 [Server] Echo: request: id:5
2019/05/03 13:54:41 [Server] Echo: request: id:2
2019/05/03 13:54:41 [Server] Echo: response: id:2
2019/05/03 13:54:41 [Server] Echo: request: id:4
2019/05/03 13:54:41 [Server] Echo: response: id:4
2019/05/03 13:54:41 [Server] Echo: request: id:7
2019/05/03 13:54:41 [Server] Echo: response: id:7
2019/05/03 13:54:42 [Server] Echo: response: id:10
2019/05/03 13:54:42 [Server] Echo: response: id:5
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;服务端对ID逢5的请求sleep 1秒进行反馈，因此并发的客户端请求中，5和10就是最后返回打印出来的，耗时也是1秒多。&lt;/p&gt;

&lt;h2 id=&quot;34-连接池&quot;&gt;3.4 连接池&lt;/h2&gt;
&lt;p&gt;虽然单连接也是可以进行并发编程的，但在某些极端情况下，数据包可能达到网络吞吐的极限。众所周知Go语言天生对并发编程友好，因此CPU的利用必然是非常充分的，如果RPC服务的类型是低CPU消耗而高网络消耗的情况就有可能出现之前提到的问题。这种情况就需要创建多个连接了。&lt;/p&gt;

&lt;p&gt;在多连接管理方面，官方的类库并没有连接池的功能，第三方倒是有：&lt;a href=&quot;https://github.com/processout/grpc-go-pool/blob/master/pool_test.go&quot; target=&quot;_blank&quot;&gt;grpc-go-pool/pool_test.go&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;此外，可以拓展阅读：&lt;a href=&quot;https://mycodesmells.com/post/pooling-grpc-connections&quot; target=&quot;_blank&quot;&gt;Pooling gRPC Connections&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;范例可以看：&lt;a href=&quot;https://github.com/agreatfool/dist-system-practice/tree/master/golang/src/experiment/grpc/samples/pool&quot; target=&quot;_blank&quot;&gt;dist-system-practice/golang/src/experiment/grpc/samples/pool/&lt;/a&gt;。&lt;/p&gt;

&lt;h2 id=&quot;35-benchmark&quot;&gt;3.5 Benchmark&lt;/h2&gt;
&lt;p&gt;范例代码在：&lt;a href=&quot;https://github.com/agreatfool/dist-system-practice/tree/master/golang/src/experiment/grpc/samples/throughput&quot; target=&quot;_blank&quot;&gt;dist-system-practice/golang/src/experiment/grpc/samples/throughput/&lt;/a&gt;。&lt;/p&gt;

&lt;h3 id=&quot;测试硬件&quot;&gt;测试硬件&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;rMBP 2014 mid
CPU：2.5GHz 四核 Intel Core i7 处理器 (Turbo Boost 3.7GHz)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;测试的时候一些在系统使用中的软件我并没有清空，因此可能有稍许干扰，但总体问题不大。&lt;/p&gt;

&lt;h3 id=&quot;客户端及服务器启动命令&quot;&gt;客户端及服务器启动命令&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;CORE_NUM=3 go run server.go
CORE_NUM=4 ROUTINES_PER_CORE=50 go run client.go
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;使用&lt;code&gt;CORE_NUM&lt;/code&gt;来控制使用到的物理核心数量，客户端使用&lt;code&gt;ROUTINES_PER_CORE&lt;/code&gt;来决定启动的routine总量：&lt;code&gt;CORE_NUM * ROUTINES_PER_CORE&lt;/code&gt;。&lt;/p&gt;

&lt;h3 id=&quot;测试结果&quot;&gt;测试结果&lt;/h3&gt;
&lt;p&gt;请求数量/s：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;2019/05/04 14:19:33 [Client] 73065 requests in 1s
2019/05/04 14:19:34 [Client] 68826 requests in 1s
2019/05/04 14:19:35 [Client] 73655 requests in 1s
2019/05/04 14:19:36 [Client] 70973 requests in 1s
2019/05/04 14:19:37 [Client] 73645 requests in 1s
2019/05/04 14:19:38 [Client] 70616 requests in 1s
2019/05/04 14:19:39 [Client] 72252 requests in 1s
2019/05/04 14:19:40 [Client] 69342 requests in 1s
2019/05/04 14:19:41 [Client] 69745 requests in 1s
2019/05/04 14:19:42 [Client] 62251 requests in 1s
2019/05/04 14:19:43 [Client] 58043 requests in 1s
2019/05/04 14:19:44 [Client] 69316 requests in 1s
2019/05/04 14:19:45 [Client] 69796 requests in 1s
2019/05/04 14:19:46 [Client] 57246 requests in 1s
2019/05/04 14:19:47 [Client] 72265 requests in 1s
2019/05/04 14:19:48 [Client] 72940 requests in 1s
2019/05/04 14:19:49 [Client] 70237 requests in 1s
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;CPU：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/resources/2019/05/grpc-note/cpu.jpg&quot; alt=&quot;&quot; target=&quot;_blank&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Network：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/resources/2019/05/grpc-note/network-low.jpg&quot; alt=&quot;&quot; target=&quot;_blank&quot; /&gt;
&lt;img src=&quot;/resources/2019/05/grpc-note/network-high.jpg&quot; alt=&quot;&quot; target=&quot;_blank&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;结论&quot;&gt;结论&lt;/h3&gt;
&lt;p&gt;因硬件环境的限制，没有使用通过网卡的测试方案，而是使用了127.0.0.1的环回请求方案。此外，测试期间MAC上的一些软件进程也并没有进行清理，因此可能有部分干扰。结论就不做了，这样简单且限制资源的benchmark实际意义不大，列几点可以观测到的状态：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;请求数量/s&lt;/code&gt;符合预期&lt;/li&gt;
  &lt;li&gt;CPU占用基本满&lt;/li&gt;
  &lt;li&gt;提升核心使用数量，提升routine数量，能观察到rps提升&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;4-负载均衡&quot;&gt;4. 负载均衡&lt;/h1&gt;
&lt;p&gt;官方有一篇关于负载均衡设计的文档，可以读下：&lt;a href=&quot;https://github.com/grpc/grpc/blob/master/doc/load-balancing.md&quot; target=&quot;_blank&quot;&gt;Load Balancing in gRPC&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;意义不大，可以了解一些简单的负载均衡概念，以及一些设计上的思路。&lt;/p&gt;

&lt;h1 id=&quot;5-状态检查&quot;&gt;5. 状态检查&lt;/h1&gt;
&lt;p&gt;官方对于如何设计及暴露服务端状态检查接口的一份文档：&lt;a href=&quot;https://github.com/grpc/grpc/blob/master/doc/health-checking.md&quot; target=&quot;_blank&quot;&gt;GRPC Health Checking Protocol&lt;/a&gt;。可以说是一份guideline。同样意义不大。&lt;/p&gt;

&lt;h1 id=&quot;6-interceptor&quot;&gt;6. Interceptor&lt;/h1&gt;
&lt;p&gt;所谓的interceptor，写过gin或者koa的可以直接理解为gRPC里的&lt;code&gt;middleware&lt;/code&gt;。官方文档：&lt;a href=&quot;https://github.com/grpc/grpc-go/tree/master/examples/features/interceptor&quot; target=&quot;_blank&quot;&gt;Interceptor&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;虽然gRPC本身的rpc调用分为多种不同的可能：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;请求响应皆为unary&lt;/li&gt;
  &lt;li&gt;请求unary响应stream&lt;/li&gt;
  &lt;li&gt;请求stream响应unary&lt;/li&gt;
  &lt;li&gt;请求响应皆为stream&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;但interceptor的签名则只有&lt;code&gt;unary&lt;/code&gt;和&lt;code&gt;stream&lt;/code&gt;这两种。&lt;/p&gt;

&lt;p&gt;范例代码可以查看官方的：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/grpc/grpc-go/blob/master/examples/features/interceptor/client/main.go&quot; target=&quot;_blank&quot;&gt;client/main.go&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/grpc/grpc-go/blob/master/examples/features/interceptor/server/main.go&quot; target=&quot;_blank&quot;&gt;server/main.go&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;在使用中可能会遇到多个Interceptor同时存在的情况，在编码的时候就需要使用工具对其进行组合：&lt;a href=&quot;https://github.com/grpc-ecosystem/go-grpc-middleware/blob/master/chain.go&quot; target=&quot;_blank&quot;&gt;go-grpc-middleware/chain.go&lt;/a&gt;：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-go&quot; data-lang=&quot;go&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;grpc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;NewServer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;grpc_middleware&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;WithUnaryServerChain&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
		&lt;span class=&quot;nx&quot;&gt;grpc_opentracing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;UnaryServerInterceptor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt;
		&lt;span class=&quot;nx&quot;&gt;grpc_prometheus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;UnaryServerInterceptor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;grpc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;StreamInterceptor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;grpc_prometheus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;StreamServerInterceptor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h1 id=&quot;7-debug&quot;&gt;7. Debug&lt;/h1&gt;
&lt;p&gt;官方的指引：&lt;a href=&quot;https://github.com/grpc/grpc-go/tree/master/examples/features/debugging&quot; target=&quot;_blank&quot;&gt;Debugging&lt;/a&gt;，包括了一份范例代码：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/grpc/grpc-go/blob/master/examples/features/debugging/client/main.go&quot; target=&quot;_blank&quot;&gt;client/main.go&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/grpc/grpc-go/blob/master/examples/features/debugging/server/main.go&quot; target=&quot;_blank&quot;&gt;server/main.go&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;也可以使用go的trace包，做简单的观察：&lt;a href=&quot;https://segmentfault.com/a/1190000008087436&quot; target=&quot;_blank&quot;&gt;Golang gRPC实践 连载六 内置Trace&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;几个环境变量可以大量输出程序执行的细节：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;GODEBUG=http2debug=1 \
GODEBUG=http2debug=2 \
GRPC_GO_LOG_VERBOSITY_LEVEL=99 \
GRPC_GO_LOG_SEVERITY_LEVEL=info \
yourapp
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&quot;8-监控&quot;&gt;8. 监控&lt;/h1&gt;
&lt;p&gt;Grpc go自身也有监控用的Interceptor：&lt;a href=&quot;https://github.com/grpc-ecosystem/go-grpc-prometheus&quot; target=&quot;_blank&quot;&gt;grpc-ecosystem/go-grpc-prometheus&lt;/a&gt;，和HTTP服务器无关，主要是grpc自身的指标。&lt;/p&gt;

&lt;p&gt;范例代码可以参见README中的说明，服务端和客户端代码都有提供。&lt;/p&gt;

&lt;h1 id=&quot;资料&quot;&gt;资料&lt;/h1&gt;
&lt;h2 id=&quot;链接&quot;&gt;链接&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/processout/grpc-go-pool/blob/master/pool_test.go&quot; target=&quot;_blank&quot;&gt;grpc-go-pool/pool_test.go&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://mycodesmells.com/post/pooling-grpc-connections&quot; target=&quot;_blank&quot;&gt;Pooling gRPC Connections&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;EOF&lt;/p&gt;
&lt;/blockquote&gt;
</description>
				<pubDate>Mon, 06 May 2019 10:01:22 +0800</pubDate>
				<link>https://xenojoshua.com/2019/05/grpc-note/</link>
				<guid isPermaLink="true">https://xenojoshua.com/2019/05/grpc-note/</guid>
			</item>
		
			<item>
				<title>Kafka Notes</title>
				<description>&lt;h4&gt;Table of Contents&lt;/h4&gt;
&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#1-前言&quot; id=&quot;markdown-toc-1-前言&quot;&gt;1. 前言&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#2-消息队列&quot; id=&quot;markdown-toc-2-消息队列&quot;&gt;2. 消息队列&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#3-消息队列选型比较&quot; id=&quot;markdown-toc-3-消息队列选型比较&quot;&gt;3. 消息队列选型比较&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#31-apache-pulsar&quot; id=&quot;markdown-toc-31-apache-pulsar&quot;&gt;3.1 Apache Pulsar&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#4-kafka架构&quot; id=&quot;markdown-toc-4-kafka架构&quot;&gt;4. Kafka架构&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#41-概念&quot; id=&quot;markdown-toc-41-概念&quot;&gt;4.1 概念&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#ID_CLUSTER&quot; id=&quot;markdown-toc-ID_CLUSTER&quot;&gt;4.2 集群&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#43-分布式痛点offset&quot; id=&quot;markdown-toc-43-分布式痛点offset&quot;&gt;4.3 分布式痛点（offset）&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#44-临时消费压力应急&quot; id=&quot;markdown-toc-44-临时消费压力应急&quot;&gt;4.4 临时消费压力应急&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#5-kafka监控--高可用&quot; id=&quot;markdown-toc-5-kafka监控--高可用&quot;&gt;5. Kafka监控 &amp;amp; 高可用&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#51-监控&quot; id=&quot;markdown-toc-51-监控&quot;&gt;5.1 监控&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#511-exporter--grafana-dashboard&quot; id=&quot;markdown-toc-511-exporter--grafana-dashboard&quot;&gt;5.1.1 Exporter &amp;amp; Grafana Dashboard&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#512-docker实践&quot; id=&quot;markdown-toc-512-docker实践&quot;&gt;5.1.2 Docker实践&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#52-高可用&quot; id=&quot;markdown-toc-52-高可用&quot;&gt;5.2 高可用&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#6-kafka-benchmark&quot; id=&quot;markdown-toc-6-kafka-benchmark&quot;&gt;6. Kafka Benchmark&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#61-测试环境&quot; id=&quot;markdown-toc-61-测试环境&quot;&gt;6.1 测试环境&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#62-不同场景测试&quot; id=&quot;markdown-toc-62-不同场景测试&quot;&gt;6.2 不同场景测试&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#621-场景1&quot; id=&quot;markdown-toc-621-场景1&quot;&gt;6.2.1 场景1&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#622-场景2&quot; id=&quot;markdown-toc-622-场景2&quot;&gt;6.2.2 场景2&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#623-场景3&quot; id=&quot;markdown-toc-623-场景3&quot;&gt;6.2.3 场景3&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#ID_BENCHMARK_SCEN4&quot; id=&quot;markdown-toc-ID_BENCHMARK_SCEN4&quot;&gt;6.2.4 场景4&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#625-场景5&quot; id=&quot;markdown-toc-625-场景5&quot;&gt;6.2.5 场景5&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#626-场景6&quot; id=&quot;markdown-toc-626-场景6&quot;&gt;6.2.6 场景6&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#63-各场景测试总结&quot; id=&quot;markdown-toc-63-各场景测试总结&quot;&gt;6.3 各场景测试总结&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#7-kafka使用范例&quot; id=&quot;markdown-toc-7-kafka使用范例&quot;&gt;7. Kafka使用范例&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#8-在docker内部署集群&quot; id=&quot;markdown-toc-8-在docker内部署集群&quot;&gt;8. 在Docker内部署集群&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#81-重要配置项&quot; id=&quot;markdown-toc-81-重要配置项&quot;&gt;8.1 重要配置项&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#DOCKER_OUT_NET&quot; id=&quot;markdown-toc-DOCKER_OUT_NET&quot;&gt;8.2 对容器外应用提供服务&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#83-docker-compose-scale&quot; id=&quot;markdown-toc-83-docker-compose-scale&quot;&gt;8.3 docker-compose scale&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#84-yaml配置重用&quot; id=&quot;markdown-toc-84-yaml配置重用&quot;&gt;8.4 yaml配置重用&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#84-相关参考&quot; id=&quot;markdown-toc-84-相关参考&quot;&gt;8.4 相关参考&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#9-写性能与安全性&quot; id=&quot;markdown-toc-9-写性能与安全性&quot;&gt;9. 写性能与安全性&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#10-todo&quot; id=&quot;markdown-toc-10-todo&quot;&gt;10. TODO&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#资料&quot; id=&quot;markdown-toc-资料&quot;&gt;资料&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#链接&quot; id=&quot;markdown-toc-链接&quot;&gt;链接&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;1-前言&quot;&gt;1. 前言&lt;/h1&gt;
&lt;p&gt;Kafka是现在业界选择比较多的一种消息队列解决方案。我这里主要也是选Kafka作为消息队列这块需求的解决方案。下面的技术调研会先从消息队列本身开始，然后做一个横向比较，最后再聚焦到Kafka本身上。&lt;/p&gt;

&lt;p&gt;调研用的Kafka版本为：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;2.2.0
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;官方文档：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;官方介绍：&lt;a href=&quot;https://kafka.apache.org/intro&quot; target=&quot;_blank&quot;&gt;Introduction&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;官方新手入门：&lt;a href=&quot;https://kafka.apache.org/quickstart&quot; target=&quot;_blank&quot;&gt;Quickstart&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;官方应用场景介绍：&lt;a href=&quot;https://kafka.apache.org/uses&quot; target=&quot;_blank&quot;&gt;Use cases&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;官方文档：&lt;a href=&quot;https://kafka.apache.org/documentation/&quot; target=&quot;_blank&quot;&gt;Documentation&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Docker Hub：&lt;a href=&quot;https://hub.docker.com/r/wurstmeister/kafka&quot; target=&quot;_blank&quot;&gt;wurstmeister/kafka&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;一本中文手册，版本较老，看看范例代码尚可：&lt;a href=&quot;http://www.kubiji.cn/book/apache_kafka/APACHEKAFKAJiaoCheng/APACHEKAFKAGaiShu.html&quot; target=&quot;_blank&quot;&gt;Apache kafka中文手册&lt;/a&gt;。&lt;/p&gt;

&lt;h1 id=&quot;2-消息队列&quot;&gt;2. 消息队列&lt;/h1&gt;
&lt;p&gt;在聊Kafka之前，其实更需要关注下消息队列本身。什么需求下需要使用消息队列、消息队列的功能点有哪些、消息队列的模式有哪些、消息队列的实现难点有哪些，等等。如果什么都不了解，那技术选型就无从谈起了，也没办法理解为什么消息队列要做好是非常困难的一件事情。展开了说，也就没办法举一反三，理解其他软件系统的设计精髓了。&lt;/p&gt;

&lt;p&gt;下面会简单列举下消息队列的一系列知识点，细节内容这里就不展开了，篇幅太大。&lt;/p&gt;

&lt;p&gt;消息队列的需求：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;解耦&lt;/li&gt;
  &lt;li&gt;最终一致性&lt;/li&gt;
  &lt;li&gt;广播&lt;/li&gt;
  &lt;li&gt;错峰与流控&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;消息队列的模型：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;点对点：单生产、单队列、单消费&lt;/li&gt;
  &lt;li&gt;生产者消费者模型：多生产、单队列、多消费&lt;/li&gt;
  &lt;li&gt;发布订阅模型：根据topic分队列，多生产、多队列、多消费&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;消息队列的投递模式：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Push：消息队列主动推送（e.g RocketMQ可选）&lt;/li&gt;
  &lt;li&gt;Pull：消费者主动抓取（e.g Kafka）&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;消息队列的性能指标：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;吞吐量（Throughput）&lt;/li&gt;
  &lt;li&gt;响应时间（Latency）&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;消息队列的投递策略：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;最多一次（At most Once）：消息可能会丢，但绝不会重复传输&lt;/li&gt;
  &lt;li&gt;最少一次（At least Once）：消息绝不会丢，但可能会重复传输&lt;/li&gt;
  &lt;li&gt;仅有一次（Exactly Once）：每条消息肯定会被传输一次且仅传输一次&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;消息队列的功能性：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;优先级队列&lt;/li&gt;
  &lt;li&gt;延迟队列&lt;/li&gt;
  &lt;li&gt;死信队列&lt;/li&gt;
  &lt;li&gt;重试队列&lt;/li&gt;
  &lt;li&gt;消息回溯&lt;/li&gt;
  &lt;li&gt;消息堆积 + 持久化&lt;/li&gt;
  &lt;li&gt;消息追踪&lt;/li&gt;
  &lt;li&gt;消息过滤&lt;/li&gt;
  &lt;li&gt;多租户&lt;/li&gt;
  &lt;li&gt;多协议支持&lt;/li&gt;
  &lt;li&gt;跨语言支持&lt;/li&gt;
  &lt;li&gt;流量控制&lt;/li&gt;
  &lt;li&gt;可靠投递&lt;/li&gt;
  &lt;li&gt;消费确认&lt;/li&gt;
  &lt;li&gt;消息顺序性&lt;/li&gt;
  &lt;li&gt;安全机制&lt;/li&gt;
  &lt;li&gt;消息幂等性&lt;/li&gt;
  &lt;li&gt;事务性消息&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;几篇值得一读的博文：&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/2019/04/message-queue-design/&quot; target=&quot;_blank&quot;&gt;消息队列设计精要 - 美团点评技术团队&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;一篇通论形式的消息队列设计博文，讲解了一些消息队列通用的知识点，值得一读。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/resources/2019/04/kafka-note/message-queue-01.png&quot; alt=&quot;&quot; target=&quot;_blank&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.infoq.cn/article/distributed-queue-programme-model-actual-combat-optimization&quot; target=&quot;_blank&quot;&gt;分布式队列编程：从模型、实战到优化&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;本质上也是一篇对于消息队列进行设计和讲解的博文，但结合了美团公司内部的实际项目经验，对于大型系统的设计者有更好的贴近应用场景的指导作用。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MjM5NjQ5MTI5OA==&amp;amp;mid=2651745361&amp;amp;idx=1&amp;amp;sn=5f0f67484a0de4b0dd2796848ef9cc94&quot; target=&quot;_blank&quot;&gt;分布式队列编程优化篇&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;接上一篇的博文，更多讲到了性能和高级功能相关的实现以及性能的优化。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.jianshu.com/p/7a6deaba34d2&quot; target=&quot;_blank&quot;&gt;如何保证消息队列的高可用和幂等性以及数据丢失，顺序一致性&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;排版比较粗糙，但内容非常不错。以贴近项目经验的内容讲解了RabbitMQ和Kafka的：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;高可用性&lt;/li&gt;
  &lt;li&gt;消息幂等性&lt;/li&gt;
  &lt;li&gt;消息可靠性&lt;/li&gt;
  &lt;li&gt;消息顺序性&lt;/li&gt;
  &lt;li&gt;消息积压场景处理&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;3-消息队列选型比较&quot;&gt;3. 消息队列选型比较&lt;/h1&gt;
&lt;p&gt;消息队列的选型一直都是比较困难的，业界现在比较主流的选择有：ActiveMQ、RabbitMQ、Kafka、RocketMQ、ZeroMQ 这几种。&lt;/p&gt;

&lt;p&gt;有几篇不错的博文可以看下：&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.infoq.cn/article/kafka-vs-rabbitmq&quot; target=&quot;_blank&quot;&gt;消息中间件选型分析：从 Kafka 与 RabbitMQ 的对比看全局&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;这篇时间还算比较接近&lt;code&gt;2018年5月2日&lt;/code&gt;，主要是以Kafka和RabbitMQ为范例进行了消息队列选型的要点讲解。虽然讲解的时候使用了Kafka以及RabbitMQ作为范例，但实际上讲解的是通用的消息队列选型要点。结合本文上一节所讲到的消息队列的一系列知识点，应该能有更深刻的理解。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/resources/2019/04/kafka-note/message-queue-02.jpg&quot; alt=&quot;&quot; target=&quot;_blank&quot; /&gt;
&lt;img src=&quot;/resources/2019/04/kafka-note/message-queue-03.jpg&quot; alt=&quot;&quot; target=&quot;_blank&quot; /&gt;
&lt;img src=&quot;/resources/2019/04/kafka-note/message-queue-04.jpg&quot; alt=&quot;&quot; target=&quot;_blank&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.infoq.cn/article/dXJ3EYIp*WaHfmVwlMeu&quot; target=&quot;_blank&quot;&gt;滴滴出行基于 RocketMQ 构建企业级消息队列服务的实践&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;这篇时间稍微有点久，文中提到的Kafka版本还是0.8左右的（虽然文章的发布时间倒是不久之前），所以文中提到的性能指标之类的仅可作为参考。这篇文章是对Kafka和RocketMQ做的一个技术选型比较，文章中有相当多的性能指标比较，并结合滴滴公司的实际情况讲解了下消息队列系统进行替换时候所做的Migration工作，非常有借鉴价值。此外，文中还有一小节讲解了下RocketMQ使用的经验。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://stackoverflow.com/questions/39586635/why-is-kafka-pull-based-instead-of-push-based&quot; target=&quot;_blank&quot;&gt;Why is Kafka pull-based instead of push-based?&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;为什么Kafka消息队列使用的是Pull投递模式。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/@philipfeng/modern-open-source-messaging-apache-kafka-rabbitmq-nats-pulsar-and-nsq-ca3bf7422db5&quot; target=&quot;_blank&quot;&gt;Modern Open Source Messaging: NATS, RabbitMQ, Apache Kafka, hmbdc, Synapse, NSQ and Pulsar&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;老外写的一篇，提到了不少国内较少提到的开源项目，可以作为参考。&lt;/p&gt;

&lt;h2 id=&quot;31-apache-pulsar&quot;&gt;3.1 Apache Pulsar&lt;/h2&gt;
&lt;p&gt;关于Kafka和后起新秀Pulsar的横向比较，可以看：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/47388267&quot; target=&quot;_blank&quot;&gt;比拼Kafka，大数据分析新秀Pulsar到底好在哪&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.slideshare.net/merlimat/high-performance-messaging-with-apache-pulsar&quot; target=&quot;_blank&quot;&gt;High performance messaging with Apache Pulsar&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.infoq.cn/article/Us*a8umKXT9LpV9hA6tF&quot; target=&quot;_blank&quot;&gt;选择 Pulsar 而不是 Kafka 的 7 大理由&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;大略的要点：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;功能性上Pulsar要比Kafka更好，且这是在不牺牲性能的前提下的，就更加难能可贵&lt;/li&gt;
  &lt;li&gt;解决了Kafka单partition只能单consumer消费的问题&lt;/li&gt;
  &lt;li&gt;将Broker和存储解耦，做到更好的错误恢复，在Broker宕机之后可以做到无损耗恢复&lt;/li&gt;
  &lt;li&gt;存储方面的功能交付给Bookie，更细粒度的存储，更好的错误恢复和同步性能&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;4-kafka架构&quot;&gt;4. Kafka架构&lt;/h1&gt;
&lt;h2 id=&quot;41-概念&quot;&gt;4.1 概念&lt;/h2&gt;
&lt;p&gt;老样子从基本的概念开始梳理：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;broker&lt;/code&gt;：kafka集群中的任意一台提供服务的物理服务器即被称为broker&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;topic&lt;/code&gt;：消息队列的一个队列，一般做架构的时候按需求将不同的消息分别派送到不同的管道里，而其中的任意一个管道在kafka里就是一个topic&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;partition&lt;/code&gt;：topic下的概念，任意一个topic根据启动时的设定，会分成多个partition，而每个partition会由集群安排在某一台物理机broker上，以此做到集群的横向扩展&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;offset&lt;/code&gt;：partition下的概念，topic被分为很多partition，而每个partition则都会存储消息，每个partition存储的消息都是从0开始进行标号，而这个每条消息一个的标号，即为offset；可以理解为消息在partition里的唯一id；不同的partition都是从0开始标号，因此offset只对其自身的partition生效，不可混用&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;replica&lt;/code&gt;：某个partition的完整备份（在接收写入请求时数据可能会落后于leader），用在集群的高可用服务上，同时也可以提供partition读操作的负载均衡&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;producer&lt;/code&gt;：向topic里输入消息数据的角色&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;consumer&lt;/code&gt;：从topic里消费消息数据的角色&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;consumer group&lt;/code&gt;：可扩展且具有容错性的consumer机制，多个consumer共享一个group id，组内的所有consumer一起来消费topic的所有partition；但一个partition仍旧只能由一个consumer进行消费；主要是为了解决consumer和partition配对balance的问题，将consumer做成组由集群自动进行平衡并分配到partition&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;关于consumer group，更多的可以看：&lt;a href=&quot;https://www.cnblogs.com/huxi2b/p/6223228.html&quot; target=&quot;_blank&quot;&gt;Kafka消费组(consumer group)&lt;/a&gt;。&lt;/p&gt;

&lt;h2 id=&quot;ID_CLUSTER&quot;&gt;4.2 集群&lt;/h2&gt;
&lt;p&gt;一张图基本上就能说明问题：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/resources/2019/04/kafka-note/message-queue-05.jpg&quot; alt=&quot;&quot; target=&quot;_blank&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;kafka集群由多台broker（物理机）组成&lt;/li&gt;
  &lt;li&gt;图示中有&lt;code&gt;四台&lt;/code&gt;broker&lt;/li&gt;
  &lt;li&gt;每个topic会根据配置，生成固定数量的partition，均匀分配到物理机上&lt;/li&gt;
  &lt;li&gt;图示中的topic被分成了&lt;code&gt;3个&lt;/code&gt;partition：&lt;code&gt;P1_leader&lt;/code&gt;（broker1）、&lt;code&gt;P2_leader&lt;/code&gt;（broker2）、&lt;code&gt;P3_leader&lt;/code&gt;（broker4）&lt;/li&gt;
  &lt;li&gt;每个partition根据配置，会拥有固定数量的follower（replica），分别分配到各个物理机上&lt;/li&gt;
  &lt;li&gt;图示中即：&lt;code&gt;P1_follower&lt;/code&gt;（broker2、broker3）、&lt;code&gt;P2_follower&lt;/code&gt;（broker3、broker4）、&lt;code&gt;P3_follower&lt;/code&gt;（broker1、broker2）&lt;/li&gt;
  &lt;li&gt;当有broker宕机的时候：
    &lt;ul&gt;
      &lt;li&gt;丢失的follower会由集群重新寻找节点进行备份&lt;code&gt;恢复&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;丢失的leader会由集群自现存的follower中&lt;code&gt;选举&lt;/code&gt;产生，成为新的leader&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;43-分布式痛点offset&quot;&gt;4.3 分布式痛点（offset）&lt;/h2&gt;
&lt;p&gt;Kafka在分布式解决方案上也有痛点，主要是每个partition的offset问题。&lt;/p&gt;

&lt;p&gt;为了性能，kafka将一个partition视作一个管道，拥有一个从0开始的offset。这样做的好处就是不再需要在每一个消息体上做metadata存放该消息是否被消费掉等信息，而是通过partition的offset来标记整个管道中的消息被消费到了哪里。消息体更简单，流程上也更简单，不会出现乱序的消费情况。但也正是因为这种设计，导致每个partition无法由多个consumer并发消费，每个partition绑定只能同时允许一个consumer消费。&lt;/p&gt;

&lt;p&gt;因此，从机制上来说，kafka并不适合用来做consumer重消耗（CPU）类型的消息通道。虽然partition可以做很多，极端点来说可以做到和consumer实际需求1：1的配比，但超过适配当前需求的partition数量设置也会造成吞吐量的下降（参见：&lt;a href=&quot;#ID_BENCHMARK_SCEN4&quot;&gt;6.2.4 场景4&lt;/a&gt;）。&lt;/p&gt;

&lt;p&gt;consumer和partition在进行消息是否被消费掉的确认行为上，有两种方式：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;自动提交：
    &lt;ul&gt;
      &lt;li&gt;设置&lt;code&gt;enable.auto.commit=true&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;更新的频率根据参数&lt;code&gt;auto.commit.interval.ms&lt;/code&gt;来定，这种方式被称为&lt;code&gt;at most once&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;consumer fetch到消息后，partition就会更新offset，无论是否消费成功&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;手动提交：
    &lt;ul&gt;
      &lt;li&gt;设置&lt;code&gt;enable.auto.commit=false&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;这种方式被称为&lt;code&gt;at least once&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;consumer fetch到消息后，必须在消费成功后调用方法&lt;code&gt;consumer.commitSync()&lt;/code&gt;，手动通知partition更新offset&lt;/li&gt;
      &lt;li&gt;如果消费失败，则offset不会更新，此条消息会被重复消费一次&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;关于partition和consumer之间的关系，更多可以看下：&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://stackoverflow.com/questions/45175424/how-multiple-consumer-group-consumers-work-across-partition-on-the-same-topic-in&quot; target=&quot;_blank&quot;&gt;How multiple consumer group consumers work across partition on the same topic in Kafka?&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;If you want to have more consumers than partitions and still have performance enhancement and process only each message once, then you should increase the number of partitions in the topics so that there are at least as many partitions as consumers. Often topics are created with 2 times as many partitions needed to start, just so more consumers can be added later if needed without having to repartition the topic.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/pursuer211/article/details/79799478&quot; target=&quot;_blank&quot;&gt;kafka中partition和消费者对应关系&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;1个partition只能被同组的一个consumer消费，同组的consumer则起到均衡效果&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;以及自动提交相关：&lt;a href=&quot;https://medium.com/@danieljameskay/understanding-the-enable-auto-commit-kafka-consumer-property-12fa0ade7b65&quot; target=&quot;_blank&quot;&gt;Understanding the ‘enable.auto.commit’ Kafka Consumer property&lt;/a&gt;。&lt;/p&gt;

&lt;h2 id=&quot;44-临时消费压力应急&quot;&gt;4.4 临时消费压力应急&lt;/h2&gt;
&lt;p&gt;如果因某些原因，之前设计的partition分片数量不够导致能够上工的consumer数量不够，且consumer的消费速率跟不上的时候，就会发生消息堆积。如果堆积的情况比较严重的话，就需要程序介入处理。&lt;/p&gt;

&lt;p&gt;思路如下：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;老的partition以及老的topic肯定不能动，就算重新进行repartition整个集群重新平衡耗费的时间也是难以忍受的&lt;/li&gt;
  &lt;li&gt;创建新的topic&lt;/li&gt;
  &lt;li&gt;将新的topic的partition设到consumer消费速率能跟上的数量&lt;/li&gt;
  &lt;li&gt;将新的consumer部署上去，消费新设置的topic和partition&lt;/li&gt;
  &lt;li&gt;将老的topic以及partition上挂载的consumer全部停止&lt;/li&gt;
  &lt;li&gt;在老的topic以及partition上挂载临时consumer，这批consumer不做任何逻辑处理，只是将老的topic内的消息全部读取出来，并输入到新的topic里&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;这样老的topic里的消息就全部分发到新的topic里了，且新的topic的partition数量很高，可以挂载很多consumer处理堆积的消息。&lt;/p&gt;

&lt;h1 id=&quot;5-kafka监控--高可用&quot;&gt;5. Kafka监控 &amp;amp; 高可用&lt;/h1&gt;
&lt;h2 id=&quot;51-监控&quot;&gt;5.1 监控&lt;/h2&gt;
&lt;p&gt;监控方面，datadog的几篇文章非常不错，值得一读，不过版本有点老了，文章是2016年的：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.datadoghq.com/blog/monitoring-kafka-performance-metrics/&quot; target=&quot;_blank&quot;&gt;Monitoring Kafka performance metrics - P1&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.datadoghq.com/blog/collecting-kafka-performance-metrics/&quot; target=&quot;_blank&quot;&gt;Monitoring Kafka performance metrics - P2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;详细的指标列表及其含义，可以看这篇：&lt;a href=&quot;https://docs.confluent.io/current/kafka/monitoring.html&quot; target=&quot;_blank&quot;&gt;Monitoring Kafka&lt;/a&gt;。&lt;/p&gt;

&lt;h3 id=&quot;511-exporter--grafana-dashboard&quot;&gt;5.1.1 Exporter &amp;amp; Grafana Dashboard&lt;/h3&gt;
&lt;p&gt;Prometheus的Exporter分为两块：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;以Java为runtime的通用监控：prometheus/jmx_exporter
    &lt;ul&gt;
      &lt;li&gt;代码：&lt;a href=&quot;https://github.com/prometheus/jmx_exporter&quot; target=&quot;_blank&quot;&gt;prometheus/jmx_exporter&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;镜像：&lt;a href=&quot;https://hub.docker.com/r/sscaling/jmx-prometheus-exporter&quot; target=&quot;_blank&quot;&gt;sscaling/jmx-prometheus-exporter&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;sscaling/jmx-prometheus-exporter:0.11.0&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Dashboard：
        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;https://grafana.com/dashboards/721&quot; target=&quot;_blank&quot;&gt;Kafka Overview&lt;/a&gt;，这个dashboard相当老了，一直没有更新，而且仅只有6个Panel，和kafka有关的panel更只有3个，基本没什么用；但未能找到更近一点的kafka专用dashboard&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;https://grafana.com/dashboards/8563&quot;&gt;JVM dashboard&lt;/a&gt;，jmx通用dashboard，看上去更好点；但这个dashboard变量设置的是job，所以在设置Prometheus的时候就需要将多个kafka的数据采集到同一个job里，而不是分开&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;https://grafana.com/dashboards/7727&quot;&gt;JMX exporter prometheus&lt;/a&gt;，另一款jmx通用dashboard；这个dashboard是为了在k8s中使用而特化的，也不够灵活&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;列在Prometheus官方列表上的第三方Exporter：danielqsj/kafka_exporter
    &lt;ul&gt;
      &lt;li&gt;代码：&lt;a href=&quot;https://github.com/danielqsj/kafka_exporter&quot; target=&quot;_blank&quot;&gt;danielqsj/kafka_exporter&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;镜像：&lt;a href=&quot;https://hub.docker.com/r/danielqsj/kafka-exporter&quot; target=&quot;_blank&quot;&gt;danielqsj/kafka-exporter&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;danielqsj/kafka-exporter:v1.2.0&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Dashboard：&lt;a href=&quot;https://grafana.com/dashboards/7589&quot; target=&quot;_blank&quot;&gt;Kafka Exporter Overview&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;该Exporter使用Golang编写，更专注于部分Kafka业务相关metrics，对于核心的Java runtime metrics仍旧需要jmx_exporter&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;此外，还有一个confluent公司的grafana dashboard配置，没找到对应的labs dashboard地址，但该配置文件本身也有参考价值：&lt;a href=&quot;https://github.com/kubernauts/kafka-confluent-platform/blob/master/grafana-kafka-dashboard.json&quot; target=&quot;_blank&quot;&gt;kafka-confluent-platform/grafana-kafka-dashboard.json&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;可参考的jmx_exporter配置：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/oded-dd/prometheus-jmx-kafka&quot; target=&quot;_blank&quot;&gt;oded-dd/prometheus-jmx-kafka&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/Mousavi310/kafka-grafana&quot; target=&quot;_blank&quot;&gt;Mousavi310/kafka-grafana&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;512-docker实践&quot;&gt;5.1.2 Docker实践&lt;/h3&gt;
&lt;p&gt;实际运行范例参见：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/agreatfool/dist-system-practice/blob/master/golang/src/dist-system-practice/conf/dev/kafka-cluster.yaml&quot; target=&quot;_blank&quot;&gt;dist-system-practice/conf/dev/kafka-cluster.yaml&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/agreatfool/dist-system-practice/blob/master/golang/src/dist-system-practice/conf/dev/prometheus-cluster.yaml&quot; target=&quot;_blank&quot;&gt;dist-system-practice/conf/dev/prometheus-cluster.yaml&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/agreatfool/dist-system-practice/tree/master/golang/src/dist-system-practice/vendors/kafka&quot; target=&quot;_blank&quot;&gt;dist-system-practice/vendors/kafka/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/agreatfool/dist-system-practice/tree/master/golang/src/dist-system-practice/vendors/prometheus/grafana/dashboards&quot; target=&quot;_blank&quot;&gt;dist-system-practice/vendors/prometheus/grafana/dashboards/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Exporter方面，jmx_exporter和kafka_exporter同时使用，两者侧重不同。jmx_exporter主要用来进行JVM监控，针对java runtime自身的状态进行监控，而kafka_exporter则针对kafka运行状况进行监控（其实只要不怕麻烦自己处理dashboard，则jmx_exporter就完全足够了）。&lt;/p&gt;

&lt;p&gt;jmx_exporter的部署有两种选择，一是独立的容器进行部署，好处是可观察性强，且不会对kafka容器造成影响，缺点是部署更繁杂，配置内容更多；二是修改kafka容器，添加几项配置项，就可以直接在kafka容器内启动一个java进程，进行metrics输出。这里实践使用的是第二种方法，配置修改如下：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span&gt;&lt;/span&gt;  &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;kafka_1&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;...&lt;/span&gt;
    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;...&lt;/span&gt;
    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;volumes&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;/private/tmp/jmx_prometheus_javaagent-0.9.jar:/usr/local/bin/jmx_prometheus_javaagent-0.9.jar&lt;/span&gt;
      &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;/private/tmp/jmx-kafka-2_0_0.yaml:/etc/jmx-exporter/jmx-kafka-2_0_0.yaml&lt;/span&gt;
      &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;...&lt;/span&gt;
    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;networks&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;...&lt;/span&gt;
    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;ports&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;19092:9092&amp;quot;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# client port&lt;/span&gt;
      &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;17071:7071&amp;quot;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# jmx prometheus metrics&lt;/span&gt;
    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;expose&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;9092&amp;quot;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# client port&lt;/span&gt;
      &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;9093&amp;quot;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# internal traffic&lt;/span&gt;
      &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;9991&amp;quot;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# jmx&lt;/span&gt;
      &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;7071&amp;quot;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# jmx prometheus metrics&lt;/span&gt;
    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;restart&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;always&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;logging&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;*KAFKA_LOGGING_DEFAULTS&lt;/span&gt;
    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;environment&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;...&lt;/span&gt;
      &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;JMX_PORT&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;9991&lt;/span&gt;
      &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;KAFKA_OPTS&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;-javaagent:/usr/local/bin/jmx_prometheus_javaagent-0.9.jar=7071:/etc/jmx-exporter/jmx-kafka-2_0_0.yaml&amp;quot;&lt;/span&gt;
      &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;*KAFKA_ENV_DEFAULTS&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;code&gt;JMX_PORT&lt;/code&gt;告知kafka在启动的时候需要一并启动jmx，&lt;code&gt;KAFKA_OPTS&lt;/code&gt;告知kafka在启动时一并需要启动jmx_exporter，而这个exporter的jar包以及配置文件则是通过bind mount放入容器内的。&lt;/p&gt;

&lt;p&gt;配置文件主要来自于：&lt;a href=&quot;https://github.com/Mousavi310/kafka-grafana/blob/master/jmx-exporter/kafka-2_0_0.yml&quot; target=&quot;_blank&quot;&gt;kafka-grafana/jmx-exporter/kafka-2_0_0.yml&lt;/a&gt;。此外，因为使用通用jmx dashboard：&lt;a href=&quot;https://grafana.com/dashboards/8563&quot; target=&quot;_blank&quot;&gt;JVM dashboard&lt;/a&gt;来进行数据展示，该配置文件中也放入了部分这个dashboard要求的数据转换规则：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;lowercaseOutputLabelNames&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;rules&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# JMX common&lt;/span&gt;
&lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;pattern&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;java.lang&amp;lt;type=OperatingSystem&amp;gt;&amp;lt;&amp;gt;(committed_virtual_memory|free_physical_memory|free_swap_space|total_physical_memory|total_swap_space)_size:&amp;#39;&lt;/span&gt;
  &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;os_$1_bytes&lt;/span&gt;
  &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;GAUGE&lt;/span&gt;
  &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;attrNameSnakeCase&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;true&lt;/span&gt;
&lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;pattern&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;java.lang&amp;lt;type=OperatingSystem&amp;gt;&amp;lt;&amp;gt;((?!process_cpu_time)\w+):&amp;#39;&lt;/span&gt;
  &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;os_$1&lt;/span&gt;
  &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;GAUGE&lt;/span&gt;
  &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;attrNameSnakeCase&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;true&lt;/span&gt;
&lt;span class=&quot;nn&quot;&gt;...&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;此外还有prometheus集群采集添加以及grafana dashboard导入，都是常规操作，就不多说了。&lt;/p&gt;

&lt;h2 id=&quot;52-高可用&quot;&gt;5.2 高可用&lt;/h2&gt;
&lt;p&gt;在之前的&lt;a href=&quot;#ID_CLUSTER&quot;&gt;4.2 集群&lt;/a&gt;中，已经介绍过了Kafka的集群模式，可以看到Kafka天然就是分布式的，而且在设计之初就考虑到了集群的高可用。本文之前章节内关于集群的内容偏简单了，只介绍了大致的设计。如有需要更深入了解分布式和高可用的细节，则可以阅读唯品会的：&lt;a href=&quot;https://www.infoq.cn/article/depth-interpretation-of-kafka-data-reliability&quot; target=&quot;_blank&quot;&gt;Kafka 数据可靠性深度解读&lt;/a&gt;，这篇讲解非常透彻，基本上可以当经典来看了。&lt;/p&gt;

&lt;p&gt;Kafka的高可用配置，有几个配置项控制了集群的安全程度。这里需要记住一点，整个集群越安全集群的吞吐量就越低，这是等价交换的，不可能不付出任何代价就获得数据的安全性。唯品会的文章讲解的细节非常多，但我们真正执行操作的时候可以只知其然，懂得哪几个配置项需要操作即可：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;topic：
    &lt;ul&gt;
      &lt;li&gt;&lt;code&gt;replication.factor&lt;/code&gt;：每个partition会拥有多少个replica&lt;/li&gt;
      &lt;li&gt;&lt;code&gt;min.insync.replicas&lt;/code&gt;：partition的leader节点要求当前在线的replica节点的数量，如果实际在线数量少于这个数值，客户端的请求会被拒绝：&lt;code&gt;org.apache.kafka.common.errors.NotEnoughReplicasExceptoin: Messages are rejected since there are fewer in-sync replicas than required&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;broker：
    &lt;ul&gt;
      &lt;li&gt;&lt;code&gt;unclean.leader.election.enable&lt;/code&gt;：是否允许out-of-sync replica成为leader&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;producer：
    &lt;ul&gt;
      &lt;li&gt;producer.type：消息生产者提交消息到kafka服务器的时候的模式，可选：sync或async
        &lt;ul&gt;
          &lt;li&gt;&lt;code&gt;sync&lt;/code&gt;拥有很好的安全性&lt;/li&gt;
          &lt;li&gt;&lt;code&gt;async&lt;/code&gt;拥有更高的吞吐量，可以批量进行消息发送&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;request.required.acks：kafka服务器在收到消息之后何时对生产者进行完成反馈
        &lt;ul&gt;
          &lt;li&gt;&lt;code&gt;1（默认）&lt;/code&gt;：partition的leader节点收取完成即反馈，如果在follower同步数据之前leader宕机则数据丢失&lt;/li&gt;
          &lt;li&gt;&lt;code&gt;0&lt;/code&gt;：producer不等待kafka服务器反馈即直接进行后续发送，拥有最高的吞吐量以及最低的安全性&lt;/li&gt;
          &lt;li&gt;&lt;code&gt;-1&lt;/code&gt;：partition的所有节点包括了leader以及所有的follower全部都确认数据同步完成再反馈，最高的安全性以及最低的吞吐量&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;要保证数据写入到Kafka是安全的，高可靠的，需要如下配置：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;topic：
    &lt;ul&gt;
      &lt;li&gt;replication.factor&amp;gt;=3：即副本数至少是3个&lt;/li&gt;
      &lt;li&gt;2&amp;lt;=min.insync.replicas&amp;lt;=replication.factor：要求每个partition leader的在线replica数量最少保持2个&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;broker：
    &lt;ul&gt;
      &lt;li&gt;unclean.leader.election.enable=false：不允许out-of-sync replica成为leader&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;producer：
    &lt;ul&gt;
      &lt;li&gt;request.required.acks=-1(all)：producer发送的消息请求必须让partition所有的replica都同步完毕才会返回成功&lt;/li&gt;
      &lt;li&gt;producer.type=sync：producer发送的消息以同步方式发送，即在写入成功之前，producer必须等待&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;6-kafka-benchmark&quot;&gt;6. Kafka Benchmark&lt;/h1&gt;
&lt;p&gt;这里的内容全部是转载自唯品会的：&lt;a href=&quot;https://www.infoq.cn/article/depth-interpretation-of-kafka-data-reliability&quot; target=&quot;_blank&quot;&gt;Kafka 数据可靠性深度解读&lt;/a&gt;。网上的资料很容易失效，因此在这里做下转载。&lt;/p&gt;

&lt;p&gt;Benchmark的Kafka版本是：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;0.10.1.0
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;61-测试环境&quot;&gt;6.1 测试环境&lt;/h2&gt;
&lt;p&gt;Kafka broker 用到了 4 台机器，分别为 broker[0/1/2/3] 配置如下：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;CPU: 24core/2.6GHZ&lt;/li&gt;
  &lt;li&gt;Memory: 62G&lt;/li&gt;
  &lt;li&gt;Network: 4000Mb&lt;/li&gt;
  &lt;li&gt;OS/kernel: CentOs release 6.6 (Final)&lt;/li&gt;
  &lt;li&gt;Disk: 1089G&lt;/li&gt;
  &lt;li&gt;Kafka 版本：0.10.1.0&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;broker 端 JVM 参数设置：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;-Xmx8G -Xms8G -server -XX:+UseParNewGC -XX:+UseConcMarkSweepGC -XX:+CMSClassUnloadingEnabled -XX:+CMSScavengeBeforeRemark -XX:+DisableExplicitGC -Djava.awt.headless=true -Xloggc:/apps/service/kafka/bin/../logs/kafkaServer-gc.log -verbose:gc -XX:+PrintGCDetails -XX:+PrintGCDateStamps -XX:+PrintGCTimeStamps -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.port=9999
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;客户端机器配置：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;CPU: 24core/2.6GHZ&lt;/li&gt;
  &lt;li&gt;Memory: 3G&lt;/li&gt;
  &lt;li&gt;Network: 1000Mb&lt;/li&gt;
  &lt;li&gt;OS/kernel: CentOs release 6.3 (Final)&lt;/li&gt;
  &lt;li&gt;Disk: 240G&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;62-不同场景测试&quot;&gt;6.2 不同场景测试&lt;/h2&gt;
&lt;h3 id=&quot;621-场景1&quot;&gt;6.2.1 场景1&lt;/h3&gt;
&lt;p&gt;测试不同的副本数、min.insync.replicas 策略以及 request.required.acks 策略（以下简称 acks 策略）对于发送速度（TPS）的影响。&lt;/p&gt;

&lt;p&gt;具体配置：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;一个 producer&lt;/li&gt;
  &lt;li&gt;发送方式为 sync&lt;/li&gt;
  &lt;li&gt;消息体大小为 1kB&lt;/li&gt;
  &lt;li&gt;partition 数为 12&lt;/li&gt;
  &lt;li&gt;副本数为：1/2/4&lt;/li&gt;
  &lt;li&gt;min.insync.replicas 分别为 1/2/4&lt;/li&gt;
  &lt;li&gt;acks 分别为 -1（all）/1/0&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;具体测试数据如下表（min.insync.replicas 只在 acks=-1 时有效）：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/resources/2019/04/kafka-note/message-queue-06.jpg&quot; alt=&quot;&quot; target=&quot;_blank&quot; /&gt;&lt;/p&gt;

&lt;p&gt;测试结果分析：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;客户端的 acks 策略对发送的 TPS 有较大的影响，TPS：acks_0 &amp;gt; acks_1 &amp;gt; ack_-1;&lt;/li&gt;
  &lt;li&gt;副本数越高，TPS 越低；副本数一致时，min.insync.replicas 不影响 TPS；&lt;/li&gt;
  &lt;li&gt;acks=0/1 时，TPS 与 min.insync.replicas 参数以及副本数无关，仅受 acks 策略的影响。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;下面将 partition 的个数设置为 1，来进一步确认下不同的 acks 策略、不同的 min.insync.replicas 策略以及不同的副本数对于发送速度的影响，详细请看情景 2 和情景 3。&lt;/p&gt;

&lt;h3 id=&quot;622-场景2&quot;&gt;6.2.2 场景2&lt;/h3&gt;
&lt;p&gt;在 partition 个数固定为 1，测试不同的副本数和 min.insync.replicas 策略对发送速度的影响。&lt;/p&gt;

&lt;p&gt;具体配置：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;一个 producer&lt;/li&gt;
  &lt;li&gt;发送方式为 sync&lt;/li&gt;
  &lt;li&gt;消息体大小为 1kB&lt;/li&gt;
  &lt;li&gt;producer 端 acks=-1(all)&lt;/li&gt;
  &lt;li&gt;变换副本数：2/3/4&lt;/li&gt;
  &lt;li&gt;min.insync.replicas 设置为：1/2/4&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;测试结果如下：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/resources/2019/04/kafka-note/message-queue-07.jpg&quot; alt=&quot;&quot; target=&quot;_blank&quot; /&gt;&lt;/p&gt;

&lt;p&gt;测试结果分析：&lt;/p&gt;

&lt;p&gt;副本数越高，TPS 越低（这点与场景 1 的测试结论吻合），但是当 partition 数为 1 时差距甚微。min.insync.replicas 不影响 TPS。&lt;/p&gt;

&lt;h3 id=&quot;623-场景3&quot;&gt;6.2.3 场景3&lt;/h3&gt;
&lt;p&gt;在 partition 个数固定为 1，测试不同的 acks 策略和副本数对发送速度的影响。&lt;/p&gt;

&lt;p&gt;具体配置：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;一个 producer&lt;/li&gt;
  &lt;li&gt;发送方式为 sync&lt;/li&gt;
  &lt;li&gt;消息体大小为 1kB&lt;/li&gt;
  &lt;li&gt;min.insync.replicas=1&lt;/li&gt;
  &lt;li&gt;topic 副本数为：1/2/4&lt;/li&gt;
  &lt;li&gt;acks： 0/1/-1&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;测试结果如下：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/resources/2019/04/kafka-note/message-queue-08.jpg&quot; alt=&quot;&quot; target=&quot;_blank&quot; /&gt;&lt;/p&gt;

&lt;p&gt;测试结果分析（与情景 1 一致）：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;副本数越多，TPS 越低；&lt;/li&gt;
  &lt;li&gt;客户端的 acks 策略对发送的 TPS 有较大的影响，TPS：acks_0 &amp;gt; acks_1 &amp;gt; ack_-1。&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;ID_BENCHMARK_SCEN4&quot;&gt;6.2.4 场景4&lt;/h3&gt;
&lt;p&gt;测试不同 partition 数对发送速率的影响&lt;/p&gt;

&lt;p&gt;具体配置：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;一个 producer&lt;/li&gt;
  &lt;li&gt;消息体大小为 1KB&lt;/li&gt;
  &lt;li&gt;发送方式为 sync&lt;/li&gt;
  &lt;li&gt;topic 副本数为 2&lt;/li&gt;
  &lt;li&gt;min.insync.replicas=2&lt;/li&gt;
  &lt;li&gt;acks=-1&lt;/li&gt;
  &lt;li&gt;partition 数量设置为 1/2/4/8/12&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;测试结果：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/resources/2019/04/kafka-note/message-queue-09.jpg&quot; alt=&quot;&quot; target=&quot;_blank&quot; /&gt;&lt;/p&gt;

&lt;p&gt;测试结果分析：&lt;/p&gt;

&lt;p&gt;partition 的不同会影响 TPS，随着 partition 的个数的增长 TPS 会有所增长，但并不是一直成正比关系，到达一定临界值时，partition 数量的增加反而会使 TPS 略微降低。&lt;/p&gt;

&lt;h3 id=&quot;625-场景5&quot;&gt;6.2.5 场景5&lt;/h3&gt;
&lt;p&gt;通过将集群中部分 broker 设置成不可服务状态，测试对客户端以及消息落盘的影响。&lt;/p&gt;

&lt;p&gt;具体配置：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;一个 producer&lt;/li&gt;
  &lt;li&gt;消息体大小 1KB&lt;/li&gt;
  &lt;li&gt;发送方式为 sync&lt;/li&gt;
  &lt;li&gt;topic 副本数为 4&lt;/li&gt;
  &lt;li&gt;min.insync.replicas 设置为 2&lt;/li&gt;
  &lt;li&gt;acks=-1&lt;/li&gt;
  &lt;li&gt;retries=0/100000000&lt;/li&gt;
  &lt;li&gt;partition 数为 12&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;具体测试数据如下表：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/resources/2019/04/kafka-note/message-queue-10.jpg&quot; alt=&quot;&quot; target=&quot;_blank&quot; /&gt;&lt;/p&gt;

&lt;p&gt;出错信息：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;错误 1：客户端返回异常，部分数据可落盘，部分失败：org.apache.kafka.common.errors.NetworkException: The server disconnected before a response was received.&lt;/li&gt;
  &lt;li&gt;错误 2：[WARN]internals.Sender - Got error produce response with correlation id 19369 on topic-partition default_channel_replicas_4_1-3, retrying (999999999 attempts left). Error: NETWORK_EXCEPTION&lt;/li&gt;
  &lt;li&gt;错误 3： [WARN]internals.Sender - Got error produce response with correlation id 77890 on topic-partition default_channel_replicas_4_1-8, retrying (999999859 attempts left). Error: NOT_ENOUGH_REPLICAS&lt;/li&gt;
  &lt;li&gt;错误 4： [WARN]internals.Sender - Got error produce response with correlation id 77705 on topic-partition default_channel_replicas_4_1-3, retrying (999999999 attempts left). Error: NOT_ENOUGH_REPLICAS_AFTER_APPEND&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;测试结果分析：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;kill 两台 broker 后，客户端可以继续发送。broker 减少后，partition 的 leader 分布在剩余的两台 broker 上，造成了 TPS 的减小；&lt;/li&gt;
  &lt;li&gt;kill 三台 broker 后，客户端无法继续发送。Kafka 的自动重试功能开始起作用，当大于等于 min.insync.replicas 数量的 broker 恢复后，可以继续发送；&lt;/li&gt;
  &lt;li&gt;当 retries 不为 0 时，消息有重复落盘；客户端成功返回的消息都成功落盘，异常时部分消息可以落盘。&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;626-场景6&quot;&gt;6.2.6 场景6&lt;/h3&gt;
&lt;p&gt;测试单个 producer 的发送延迟，以及端到端的延迟。&lt;/p&gt;

&lt;p&gt;具体配置：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;一个 producer&lt;/li&gt;
  &lt;li&gt;消息体大小 1KB&lt;/li&gt;
  &lt;li&gt;发送方式为 sync&lt;/li&gt;
  &lt;li&gt;topic 副本数为 4&lt;/li&gt;
  &lt;li&gt;min.insync.replicas 设置为 2&lt;/li&gt;
  &lt;li&gt;acks=-1&lt;/li&gt;
  &lt;li&gt;partition 数为 12&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;测试数据及结果（单位为 ms）：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/resources/2019/04/kafka-note/message-queue-11.jpg&quot; alt=&quot;&quot; target=&quot;_blank&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;63-各场景测试总结&quot;&gt;6.3 各场景测试总结&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;当 acks=-1 时，Kafka 发送端的 TPS 受限于 topic 的副本数量（ISR 中），副本越多 TPS 越低；&lt;/li&gt;
  &lt;li&gt;acks=0 时，TPS 最高，其次为 1，最差为 -1，即 TPS：acks_0 &amp;gt; acks_1 &amp;gt; ack_-1；&lt;/li&gt;
  &lt;li&gt;min.insync.replicas 参数不影响 TPS；&lt;/li&gt;
  &lt;li&gt;partition 的不同会影响 TPS，随着 partition 的个数的增长 TPS 会有所增长，但并不是一直成正比关系，到达一定临界值时，partition 数量的增加反而会使 TPS 略微降低；&lt;/li&gt;
  &lt;li&gt;Kafka 在 acks=-1,min.insync.replicas&amp;gt;=1 时，具有高可靠性，所有成功返回的消息都可以落盘。&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;7-kafka使用范例&quot;&gt;7. Kafka使用范例&lt;/h1&gt;
&lt;p&gt;实验使用的还是下载下来的Kafka，版本如头部申明的是&lt;code&gt;2.2.0&lt;/code&gt;。范例代码可以在Github查看：&lt;a href=&quot;https://github.com/agreatfool/dist-system-practice/tree/master/experiment/kafka&quot; target=&quot;_blank&quot;&gt;dist-system-practice/experiment/kafka/&lt;/a&gt;。&lt;/p&gt;

&lt;h1 id=&quot;8-在docker内部署集群&quot;&gt;8. 在Docker内部署集群&lt;/h1&gt;
&lt;p&gt;一般来说部署一个以上的docker容器组成集群，可以使用bash脚本的方法，自己编写命令一个个启动，但更好的方法是使用&lt;code&gt;docker-compose&lt;/code&gt;命令，读取配置文件，将整个集群按设定的模式启动起来。可运行范例可以查看：&lt;a href=&quot;https://github.com/agreatfool/dist-system-practice/blob/master/golang/src/dist-system-practice/conf/dev/kafka-cluster.yaml&quot; target=&quot;_blank&quot;&gt;dist-system-practice/conf/dev/kafka-cluster.yaml&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;启动脚本：&lt;a href=&quot;https://github.com/agreatfool/dist-system-practice/blob/master/golang/src/dist-system-practice/bash/dev/docker_kafka.sh&quot; target=&quot;_blank&quot;&gt;dist-system-practice/bash/dev/docker_kafka.sh&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;主要有几个点需要注意下。&lt;/p&gt;

&lt;h2 id=&quot;81-重要配置项&quot;&gt;8.1 重要配置项&lt;/h2&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;services&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;kafka_1&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;wurstmeister/kafka:2.12-2.2.0&amp;quot;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 一定需要&lt;/span&gt;
    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;hostname&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;kafka_1&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;container_name&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;kafka_1&amp;quot;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 使用这个名字来让同network的其他服务进行访问&lt;/span&gt;
    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;depends_on&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;zookeeper&amp;quot;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 保证启动先后顺序&lt;/span&gt;
    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;volumes&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;/private/tmp/jmx_prometheus_javaagent-0.9.jar:/usr/local/bin/jmx_prometheus_javaagent-0.9.jar&lt;/span&gt;
      &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;/private/tmp/jmx-kafka-2_0_0.yaml:/etc/jmx-exporter/jmx-kafka-2_0_0.yaml&lt;/span&gt;
      &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;kafka_vol_1:/tmp/kafka/data&lt;/span&gt;
    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;networks&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;net&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;ports&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;19092:9092&amp;quot;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# client port # 保证非同一network的其他服务也能访问，但这么做要求每个kafka service都监听不同的端口，相互不能冲突&lt;/span&gt;
      &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;17071:7071&amp;quot;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# jmx prometheus metrics&lt;/span&gt;
    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;expose&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;9092&amp;quot;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# client port&lt;/span&gt;
      &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;9093&amp;quot;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# internal traffic # kafka集群内部流量走的端口号&lt;/span&gt;
      &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;9991&amp;quot;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# jmx # jmx进程本身监听的地址，提供给jmx_exporter连接用&lt;/span&gt;
      &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;7071&amp;quot;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# jmx prometheus metrics # jmx_exporter监听的地址，提供给prometheus抓取metrics&lt;/span&gt;
    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;restart&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;always&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;logging&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;driver&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;json-file&amp;quot;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 日志输出以json格式，容易让聚合工具使用&lt;/span&gt;
      &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;max-size&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;512m&amp;quot;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 保证日志最大尺寸不会过大占用过多系统磁盘&lt;/span&gt;
    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;environment&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;KAFKA_LISTENERS&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092&amp;quot;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# kafka的实际监听地址，一般不是0.0.0.0就是容器名&lt;/span&gt;
      &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;KAFKA_ADVERTISED_LISTENERS&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;INSIDE://kafka_1:9093,OUTSIDE://127.0.0.1:19092&amp;quot;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# kafka发布到zookeeper，让客户端获取并凭之连接kafka的地址，一定需要是客户端能访问到的地址，INSIDE部分供集群内部流量使用，OUTSIDE供客户端使用&lt;/span&gt;
      &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;KAFKA_LISTENER_SECURITY_PROTOCOL_MAP&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT&amp;quot;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 明确内部外部的通讯协议&lt;/span&gt;
      &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;KAFKA_INTER_BROKER_LISTENER_NAME&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;INSIDE&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 告诉kafka集群上面的INSIDE和OUTSIDE配置哪个才是供集群内部流量使用的，按语义一般是INSIDE&lt;/span&gt;
      &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;KAFKA_BROKER_ID&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 必须每个kafka broker单独一个，不可重复&lt;/span&gt;
      &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;JMX_PORT&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;9991&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# jmx监听的地址&lt;/span&gt;
      &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;KAFKA_OPTS&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;-javaagent:/usr/local/bin/jmx_prometheus_javaagent-0.9.jar=7071:/etc/jmx-exporter/jmx-kafka-2_0_0.yaml&amp;quot;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# kafka在启动时一并会给予启动&lt;/span&gt;
      &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;KAFKA_ZOOKEEPER_CONNECT&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;zookeeper:2181&amp;quot;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 告知kafka zookeeper的地址&lt;/span&gt;
      &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;KAFKA_LOG_DIRS&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;/tmp/kafka-logs&amp;quot;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# kafka实际的数据存放位置，推荐使用volume进行该地址的local映射&lt;/span&gt;
      &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# kafka内部用来保存topic的offset的数据，其replication数量&lt;/span&gt;
      &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# kafka内部用来保存transaction state log的数据，其replication数量&lt;/span&gt;
      &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;KAFKA_MIN_INSYNC_REPLICAS&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# partition的leader节点要求当前在线的replica节点的数量&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;关于&lt;code&gt;LISTENER&lt;/code&gt;相关的几个配置（用于集群访问）更多的可以看下：&lt;a href=&quot;#DOCKER_OUT_NET&quot;&gt;8.2 对容器外应用提供服务&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;参见：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.confluent.io/current/kafka/deployment.html&quot; target=&quot;_blank&quot;&gt;Running Kafka in Production&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;DOCKER_OUT_NET&quot;&gt;8.2 对容器外应用提供服务&lt;/h2&gt;
&lt;p&gt;在docker中部署集群有一个比较大的问题就是容器内部和外部的网络访问地址是隔离的，而kafka集群部分节点的相互发现是根据配置：&lt;code&gt;KAFKA_ADVERTISED_LISTENERS&lt;/code&gt;来进行通知的。&lt;/p&gt;

&lt;p&gt;如果该配置内的地址填写的是&lt;code&gt;127.0.0.1&lt;/code&gt;这样的回环地址或容器外的IP，那么容器内各kafka节点之间的通讯就会有问题（因为容器内各节点拿到的配置地址都是容器外的IP）。而如果将该配置内的地址都配置成docker容器的名字，那么在容器内部的流量是没问题了，但外部访问kafka服务的应用程序拿到的地址则是容器的名字，就没法访问了。&lt;/p&gt;

&lt;p&gt;所以对于需要向容器外部环境的应用提供服务的情况来说，需要做好几项配置的调整（这里说的配置都是kafka的配置，不涉及到zookeeper的配置，事实上集群部署的配置中zookeeper相关的内容非常简单）：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;KAFKA_LISTENERS&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092&amp;quot;&lt;/span&gt;
&lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;KAFKA_ADVERTISED_LISTENERS&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;INSIDE://kafka_1:9093,OUTSIDE://127.0.0.1:19092&amp;quot;&lt;/span&gt;
&lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;KAFKA_LISTENER_SECURITY_PROTOCOL_MAP&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT&amp;quot;&lt;/span&gt;
&lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;KAFKA_INTER_BROKER_LISTENER_NAME&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;INSIDE&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;kafka的配置中，现在可以将内部流量和外部流量的监听地址分离开来，在配置&lt;code&gt;LISTENERS&lt;/code&gt;相关的配置时，使用&lt;code&gt;,&lt;/code&gt;将&lt;code&gt;INSIDE&lt;/code&gt;和&lt;code&gt;OUTSIDE&lt;/code&gt;隔离开来即可。一般来说，&lt;code&gt;INSIDE&lt;/code&gt;的地址会配置成当前节点的容器名，或者就直接设置成&lt;code&gt;0.0.0.0&lt;/code&gt;。而&lt;code&gt;OUTSIDE&lt;/code&gt;则根据自身需求设置即可，这里的范例是给本机开发测试用，因此设置的是&lt;code&gt;127.0.0.1&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;KAFKA_INTER_BROKER_LISTENER_NAME&lt;/code&gt;配置项则是告诉kafka，集群各broker节点之间是使用INSIDE还是OUTSIDE配置作为集群内部流量的通讯地址。此外需要注意的是，该配置的&lt;code&gt;INSIDE&lt;/code&gt;和&lt;code&gt;OUTSIDE&lt;/code&gt;监听的端口是&lt;code&gt;不可以重复&lt;/code&gt;的，因为实际上kafka就是开了两个端口都在监听。&lt;/p&gt;

&lt;p&gt;一般第一次在本地设置集群进行开发和调试的时候，这里是个大坑，非常麻烦。配置不正确就会发现kafka完全无法通讯。&lt;/p&gt;

&lt;h2 id=&quot;83-docker-compose-scale&quot;&gt;8.3 docker-compose scale&lt;/h2&gt;
&lt;p&gt;一般来说，kafka service的配置不适合在配置文件中只设置一份，然后使用docker-compose scale的方法进行横向扩展。&lt;/p&gt;

&lt;p&gt;适用scale的场景只有完全无状态，且各个节点之间的配置完全相同的情况，而kafka各节点一般最好设置自身的&lt;code&gt;container_name&lt;/code&gt;，然后在监听地址中使用正确的容器名作为地址，来进行相互通讯。&lt;/p&gt;

&lt;h2 id=&quot;84-yaml配置重用&quot;&gt;8.4 yaml配置重用&lt;/h2&gt;
&lt;p&gt;因为无法使用scale的缘故，必须手写大量的kafka service节点yaml配置，这倒也不算是大问题。关键的问题在于有大量重复的配置项，如果后面要修改，就很麻烦，怕漏改或者改错。&lt;/p&gt;

&lt;p&gt;因此最好的方法是使用yaml的配置重用，来设置共通的配置，然后像变量一样重用。这可以参见我之前提到的范例配置文件：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;x-kafka-environment-defaults&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;&amp;amp;KAFKA_ENV_DEFAULTS&lt;/span&gt;
  &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;...&lt;/span&gt;
  &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;# 在这里放默认的配置&lt;/span&gt;
  &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;...&lt;/span&gt;

&lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;services&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;kafka_1&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;...&lt;/span&gt;
    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;environment&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;...&lt;/span&gt;
      &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;*KAFKA_ENV_DEFAULTS&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 这样就把作为变量的配置全部导入到这个点上了&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;84-相关参考&quot;&gt;8.4 相关参考&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://better-coding.com/building-apache-kafka-cluster-using-docker-compose-and-virtualbox/&quot; target=&quot;_blank&quot;&gt;Building Apache Kafka cluster using docker-compose and VirtualBox&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.kaaproject.org/kafka-docker&quot; target=&quot;_blank&quot;&gt;Deploying a Kafka broker in a Docker container&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;9-写性能与安全性&quot;&gt;9. 写性能与安全性&lt;/h1&gt;
&lt;p&gt;在进行测试的过程中，发现写入的速度比较慢，基本上每次写入在kafka集群这边会耗时1秒多，完全不能接受了。之前的博文中也提到了，集群安全性和写入性能是反比的，主要有几项因素：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;producer的写入模式：同步、异步
    &lt;ul&gt;
      &lt;li&gt;异步拥有最佳的性能，但安全性极差&lt;/li&gt;
      &lt;li&gt;同步性能很差，但安全性有保证&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;acks写入的集群同步模式：-1完全同步、0完全不等待同步、1Leader节点同步
    &lt;ul&gt;
      &lt;li&gt;0拥有最佳性能，最低的安全性&lt;/li&gt;
      &lt;li&gt;-1拥有最佳性能，但性能最低&lt;/li&gt;
      &lt;li&gt;1则比较均衡&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;partition数量：acks如果为-1，则需要同步所有节点，partition数量越多则性能越低&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;后续进行了一些研究和测试。&lt;/p&gt;

&lt;p&gt;集群共3个broker，topic分片如下：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Topic:work-topic	PartitionCount:3	ReplicationFactor:3	Configs:
	Topic: work-topic	Partition: 0	Leader: 2	Replicas: 2,0,1	Isr: 2,0,1
	Topic: work-topic	Partition: 1	Leader: 1	Replicas: 1,2,0	Isr: 1,2,0
	Topic: work-topic	Partition: 2	Leader: 0	Replicas: 0,1,2	Isr: 0,1,2
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;查了下官方配置，&lt;code&gt;producer.acks&lt;/code&gt;这个现在放在&lt;code&gt;3.3 Producer Configs&lt;/code&gt;里，命名为&lt;code&gt;acks&lt;/code&gt;（&lt;a href=&quot;https://kafka.apache.org/22/documentation.html#producerconfigs&quot; target=&quot;_blank&quot;&gt;链接&lt;/a&gt;）。需要注意的是，这一项配置并不是服务端的配置项，而是连接上来的客户端producer所进行的设置，是否acks根据客户端producer的要求而变动。这很反直觉，我一开始一直都以为这是服务端的配置项，没想到居然是客户端的。&lt;/p&gt;

&lt;p&gt;acks在kafka-go的使用，可以查看注释：&lt;a href=&quot;https://github.com/segmentio/kafka-go/blob/v0.2.4/writer.go#L101&quot; target=&quot;_blank&quot;&gt;kafka-go/writer.go&lt;/a&gt;，默认是-1，也就是最安全但最慢的那种。&lt;/p&gt;

&lt;p&gt;此外，写入模式是同步还是异步也是客户端设置，见：&lt;a href=&quot;https://github.com/segmentio/kafka-go/blob/v0.2.4/writer.go#L105&quot; target=&quot;_blank&quot;&gt;kafka-go/writer.go&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;在上面提到的几项要素中，集群规模和partition数量之类都是业务要求，一般不会轻易变动，所以测试主要是实验在不同写入模式和acks情况下的性能变动。&lt;/p&gt;

&lt;p&gt;测试：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;同步 -1 1秒+
同步 1  1秒+
同步 0  1秒+
异步 -1 0.2ms 几乎瞬间完成
异步 1  0.2ms 几乎瞬间完成
异步 0  0.2ms 几乎瞬间完成
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;结论：性能只在于是否将客户端设置成异步写入，acks对性能的影响微乎其微。&lt;/p&gt;

&lt;p&gt;但上述的测试是在MAC本地环境进行的，有几项因素不够稳定：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;kafka集群的内存很小&lt;/li&gt;
  &lt;li&gt;磁盘IO和实际情况差别较大&lt;/li&gt;
  &lt;li&gt;集群规模过小&lt;/li&gt;
  &lt;li&gt;partition数量很少（集群和partition数量很小能够部分解释为什么acks的改动基本上不影响性能）&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;因此上述测试的结论主要是参考价值，不能作为最终结论。如果后续需要严谨结论的话，需要在真实机器上测试，并需要开启go的profiling，观察下kafka类库中的写入到底是怎么完成的，以及kafka集群的响应情况。此外，即便是模拟集群1秒左右的同步写入速度也实在是太慢了，后续还需要深入profiling，到底这1秒做了什么（无论是kafka还是go客户端）。&lt;/p&gt;

&lt;h1 id=&quot;10-todo&quot;&gt;10. TODO&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;深入研究Kafka的监控Metrics&lt;/li&gt;
  &lt;li&gt;Kafka集群同步写入性能较低的原因解析&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;资料&quot;&gt;资料&lt;/h1&gt;
&lt;h2 id=&quot;链接&quot;&gt;链接&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.kubiji.cn/book/apache_kafka/APACHEKAFKAJiaoCheng/APACHEKAFKAGaiShu.html&quot; target=&quot;_blank&quot;&gt;Apache kafka中文手册&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.infoq.cn/article/distributed-queue-programme-model-actual-combat-optimization&quot; target=&quot;_blank&quot;&gt;分布式队列编程：从模型、实战到优化&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MjM5NjQ5MTI5OA==&amp;amp;mid=2651745361&amp;amp;idx=1&amp;amp;sn=5f0f67484a0de4b0dd2796848ef9cc94&quot; target=&quot;_blank&quot;&gt;分布式队列编程优化篇&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.jianshu.com/p/7a6deaba34d2&quot; target=&quot;_blank&quot;&gt;如何保证消息队列的高可用和幂等性以及数据丢失，顺序一致性&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.infoq.cn/article/kafka-vs-rabbitmq&quot; target=&quot;_blank&quot;&gt;消息中间件选型分析：从 Kafka 与 RabbitMQ 的对比看全局&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.infoq.cn/article/dXJ3EYIp*WaHfmVwlMeu&quot; target=&quot;_blank&quot;&gt;滴滴出行基于 RocketMQ 构建企业级消息队列服务的实践&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/39586635/why-is-kafka-pull-based-instead-of-push-based&quot; target=&quot;_blank&quot;&gt;Why is Kafka pull-based instead of push-based?&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://medium.com/@philipfeng/modern-open-source-messaging-apache-kafka-rabbitmq-nats-pulsar-and-nsq-ca3bf7422db5&quot; target=&quot;_blank&quot;&gt;Modern Open Source Messaging: NATS, RabbitMQ, Apache Kafka, hmbdc, Synapse, NSQ and Pulsar&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.cnblogs.com/huxi2b/p/6223228.html&quot; target=&quot;_blank&quot;&gt;Kafka消费组(consumer group)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/45175424/how-multiple-consumer-group-consumers-work-across-partition-on-the-same-topic-in&quot; target=&quot;_blank&quot;&gt;How multiple consumer group consumers work across partition on the same topic in Kafka?&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://blog.csdn.net/pursuer211/article/details/79799478&quot; target=&quot;_blank&quot;&gt;kafka中partition和消费者对应关系&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://medium.com/@danieljameskay/understanding-the-enable-auto-commit-kafka-consumer-property-12fa0ade7b65&quot; target=&quot;_blank&quot;&gt;Understanding the ‘enable.auto.commit’ Kafka Consumer property&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.datadoghq.com/blog/monitoring-kafka-performance-metrics/&quot; target=&quot;_blank&quot;&gt;Monitoring Kafka performance metrics - P1&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.datadoghq.com/blog/collecting-kafka-performance-metrics/&quot; target=&quot;_blank&quot;&gt;Monitoring Kafka performance metrics - P2&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/danielqsj/kafka_exporter&quot; target=&quot;_blank&quot;&gt;danielqsj/kafka_exporter&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.confluent.io/current/kafka/monitoring.html&quot; target=&quot;_blank&quot;&gt;Monitoring Kafka&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.infoq.cn/article/depth-interpretation-of-kafka-data-reliability&quot; target=&quot;_blank&quot;&gt;Kafka 数据可靠性深度解读&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://better-coding.com/building-apache-kafka-cluster-using-docker-compose-and-virtualbox/&quot; target=&quot;_blank&quot;&gt;Building Apache Kafka cluster using docker-compose and VirtualBox&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.kaaproject.org/kafka-docker&quot; target=&quot;_blank&quot;&gt;Deploying a Kafka broker in a Docker container&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.confluent.io/current/kafka/deployment.html&quot; target=&quot;_blank&quot;&gt;Running Kafka in Production&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/47388267&quot; target=&quot;_blank&quot;&gt;比拼Kafka，大数据分析新秀Pulsar到底好在哪&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.slideshare.net/merlimat/high-performance-messaging-with-apache-pulsar&quot; target=&quot;_blank&quot;&gt;High performance messaging with Apache Pulsar&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.infoq.cn/article/Us*a8umKXT9LpV9hA6tF&quot; target=&quot;_blank&quot;&gt;选择 Pulsar 而不是 Kafka 的 7 大理由&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/prometheus/jmx_exporter&quot; target=&quot;_blank&quot;&gt;prometheus/jmx_exporter&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://hub.docker.com/r/sscaling/jmx-prometheus-exporter&quot; target=&quot;_blank&quot;&gt;sscaling/jmx-prometheus-exporter&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/danielqsj/kafka_exporter&quot; target=&quot;_blank&quot;&gt;danielqsj/kafka_exporter&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://hub.docker.com/r/danielqsj/kafka-exporter&quot; target=&quot;_blank&quot;&gt;danielqsj/kafka-exporter&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/oded-dd/prometheus-jmx-kafka&quot; target=&quot;_blank&quot;&gt;oded-dd/prometheus-jmx-kafka&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/Mousavi310/kafka-grafana&quot; target=&quot;_blank&quot;&gt;Mousavi310/kafka-grafana&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;EOF&lt;/p&gt;
&lt;/blockquote&gt;
</description>
				<pubDate>Mon, 29 Apr 2019 10:01:22 +0800</pubDate>
				<link>https://xenojoshua.com/2019/04/kafka-note/</link>
				<guid isPermaLink="true">https://xenojoshua.com/2019/04/kafka-note/</guid>
			</item>
		
			<item>
				<title>消息队列设计精要 - 美团点评技术团队</title>
				<description>&lt;h4&gt;Table of Contents&lt;/h4&gt;
&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#前言&quot; id=&quot;markdown-toc-前言&quot;&gt;前言&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#正文&quot; id=&quot;markdown-toc-正文&quot;&gt;正文&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#1-何时需要消息队列&quot; id=&quot;markdown-toc-1-何时需要消息队列&quot;&gt;1. 何时需要消息队列&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#11-解耦&quot; id=&quot;markdown-toc-11-解耦&quot;&gt;1.1 解耦&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#12-最终一致性&quot; id=&quot;markdown-toc-12-最终一致性&quot;&gt;1.2 最终一致性&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#13-广播&quot; id=&quot;markdown-toc-13-广播&quot;&gt;1.3 广播&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#14-错峰与流控&quot; id=&quot;markdown-toc-14-错峰与流控&quot;&gt;1.4 错峰与流控&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#2-如何设计一个消息队列&quot; id=&quot;markdown-toc-2-如何设计一个消息队列&quot;&gt;2. 如何设计一个消息队列&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#21-综述&quot; id=&quot;markdown-toc-21-综述&quot;&gt;2.1 综述&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#22-实现队列基本功能&quot; id=&quot;markdown-toc-22-实现队列基本功能&quot;&gt;2.2 实现队列基本功能&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#221-rpc通信协议&quot; id=&quot;markdown-toc-221-rpc通信协议&quot;&gt;2.2.1 RPC通信协议&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#222-高可用&quot; id=&quot;markdown-toc-222-高可用&quot;&gt;2.2.2 高可用&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#223-服务端承载消息堆积的能力&quot; id=&quot;markdown-toc-223-服务端承载消息堆积的能力&quot;&gt;2.2.3 服务端承载消息堆积的能力&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#224-存储子系统的选择&quot; id=&quot;markdown-toc-224-存储子系统的选择&quot;&gt;2.2.4 存储子系统的选择&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#225-消费关系解析&quot; id=&quot;markdown-toc-225-消费关系解析&quot;&gt;2.2.5 消费关系解析&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#23-队列高级特性设计&quot; id=&quot;markdown-toc-23-队列高级特性设计&quot;&gt;2.3 队列高级特性设计&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#231-可靠投递最终一致性&quot; id=&quot;markdown-toc-231-可靠投递最终一致性&quot;&gt;2.3.1 可靠投递（最终一致性）&lt;/a&gt;            &lt;ul&gt;
              &lt;li&gt;&lt;a href=&quot;#2311-消费确认&quot; id=&quot;markdown-toc-2311-消费确认&quot;&gt;2.3.1.1 消费确认&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href=&quot;#2312-重复消息和顺序消息&quot; id=&quot;markdown-toc-2312-重复消息和顺序消息&quot;&gt;2.3.1.2 重复消息和顺序消息&lt;/a&gt;                &lt;ul&gt;
                  &lt;li&gt;&lt;a href=&quot;#版本号&quot; id=&quot;markdown-toc-版本号&quot;&gt;版本号&lt;/a&gt;&lt;/li&gt;
                  &lt;li&gt;&lt;a href=&quot;#状态机&quot; id=&quot;markdown-toc-状态机&quot;&gt;状态机&lt;/a&gt;&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
              &lt;li&gt;&lt;a href=&quot;#2313-中间件对于重复消息的处理&quot; id=&quot;markdown-toc-2313-中间件对于重复消息的处理&quot;&gt;2.3.1.3 中间件对于重复消息的处理&lt;/a&gt;&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#232-事务&quot; id=&quot;markdown-toc-232-事务&quot;&gt;2.3.2 事务&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#233-性能相关&quot; id=&quot;markdown-toc-233-性能相关&quot;&gt;2.3.3 性能相关&lt;/a&gt;            &lt;ul&gt;
              &lt;li&gt;&lt;a href=&quot;#2331-异步同步&quot; id=&quot;markdown-toc-2331-异步同步&quot;&gt;2.3.3.1 异步/同步&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href=&quot;#2332-批量&quot; id=&quot;markdown-toc-2332-批量&quot;&gt;2.3.3.2 批量&lt;/a&gt;&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#24-push还是pull&quot; id=&quot;markdown-toc-24-push还是pull&quot;&gt;2.4 push还是pull&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#241-慢消费&quot; id=&quot;markdown-toc-241-慢消费&quot;&gt;2.4.1 慢消费&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#242-消息延迟与忙等&quot; id=&quot;markdown-toc-242-消息延迟与忙等&quot;&gt;2.4.2 消息延迟与忙等&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#243-顺序消息&quot; id=&quot;markdown-toc-243-顺序消息&quot;&gt;2.4.3 顺序消息&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#3-总结&quot; id=&quot;markdown-toc-3-总结&quot;&gt;3. 总结&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#作者简介&quot; id=&quot;markdown-toc-作者简介&quot;&gt;作者简介&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;前言&quot;&gt;前言&lt;/h1&gt;

&lt;p&gt;本文源自美团点评技术团队博客，但似乎是因为博客改版的原因，之前本文的链接失效了。我因为有剪藏文章的习惯，因此有幸没有丢失原文内容。而最近在写的消息队列文章中，我希望引用部分内容，而网上已经不好找原文了，因此无奈之下在这里做一份备份转载。&lt;/p&gt;

&lt;h1 id=&quot;正文&quot;&gt;正文&lt;/h1&gt;

&lt;p&gt;消息队列已经逐渐成为企业IT系统内部通信的核心手段。它具有低耦合、可靠投递、广播、流量控制、最终一致性等一系列功能，成为异步RPC的主要手段之一。&lt;/p&gt;

&lt;p&gt;当今市面上有很多主流的消息中间件，如老牌的ActiveMQ、RabbitMQ，炙手可热的Kafka，阿里巴巴自主开发的Notify、MetaQ、RocketMQ等。&lt;/p&gt;

&lt;p&gt;本文不会一一介绍这些消息队列的所有特性，而是探讨一下自主开发设计一个消息队列时，你需要思考和设计的重要方面。过程中我们会参考这些成熟消息队列的很多重要思想。&lt;/p&gt;

&lt;p&gt;本文首先会阐述什么时候你需要一个消息队列，然后以Push模型为主，从零开始分析设计一个消息队列时需要考虑到的问题，如RPC、高可用、顺序和重复消息、可靠投递、消费关系解析等。&lt;/p&gt;

&lt;p&gt;也会分析以Kafka为代表的pull模型所具备的优点。最后是一些高级主题，如用批量/异步提高性能、pull模型的系统设计理念、存储子系统的设计、流量控制的设计、公平调度的实现等。其中最后四个方面会放在下篇讲解。&lt;/p&gt;

&lt;h1 id=&quot;1-何时需要消息队列&quot;&gt;1. 何时需要消息队列&lt;/h1&gt;

&lt;p&gt;当你需要使用消息队列时，首先需要考虑它的必要性。可以使用mq的场景有很多，最常用的几种，是做业务解耦/最终一致性/广播/错峰流控等。反之，如果需要强一致性，关注业务逻辑的处理结果，则RPC显得更为合适。&lt;/p&gt;

&lt;h2 id=&quot;11-解耦&quot;&gt;1.1 解耦&lt;/h2&gt;

&lt;p&gt;解耦是消息队列要解决的最本质问题。所谓解耦，简单点讲就是一个事务，只关心核心的流程。而需要依赖其他系统但不那么重要的事情，有通知即可，无需等待结果。换句话说，基于消息的模型，关心的是“通知”，而非“处理”。&lt;/p&gt;

&lt;p&gt;比如在美团旅游，我们有一个产品中心，产品中心上游对接的是主站、移动后台、旅游供应链等各个数据源；下游对接的是筛选系统、API系统等展示系统。当上游的数据发生变更的时候，如果不使用消息系统，势必要调用我们的接口来更新数据，就特别依赖产品中心接口的稳定性和处理能力。但其实，作为旅游的产品中心，也许只有对于旅游自建供应链，产品中心更新成功才是他们关心的事情。而对于团购等外部系统，产品中心更新成功也好、失败也罢，并不是他们的职责所在。他们只需要保证在信息变更的时候通知到我们就好了。&lt;/p&gt;

&lt;p&gt;而我们的下游，可能有更新索引、刷新缓存等一系列需求。对于产品中心来说，这也不是我们的职责所在。说白了，如果他们定时来拉取数据，也能保证数据的更新，只是实时性没有那么强。但使用接口方式去更新他们的数据，显然对于产品中心来说太过于“重量级”了，只需要发布一个产品ID变更的通知，由下游系统来处理，可能更为合理。&lt;/p&gt;

&lt;p&gt;再举一个例子，对于我们的订单系统，订单最终支付成功之后可能需要给用户发送短信积分什么的，但其实这已经不是我们系统的核心流程了。如果外部系统速度偏慢（比如短信网关速度不好），那么主流程的时间会加长很多，用户肯定不希望点击支付过好几分钟才看到结果。那么我们只需要通知短信系统“我们支付成功了”，不一定非要等待它处理完成。&lt;/p&gt;

&lt;h2 id=&quot;12-最终一致性&quot;&gt;1.2 最终一致性&lt;/h2&gt;

&lt;p&gt;最终一致性指的是两个系统的状态保持一致，要么都成功，要么都失败。当然有个时间限制，理论上越快越好，但实际上在各种异常的情况下，可能会有一定延迟达到最终一致状态，但最后两个系统的状态是一样的。&lt;/p&gt;

&lt;p&gt;业界有一些为“最终一致性”而生的消息队列，如Notify（阿里）、QMQ（去哪儿）等，其设计初衷，就是为了交易系统中的高可靠通知。&lt;/p&gt;

&lt;p&gt;以一个银行的转账过程来理解最终一致性，转账的需求很简单，如果A系统扣钱成功，则B系统加钱一定成功。反之则一起回滚，像什么都没发生一样。&lt;/p&gt;

&lt;p&gt;然而，这个过程中存在很多可能的意外：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;A扣钱成功，调用B加钱接口失败。&lt;/li&gt;
  &lt;li&gt;A扣钱成功，调用B加钱接口虽然成功，但获取最终结果时网络异常引起超时。&lt;/li&gt;
  &lt;li&gt;A扣钱成功，B加钱失败，A想回滚扣的钱，但A机器down机。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;可见，想把这件看似简单的事真正做成，真的不那么容易。所有跨VM的一致性问题，从技术的角度讲通用的解决方案是：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;强一致性，分布式事务，但落地太难且成本太高，后文会具体提到。&lt;/li&gt;
  &lt;li&gt;最终一致性，主要是用“记录”和“补偿”的方式。在做所有的不确定的事情之前，先把事情记录下来，然后去做不确定的事情，结果可能是：成功、失败或是不确定，“不确定”（例如超时等）可以等价为失败。成功就可以把记录的东西清理掉了，对于失败和不确定，可以依靠定时任务等方式把所有失败的事情重新搞一遍，直到成功为止。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;回到刚才的例子，系统在A扣钱成功的情况下，把要给B“通知”这件事记录在库里（为了保证最高的可靠性可以把通知B系统加钱和扣钱成功这两件事维护在一个本地事务里），通知成功则删除这条记录，通知失败或不确定则依靠定时任务补偿性地通知我们，直到我们把状态更新成正确的为止。&lt;/p&gt;

&lt;p&gt;整个这个模型依然可以基于RPC来做，但可以抽象成一个统一的模型，基于消息队列来做一个“企业总线”。&lt;/p&gt;

&lt;p&gt;具体来说，本地事务维护业务变化和通知消息，一起落地（失败则一起回滚），然后RPC到达broker，在broker成功落地后，RPC返回成功，本地消息可以删除。否则本地消息一直靠定时任务轮询不断重发，这样就保证了消息可靠落地broker。&lt;/p&gt;

&lt;p&gt;Broker往consumer发送消息的过程类似，一直发送消息，直到consumer发送消费成功确认。&lt;/p&gt;

&lt;p&gt;我们先不理会重复消息的问题，通过两次消息落地加补偿，下游是一定可以收到消息的。然后依赖状态机版本号等方式做判重，更新自己的业务，就实现了最终一致性。&lt;/p&gt;

&lt;p&gt;最终一致性不是消息队列的必备特性，但确实可以依靠消息队列来做最终一致性的事情。另外，所有不保证100%不丢消息的消息队列，理论上无法实现最终一致性。好吧，应该说理论上的100%，排除系统严重故障和bug。&lt;/p&gt;

&lt;p&gt;像Kafka一类的设计，在设计层面上就有丢消息的可能（比如定时刷盘，如果掉电就会丢消息）。哪怕只丢千分之一的消息，业务也必须用其他的手段来保证结果正确。&lt;/p&gt;

&lt;h2 id=&quot;13-广播&quot;&gt;1.3 广播&lt;/h2&gt;

&lt;p&gt;消息队列的基本功能之一是进行广播。如果没有消息队列，每当一个新的业务方接入，我们都要联调一次新接口。有了消息队列，我们只需要关心消息是否送达了队列，至于谁希望订阅，是下游的事情，无疑极大地减少了开发和联调的工作量。&lt;/p&gt;

&lt;p&gt;比如本文开始提到的产品中心发布产品变更的消息，以及景点库很多去重更新的消息，可能“关心”方有很多个，但产品中心和景点库只需要发布变更消息即可，谁关心谁接入。&lt;/p&gt;

&lt;h2 id=&quot;14-错峰与流控&quot;&gt;1.4 错峰与流控&lt;/h2&gt;

&lt;p&gt;试想上下游对于事情的处理能力是不同的。比如，Web前端每秒承受上千万的请求，并不是什么神奇的事情，只需要加多一点机器，再搭建一些LVS负载均衡设备和Nginx等即可。但数据库的处理能力却十分有限，即使使用SSD加分库分表，单机的处理能力仍然在万级。由于成本的考虑，我们不能奢求数据库的机器数量追上前端。&lt;/p&gt;

&lt;p&gt;这种问题同样存在于系统和系统之间，如短信系统可能由于短板效应，速度卡在网关上（每秒几百次请求），跟前端的并发量不是一个数量级。但用户晚上个半分钟左右收到短信，一般是不会有太大问题的。如果没有消息队列，两个系统之间通过协商、滑动窗口等复杂的方案也不是说不能实现。但系统复杂性指数级增长，势必在上游或者下游做存储，并且要处理定时、拥塞等一系列问题。而且每当有处理能力有差距的时候，都需要单独开发一套逻辑来维护这套逻辑。所以，利用中间系统转储两个系统的通信内容，并在下游系统有能力处理这些消息的时候，再处理这些消息，是一套相对较通用的方式。&lt;/p&gt;

&lt;p&gt;总而言之，消息队列不是万能的。对于需要强事务保证而且延迟敏感的，RPC是优于消息队列的。&lt;/p&gt;

&lt;p&gt;对于一些无关痛痒，或者对于别人非常重要但是对于自己不是那么关心的事情，可以利用消息队列去做。&lt;/p&gt;

&lt;p&gt;支持最终一致性的消息队列，能够用来处理延迟不那么敏感的“分布式事务”场景，而且相对于笨重的分布式事务，可能是更优的处理方式。&lt;/p&gt;

&lt;p&gt;当上下游系统处理能力存在差距的时候，利用消息队列做一个通用的“漏斗”。在下游有能力处理的时候，再进行分发。如果下游有很多系统关心你的系统发出的通知的时候，果断地使用消息队列吧。&lt;/p&gt;

&lt;h1 id=&quot;2-如何设计一个消息队列&quot;&gt;2. 如何设计一个消息队列&lt;/h1&gt;

&lt;h2 id=&quot;21-综述&quot;&gt;2.1 综述&lt;/h2&gt;

&lt;p&gt;我们现在明确了消息队列的使用场景，下一步就是如何设计实现一个消息队列了。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/resources/2019/04/message-queue-design/message-queue-01.png&quot; alt=&quot;01&quot; target=&quot;_blank&quot; /&gt;&lt;/p&gt;

&lt;p&gt;基于消息的系统模型，不一定需要broker(消息队列服务端)。市面上的的Akka（actor模型）、ZeroMQ等，其实都是基于消息的系统设计范式，但是没有broker。&lt;/p&gt;

&lt;p&gt;我们之所以要设计一个消息队列，并且配备broker，无外乎要做两件事情：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;消息的转储，在更合适的时间点投递，或者通过一系列手段辅助消息最终能送达消费机。&lt;/li&gt;
  &lt;li&gt;规范一种范式和通用的模式，以满足解耦、最终一致性、错峰等需求。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;掰开了揉碎了看，最简单的消息队列可以做成一个消息转发器，把一次RPC做成两次RPC。发送者把消息投递到服务端（以下简称broker），服务端再将消息转发一手到接收端，就是这么简单。&lt;/p&gt;

&lt;p&gt;一般来讲，设计消息队列的整体思路是先build一个整体的数据流,例如producer发送给broker,broker发送给consumer,consumer回复消费确认，broker删除/备份消息等。&lt;/p&gt;

&lt;p&gt;利用RPC将数据流串起来。然后考虑RPC的高可用性，尽量做到无状态，方便水平扩展。&lt;/p&gt;

&lt;p&gt;之后考虑如何承载消息堆积，然后在合适的时机投递消息，而处理堆积的最佳方式，就是存储，存储的选型需要综合考虑性能/可靠性和开发维护成本等诸多因素。&lt;/p&gt;

&lt;p&gt;为了实现广播功能，我们必须要维护消费关系，可以利用zk/config server等保存消费关系。&lt;/p&gt;

&lt;p&gt;在完成了上述几个功能后，消息队列基本就实现了。然后我们可以考虑一些高级特性，如可靠投递，事务特性，性能优化等。&lt;/p&gt;

&lt;p&gt;下面我们会以设计消息队列时重点考虑的模块为主线，穿插灌输一些消息队列的特性实现方法，来具体分析设计实现一个消息队列时的方方面面。&lt;/p&gt;

&lt;h2 id=&quot;22-实现队列基本功能&quot;&gt;2.2 实现队列基本功能&lt;/h2&gt;

&lt;h3 id=&quot;221-rpc通信协议&quot;&gt;2.2.1 RPC通信协议&lt;/h3&gt;

&lt;p&gt;刚才讲到，所谓消息队列，无外乎两次RPC加一次转储，当然需要消费端最终做消费确认的情况是三次RPC。既然是RPC，就必然牵扯出一系列话题，什么负载均衡啊、服务发现啊、通信协议啊、序列化协议啊，等等。在这一块，我的强烈建议是不要重复造轮子。利用公司现有的RPC框架：Thrift也好，Dubbo也好，或者是其他自定义的框架也好。因为消息队列的RPC，和普通的RPC没有本质区别。当然了，自主利用Memchached或者Redis协议重新写一套RPC框架并非不可（如MetaQ使用了自己封装的Gecko NIO框架，卡夫卡也用了类似的协议）。但实现成本和难度无疑倍增。排除对效率的极端要求，都可以使用现成的RPC框架。&lt;/p&gt;

&lt;p&gt;简单来讲，服务端提供两个RPC服务，一个用来接收消息，一个用来确认消息收到。并且做到不管哪个server收到消息和确认消息，结果一致即可。当然这中间可能还涉及跨IDC的服务的问题。这里和RPC的原则是一致的，尽量优先选择本机房投递。你可能会问，如果producer和consumer本身就在两个机房了，怎么办？首先，broker必须保证感知的到所有consumer的存在。其次，producer尽量选择就近的机房就好了。&lt;/p&gt;

&lt;h3 id=&quot;222-高可用&quot;&gt;2.2.2 高可用&lt;/h3&gt;

&lt;p&gt;其实所有的高可用，是依赖于RPC和存储的高可用来做的。先来看RPC的高可用，美团的基于MTThrift的RPC框架，阿里的Dubbo等，其本身就具有服务自动发现，负载均衡等功能。而消息队列的高可用，只要保证broker接受消息和确认消息的接口是幂等的，并且consumer的几台机器处理消息是幂等的，这样就把消息队列的可用性，转交给RPC框架来处理了。&lt;/p&gt;

&lt;p&gt;那么怎么保证幂等呢？最简单的方式莫过于共享存储。broker多机器共享一个DB或者一个分布式文件/kv系统，则处理消息自然是幂等的。就算有单点故障，其他节点可以立刻顶上。另外failover可以依赖定时任务的补偿，这是消息队列本身天然就可以支持的功能。存储系统本身的可用性我们不需要操太多心，放心大胆的交给DBA们吧！&lt;/p&gt;

&lt;p&gt;对于不共享存储的队列，如Kafka使用分区加主备模式，就略微麻烦一些。需要保证每一个分区内的高可用性，也就是每一个分区至少要有一个主备且需要做数据的同步，关于这块HA的细节，可以参考下篇pull模型消息系统设计。&lt;/p&gt;

&lt;h3 id=&quot;223-服务端承载消息堆积的能力&quot;&gt;2.2.3 服务端承载消息堆积的能力&lt;/h3&gt;

&lt;p&gt;消息到达服务端如果不经过任何处理就到接收者了，broker就失去了它的意义。为了满足我们错峰/流控/最终可达等一系列需求，把消息存储下来，然后选择时机投递就显得是顺理成章的了。&lt;/p&gt;

&lt;p&gt;只是这个存储可以做成很多方式。比如存储在内存里，存储在分布式KV里，存储在磁盘里，存储在数据库里等等。但归结起来，主要有持久化和非持久化两种。&lt;/p&gt;

&lt;p&gt;持久化的形式能更大程度地保证消息的可靠性（如断电等不可抗外力），并且理论上能承载更大限度的消息堆积（外存的空间远大于内存）。&lt;/p&gt;

&lt;p&gt;但并不是每种消息都需要持久化存储。很多消息对于投递性能的要求大于可靠性的要求，且数量极大（如日志）。这时候，消息不落地直接暂存内存，尝试几次failover，最终投递出去也未尝不可。&lt;/p&gt;

&lt;p&gt;市面上的消息队列普遍两种形式都支持。当然具体的场景还要具体结合公司的业务来看。&lt;/p&gt;

&lt;h3 id=&quot;224-存储子系统的选择&quot;&gt;2.2.4 存储子系统的选择&lt;/h3&gt;

&lt;p&gt;我们来看看如果需要数据落地的情况下各种存储子系统的选择。理论上，从速度来看，文件系统&amp;gt;分布式KV（持久化）&amp;gt;分布式文件系统&amp;gt;数据库，而可靠性却截然相反。还是要从支持的业务场景出发作出最合理的选择，如果你们的消息队列是用来支持支付/交易等对可靠性要求非常高，但对性能和量的要求没有这么高，而且没有时间精力专门做文件存储系统的研究，DB是最好的选择。&lt;/p&gt;

&lt;p&gt;但是DB受制于IOPS，如果要求单broker 5位数以上的QPS性能，基于文件的存储是比较好的解决方案。整体上可以采用数据文件+索引文件的方式处理，具体这块的设计比较复杂，可以参考下篇的存储子系统设计。&lt;/p&gt;

&lt;p&gt;分布式KV（如MongoDB，HBase）等，或者持久化的Redis，由于其编程接口较友好，性能也比较可观，如果在可靠性要求不是那么高的场景，也不失为一个不错的选择。&lt;/p&gt;

&lt;h3 id=&quot;225-消费关系解析&quot;&gt;2.2.5 消费关系解析&lt;/h3&gt;

&lt;p&gt;现在我们的消息队列初步具备了转储消息的能力。下面一个重要的事情就是解析发送接收关系，进行正确的消息投递了。&lt;/p&gt;

&lt;p&gt;市面上的消息队列定义了一堆让人晕头转向的名词，如JMS 规范中的Topic/Queue，Kafka里面的Topic/Partition/ConsumerGroup，RabbitMQ里面的Exchange等等。抛开现象看本质，无外乎是单播与广播的区别。所谓单播，就是点到点；而广播，是一点对多点。当然，对于互联网的大部分应用来说，组间广播、组内单播是最常见的情形。&lt;/p&gt;

&lt;p&gt;消息需要通知到多个业务集群，而一个业务集群内有很多台机器，只要一台机器消费这个消息就可以了。&lt;/p&gt;

&lt;p&gt;当然这不是绝对的，很多时候组内的广播也是有适用场景的，如本地缓存的更新等等。另外，消费关系除了组内组间，可能会有多级树状关系。这种情况太过于复杂，一般不列入考虑范围。所以，一般比较通用的设计是支持组间广播，不同的组注册不同的订阅。组内的不同机器，如果注册一个相同的ID，则单播；如果注册不同的ID(如IP地址+端口)，则广播。&lt;/p&gt;

&lt;p&gt;至于广播关系的维护，一般由于消息队列本身都是集群，所以都维护在公共存储上，如config server、zookeeper等。维护广播关系所要做的事情基本是一致的:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;发送关系的维护。&lt;/li&gt;
  &lt;li&gt;发送关系变更时的通知。&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;23-队列高级特性设计&quot;&gt;2.3 队列高级特性设计&lt;/h2&gt;

&lt;p&gt;上面都是些消息队列基本功能的实现，下面来看一些关于消息队列特性相关的内容，不管可靠投递/消息丢失与重复以及事务乃至于性能，不是每个消息队列都会照顾到，所以要依照业务的需求，来仔细衡量各种特性实现的成本，利弊，最终做出最为合理的设计。&lt;/p&gt;

&lt;h3 id=&quot;231-可靠投递最终一致性&quot;&gt;2.3.1 可靠投递（最终一致性）&lt;/h3&gt;

&lt;p&gt;这是个激动人心的话题，完全不丢消息，究竟可不可能？答案是，完全可能，前提是消息可能会重复，并且，在异常情况下，要接受消息的延迟。&lt;/p&gt;

&lt;p&gt;方案说简单也简单，就是每当要发生不可靠的事情（RPC等）之前，先将消息落地，然后发送。当失败或者不知道成功失败（比如超时）时，消息状态是待发送，定时任务不停轮询所有待发送消息，最终一定可以送达。&lt;/p&gt;

&lt;p&gt;具体来说：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;producer往broker发送消息之前，需要做一次落地。&lt;/li&gt;
  &lt;li&gt;请求到server后，server确保数据落地后再告诉客户端发送成功。&lt;/li&gt;
  &lt;li&gt;支持广播的消息队列需要对每个待发送的endpoint，持久化一个发送状态，直到所有endpoint状态都OK才可删除消息。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;对于各种不确定（超时、down机、消息没有送达、送达后数据没落地、数据落地了回复没收到），其实对于发送方来说，都是一件事情，就是消息没有送达。&lt;/p&gt;

&lt;p&gt;重推消息所面临的问题就是消息重复。重复和丢失就像两个噩梦，你必须要面对一个。好在消息重复还有处理的机会，消息丢失再想找回就难了。&lt;/p&gt;

&lt;p&gt;Anyway，作为一个成熟的消息队列，应该尽量在各个环节减少重复投递的可能性，不能因为重复有解决方案就放纵的乱投递。&lt;/p&gt;

&lt;p&gt;最后说一句，不是所有的系统都要求最终一致性或者可靠投递，比如一个论坛系统、一个招聘系统。一个重复的简历或话题被发布，可能比丢失了一个发布显得更让用户无法接受。不断重复一句话，任何基础组件要服务于业务场景。&lt;/p&gt;

&lt;h4 id=&quot;2311-消费确认&quot;&gt;2.3.1.1 消费确认&lt;/h4&gt;

&lt;p&gt;当broker把消息投递给消费者后，消费者可以立即响应我收到了这个消息。但收到了这个消息只是第一步，我能不能处理这个消息却不一定。或许因为消费能力的问题，系统的负荷已经不能处理这个消息；或者是刚才状态机里面提到的消息不是我想要接收的消息，主动要求重发。&lt;/p&gt;

&lt;p&gt;把消息的送达和消息的处理分开，这样才真正的实现了消息队列的本质-解耦。所以，允许消费者主动进行消费确认是必要的。当然，对于没有特殊逻辑的消息，默认Auto Ack也是可以的，但一定要允许消费方主动ack。&lt;/p&gt;

&lt;p&gt;对于正确消费ack的，没什么特殊的。但是对于reject和error，需要特别说明。reject这件事情，往往业务方是无法感知到的，系统的流量和健康状况的评估，以及处理能力的评估是一件非常复杂的事情。举个极端的例子，收到一个消息开始build索引，可能这个消息要处理半个小时，但消息量却是非常的小。所以reject这块建议做成滑动窗口/线程池类似的模型来控制，消费能力不匹配的时候，直接拒绝，过一段时间重发，减少业务的负担。&lt;/p&gt;

&lt;p&gt;但业务出错这件事情是只有业务方自己知道的，就像上文提到的状态机等等。这时应该允许业务方主动ack error，并可以与broker约定下次投递的时间。&lt;/p&gt;

&lt;h4 id=&quot;2312-重复消息和顺序消息&quot;&gt;2.3.1.2 重复消息和顺序消息&lt;/h4&gt;

&lt;p&gt;上文谈到重复消息是不可能100%避免的，除非可以允许丢失，那么，顺序消息能否100%满足呢? 答案是可以，但条件更为苛刻：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;允许消息丢失。&lt;/li&gt;
  &lt;li&gt;从发送方到服务方到接受者都是单点单线程。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;所以绝对的顺序消息基本上是不能实现的，当然在METAQ/Kafka等pull模型的消息队列中，单线程生产/消费，排除消息丢失，也是一种顺序消息的解决方案。&lt;/p&gt;

&lt;p&gt;一般来讲，一个主流消息队列的设计范式里，应该是不丢消息的前提下，尽量减少重复消息，不保证消息的投递顺序。&lt;/p&gt;

&lt;p&gt;谈到重复消息，主要是两个话题：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;如何鉴别消息重复，并幂等的处理重复消息。&lt;/li&gt;
  &lt;li&gt;一个消息队列如何尽量减少重复消息的投递。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;先来看看第一个话题，每一个消息应该有它的唯一身份。不管是业务方自定义的，还是根据IP/PID/时间戳生成的MessageId，如果有地方记录这个MessageId，消息到来是能够进行比对就能完成重复的鉴定。数据库的唯一键/bloom filter/分布式KV中的key，都是不错的选择。由于消息不能被永久存储，所以理论上都存在消息从持久化存储移除的瞬间上游还在投递的可能（上游因种种原因投递失败，不停重试，都到了下游清理消息的时间）。这种事情都是异常情况下才会发生的，毕竟是小众情况。两分钟消息都还没送达，多送一次又能怎样呢？幂等的处理消息是一门艺术，因为种种原因重复消息或者错乱的消息还是来到了，说两种通用的解决方案：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;版本号。&lt;/li&gt;
  &lt;li&gt;状态机。&lt;/li&gt;
&lt;/ol&gt;

&lt;h5 id=&quot;版本号&quot;&gt;版本号&lt;/h5&gt;

&lt;p&gt;举个简单的例子，一个产品的状态有上线/下线状态。如果消息1是下线，消息2是上线。不巧消息1判重失败，被投递了两次，且第二次发生在2之后，如果不做重复性判断，显然最终状态是错误的。&lt;/p&gt;

&lt;p&gt;但是，如果每个消息自带一个版本号。上游发送的时候，标记消息1版本号是1，消息2版本号是2。如果再发送下线消息，则版本号标记为3。下游对于每次消息的处理，同时维护一个版本号。&lt;/p&gt;

&lt;p&gt;每次只接受比当前版本号大的消息。初始版本为0，当消息1到达时，将版本号更新为1。消息2到来时，因为版本号&amp;gt;1.可以接收，同时更新版本号为2.当另一条下线消息到来时，如果版本号是3.则是真实的下线消息。如果是1，则是重复投递的消息。&lt;/p&gt;

&lt;p&gt;如果业务方只关心消息重复不重复，那么问题就已经解决了。但很多时候另一个头疼的问题来了，就是消息顺序如果和想象的顺序不一致。比如应该的顺序是12，到来的顺序是21。则最后会发生状态错误。&lt;/p&gt;

&lt;p&gt;参考TCP/IP协议，如果想让乱序的消息最后能够正确的被组织，那么就应该只接收比当前版本号大一的消息。并且在一个session周期内要一直保存各个消息的版本号。&lt;/p&gt;

&lt;p&gt;如果到来的顺序是21，则先把2存起来，待2到来后，再处理1，这样重复性和顺序性要求就都达到了。&lt;/p&gt;

&lt;h5 id=&quot;状态机&quot;&gt;状态机&lt;/h5&gt;

&lt;p&gt;基于版本号来处理重复和顺序消息听起来是个不错的主意，但凡事总有瑕疵。使用版本号的最大问题是：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;对发送方必须要求消息带业务版本号。&lt;/li&gt;
  &lt;li&gt;下游必须存储消息的版本号，对于要严格保证顺序的。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;还不能只存储最新的版本号的消息，要把乱序到来的消息都存储起来。而且必须要对此做出处理。试想一个永不过期的”session”，比如一个物品的状态，会不停流转于上下线。那么中间环节的所有存储就必须保留，直到在某个版本号之前的版本一个不丢的到来，成本太高。&lt;/p&gt;

&lt;p&gt;就刚才的场景看，如果消息没有版本号，该怎么解决呢？业务方只需要自己维护一个状态机，定义各种状态的流转关系。例如，”下线”状态只允许接收”上线”消息，“上线”状态只能接收“下线消息”，如果上线收到上线消息，或者下线收到下线消息，在消息不丢失和上游业务正确的前提下。要么是消息发重了，要么是顺序到达反了。这时消费者只需要把“我不能处理这个消息”告诉投递者，要求投递者过一段时间重发即可。而且重发一定要有次数限制，比如5次，避免死循环，就解决了。&lt;/p&gt;

&lt;p&gt;举例子说明，假设产品本身状态是下线，1是上线消息，2是下线消息，3是上线消息，正常情况下，消息应该的到来顺序是123，但实际情况下收到的消息状态变成了3123。&lt;/p&gt;

&lt;p&gt;那么下游收到3消息的时候，判断状态机流转是下线-&amp;gt;上线，可以接收消息。然后收到消息1，发现是上线-&amp;gt;上线，拒绝接收，要求重发。然后收到消息2，状态是上线-&amp;gt;下线，于是接收这个消息。&lt;/p&gt;

&lt;p&gt;此时无论重发的消息1或者3到来，还是可以接收。另外的重发，在一定次数拒绝后停止重发，业务正确。&lt;/p&gt;

&lt;h4 id=&quot;2313-中间件对于重复消息的处理&quot;&gt;2.3.1.3 中间件对于重复消息的处理&lt;/h4&gt;

&lt;p&gt;回归到消息队列的话题来讲。上述通用的版本号/状态机/ID判重解决方案里，哪些是消息队列该做的、哪些是消息队列不该做业务方处理的呢？其实这里没有一个完全严格的定义，但回到我们的出发点，我们保证不丢失消息的情况下尽量少重复消息，消费顺序不保证。那么重复消息下和乱序消息下业务的正确，应该是由消费方保证的，我们要做的是减少消息发送的重复。&lt;/p&gt;

&lt;p&gt;我们无法定义业务方的业务版本号/状态机，如果API里强制需要指定版本号，则显得过于绑架客户了。况且，在消费方维护这么多状态，就涉及到一个消费方的消息落地/多机间的同步消费状态问题，复杂度指数级上升，而且只能解决部分问题。&lt;/p&gt;

&lt;p&gt;减少重复消息的关键步骤：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;broker记录MessageId，直到投递成功后清除，重复的ID到来不做处理，这样只要发送者在清除周期内能够感知到消息投递成功，就基本不会在server端产生重复消息。&lt;/li&gt;
  &lt;li&gt;对于server投递到consumer的消息，由于不确定对端是在处理过程中还是消息发送丢失的情况下，有必要记录下投递的IP地址。决定重发之前询问这个IP，消息处理成功了吗？如果询问无果，再重发。&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;232-事务&quot;&gt;2.3.2 事务&lt;/h3&gt;

&lt;p&gt;持久性是事务的一个特性，然而只满足持久性却不一定能满足事务的特性。还是拿扣钱/加钱的例子讲。满足事务的一致性特征，则必须要么都不进行，要么都能成功。&lt;/p&gt;

&lt;p&gt;解决方案从大方向上有两种：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;两阶段提交，分布式事务。&lt;/li&gt;
  &lt;li&gt;本地事务，本地落地，补偿发送。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;分布式事务存在的最大问题是成本太高，两阶段提交协议，对于仲裁down机或者单点故障，几乎是一个无解的黑洞。对于交易密集型或者I/O密集型的应用，没有办法承受这么高的网络延迟，系统复杂性。&lt;/p&gt;

&lt;p&gt;并且成熟的分布式事务一定构建与比较靠谱的商用DB和商用中间件上，成本也太高。&lt;/p&gt;

&lt;p&gt;那如何使用本地事务解决分布式事务的问题呢？以本地和业务在一个数据库实例中建表为例子，与扣钱的业务操作同一个事务里，将消息插入本地数据库。如果消息入库失败，则业务回滚；如果消息入库成功，事务提交。&lt;/p&gt;

&lt;p&gt;然后发送消息（注意这里可以实时发送，不需要等定时任务检出，以提高消息实时性）。以后的问题就是前文的最终一致性问题所提到的了，只要消息没有发送成功，就一直靠定时任务重试。&lt;/p&gt;

&lt;p&gt;这里有一个关键的点，本地事务做的，是业务落地和消息落地的事务，而不是业务落地和RPC成功的事务。这里很多人容易混淆，如果是后者，无疑是事务嵌套RPC，是大忌，会有长事务死锁等各种风险。&lt;/p&gt;

&lt;p&gt;而消息只要成功落地，很大程度上就没有丢失的风险（磁盘物理损坏除外）。而消息只要投递到服务端确认后本地才做删除，就完成了producer-&amp;gt;broker的可靠投递，并且当消息存储异常时，业务也是可以回滚的。&lt;/p&gt;

&lt;p&gt;本地事务存在两个最大的使用障碍：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;配置较为复杂，“绑架”业务方，必须本地数据库实例提供一个库表。&lt;/li&gt;
  &lt;li&gt;对于消息延迟高敏感的业务不适用。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;话说回来，不是每个业务都需要强事务的。扣钱和加钱需要事务保证，但下单和生成短信却不需要事务，不能因为要求发短信的消息存储投递失败而要求下单业务回滚。所以，一个完整的消息队列应该定义清楚自己可以投递的消息类型，如事务型消息，本地非持久型消息，以及服务端不落地的非可靠消息等。对不同的业务场景做不同的选择。另外事务的使用应该尽量低成本、透明化，可以依托于现有的成熟框架，如Spring的声明式事务做扩展。业务方只需要使用@Transactional标签即可。&lt;/p&gt;

&lt;h3 id=&quot;233-性能相关&quot;&gt;2.3.3 性能相关&lt;/h3&gt;

&lt;h4 id=&quot;2331-异步同步&quot;&gt;2.3.3.1 异步/同步&lt;/h4&gt;

&lt;p&gt;首先澄清一个概念，异步，同步和oneway是三件事。异步，归根结底你还是需要关心结果的，但可能不是当时的时间点关心，可以用轮询或者回调等方式处理结果；同步是需要当时关心的结果的；而oneway是发出去就不管死活的方式，这种对于某些完全对可靠性没有要求的场景还是适用的，但不是我们重点讨论的范畴。&lt;/p&gt;

&lt;p&gt;回归来看，任何的RPC都是存在客户端异步与服务端异步的，而且是可以任意组合的：客户端同步对服务端异步，客户端异步对服务端异步，客户端同步对服务端同步，客户端异步对服务端同步。&lt;/p&gt;

&lt;p&gt;对于客户端来说，同步与异步主要是拿到一个Result，还是Future(Listenable)的区别。实现方式可以是线程池，NIO或者其他事件机制，这里先不展开讲。&lt;/p&gt;

&lt;p&gt;服务端异步可能稍微难理解一点，这个是需要RPC协议支持的。参考servlet 3.0规范，服务端可以吐一个future给客户端，并且在future done的时候通知客户端。&lt;/p&gt;

&lt;p&gt;整个过程可以参考下面的代码：&lt;/p&gt;

&lt;p&gt;客户端同步服务端异步。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Future&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;future&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;server&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// server立刻返回future&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;synchronized&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;future&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;future&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isDone&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
       &lt;span class=&quot;n&quot;&gt;future&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;wait&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// server处理结束后会notify这个future，并修改isdone标志&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;future&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;客户端同步服务端同步。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Result&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;server&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;客户端异步服务端同步(这里用线程池的方式)。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Future&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;future&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;executor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;submit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Callable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;call&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;server&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;future&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;客户端异步服务端异步。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Future&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;future&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;server&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// server立刻返回future&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;future&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;上面说了这么多，其实是想让大家脱离两个误区：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;RPC只有客户端能做异步，服务端不能。&lt;/li&gt;
  &lt;li&gt;异步只能通过线程池。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;那么，服务端使用异步最大的好处是什么呢？说到底，是解放了线程和I/O。试想服务端有一堆I/O等待处理，如果每个请求都需要同步响应，每条消息都需要结果立刻返回，那么就几乎没法做I/O合并（当然接口可以设计成batch的，但可能batch发过来的仍然数量较少）。而如果用异步的方式返回给客户端future，就可以有机会进行I/O的合并，把几个批次发过来的消息一起落地（这种合并对于MySQL等允许batch insert的数据库效果尤其明显），并且彻底释放了线程。不至于说来多少请求开多少线程，能够支持的并发量直线提高。&lt;/p&gt;

&lt;p&gt;来看第二个误区，返回future的方式不一定只有线程池。换句话说，可以在线程池里面进行同步操作，也可以进行异步操作，也可以不使用线程池使用异步操作（NIO、事件）。&lt;/p&gt;

&lt;p&gt;回到消息队列的议题上，我们当然不希望消息的发送阻塞主流程（前面提到了，server端如果使用异步模型，则可能因消息合并带来一定程度上的消息延迟），所以可以先使用线程池提交一个发送请求，主流程继续往下走。&lt;/p&gt;

&lt;p&gt;但是线程池中的请求关心结果吗？Of course，必须等待服务端消息成功落地，才算是消息发送成功。所以这里的模型，准确地说事客户端半同步半异步（使用线程池不阻塞主流程，但线程池中的任务需要等待server端的返回），server端是纯异步。客户端的线程池wait在server端吐回的future上，直到server端处理完毕，才解除阻塞继续进行。&lt;/p&gt;

&lt;p&gt;总结一句，同步能够保证结果，异步能够保证效率，要合理的结合才能做到最好的效率。&lt;/p&gt;

&lt;h4 id=&quot;2332-批量&quot;&gt;2.3.3.2 批量&lt;/h4&gt;

&lt;p&gt;谈到批量就不得不提生产者消费者模型。但生产者消费者模型中最大的痛点是：消费者到底应该何时进行消费。大处着眼来看，消费动作都是事件驱动的。主要事件包括：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;攒够了一定数量。&lt;/li&gt;
  &lt;li&gt;到达了一定时间。&lt;/li&gt;
  &lt;li&gt;队列里有新的数据到来。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;对于及时性要求高的数据，可用采用方式3来完成，比如客户端向服务端投递数据。只要队列有数据，就把队列中的所有数据刷出，否则将自己挂起，等待新数据的到来。&lt;/p&gt;

&lt;p&gt;在第一次把队列数据往外刷的过程中，又积攒了一部分数据，第二次又可以形成一个批量。伪代码如下:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Executor&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;executor&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Executors&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;newFixedThreadPool&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BlockingQueue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Message&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;queue&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ArrayBlockingQueue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;gt;();&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Runnable&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;task&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Runnable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 这里由于共享队列，Runnable可以复用，故做成全局的&lt;/span&gt;
   &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Message&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;messages&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ArrayList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;queue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;drainTo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;messages&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;，&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;doSend&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;messages&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 阻塞，在这个过程中会有新的消息到来，如果4个线程都占满，队列就有机会囤新的消息&lt;/span&gt;
   &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;});&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Message&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;queue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;offer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;executor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;submit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;task&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;这种方式是消息延迟和批量的一个比较好的平衡，但优先响应低延迟。延迟的最高程度由上一次发送的等待时间决定。但可能造成的问题是发送过快的话批量的大小不够满足性能的极致。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Executor&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;executor&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Executors&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;newFixedThreadPool&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BlockingQueue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Message&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;queue&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ArrayBlockingQueue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;gt;();&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;volatile&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;last&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;currentMills&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;Executors&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;newSingleThreadScheduledExecutor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;submit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Runnable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;n&quot;&gt;flush&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;，&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;500&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;，&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;500&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;，&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TimeUnits&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;MILLS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Runnable&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;task&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Runnable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 这里由于共享队列，Runnable可以复用，顾做成全局的。&lt;/span&gt;
   &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Message&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;messages&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ArrayList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;queue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;drainTo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;messages&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;，&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;doSend&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;messages&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 阻塞，在这个过程中会有新的消息到来，如果4个线程都占满，队列就有机会屯新的消息。&lt;/span&gt;
   &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;});&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Message&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;last&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;currentMills&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;queue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;offer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;flush&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;flush&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;queue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;size&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;currentMills&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;last&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
       &lt;span class=&quot;n&quot;&gt;executor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;submit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;task&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;相反对于可以用适量的延迟来换取高性能的场景来说，用定时/定量二选一的方式可能会更为理想，既到达一定数量才发送，但如果数量一直达不到，也不能干等，有一个时间上限。&lt;/p&gt;

&lt;p&gt;具体说来，在上文的submit之前，多判断一个时间和数量，并且Runnable内部维护一个定时器，避免没有新任务到来时旧的任务永远没有机会触发发送条件。对于server端的数据落地，使用这种方式就非常方便。&lt;/p&gt;

&lt;p&gt;最后啰嗦几句，曾经有人问我，为什么网络请求小包合并成大包会提高性能？主要原因有两个：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;减少无谓的请求头，如果你每个请求只有几字节，而头却有几十字节，无疑效率非常低下。&lt;/li&gt;
  &lt;li&gt;减少回复的ack包个数。把请求合并后，ack包数量必然减少，确认和重发的成本就会降低。&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;24-push还是pull&quot;&gt;2.4 push还是pull&lt;/h2&gt;

&lt;p&gt;上文提到的消息队列，大多是针对push模型的设计。现在市面上有很多经典的也比较成熟的pull模型的消息队列，如Kafka、MetaQ等。这跟JMS中传统的push方式有很大的区别，可谓另辟蹊径。&lt;/p&gt;

&lt;p&gt;我们简要分析下push和pull模型各自存在的利弊。&lt;/p&gt;

&lt;h3 id=&quot;241-慢消费&quot;&gt;2.4.1 慢消费&lt;/h3&gt;

&lt;p&gt;慢消费无疑是push模型最大的致命伤，穿成流水线来看，如果消费者的速度比发送者的速度慢很多，势必造成消息在broker的堆积。假设这些消息都是有用的无法丢弃的，消息就要一直在broker端保存。当然这还不是最致命的，最致命的是broker给consumer推送一堆consumer无法处理的消息，consumer不是reject就是error，然后来回踢皮球。&lt;/p&gt;

&lt;p&gt;反观pull模式，consumer可以按需消费，不用担心自己处理不了的消息来骚扰自己，而broker堆积消息也会相对简单，无需记录每一个要发送消息的状态，只需要维护所有消息的队列和偏移量就可以了。所以对于建立索引等慢消费，消息量有限且到来的速度不均匀的情况，pull模式比较合适。&lt;/p&gt;

&lt;h3 id=&quot;242-消息延迟与忙等&quot;&gt;2.4.2 消息延迟与忙等&lt;/h3&gt;

&lt;p&gt;这是pull模式最大的短板。由于主动权在消费方，消费方无法准确地决定何时去拉取最新的消息。如果一次pull取到消息了还可以继续去pull，如果没有pull取到则需要等待一段时间重新pull。&lt;/p&gt;

&lt;p&gt;但等待多久就很难判定了。你可能会说，我可以有xx动态pull取时间调整算法，但问题的本质在于，有没有消息到来这件事情决定权不在消费方。也许1分钟内连续来了1000条消息，然后半个小时没有新消息产生，可能你的算法算出下次最有可能到来的时间点是31分钟之后，或者60分钟之后，结果下条消息10分钟后到了，是不是很让人沮丧？当然也不是说延迟就没有解决方案了，业界较成熟的做法是从短时间开始（不会对broker有太大负担），然后指数级增长等待。比如开始等5ms，然后10ms，然后20ms，然后40ms……直到有消息到来，然后再回到5ms。&lt;/p&gt;

&lt;p&gt;即使这样，依然存在延迟问题：假设40ms到80ms之间的50ms消息到来，消息就延迟了30ms，而且对于半个小时来一次的消息，这些开销就是白白浪费的。&lt;/p&gt;

&lt;p&gt;在阿里的RocketMq里，有一种优化的做法-长轮询，来平衡推拉模型各自的缺点。基本思路是:消费者如果尝试拉取失败，不是直接return,而是把连接挂在那里wait,服务端如果有新的消息到来，把连接notify起来，这也是不错的思路。但海量的长连接block对系统的开销还是不容小觑的，还是要合理的评估时间间隔，给wait加一个时间上限比较好~&lt;/p&gt;

&lt;h3 id=&quot;243-顺序消息&quot;&gt;2.4.3 顺序消息&lt;/h3&gt;

&lt;p&gt;如果push模式的消息队列，支持分区，单分区只支持一个消费者消费，并且消费者只有确认一个消息消费后才能push送另外一个消息，还要发送者保证全局顺序唯一，听起来也能做顺序消息，但成本太高了，尤其是必须每个消息消费确认后才能发下一条消息，这对于本身堆积能力和慢消费就是瓶颈的push模式的消息队列，简直是一场灾难。&lt;/p&gt;

&lt;p&gt;反观pull模式，如果想做到全局顺序消息，就相对容易很多：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;producer对应partition，并且单线程。&lt;/li&gt;
  &lt;li&gt;consumer对应partition，消费确认（或批量确认），继续消费即可。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;所以对于日志push送这种最好全局有序，但允许出现小误差的场景，pull模式非常合适。如果你不想看到通篇乱套的日志~~Anyway，需要顺序消息的场景还是比较有限的而且成本太高，请慎重考虑。&lt;/p&gt;

&lt;h1 id=&quot;3-总结&quot;&gt;3. 总结&lt;/h1&gt;

&lt;p&gt;本文从为何使用消息队列开始讲起，然后主要介绍了如何从零开始设计一个消息队列，包括RPC、事务、最终一致性、广播、消息确认等关键问题。并对消息队列的push、pull模型做了简要分析，最后从批量和异步角度，分析了消息队列性能优化的思路。下篇会着重介绍一些高级话题，如存储系统的设计、流控和错峰的设计、公平调度等。希望通过这些，让大家对消息队列有个提纲挈领的整体认识，并给自主开发消息队列提供思路。另外，本文主要是源自自己在开发消息队列中的思考和读源码时的体会，比较不”官方”，也难免会存在一些漏洞，欢迎大家多多交流。&lt;/p&gt;

&lt;p&gt;后续我们还会推出消息队列设计高级篇，内容会涵盖以下方面：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;pull模型消息系统设计理念&lt;/li&gt;
  &lt;li&gt;存储子系统设计&lt;/li&gt;
  &lt;li&gt;流量控制&lt;/li&gt;
  &lt;li&gt;公平调度&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;敬请期待哦~&lt;/p&gt;

&lt;h2 id=&quot;作者简介&quot;&gt;作者简介&lt;/h2&gt;

&lt;p&gt;王烨，现在是美团旅游后台研发组的程序猿，之前曾经在百度、去哪和优酷工作过，专注Java后台开发。对于网络编程和并发编程具有浓厚的兴趣，曾经做过一些基础组件，也翻过一些源码，属于比较典型的宅男技术控。期待能够与更多知己，在coding的路上并肩前行~&lt;/p&gt;
</description>
				<pubDate>Fri, 26 Apr 2019 10:01:22 +0800</pubDate>
				<link>https://xenojoshua.com/2019/04/message-queue-design/</link>
				<guid isPermaLink="true">https://xenojoshua.com/2019/04/message-queue-design/</guid>
			</item>
		
	</channel>
</rss>
