<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
	<channel>
		<title>Xenojoshua</title>
		<description>Joshua's Xeno World!</description>
		<link>https://xenojoshua.com</link>
		<atom:link href="https://xenojoshua.com/feed.xml" rel="self" type="application/rss+xml" />
		
			<item>
				<title>支付宝接入</title>
				<description>&lt;h4&gt;Table of Contents&lt;/h4&gt;
&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#1-前言&quot; id=&quot;markdown-toc-1-前言&quot;&gt;1. 前言&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#2-支付流程&quot; id=&quot;markdown-toc-2-支付流程&quot;&gt;2. 支付流程&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#21-网页端&quot; id=&quot;markdown-toc-21-网页端&quot;&gt;2.1 网页端&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#22-移动原生&quot; id=&quot;markdown-toc-22-移动原生&quot;&gt;2.2 移动原生&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#3-准备工作&quot; id=&quot;markdown-toc-3-准备工作&quot;&gt;3. 准备工作&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#31-账号申请&quot; id=&quot;markdown-toc-31-账号申请&quot;&gt;3.1 账号申请&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#32-应用申请&quot; id=&quot;markdown-toc-32-应用申请&quot;&gt;3.2 应用申请&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#33-秘钥申请&quot; id=&quot;markdown-toc-33-秘钥申请&quot;&gt;3.3 秘钥申请&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#4-api--sdk&quot; id=&quot;markdown-toc-4-api--sdk&quot;&gt;4. API &amp;amp; SDK&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#41-sdk选择&quot; id=&quot;markdown-toc-41-sdk选择&quot;&gt;4.1 SDK选择&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#42-api使用基础&quot; id=&quot;markdown-toc-42-api使用基础&quot;&gt;4.2 API使用基础&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#43-常用接口&quot; id=&quot;markdown-toc-43-常用接口&quot;&gt;4.3 常用接口&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#431-pc网页支付下单&quot; id=&quot;markdown-toc-431-pc网页支付下单&quot;&gt;4.3.1 PC网页支付下单&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#432-app支付下单&quot; id=&quot;markdown-toc-432-app支付下单&quot;&gt;4.3.2 APP支付下单&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#433-支付宝订单查询&quot; id=&quot;markdown-toc-433-支付宝订单查询&quot;&gt;4.3.3 支付宝订单查询&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#44-回调处理&quot; id=&quot;markdown-toc-44-回调处理&quot;&gt;4.4 回调处理&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#441-return_url&quot; id=&quot;markdown-toc-441-return_url&quot;&gt;4.4.1 return_url&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#442-notify_url&quot; id=&quot;markdown-toc-442-notify_url&quot;&gt;4.4.2 notify_url&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#5-沙箱使用&quot; id=&quot;markdown-toc-5-沙箱使用&quot;&gt;5. 沙箱使用&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#51-沙箱申请&quot; id=&quot;markdown-toc-51-沙箱申请&quot;&gt;5.1 沙箱申请&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#52-沙箱管理&quot; id=&quot;markdown-toc-52-沙箱管理&quot;&gt;5.2 沙箱管理&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#53-沙箱支付&quot; id=&quot;markdown-toc-53-沙箱支付&quot;&gt;5.3 沙箱支付&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#6-错误处理&quot; id=&quot;markdown-toc-6-错误处理&quot;&gt;6. 错误处理&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#61-回调处理&quot; id=&quot;markdown-toc-61-回调处理&quot;&gt;6.1 回调处理&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#62-修复订单&quot; id=&quot;markdown-toc-62-修复订单&quot;&gt;6.2 修复订单&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#7-上线生效&quot; id=&quot;markdown-toc-7-上线生效&quot;&gt;7. 上线生效&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#appendix&quot; id=&quot;markdown-toc-appendix&quot;&gt;Appendix&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#链接&quot; id=&quot;markdown-toc-链接&quot;&gt;链接&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;1-前言&quot;&gt;1. 前言&lt;/h1&gt;
&lt;p&gt;支付宝的接入，权当笔记。&lt;/p&gt;

&lt;h1 id=&quot;2-支付流程&quot;&gt;2. 支付流程&lt;/h1&gt;
&lt;h3 id=&quot;21-网页端&quot;&gt;2.1 网页端&lt;/h3&gt;
&lt;p&gt;PC网页端的支付，官方文档在：&lt;a href=&quot;https://docs.open.alipay.com/270/105899/&quot; target=&quot;_blank&quot;&gt;开发文档 / 电脑网站支付 / 快速接入&lt;/a&gt;。这篇应该说是完整的tutorial，里面也包含了支付的整个流程。&lt;/p&gt;

&lt;p&gt;官方配图：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/resources/2019/12/alipay/alipay_pc_process.png&quot; alt=&quot;&quot; target=&quot;_blank&quot; /&gt;&lt;/p&gt;

&lt;p&gt;总觉得支付宝的这个流程图有点问题，并没有很好解释流程顺序。这里整理一个文字版。&lt;/p&gt;

&lt;p&gt;流程涉及到几个角色：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;PC网站网页&lt;/li&gt;
  &lt;li&gt;PC网站后台&lt;/li&gt;
  &lt;li&gt;支付宝系统&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;支付流程如下：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;用户&lt;/code&gt;打开PC网站网页的商品页&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;用户&lt;/code&gt;对商品进行下单&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;PC网站网页&lt;/code&gt;发送下单请求到PC网站后台&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;PC网站后台&lt;/code&gt;在自身系统内生成订单（生成内部订单号），并返回给网页&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;PC网站网页&lt;/code&gt;获得内部订单信息，并将用户导向到支付页面&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;用户&lt;/code&gt;确认订单内容，并开始付款流程&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;PC网站网页&lt;/code&gt;发起支付请求到PC网站后台&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;PC网站后台&lt;/code&gt;向支付宝系统发起下单请求
    &lt;ul&gt;
      &lt;li&gt;其中附加了notify_url，会在支付完成后收到回调&lt;/li&gt;
      &lt;li&gt;且附加了return_url，会在支付完成后将页面导向到该页面&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;code&gt;PC网站后台&lt;/code&gt;将支付宝返回的信息交付给PC网站网页&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;PC网站网页&lt;/code&gt;收到支付宝返回信息，使用其中的信息将页面导向到支付宝的付款页面&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;用户&lt;/code&gt;在支付宝的付款页面完成付款&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;支付宝系统&lt;/code&gt;确认支付完成，将用户网页重定向到return_url的页面&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;支付宝系统&lt;/code&gt;确认支付完成，向notify_url发送回调信息&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;PC网站后台&lt;/code&gt;验证支付宝回调完成，标记订单状态为已支付&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;22-移动原生&quot;&gt;2.2 移动原生&lt;/h3&gt;
&lt;p&gt;移动端原生支付和PC网页支付差异不是很大，官方文档在：&lt;a href=&quot;https://docs.open.alipay.com/204/105297/&quot; target=&quot;_blank&quot;&gt;开发文档 / App支付 / 快速接入&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;官方配图：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/resources/2019/12/alipay/alipay_native_process.png&quot; alt=&quot;&quot; target=&quot;_blank&quot; /&gt;&lt;/p&gt;

&lt;p&gt;这个图还算可以，老样子整理一个文字版。&lt;/p&gt;

&lt;p&gt;流程涉及到几个角色：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;手机APP&lt;/li&gt;
  &lt;li&gt;APP后台&lt;/li&gt;
  &lt;li&gt;支付宝系统&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;支付流程如下：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;用户&lt;/code&gt;打开手机APP的商品页&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;用户&lt;/code&gt;对商品进行下单&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;手机APP&lt;/code&gt;发送下单请求到APP后台&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;APP后台&lt;/code&gt;在自身系统内生成订单（生成内部订单号），并返回给APP&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;手机APP&lt;/code&gt;获得内部订单信息，并将用户导向到支付页面&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;用户&lt;/code&gt;确认订单内容，并开始付款流程&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;手机APP&lt;/code&gt;发起支付请求到APP后台&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;APP后台&lt;/code&gt;向支付宝系统发起下单请求，获得支付宝APP唤醒参数，并交付给手机APP
    &lt;ul&gt;
      &lt;li&gt;其中附加了notify_url，会在支付完成后收到回调&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;code&gt;手机APP&lt;/code&gt;收到支付宝返回信息，使用其中的参数唤醒支付宝APP&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;用户&lt;/code&gt;在支付宝APP完成付款&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;支付宝系统&lt;/code&gt;确认支付完成，返回手机APP&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;支付宝系统&lt;/code&gt;确认支付完成，向notify_url发送回调信息&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;APP后台&lt;/code&gt;验证支付宝回调完成，标记订单状态为已支付&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;3-准备工作&quot;&gt;3. 准备工作&lt;/h1&gt;
&lt;p&gt;在正式接入支付宝之前，还需要做一些准备工作，主要是一系列账号、应用、秘钥的申请。&lt;/p&gt;

&lt;h2 id=&quot;31-账号申请&quot;&gt;3.1 账号申请&lt;/h2&gt;
&lt;p&gt;公司账号申请都是老板做的事情，虽然繁琐但和技术人员没什么关系。创建完成后可以通过&lt;a href=&quot;https://docs.open.alipay.com/200/ug05sr/&quot; target=&quot;_blank&quot;&gt;账户成员管理&lt;/a&gt;将员工账号加入到管理群组里，方便员工直接进行开发。&lt;/p&gt;

&lt;p&gt;员工可以通过&lt;a href=&quot;https://openhome.alipay.com/platform/manageHome.htm&quot; target=&quot;_blank&quot;&gt;这个链接&lt;/a&gt;，登入到支付宝进行账号和应用的管理。&lt;/p&gt;

&lt;h2 id=&quot;32-应用申请&quot;&gt;3.2 应用申请&lt;/h2&gt;
&lt;p&gt;见官方文档：&lt;a href=&quot;https://docs.open.alipay.com/200/105310&quot; target=&quot;_blank&quot;&gt;开发文档 / 开发指南 / 创建应用&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;刚创建出来的应用是没有任何功能的，支付宝的各种功能（包括最基础的支付功能）都是支付应用下的&lt;code&gt;应用功能&lt;/code&gt;，一般来说每个都需要单独开通，某些开通还需要一定的条件，比如说网页支付开通的话你必须首先要有一个已经上线的网页而且要有明确的支付功能（申请失败如下）。等等。见：&lt;a href=&quot;https://docs.open.alipay.com/200/105314/&quot; target=&quot;_blank&quot;&gt;签约功能&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/resources/2019/12/alipay/alipay_pc_app_failure.png&quot; alt=&quot;&quot; target=&quot;_blank&quot; /&gt;&lt;/p&gt;

&lt;p&gt;在这一步最重要的是要把支付应用的APP_ID记录下来。&lt;/p&gt;

&lt;h2 id=&quot;33-秘钥申请&quot;&gt;3.3 秘钥申请&lt;/h2&gt;
&lt;p&gt;见官方文档：&lt;a href=&quot;https://docs.open.alipay.com/291/105971/&quot; target=&quot;_blank&quot;&gt;开发文档 / 签名专区 / 第一步：生成 RSA 密钥&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;官方有提供一个工具&lt;code&gt;支付宝开放平台开发助手&lt;/code&gt;，可以用这个工具进行秘钥制作，比较方便：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://ideservice.alipay.com/ide/getPluginUrl.htm?clientType=assistant&amp;amp;platform=win&amp;amp;channelType=WEB&quot; target=&quot;_blank&quot;&gt;WIN版本&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://ideservice.alipay.com/ide/getPluginUrl.htm?clientType=assistant&amp;amp;platform=mac&amp;amp;channelType=WEB&quot; target=&quot;_blank&quot;&gt;MAC版本&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;后续研发上遇到签名问题可以参考：&lt;a href=&quot;https://docs.open.alipay.com/291/106096/&quot; target=&quot;_blank&quot;&gt;自助排查&lt;/a&gt;以及&lt;a href=&quot;https://docs.open.alipay.com/291/106098/&quot; target=&quot;_blank&quot;&gt;常见问题&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;这一步操作完成后应该会获得三个文件，需要妥善保存：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;alipay的公钥
    &lt;ul&gt;
      &lt;li&gt;文件以&lt;code&gt;-----BEGIN PUBLIC KEY-----&lt;/code&gt;开头&lt;/li&gt;
      &lt;li&gt;文件以&lt;code&gt;-----END PUBLIC KEY-----&lt;/code&gt;结尾&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;应用的公钥
    &lt;ul&gt;
      &lt;li&gt;文件以&lt;code&gt;-----BEGIN PUBLIC KEY-----&lt;/code&gt;开头&lt;/li&gt;
      &lt;li&gt;文件以&lt;code&gt;-----END PUBLIC KEY-----&lt;/code&gt;结尾&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;应用的私钥
    &lt;ul&gt;
      &lt;li&gt;文件以&lt;code&gt;-----BEGIN RSA PRIVATE KEY-----&lt;/code&gt;开头&lt;/li&gt;
      &lt;li&gt;文件以&lt;code&gt;-----END RSA PRIVATE KEY-----&lt;/code&gt;结尾&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;下载下来的公钥和私钥都是不断行的连续字符串，还需要借助像是&lt;a href=&quot;https://www.samltool.com/format_privatekey.php&quot; target=&quot;_blank&quot;&gt;Online tool to format private key. - SAMLTool.com&lt;/a&gt;这样的工具进行格式转换，断行。如果没有文件头和文件尾的话，还需要手动添加。&lt;/p&gt;

&lt;h1 id=&quot;4-api--sdk&quot;&gt;4. API &amp;amp; SDK&lt;/h1&gt;
&lt;h2 id=&quot;41-sdk选择&quot;&gt;4.1 SDK选择&lt;/h2&gt;
&lt;p&gt;Node.js进行开发的话，有两个npm库可选：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/alipay-node-sdk&quot; target=&quot;_blank&quot;&gt;alipay-node-sdk&lt;/a&gt;：这个库非官方，但维护的很好，而且使用的人也不少，可以一用&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/alipay-sdk&quot; target=&quot;_blank&quot;&gt;Alipay SDK&lt;/a&gt;：这个库是官方的，但封装得还没有上一个好，而且文档也很糟糕，但毕竟是官方的，所以还是首选&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;官方SDK的使用需要了解：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.yuque.com/chenqiu/alipay-node-sdk/config-sdk&quot; target=&quot;_blank&quot;&gt;SDK 配置&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.yuque.com/chenqiu/alipay-node-sdk/with_biz_content&quot; target=&quot;_blank&quot;&gt;包含业务参数&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.yuque.com/chenqiu/alipay-node-sdk/without_biz_content&quot; target=&quot;_blank&quot;&gt;不包含业务参数&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.yuque.com/chenqiu/alipay-node-sdk/page_api&quot; target=&quot;_blank&quot;&gt;页面类接口调用&lt;/a&gt;：其实后续PC和APP下单用的都是这种模式，调用支付宝接口后获得对应的信息，然后返回给应用客户端，让它们触发后续流程&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.yuque.com/chenqiu/alipay-node-sdk/notify_verify&quot; target=&quot;_blank&quot;&gt;通知验签&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;此外，官方SDK有一个比较严重的BUG：&lt;a href=&quot;https://github.com/alipay/alipay-sdk-nodejs-all/issues/45&quot; target=&quot;_blank&quot;&gt;设置了 passbackParams 会导致 alipaySdk.checkNotifySign 失败 #45&lt;/a&gt;，会直接影响使用，需要注意。&lt;/p&gt;

&lt;p&gt;解决方案：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;payload&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;passback_params&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;encodeURIComponent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;payload&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;passback_params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;verified&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;alipaySdk&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;checkNotifySign&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;payload&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;42-api使用基础&quot;&gt;4.2 API使用基础&lt;/h2&gt;
&lt;p&gt;官方的API文档在：&lt;a href=&quot;https://docs.open.alipay.com/api_1&quot; target=&quot;_blank&quot;&gt;支付API&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;支付宝的API的接口，参数都分为&lt;code&gt;公共请求参数&lt;/code&gt;以及&lt;code&gt;请求参数&lt;/code&gt;。简单点来说：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;公共请求参数：支付宝级别比较顶层的参数，比如说：app_id、sign等&lt;/li&gt;
  &lt;li&gt;请求参数：非公共请求参数之外的其他一切参数&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;请求参数会放在公共请求参数的&lt;code&gt;biz_content&lt;/code&gt;里，至于怎么放进去的可以不用关心，SDK都会直接封装掉。&lt;/p&gt;

&lt;p&gt;API的测试可以通过：&lt;a href=&quot;https://openhome.alipay.com/platform/demoManage.htm#/alipay.trade.page.pay&quot; target=&quot;_blank&quot;&gt;在线调试(Beta)&lt;/a&gt;来模拟使用。&lt;/p&gt;

&lt;h2 id=&quot;43-常用接口&quot;&gt;4.3 常用接口&lt;/h2&gt;
&lt;p&gt;官方SDK的初始化，沙箱和正式用的是两套秘钥，这块需要动态处理下：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-typescript&quot; data-lang=&quot;typescript&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;AlipaySdk&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;alipay-sdk/lib/alipay&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;AlipayFormData&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;alipay-sdk/lib/form&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// ...&lt;/span&gt;

&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;vendorConfig&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getVendor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Constant&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;VENDOR_ALIPAY_ID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;IVendorConfigAlipay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;isSandbox&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getRaw&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sandbox&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;notifyUrl&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;vendorConfig&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;callbackUrl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;returnUrl&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;vendorConfig&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;returnUrl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;pubKeyPath&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;LibPath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;__dirname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;../../../pem/alipay&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;isSandbox&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;sandbox/alipay.pub.txt&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;alipay.pub.txt&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;priKeyPath&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;LibPath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;__dirname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;../../../pem/alipay&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;isSandbox&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;sandbox/app.pri.txt&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;app.pri.txt&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;gateway&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;isSandbox&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;https://openapi.alipaydev.com/gateway.do&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;https://openapi.alipay.com/gateway.do&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;alipay::sdk::pubKeyPath&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;pubKeyPath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;alipay::sdk::priKeyPath&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;priKeyPath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;alipay::sdk::gateway&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;gateway&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;aliPay&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;AlipaySdk&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;appId&lt;/span&gt;: &lt;span class=&quot;kt&quot;&gt;vendorConfig.appId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;alipayPublicKey&lt;/span&gt;: &lt;span class=&quot;kt&quot;&gt;LibFs.readFileSync&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pubKeyPath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;privateKey&lt;/span&gt;: &lt;span class=&quot;kt&quot;&gt;LibFs.readFileSync&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;priKeyPath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;gateway&lt;/span&gt;: &lt;span class=&quot;kt&quot;&gt;this.gateway&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;signType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;RSA2&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;431-pc网页支付下单&quot;&gt;4.3.1 PC网页支付下单&lt;/h3&gt;
&lt;p&gt;文档在：&lt;a href=&quot;https://docs.open.alipay.com/api_1/alipay.trade.page.pay&quot; target=&quot;_blank&quot;&gt;alipay.trade.page.pay&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;范例代码：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-typescript&quot; data-lang=&quot;typescript&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;formData&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;AlipayFormData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;formData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addField&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;returnUrl&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;returnUrl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;formData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addField&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;notifyUrl&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;notifyUrl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;formData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addField&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;bizContent&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;outTradeNo&lt;/span&gt;: &lt;span class=&quot;kt&quot;&gt;orderId.toString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;productCode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;FAST_INSTANT_TRADE_PAY&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;totalAmount&lt;/span&gt;: &lt;span class=&quot;kt&quot;&gt;price&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;subject&lt;/span&gt;: &lt;span class=&quot;kt&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;body&lt;/span&gt;: &lt;span class=&quot;kt&quot;&gt;desc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;passbackParams&lt;/span&gt;: &lt;span class=&quot;kt&quot;&gt;encodeURIComponent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;JSON&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;stringify&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({}})),&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;timeoutExpress&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;floor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;seconds&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;60&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)}&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;qrPayMode&lt;/span&gt;: &lt;span class=&quot;kt&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;aliPay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&amp;quot;alipay.trade.page.pay&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{},&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;formData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;info&lt;/span&gt;: &lt;span class=&quot;kt&quot;&gt;console.log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;: &lt;span class=&quot;kt&quot;&gt;console.log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}},&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;范例返回：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;form&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;action&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;https://openapi.alipaydev.com/gateway.do?method=alipay.trade.page.pay&amp;amp;app_id=...&amp;amp;charset=utf-8&amp;amp;version=1.0&amp;amp;sign_type=RSA2&amp;amp;timestamp=2019-XX-XX%2015%3A20%3A24&amp;amp;return_url=...&amp;amp;notify_url=...&amp;amp;sign=...&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;method&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;post&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;alipaySDKSubmit1577431224474&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;alipaySDKSubmit1577431224474&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;hidden&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;alipay_sdk&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;alipay-sdk-nodejs-3.0.8&amp;quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;/&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;hidden&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;biz_content&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;{&amp;amp;quot;out_trade_no&amp;amp;quot;:143123,&amp;amp;quot;product_code&amp;amp;quot;:&amp;amp;quot;FAST_INSTANT_TRADE_PAY...}&amp;quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;form&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;forms&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;alipaySDKSubmit1577431224474&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;submit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;返回的是一个字符串，这串字符串交付给网页，让JS直接append到当前页面上，就会进行跳转（form.submit），到支付宝的页面让用户付款。&lt;/p&gt;

&lt;h3 id=&quot;432-app支付下单&quot;&gt;4.3.2 APP支付下单&lt;/h3&gt;
&lt;p&gt;文档在：&lt;a href=&quot;https://docs.open.alipay.com/api_1/alipay.trade.app.pay&quot; target=&quot;_blank&quot;&gt;alipay.trade.app.pay&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;范例代码：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-typescript&quot; data-lang=&quot;typescript&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;formData&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;AlipayFormData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;formData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setMethod&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;get&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;formData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addField&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;notifyUrl&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;notifyUrl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;formData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addField&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;bizContent&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;outTradeNo&lt;/span&gt;: &lt;span class=&quot;kt&quot;&gt;orderId.toString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;productCode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;QUICK_MSECURITY_PAY&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;totalAmount&lt;/span&gt;: &lt;span class=&quot;kt&quot;&gt;price.toString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;subject&lt;/span&gt;: &lt;span class=&quot;kt&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;body&lt;/span&gt;: &lt;span class=&quot;kt&quot;&gt;desc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;passbackParams&lt;/span&gt;: &lt;span class=&quot;kt&quot;&gt;encodeURIComponent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;JSON&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;stringify&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({}})),&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;timeoutExpress&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;floor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;seconds&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;60&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)}&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;aliPay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&amp;quot;alipay.trade.app.pay&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{},&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;formData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;info&lt;/span&gt;: &lt;span class=&quot;kt&quot;&gt;console.log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;: &lt;span class=&quot;kt&quot;&gt;console.log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}},&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;范例返回：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;&lt;/span&gt;https://openapi.alipaydev.com/gateway.do?method&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;alipay.trade.app.pay&lt;span class=&quot;p&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;app_id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;...&lt;span class=&quot;p&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;charset&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;utf-8&lt;span class=&quot;p&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;version&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;.0&lt;span class=&quot;p&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;sign_type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;RSA2&lt;span class=&quot;p&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;timestamp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;2019&lt;/span&gt;-XX-XX%2015%3A23%3A25&lt;span class=&quot;p&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;notify_url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;...&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;这一串字符串需要去掉头部的gateway：&lt;code&gt;https://openapi.alipaydev.com/gateway.do?&lt;/code&gt;，只需要把剩下的参数部分交付给移动APP即可，移动APP会使用这些参数唤醒支付宝APP。&lt;/p&gt;

&lt;h3 id=&quot;433-支付宝订单查询&quot;&gt;4.3.3 支付宝订单查询&lt;/h3&gt;
&lt;p&gt;文档在：&lt;a href=&quot;https://docs.open.alipay.com/api_1/alipay.trade.query&quot; target=&quot;_blank&quot;&gt;alipay.trade.query&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;范例代码：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-typescript&quot; data-lang=&quot;typescript&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;aliPay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;alipay.trade.query&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;bizContent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;out_trade_no&lt;/span&gt;: &lt;span class=&quot;kt&quot;&gt;orderId.toString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()},&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;info&lt;/span&gt;: &lt;span class=&quot;kt&quot;&gt;console.log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;: &lt;span class=&quot;kt&quot;&gt;console.log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}})&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;any&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;返回的结果详见官方API文档。&lt;/p&gt;

&lt;h2 id=&quot;44-回调处理&quot;&gt;4.4 回调处理&lt;/h2&gt;
&lt;h3 id=&quot;441-return_url&quot;&gt;4.4.1 return_url&lt;/h3&gt;
&lt;p&gt;在return_url上收到的参数如下：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;charset&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;utf-8&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;out_trade_no&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;143123&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;method&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;alipay.trade.page.pay.return&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;total_amount&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;0.01&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;sign&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;B5wBu/icxG9u12XyBKUu...&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;auth_app_id&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;201...422&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;version&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;1.0&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;app_id&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;201...422&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;sign_type&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;RSA2&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;seller_id&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;208...342&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;timestamp&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;2019-XX-XX 15:48:17&amp;quot;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;442-notify_url&quot;&gt;4.4.2 notify_url&lt;/h3&gt;
&lt;p&gt;在notify_url上收到的参数如下：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; 
  &lt;span class=&quot;err&quot;&gt;gmt_create:&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;quot;2019-XX-XX 15:48:01&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;err&quot;&gt;charset:&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;quot;utf-8&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;err&quot;&gt;subject:&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;quot;测试商品名&amp;quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;,&lt;/span&gt;
&lt;span class=&quot;s2&quot;&gt;  sign: &amp;quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;OMcW&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;K&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;Sy...&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;,&lt;/span&gt;
&lt;span class=&quot;s2&quot;&gt;  buyer_id: &amp;quot;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;208&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;342&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;,&lt;/span&gt;
&lt;span class=&quot;s2&quot;&gt;  body: &amp;quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;测试商品描述&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;,&lt;/span&gt;
&lt;span class=&quot;s2&quot;&gt;  invoice_amount: &amp;quot;&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.01&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;,&lt;/span&gt;
&lt;span class=&quot;s2&quot;&gt;  notify_id: &amp;quot;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2019&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;589&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;,&lt;/span&gt;
&lt;span class=&quot;s2&quot;&gt;  fund_bill_list: &amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[{&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;quot;amount\&amp;quot;:\&amp;quot;0.01\&amp;quot;,\&amp;quot;fundChannel\&amp;quot;:\&amp;quot;ALIPAYACCOUNT\&amp;quot;}]&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;err&quot;&gt;notify_type:&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;quot;trade_status_sync&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;err&quot;&gt;trade_status:&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;quot;TRADE_SUCCESS&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;err&quot;&gt;receipt_amount:&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;quot;0.01&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;err&quot;&gt;app_id:&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;quot;201...422&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;err&quot;&gt;buyer_pay_amount:&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;quot;0.01&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;err&quot;&gt;sign_type:&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;quot;RSA2&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;err&quot;&gt;seller_id:&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;quot;208...342&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;err&quot;&gt;gmt_payment:&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;quot;2019-XX-XX 15:48:15&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;err&quot;&gt;notify_time:&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;quot;2019-XX-XX 15:48:16&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;err&quot;&gt;passback_params:&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;quot;%7B%22orderId%22%3A143123%2C%22salt%22%3A%221fvwtia2k4nuszx2%22%7D&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;err&quot;&gt;version:&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;quot;1.0&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;err&quot;&gt;out_trade_no:&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;quot;143123&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;err&quot;&gt;total_amount:&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;quot;0.01&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;err&quot;&gt;trade_no:&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;quot;2019...383&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;err&quot;&gt;auth_app_id:&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;quot;201...422&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;err&quot;&gt;point_amount:&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;quot;0.00&amp;quot;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h1 id=&quot;5-沙箱使用&quot;&gt;5. 沙箱使用&lt;/h1&gt;
&lt;p&gt;官方文档在：&lt;a href=&quot;https://docs.open.alipay.com/200/105311/&quot; target=&quot;_blank&quot;&gt;开发文档 / 开发指南 / 使用沙箱环境&lt;/a&gt;。移动APP的沙箱使用还需要一些额外的调整：&lt;a href=&quot;https://docs.open.alipay.com/204/106450/&quot; target=&quot;_blank&quot;&gt;开发文档 / App支付 / 沙箱联调指南&lt;/a&gt;。&lt;/p&gt;

&lt;h2 id=&quot;51-沙箱申请&quot;&gt;5.1 沙箱申请&lt;/h2&gt;
&lt;p&gt;沙箱不需要额外申请，在支付应用创建完成之后，其沙箱自动创建完成。&lt;/p&gt;

&lt;h2 id=&quot;52-沙箱管理&quot;&gt;5.2 沙箱管理&lt;/h2&gt;
&lt;p&gt;沙箱有单独的管理页面，上面主要要处理几个事情：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;获取沙箱的APP ID；沙箱应用是单独的应用，和正式应用是隔离的，在沙箱环境使用正式应用的APP ID会告知没有该应用，反之亦然&lt;/li&gt;
  &lt;li&gt;制作沙箱单独的秘钥；该秘钥和正式环境是隔离的，需要单独制作&lt;/li&gt;
  &lt;li&gt;获取沙箱支付宝APP的账号和密码以及支付密码；在测试的时候会使用到&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;53-沙箱支付&quot;&gt;5.3 沙箱支付&lt;/h2&gt;
&lt;p&gt;沙箱环境有单独的一个调试用支付宝APP（用正常的支付宝APP扫码会失败，也无法被沙箱应用唤醒），只有android版本：&lt;a href=&quot;https://sandbox.alipaydev.com/user/downloadApp.htm&quot; target=&quot;_blank&quot;&gt;下载链接&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;在沙箱管理页面上能获取到对应的账号信息等。使用这些信息登入支付宝沙箱APP，然后就可以进行测试支付了。&lt;/p&gt;

&lt;h1 id=&quot;6-错误处理&quot;&gt;6. 错误处理&lt;/h1&gt;
&lt;h2 id=&quot;61-回调处理&quot;&gt;6.1 回调处理&lt;/h2&gt;
&lt;p&gt;无论对错，业务服务器后端都需要以&lt;code&gt;text/plain&lt;/code&gt;的格式响应，如果回调处理没有问题，就返回&lt;code&gt;success&lt;/code&gt;，如果报错，则返回&lt;code&gt;fail&lt;/code&gt;。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-typescript&quot; data-lang=&quot;typescript&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// 在这里处理业务&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;text/plain&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;body&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;success&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;text/plain&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;body&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;fail&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;62-修复订单&quot;&gt;6.2 修复订单&lt;/h2&gt;
&lt;p&gt;在某些情况下，回调可能没有收到，或者一直报错导致回调没有正常处理。表现在用户视角，就是支付完成后订单状态无法正常改为支付完成（也就不会发货）。这是很糟糕的，因此需要制作修复订单功能。&lt;/p&gt;

&lt;p&gt;客户端在检查到订单状态为等待支付之后，可以提供一个入口给用户，用户点击之后，应用后端应该向支付宝查询订单信息，如果在支付宝这里已经是&lt;code&gt;已支付&lt;/code&gt;而在应用这边还是&lt;code&gt;等待支付&lt;/code&gt;的话，就立即将业务订单改为已支付，并向用户发货。&lt;/p&gt;

&lt;h1 id=&quot;7-上线生效&quot;&gt;7. 上线生效&lt;/h1&gt;
&lt;p&gt;开发完成（甚至在这之前）就可以&lt;a href=&quot;https://docs.open.alipay.com/200/golive/&quot; target=&quot;_blank&quot;&gt;上线应用&lt;/a&gt;，之前在申请应用的时候提到过的功能开通，签约等，很大一部分都需要应用上线之后才可以做，所以这个操作可以尽早。最基础的支付功能基本上签约没什么难度，早点签约早点开通。&lt;/p&gt;

&lt;h1 id=&quot;appendix&quot;&gt;Appendix&lt;/h1&gt;
&lt;h2 id=&quot;链接&quot;&gt;链接&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://blog.csdn.net/weibo1230123/article/details/80214424&quot; target=&quot;_blank&quot;&gt;支付宝和微信的支付流程图&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.cnblogs.com/xch-yang/p/10336922.html&quot; target=&quot;_blank&quot;&gt;手把手教你接入支付宝支付&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.cnblogs.com/luckyyang/p/9517402.html&quot; target=&quot;_blank&quot;&gt;支付宝支付之扫码支付（电脑网站支付）、H5支付（手机网站支付）相关业务流程分析总结&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://my.oschina.net/u/2428791/blog/617651&quot; target=&quot;_blank&quot;&gt;支付宝支付接口中notify_url 与 return_url 的区别&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;EOF&lt;/p&gt;
&lt;/blockquote&gt;
</description>
				<pubDate>Fri, 27 Dec 2019 10:36:22 +0800</pubDate>
				<link>https://xenojoshua.com/2019/12/alipay/</link>
				<guid isPermaLink="true">https://xenojoshua.com/2019/12/alipay/</guid>
			</item>
		
			<item>
				<title>Docker Registry 的简单使用</title>
				<description>&lt;h4&gt;Table of Contents&lt;/h4&gt;
&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#1-前言&quot; id=&quot;markdown-toc-1-前言&quot;&gt;1. 前言&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#2-安装--启动&quot; id=&quot;markdown-toc-2-安装--启动&quot;&gt;2. 安装 &amp;amp; 启动&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#3-访问限制&quot; id=&quot;markdown-toc-3-访问限制&quot;&gt;3. 访问限制&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#3-api&quot; id=&quot;markdown-toc-3-api&quot;&gt;3. API&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#4-删除镜像&quot; id=&quot;markdown-toc-4-删除镜像&quot;&gt;4. 删除镜像&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;1-前言&quot;&gt;1. 前言&lt;/h1&gt;
&lt;p&gt;Docker和镜像在工作中是越来越常见了，而镜像仓库的需求也变得越来越常见。Docker官方给的解决方案是私有Registry仓库，官方也给了镜像进行对应的使用。但不得不说Docker的Registry是真的不好用：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;没有UI界面&lt;/li&gt;
  &lt;li&gt;只有很弱的访问权限限制&lt;/li&gt;
  &lt;li&gt;所有接口都必须通过HTTP请求方式进行，没有提供命令行工具等简化操作&lt;/li&gt;
  &lt;li&gt;没有删除镜像的手段&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;此外还有很多，这里就不一并列举了。&lt;/p&gt;

&lt;p&gt;因此，市面上也有不少alternative替代方案，做的最好的应该是&lt;a href=&quot;https://goharbor.io/&quot; target=&quot;_blank&quot;&gt;harbor&lt;/a&gt;。如果是大型企业或者是有比较严谨的权限控制需求的话，推荐使用harbor。&lt;/p&gt;

&lt;p&gt;但针对小公司来说，更简单快速的部署和更简单的运维是相对来说更重要的事情，因此Docker Registry的使用也是有市场的。这里就简单做下使用上的介绍。&lt;/p&gt;

&lt;h1 id=&quot;2-安装--启动&quot;&gt;2. 安装 &amp;amp; 启动&lt;/h1&gt;
&lt;p&gt;使用的还是官方的镜像：&lt;a href=&quot;https://hub.docker.com/_/registry&quot; target=&quot;_blank&quot;&gt;registry&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;官方文档在：&lt;a href=&quot;https://docs.docker.com/registry/deploying/&quot; target=&quot;_blank&quot;&gt;Deploy a registry server&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;启动命令：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;&lt;/span&gt;$ docker network create registry

$ docker run -d &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    --name docker_registry &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    --network registry &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    --restart&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;always &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    -p &lt;span class=&quot;m&quot;&gt;15000&lt;/span&gt;:5000 &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    -v /tmp/registry/auth:/data/registry/auth &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    -v /tmp/registry/data:/var/lib/registry &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    -v /tmp/registry/config.yml:/etc/docker/registry/config.yml &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    -e &lt;span class=&quot;nv&quot;&gt;REGISTRY_AUTH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;htpasswd &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    -e &lt;span class=&quot;nv&quot;&gt;REGISTRY_AUTH_HTPASSWD_REALM&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;Registry Realm&amp;quot;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    -e &lt;span class=&quot;nv&quot;&gt;REGISTRY_AUTH_HTPASSWD_PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/data/registry/auth/htpasswd &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    registry:2.7.1&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;容器内配置文件的位置：&lt;code&gt;/etc/docker/registry/config.yml&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;当前例子中使用的是没有前置proxy，并且仅设置了最简单的用户名密码访问限制的情况。关于这块的访问限制相关，更详细的内容可以查看官方文档：&lt;a href=&quot;https://docs.docker.com/registry/deploying/#restricting-access&quot; target=&quot;_blank&quot;&gt;Restricting access&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;生成秘钥可以使用命令：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;&lt;/span&gt;$ docker run --rm &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    --entrypoint htpasswd &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    registry:2.7.1 &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    -Bbn username password &amp;gt; /tmp/registry/auth/htpasswd&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;如果需要结合nginx使用的话（一般推荐这样做），需要参见：&lt;a href=&quot;https://docs.docker.com/registry/recipes/nginx/&quot; target=&quot;_blank&quot;&gt;Authenticate proxy with nginx&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;参考配置文件：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-nginx&quot; data-lang=&quot;nginx&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;events&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kn&quot;&gt;worker_connections&lt;/span&gt;  &lt;span class=&quot;mi&quot;&gt;1024&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;http&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

  &lt;span class=&quot;kn&quot;&gt;upstream&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;docker-registry&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kn&quot;&gt;server&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;registry&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;## Set a variable to help us decide if we need to add the&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;## &amp;#39;Docker-Distribution-Api-Version&amp;#39; header.&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;## The registry always sets this header.&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;## In the case of nginx performing auth, the header is unset&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;## since nginx is auth-ing before proxying.&lt;/span&gt;
  &lt;span class=&quot;kn&quot;&gt;map&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$upstream_http_docker_distribution_api_version&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$docker_distribution_api_version&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kn&quot;&gt;&amp;#39;&amp;#39;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;registry/2.0&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;kn&quot;&gt;server&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kn&quot;&gt;listen&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;443&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ssl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kn&quot;&gt;server_name&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;myregistrydomain.com&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;# SSL&lt;/span&gt;
    &lt;span class=&quot;kn&quot;&gt;ssl_certificate&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/etc/nginx/conf.d/domain.crt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kn&quot;&gt;ssl_certificate_key&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/etc/nginx/conf.d/domain.key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;# Recommendations from https://raymii.org/s/tutorials/Strong_SSL_Security_On_nginx.html&lt;/span&gt;
    &lt;span class=&quot;kn&quot;&gt;ssl_protocols&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;TLSv1.1&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;TLSv1.2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kn&quot;&gt;ssl_ciphers&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kn&quot;&gt;ssl_prefer_server_ciphers&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kn&quot;&gt;ssl_session_cache&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;shared:SSL:10m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;# disable any limits to avoid HTTP 413 for large image uploads&lt;/span&gt;
    &lt;span class=&quot;kn&quot;&gt;client_max_body_size&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;# required to avoid HTTP 411: see Issue #1486 (https://github.com/moby/moby/issues/1486)&lt;/span&gt;
    &lt;span class=&quot;kn&quot;&gt;chunked_transfer_encoding&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;kn&quot;&gt;location&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/v2/&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;# Do not allow connections from docker 1.5 and earlier&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;# docker pre-1.6.0 did not properly set the user agent on ping, catch &amp;quot;Go *&amp;quot; user agents&lt;/span&gt;
      &lt;span class=&quot;kn&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$http_user_agent&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;~&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;&amp;quot;^(docker\/1\.(3|4|5(?!\.[0-9]-dev))|Go&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;).*&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$&amp;quot;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kn&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;404&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

      &lt;span class=&quot;c1&quot;&gt;# To add basic authentication to v2 use auth_basic setting.&lt;/span&gt;
      &lt;span class=&quot;kn&quot;&gt;auth_basic&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Registry&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;realm&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;kn&quot;&gt;auth_basic_user_file&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/etc/nginx/conf.d/nginx.htpasswd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

      &lt;span class=&quot;c1&quot;&gt;## If $docker_distribution_api_version is empty, the header is not added.&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;## See the map directive above where this variable is defined.&lt;/span&gt;
      &lt;span class=&quot;kn&quot;&gt;add_header&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;Docker-Distribution-Api-Version&amp;#39;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$docker_distribution_api_version&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;always&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

      &lt;span class=&quot;kn&quot;&gt;proxy_pass&lt;/span&gt;                          &lt;span class=&quot;s&quot;&gt;http://docker-registry&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;kn&quot;&gt;proxy_set_header&lt;/span&gt;  &lt;span class=&quot;s&quot;&gt;Host&lt;/span&gt;              &lt;span class=&quot;nv&quot;&gt;$http_host&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;   &lt;span class=&quot;c1&quot;&gt;# required for docker client&amp;#39;s sake&lt;/span&gt;
      &lt;span class=&quot;kn&quot;&gt;proxy_set_header&lt;/span&gt;  &lt;span class=&quot;s&quot;&gt;X-Real-IP&lt;/span&gt;         &lt;span class=&quot;nv&quot;&gt;$remote_addr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# pass on real client&amp;#39;s IP&lt;/span&gt;
      &lt;span class=&quot;kn&quot;&gt;proxy_set_header&lt;/span&gt;  &lt;span class=&quot;s&quot;&gt;X-Forwarded-For&lt;/span&gt;   &lt;span class=&quot;nv&quot;&gt;$proxy_add_x_forwarded_for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;kn&quot;&gt;proxy_set_header&lt;/span&gt;  &lt;span class=&quot;s&quot;&gt;X-Forwarded-Proto&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$scheme&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;kn&quot;&gt;proxy_read_timeout&lt;/span&gt;                  &lt;span class=&quot;mi&quot;&gt;900&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h1 id=&quot;3-访问限制&quot;&gt;3. 访问限制&lt;/h1&gt;
&lt;p&gt;在刚才的启动命令部分已经提到了&lt;code&gt;如何制作用户名和密码的访问限制秘钥&lt;/code&gt;。而作为用户访问Registry则是另一回事。&lt;/p&gt;

&lt;p&gt;私有Registry如果架设的是HTTP，而不是HTTPS的话，访问的客户端需要修改配置，将该Registry的地址列入允许的不安全访问列表内，才可以正常访问。一般来说这个配置文件是在：&lt;code&gt;~/.docker/daemon.json&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;范例：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;quot;insecure-registries&amp;quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&amp;quot;127.0.0.1:15000&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;修改完成之后必须重启本地的docker进程，该配置才会生效。&lt;/p&gt;

&lt;p&gt;然后使用&lt;code&gt;docker login 127.0.0.1:15000&lt;/code&gt;进行登录，这会在&lt;code&gt;~/.docker/config.json&lt;/code&gt;文件中生成一个登录项。但访问凭证一般不会直接存储在这里，OSX操作系统是使用keychain来进行存储。参见：&lt;a href=&quot;https://docs.docker.com/engine/reference/commandline/login/#credentials-store&quot; target=&quot;_blank&quot;&gt;Credentials store&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;在某些场合，需求预先生成访问凭证，而不是到实际运行的主机上进行docker login。这时候使用命令来生成凭证，并手动生成对应的登录项配置文件，放到指定的位置来生效。&lt;/p&gt;

&lt;p&gt;根据用户名和密码来生成凭证：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;&lt;/span&gt;$ &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; -n &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$username&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$password&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; base64
&lt;span class=&quot;c1&quot;&gt;# dGVzdDphYmMxMjNf&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;生成登录项配置文件&lt;code&gt;~/.docker/config.json&lt;/code&gt;：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;auths&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;quot;127.0.0.1:15000&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;quot;auth&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;dGVzdDphYmMxMjNf&amp;quot;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;这样后续的使用就没有问题了，当然这样做是非常不安全的，不推荐使用。&lt;/p&gt;

&lt;h1 id=&quot;3-api&quot;&gt;3. API&lt;/h1&gt;
&lt;p&gt;因为registry没有提供UI界面，所有的操作都必须通过RESTful API来进行。&lt;/p&gt;

&lt;p&gt;官方文档在：&lt;a href=&quot;https://docs.docker.com/registry/spec/api/&quot; target=&quot;_blank&quot;&gt;HTTP API V2&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;常用API范例：&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;查看所有的仓库清单&lt;/strong&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;&lt;/span&gt;$ curl -u &lt;span class=&quot;nv&quot;&gt;$username&lt;/span&gt;:&lt;span class=&quot;nv&quot;&gt;$password&lt;/span&gt; http://127.0.0.1:15000/v2/_catalog &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; jq .&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;结果：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;quot;repositories&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&amp;quot;fullstack/builder&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&amp;quot;fullstack/common&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&amp;quot;fullstack/gateway&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&amp;quot;fullstack/runner&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&amp;quot;fullstack/server&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;查看某个仓库的所有tag&lt;/strong&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;&lt;/span&gt;$ curl -u &lt;span class=&quot;nv&quot;&gt;$username&lt;/span&gt;:&lt;span class=&quot;nv&quot;&gt;$password&lt;/span&gt; http://127.0.0.1:15000/v2/fullstack/common/tags/list &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; jq .&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;结果：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;fullstack/common&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;quot;tags&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&amp;quot;0.0.42&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&amp;quot;0.0.43&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&amp;quot;0.0.35&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&amp;quot;0.0.32&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&amp;quot;0.0.33&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&amp;quot;0.0.34&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;查看某个仓库某个tag的digest&lt;/strong&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;&lt;/span&gt;$ curl -u &lt;span class=&quot;nv&quot;&gt;$username&lt;/span&gt;:&lt;span class=&quot;nv&quot;&gt;$password&lt;/span&gt; http://127.0.0.1:15000/v2/fullstack/common/manifests/0.0.43 &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    --header &lt;span class=&quot;s2&quot;&gt;&amp;quot;Accept: application/vnd.docker.distribution.manifest.v2+json&amp;quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; jq &lt;span class=&quot;s1&quot;&gt;&amp;#39;.config|.digest&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;结果：&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&quot;sha256:23ffb64a5f8c7bf748eb80830d7f3be7f5de613ba9d37817fe7771180b59fdc5&quot;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;根据digest删除某个仓库的某个tag&lt;/strong&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;&lt;/span&gt;$ curl &lt;span class=&quot;nv&quot;&gt;$username&lt;/span&gt;:&lt;span class=&quot;nv&quot;&gt;$password&lt;/span&gt; -I -X DELETE &lt;span class=&quot;s2&quot;&gt;&amp;quot;http://127.0.0.1:15000/v2/fullstack/common/manifests/sha256:23ffb64a5f8c7bf748eb80830d7f3be7f5de613ba9d37817fe7771180b59fdc5&amp;quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;结果：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;&lt;/span&gt;HTTP/1.1 &lt;span class=&quot;m&quot;&gt;202&lt;/span&gt; Accepted
Docker-Distribution-Api-Version: registry/2.0
X-Content-Type-Options: nosniff
Date: Thu, &lt;span class=&quot;m&quot;&gt;26&lt;/span&gt; Dec &lt;span class=&quot;m&quot;&gt;2019&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;09&lt;/span&gt;:17:51 GMT
Content-Length: &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;只要返回的CODE是&lt;code&gt;202&lt;/code&gt;，说明就是没问题的，正常删除。&lt;/p&gt;

&lt;h1 id=&quot;4-删除镜像&quot;&gt;4. 删除镜像&lt;/h1&gt;
&lt;p&gt;刚才在API中已经提到了根据digest删除某个tag，但是这时候镜像的真实数据还并没有被删除。还需要做几步操作。&lt;/p&gt;

&lt;p&gt;首先需要修改Registry的配置文件，允许删除操作。注意下面范例的：&lt;code&gt;storage.delete.enabled: true&lt;/code&gt;。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;version&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;0.1&lt;/span&gt;
&lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;fields&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;service&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;registry&lt;/span&gt;
&lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;storage&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;cache&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;blobdescriptor&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;inmemory&lt;/span&gt;
  &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;filesystem&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;rootdirectory&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;/var/lib/registry&lt;/span&gt;
  &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;delete&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;enabled&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;true&lt;/span&gt;
&lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;http&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;addr&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;:5000&lt;/span&gt;
  &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;X-Content-Type-Options&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p p-Indicator&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;nosniff&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;health&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;storagedriver&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;enabled&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;true&lt;/span&gt;
    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;interval&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;10s&lt;/span&gt;
    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;threshold&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;3&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;然后需要进入容器内部进行删除操作：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;&lt;/span&gt;$ docker &lt;span class=&quot;nb&quot;&gt;exec&lt;/span&gt; -it /bin/sh
/# /bin/registry garbage-collect /etc/docker/registry/config.yml&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;即便这样，被删除的tag仍旧会出现在tag列表API的结果里。Docker官方对删除就完全没做好支持。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;EOF&lt;/p&gt;
&lt;/blockquote&gt;
</description>
				<pubDate>Thu, 26 Dec 2019 11:36:22 +0800</pubDate>
				<link>https://xenojoshua.com/2019/12/docker-registry/</link>
				<guid isPermaLink="true">https://xenojoshua.com/2019/12/docker-registry/</guid>
			</item>
		
			<item>
				<title>Gitea简单介绍及使用</title>
				<description>&lt;h4&gt;Table of Contents&lt;/h4&gt;
&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#1-前言&quot; id=&quot;markdown-toc-1-前言&quot;&gt;1. 前言&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#2-使用&quot; id=&quot;markdown-toc-2-使用&quot;&gt;2. 使用&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#21-安装启动&quot; id=&quot;markdown-toc-21-安装启动&quot;&gt;2.1 安装启动&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#22-配置&quot; id=&quot;markdown-toc-22-配置&quot;&gt;2.2 配置&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#23-command-line&quot; id=&quot;markdown-toc-23-command-line&quot;&gt;2.3 Command Line&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#24-api&quot; id=&quot;markdown-toc-24-api&quot;&gt;2.4 API&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#25-访问授权&quot; id=&quot;markdown-toc-25-访问授权&quot;&gt;2.5 访问授权&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#251-token授权&quot; id=&quot;markdown-toc-251-token授权&quot;&gt;2.5.1 Token授权&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#252-oauth2授权&quot; id=&quot;markdown-toc-252-oauth2授权&quot;&gt;2.5.2 OAuth2授权&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;1-前言&quot;&gt;1. 前言&lt;/h1&gt;
&lt;p&gt;Gitea是一款使用Golang编写的可自运营的代码管理工具。&lt;/p&gt;

&lt;p&gt;在这个领域，名气最响的应该是Gitlab。但实际使用中Gitlab也有点问题，首先就是资源占用。Gitlab是使用ruby编写的，好几年之前刚出来的时候，一台1G内存的虚拟主机连安装运行都做不到，着实震惊。时至今日都已经发展到了以docker镜像分发，gitlab仍旧会有体积和运行时资源占用的问题。另一点就是功能，对于一般标准团队来说，gitlab的功能太过于丰富，这是往好的地方说，往坏的地方说就是它包含了太多不需要的东西，而这些东西还占用磁盘和运行时资源。&lt;/p&gt;

&lt;p&gt;于是着手查看开源的alternative方案，很快就找到了golang研发的gitea。使用golang研发的软件分发都很容易，体积小，安装使用简单，运行时占用资源少。且gitea的功能很完备，某些自身不具备的功能也能通过第三方来解决，比如CI就可以结合同样是golang研发的drone来实施。&lt;/p&gt;

&lt;p&gt;相关资源：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://gitea.io/zh-cn/&quot; target=&quot;_blank&quot;&gt;官网&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://try.gitea.io/&quot; target=&quot;_blank&quot;&gt;线上实例&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.gitea.io/zh-cn/&quot; target=&quot;_blank&quot;&gt;文档&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;2-使用&quot;&gt;2. 使用&lt;/h1&gt;
&lt;h2 id=&quot;21-安装启动&quot;&gt;2.1 安装启动&lt;/h2&gt;
&lt;p&gt;安装使用仍旧推荐使用官方镜像：&lt;a href=&quot;https://hub.docker.com/r/gitea/gitea/&quot; target=&quot;_blank&quot;&gt;gitea/gitea&lt;/a&gt;。官方指引：&lt;a href=&quot;https://docs.gitea.io/zh-cn/install-with-docker/&quot; target=&quot;_blank&quot;&gt;从Docker安装&lt;/a&gt;。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span&gt;&lt;/span&gt;  &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;localbuild_gitea&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;gitea/gitea:1.10.0&lt;/span&gt;
    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;container_name&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;localbuild_gitea&lt;/span&gt;
    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;hostname&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;localbuild_gitea&lt;/span&gt;
    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;networks&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;net&lt;/span&gt;
    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;ports&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;13000:13000&lt;/span&gt;
      &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;122:122&lt;/span&gt;
    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;logging&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;driver&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;json-file&lt;/span&gt;
      &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;max-size&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;512m&lt;/span&gt;
    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;restart&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;always&lt;/span&gt;
    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;healthcheck&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;wget http://127.0.0.1:13000 -q -O - &amp;gt; /dev/null 2&amp;gt;&amp;amp;1&lt;/span&gt;
      &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;interval&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;10s&lt;/span&gt;
      &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;timeout&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;20s&lt;/span&gt;
      &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;retries&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;10&lt;/span&gt;
    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;volumes&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;./vendor/gitea:/data&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;关于启动时的环境变量相关，官方有一个讨论帖：&lt;a href=&quot;https://github.com/go-gitea/gitea/issues/350&quot; target=&quot;_blank&quot;&gt;Configure with env variables #350&lt;/a&gt;，但貌似还没有任何结论，当前最佳实践是做好配置文件之后映射到容器内。&lt;/p&gt;

&lt;p&gt;关于gitea使用的数据库，如果是默认配置的话，是会使用Postgre数据库，存放在容器内的&lt;code&gt;/data/gitea/gitea.db&lt;/code&gt;位置。&lt;/p&gt;

&lt;p&gt;gitea的数据全部都放在容器内的&lt;code&gt;/data&lt;/code&gt;文件夹下，一般需要将这个文件夹映射出来。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;/data&lt;/code&gt;文件夹内部文件结构如下：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;/-
 | git /-                                           # 存放所有git仓库数据
 |      | repositories /-                           # 代码库存放位置
 |      |               | fullstack /-              # 组织
 |      |               |            | common.git   # 组织下的代码库
 |      |               |            | gateway.git
 |      |               |            | server.git
 | gitea /-                                         # 存放gitea自身的系统文件
 |        | conf /-
 |        |       | app.ini                         # gitea配置文件
 |        | log                                     # gitea日志文件
 |        | gitea.db                                # Postgre数据库文件
 | ssh                                              # 秘钥文件
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&quot;/resources/2019/12/gitea-note/home.png&quot; alt=&quot;&quot; target=&quot;_blank&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;22-配置&quot;&gt;2.2 配置&lt;/h2&gt;
&lt;p&gt;官方文档在：&lt;a href=&quot;https://docs.gitea.io/zh-cn/config-cheat-sheet/&quot; target=&quot;_blank&quot;&gt;配置说明&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;映射路径在容器内的&lt;code&gt;/data/gitea/conf/app.ini&lt;/code&gt;。一般主要是URL和端口之类的需要调整下，还有就是数据库的访问方式。&lt;/p&gt;

&lt;h2 id=&quot;23-command-line&quot;&gt;2.3 Command Line&lt;/h2&gt;
&lt;p&gt;gitea还可以作为一个命令行工具来执行CLI命令，官方文档在：&lt;a href=&quot;https://docs.gitea.io/zh-cn/command-line/&quot; target=&quot;_blank&quot;&gt;Command Line&lt;/a&gt;。执行的时候可能还会需要用到部分环境变量，见：&lt;a href=&quot;https://docs.gitea.io/zh-cn/specific-variables/&quot; target=&quot;_blank&quot;&gt;环境变量清单&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;不过作为命令行工具来使用的机会比较少见。&lt;/p&gt;

&lt;h2 id=&quot;24-api&quot;&gt;2.4 API&lt;/h2&gt;
&lt;p&gt;gitea提供RESTful的API，这块是自动化的主力，需要好好看下如何使用。&lt;/p&gt;

&lt;p&gt;官方API文档在：&lt;a href=&quot;https://docs.gitea.io/zh-cn/api-usage/&quot; target=&quot;_blank&quot;&gt;Gitea API 使用指南&lt;/a&gt;。这篇指引主要是阐明了如何使用API，如何处理访问控制之类的。具体的API调用参数和返回值，以及API列表，可以查看官方的swagger：&lt;a href=&quot;https://try.gitea.io/api/swagger#/&quot; target=&quot;_blank&quot;&gt;Gitea API.&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;给几个curl调用的例子：&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;在fullstack组织下，创建代码库common&lt;/strong&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;&lt;/span&gt;$ curl -X POST &lt;span class=&quot;s2&quot;&gt;&amp;quot;http://127.0.0.1:13000/api/v1/admin/users/fullstack/repos&amp;quot;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    -H &lt;span class=&quot;s2&quot;&gt;&amp;quot;accept: application/json&amp;quot;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    -H &lt;span class=&quot;s2&quot;&gt;&amp;quot;Authorization: token 752e305de4936a769d2ed962b3e019f8866e510a&amp;quot;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    -H &lt;span class=&quot;s2&quot;&gt;&amp;quot;Content-Type: application/json&amp;quot;&lt;/span&gt; -d &lt;span class=&quot;s2&quot;&gt;&amp;quot;{ \&amp;quot;name\&amp;quot;: \&amp;quot;common\&amp;quot;, \&amp;quot;auto_init\&amp;quot;: false, \&amp;quot;private\&amp;quot;: true }&amp;quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;删除fullstack组织下的代码库common&lt;/strong&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;&lt;/span&gt;$ curl -X DELETE &lt;span class=&quot;s2&quot;&gt;&amp;quot;http://127.0.0.1:13000/api/v1/repos/fullstack/common&amp;quot;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    -H &lt;span class=&quot;s2&quot;&gt;&amp;quot;accept: application/json&amp;quot;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    -H &lt;span class=&quot;s2&quot;&gt;&amp;quot;Authorization: token 752e305de4936a769d2ed962b3e019f8866e510a&amp;quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;25-访问授权&quot;&gt;2.5 访问授权&lt;/h2&gt;
&lt;p&gt;授权主要有两种方式。&lt;/p&gt;

&lt;h3 id=&quot;251-token授权&quot;&gt;2.5.1 Token授权&lt;/h3&gt;
&lt;p&gt;Token授权是最简单的。通过发行token，让拥有token的终端可以直接调用API进行操作。&lt;/p&gt;

&lt;p&gt;发行Token也很简单：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;点击右上角&lt;code&gt;用户头像&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;点击下拉菜单的&lt;code&gt;设置&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;点击新页面导航栏中间的&lt;code&gt;应用&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;在&lt;code&gt;管理Access Tokens&lt;/code&gt;部分输入Token名，点击&lt;code&gt;生成令牌&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;需要注意的是，令牌生成之后内容只会展现一次，后续就只有删除操作。如果遗忘的话就只能删除然后申请新的了。&lt;/p&gt;

&lt;h3 id=&quot;252-oauth2授权&quot;&gt;2.5.2 OAuth2授权&lt;/h3&gt;
&lt;p&gt;OAuth2也算是现在比较常见的授权方法，和Token不同的是两者的应用场景：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Token：更多的用在自动化部署等，需要简单访问权限的场景&lt;/li&gt;
  &lt;li&gt;OAuth2：更多的用在第三方应用程序和gitea的整合，比如CI工具等&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;操作上也很简单，在Token同一界面上的&lt;code&gt;管理 OAuth2 应用程序&lt;/code&gt;界面部分，按提示操作即可。一样的，秘钥只会在创建完成后展示一次，后续秘钥只能重置，不能再次展示。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;EOF&lt;/p&gt;
&lt;/blockquote&gt;
</description>
				<pubDate>Thu, 26 Dec 2019 10:36:22 +0800</pubDate>
				<link>https://xenojoshua.com/2019/12/gitea-note/</link>
				<guid isPermaLink="true">https://xenojoshua.com/2019/12/gitea-note/</guid>
			</item>
		
			<item>
				<title>Consul Notes</title>
				<description>&lt;h4&gt;Table of Contents&lt;/h4&gt;
&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#1-前言&quot; id=&quot;markdown-toc-1-前言&quot;&gt;1. 前言&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#2-选型&quot; id=&quot;markdown-toc-2-选型&quot;&gt;2. 选型&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#3-架构&quot; id=&quot;markdown-toc-3-架构&quot;&gt;3. 架构&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#4-使用&quot; id=&quot;markdown-toc-4-使用&quot;&gt;4. 使用&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#41-启动&quot; id=&quot;markdown-toc-41-启动&quot;&gt;4.1 启动&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#42-api&quot; id=&quot;markdown-toc-42-api&quot;&gt;4.2 API&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#421-根据节点健康状态获取节点&quot; id=&quot;markdown-toc-421-根据节点健康状态获取节点&quot;&gt;4.2.1 根据节点健康状态获取节点&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#422-获取所有服务&quot; id=&quot;markdown-toc-422-获取所有服务&quot;&gt;4.2.2 获取所有服务&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#423-根据服务名获取所有对应的服务节点&quot; id=&quot;markdown-toc-423-根据服务名获取所有对应的服务节点&quot;&gt;4.2.3 根据服务名获取所有对应的服务节点&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#424-根据service-id获取具体信息&quot; id=&quot;markdown-toc-424-根据service-id获取具体信息&quot;&gt;4.2.4 根据service id获取具体信息&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#425-删除某个服务的注册&quot; id=&quot;markdown-toc-425-删除某个服务的注册&quot;&gt;4.2.5 删除某个服务的注册&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#43-ui&quot; id=&quot;markdown-toc-43-ui&quot;&gt;4.3 UI&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#44-template&quot; id=&quot;markdown-toc-44-template&quot;&gt;4.4 Template&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#45-dns&quot; id=&quot;markdown-toc-45-dns&quot;&gt;4.5 DNS&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#46-application&quot; id=&quot;markdown-toc-46-application&quot;&gt;4.6 Application&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#47-health-check&quot; id=&quot;markdown-toc-47-health-check&quot;&gt;4.7 Health Check&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#appendix&quot; id=&quot;markdown-toc-appendix&quot;&gt;Appendix&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#资料&quot; id=&quot;markdown-toc-资料&quot;&gt;资料&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#ID_APP_AGENT_HELP&quot; id=&quot;markdown-toc-ID_APP_AGENT_HELP&quot;&gt;consul agent –help&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#consul-help&quot; id=&quot;markdown-toc-consul-help&quot;&gt;consul –help&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;1-前言&quot;&gt;1. 前言&lt;/h1&gt;
&lt;p&gt;Consul一般用来作为服务注册和服务发现软件。&lt;a href=&quot;https://www.consul.io/intro/index.html&quot; target=&quot;_blank&quot;&gt;官方介绍&lt;/a&gt;如下：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Consul is a service mesh solution providing a full featured control plane with service discovery, configuration, and segmentation functionality. Each of these features can be used individually as needed, or they can be used together to build a full service mesh. Consul requires a data plane and supports both a proxy and native integration model. Consul ships with a simple built-in proxy so that everything works out of the box, but also supports 3rd party proxy integrations such as Envoy.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;文档资料：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.consul.io/&quot; target=&quot;_blank&quot;&gt;consul.io&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.consul.io/docs/index.html&quot; target=&quot;_blank&quot;&gt;Consul Documentation&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.consul.io/docs/internals/index.html&quot; target=&quot;_blank&quot;&gt;Consul Internals&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.consul.io/api/index.html&quot; target=&quot;_blank&quot;&gt;API Introduction&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;2-选型&quot;&gt;2. 选型&lt;/h1&gt;
&lt;p&gt;市面上常用的开源服务发现软件主要有：&lt;a href=&quot;https://github.com/hashicorp/consul&quot; target=&quot;_blank&quot;&gt;consul&lt;/a&gt;、&lt;a href=&quot;https://github.com/etcd-io/etcd&quot; target=&quot;_blank&quot;&gt;etcd&lt;/a&gt;、&lt;a href=&quot;https://github.com/apache/zookeeper&quot; target=&quot;_blank&quot;&gt;zookeeper&lt;/a&gt;。前两者都是用golang研发的，而zookeeper则是java研发的（你懂我意思吧）。&lt;/p&gt;

&lt;p&gt;这里就有选型的问题了，不过了解下来相互之间的差异不能说很大，基本上都在可接受范围内。特别是consul和etcd都使用raft作为分布式一致性协议，可以说非常趋同了。etcd关注度更高（特别是K8S官方使用了它），功能简单，主要在大型系统中作为分布式K/V存储使用；而consul的功能更强大（完整、开箱即用）且易用性更高。&lt;/p&gt;

&lt;p&gt;相关资料：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.consul.io/intro/vs/zookeeper.html&quot; target=&quot;_blank&quot;&gt;Consul vs. ZooKeeper, doozerd, etcd&lt;/a&gt;：这篇是consul官方的，不过我觉得讲得其实不多，没什么价值&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://gist.github.com/yurishkuro/10cb2dc42f42a007a8ce0e055ed0d171&quot; target=&quot;_blank&quot;&gt;etcd vs consul vs ???&lt;/a&gt;：文章的作者居然是Jaeger的作者，看完我才刚发现；写得很好，基本上主要的点都比对出来了，价值极高&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.servercoder.com/2018/03/30/consul-vs-zookeeper-etcd/&quot; target=&quot;_blank&quot;&gt;服务发现框架选型，Consul还是Zookeeper还是etcd&lt;/a&gt;：中文，带表格比对，简单易理解&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://matthewpalmer.net/kubernetes-app-developer/articles/how-does-kubernetes-use-etcd.html&quot; target=&quot;_blank&quot;&gt;How Does Kubernetes Use etcd?&lt;/a&gt;：主要说明了K8S为什么以及如何使用etcd，主要还是作为存储系统&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;3-架构&quot;&gt;3. 架构&lt;/h1&gt;
&lt;p&gt;官方的架构介绍在：&lt;a href=&quot;https://www.consul.io/docs/internals/architecture.html&quot; target=&quot;_blank&quot;&gt;Consul Architecture&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/resources/2019/12/consul-note/consul-arch.png&quot; alt=&quot;&quot; target=&quot;_blank&quot; /&gt;&lt;/p&gt;

&lt;p&gt;简单来说：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;节点分为&lt;code&gt;client&lt;/code&gt;和&lt;code&gt;server&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;server负责存储数据，并形成集群，使用raft保证集群一致性&lt;/li&gt;
  &lt;li&gt;client负责直接和业务对象连接，并将数据同步到server上&lt;/li&gt;
  &lt;li&gt;所有的节点都是通过gossip连接起来的&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;4-使用&quot;&gt;4. 使用&lt;/h1&gt;
&lt;h2 id=&quot;41-启动&quot;&gt;4.1 启动&lt;/h2&gt;
&lt;p&gt;一般直接使用docker镜像：&lt;a href=&quot;https://hub.docker.com/_/consul&quot; target=&quot;_blank&quot;&gt;consul&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;启动方面非常简单，全部都是用&lt;code&gt;agent&lt;/code&gt;命令，参数细节放在后面的附录部分，太长了：&lt;a href=&quot;#ID_APP_AGENT_HELP&quot;&gt;consul agent –help&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;常用参数：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;--node=$name&lt;/code&gt;指定节点名称&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;--server&lt;/code&gt;表示节点是server节点&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;--bootstrap&lt;/code&gt;表示节点以bootstrap模式启动&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;--ui&lt;/code&gt;表示当前节点会提供管理UI界面&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;--client=0.0.0.0&lt;/code&gt;指定监听地址&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;--join=$host&lt;/code&gt;指定启动时尝试加入集群时连接的目标节点&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;下面给个例子，集群3个server节点，2个client节点：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span&gt;&lt;/span&gt;  &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;fullstack_consul_server1&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;consul:1.6.1&lt;/span&gt;
    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;container_name&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;fullstack_consul_server1&lt;/span&gt;
    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;hostname&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;fullstack_consul_server1&lt;/span&gt;
    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;networks&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;net&lt;/span&gt;
    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;ports&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;18500:8500&lt;/span&gt;
    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;expose&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;8600&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# DNS&lt;/span&gt;
      &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;8500&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# HTTP API&lt;/span&gt;
      &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;8501&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# HTTPS API&lt;/span&gt;
      &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;8502&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# gRPC API&lt;/span&gt;
      &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;8301&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# LAN Serf&lt;/span&gt;
      &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;8302&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# Wan Serf&lt;/span&gt;
      &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;8300&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# Server RPC address&lt;/span&gt;
    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;logging&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;driver&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;json-file&lt;/span&gt;
      &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;max-size&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;512m&lt;/span&gt;
    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;restart&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;always&lt;/span&gt;
    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;healthcheck&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;wget http://127.0.0.1:8500/v1/health/node/consul-server1 -q -O - &amp;gt; /dev/null 2&amp;gt;&amp;amp;1&lt;/span&gt;
      &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;interval&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;10s&lt;/span&gt;
      &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;timeout&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;20s&lt;/span&gt;
      &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;retries&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;10&lt;/span&gt;
    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;volumes&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;consul_server1_data:/consul/data&lt;/span&gt;
    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;environment&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;CONSUL_BIND_INTERFACE=eth0&lt;/span&gt;
    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;command&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p p-Indicator&quot;&gt;[&lt;/span&gt;
      &lt;span class=&quot;nv&quot;&gt;agent&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;nv&quot;&gt;--node=consul-server1&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;nv&quot;&gt;--server&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;nv&quot;&gt;--bootstrap&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;nv&quot;&gt;--client=0.0.0.0&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;nv&quot;&gt;--ui&lt;/span&gt;
    &lt;span class=&quot;p p-Indicator&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;fullstack_consul_server2&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;consul:1.6.1&lt;/span&gt;
    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;container_name&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;fullstack_consul_server2&lt;/span&gt;
    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;hostname&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;fullstack_consul_server2&lt;/span&gt;
    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;networks&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;net&lt;/span&gt;
    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;expose&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;8600&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# DNS&lt;/span&gt;
      &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;8500&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# HTTP API&lt;/span&gt;
      &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;8501&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# HTTPS API&lt;/span&gt;
      &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;8502&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# gRPC API&lt;/span&gt;
      &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;8301&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# LAN Serf&lt;/span&gt;
      &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;8302&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# Wan Serf&lt;/span&gt;
      &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;8300&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# Server RPC address&lt;/span&gt;
    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;depends_on&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;fullstack_consul_server1&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;condition&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;service_healthy&lt;/span&gt;
    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;logging&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;driver&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;json-file&lt;/span&gt;
      &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;max-size&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;512m&lt;/span&gt;
    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;restart&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;always&lt;/span&gt;
    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;healthcheck&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;wget http://127.0.0.1:8500/v1/health/node/consul-server2 -q -O - &amp;gt; /dev/null 2&amp;gt;&amp;amp;1&lt;/span&gt;
      &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;interval&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;10s&lt;/span&gt;
      &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;timeout&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;20s&lt;/span&gt;
      &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;retries&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;10&lt;/span&gt;
    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;volumes&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;consul_server2_data:/consul/data&lt;/span&gt;
    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;environment&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;CONSUL_BIND_INTERFACE=eth0&lt;/span&gt;
    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;command&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p p-Indicator&quot;&gt;[&lt;/span&gt;
      &lt;span class=&quot;nv&quot;&gt;agent&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;nv&quot;&gt;--node=consul-server2&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;nv&quot;&gt;--server&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;nv&quot;&gt;--client=0.0.0.0&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;nv&quot;&gt;--join=fullstack_consul_server1&lt;/span&gt;
    &lt;span class=&quot;p p-Indicator&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;fullstack_consul_server3&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;consul:1.6.1&lt;/span&gt;
    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;container_name&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;fullstack_consul_server3&lt;/span&gt;
    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;hostname&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;fullstack_consul_server3&lt;/span&gt;
    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;networks&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;net&lt;/span&gt;
    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;expose&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;8600&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# DNS&lt;/span&gt;
      &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;8500&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# HTTP API&lt;/span&gt;
      &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;8501&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# HTTPS API&lt;/span&gt;
      &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;8502&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# gRPC API&lt;/span&gt;
      &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;8301&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# LAN Serf&lt;/span&gt;
      &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;8302&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# Wan Serf&lt;/span&gt;
      &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;8300&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# Server RPC address&lt;/span&gt;
    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;depends_on&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;fullstack_consul_server1&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;condition&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;service_healthy&lt;/span&gt;
    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;logging&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;driver&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;json-file&lt;/span&gt;
      &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;max-size&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;512m&lt;/span&gt;
    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;restart&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;always&lt;/span&gt;
    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;healthcheck&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;wget http://127.0.0.1:8500/v1/health/node/consul-server3 -q -O - &amp;gt; /dev/null 2&amp;gt;&amp;amp;1&lt;/span&gt;
      &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;interval&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;10s&lt;/span&gt;
      &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;timeout&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;20s&lt;/span&gt;
      &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;retries&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;10&lt;/span&gt;
    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;volumes&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;consul_server3_data:/consul/data&lt;/span&gt;
    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;environment&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;CONSUL_BIND_INTERFACE=eth0&lt;/span&gt;
    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;command&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p p-Indicator&quot;&gt;[&lt;/span&gt;
      &lt;span class=&quot;nv&quot;&gt;agent&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;nv&quot;&gt;--node=consul-server3&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;nv&quot;&gt;--server&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;nv&quot;&gt;--client=0.0.0.0&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;nv&quot;&gt;--join=fullstack_consul_server1&lt;/span&gt;
    &lt;span class=&quot;p p-Indicator&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;fullstack_consul_client1&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;consul:1.6.1&lt;/span&gt;
    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;container_name&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;fullstack_consul_client1&lt;/span&gt;
    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;hostname&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;fullstack_consul_client1&lt;/span&gt;
    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;networks&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;net&lt;/span&gt;
    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;expose&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;8600&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# DNS&lt;/span&gt;
      &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;8500&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# HTTP API&lt;/span&gt;
      &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;8501&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# HTTPS API&lt;/span&gt;
      &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;8502&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# gRPC API&lt;/span&gt;
      &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;8301&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# LAN Serf&lt;/span&gt;
      &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;8302&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# Wan Serf&lt;/span&gt;
      &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;8300&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# Server RPC address&lt;/span&gt;
    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;depends_on&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;fullstack_consul_server1&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;condition&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;service_healthy&lt;/span&gt;
      &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;fullstack_consul_server2&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;condition&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;service_healthy&lt;/span&gt;
      &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;fullstack_consul_server3&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;condition&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;service_healthy&lt;/span&gt;
    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;logging&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;driver&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;json-file&lt;/span&gt;
      &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;max-size&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;512m&lt;/span&gt;
    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;restart&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;always&lt;/span&gt;
    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;healthcheck&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;wget http://127.0.0.1:8500/v1/health/node/consul-client -q -O - &amp;gt; /dev/null 2&amp;gt;&amp;amp;1&lt;/span&gt;
      &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;interval&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;10s&lt;/span&gt;
      &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;timeout&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;20s&lt;/span&gt;
      &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;retries&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;10&lt;/span&gt;
    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;volumes&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;consul_client1_data:/consul/data&lt;/span&gt;
    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;environment&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;CONSUL_BIND_INTERFACE=eth0&lt;/span&gt;
    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;command&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p p-Indicator&quot;&gt;[&lt;/span&gt;
      &lt;span class=&quot;nv&quot;&gt;agent&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;nv&quot;&gt;--node=consul-client1&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;nv&quot;&gt;--client=0.0.0.0&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;nv&quot;&gt;--join=fullstack_consul_server1&lt;/span&gt;
    &lt;span class=&quot;p p-Indicator&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;fullstack_consul_client2&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;consul:1.6.1&lt;/span&gt;
    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;container_name&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;fullstack_consul_client2&lt;/span&gt;
    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;hostname&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;fullstack_consul_client2&lt;/span&gt;
    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;networks&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;net&lt;/span&gt;
    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;expose&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;8600&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# DNS&lt;/span&gt;
      &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;8500&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# HTTP API&lt;/span&gt;
      &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;8501&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# HTTPS API&lt;/span&gt;
      &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;8502&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# gRPC API&lt;/span&gt;
      &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;8301&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# LAN Serf&lt;/span&gt;
      &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;8302&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# Wan Serf&lt;/span&gt;
      &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;8300&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# Server RPC address&lt;/span&gt;
    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;depends_on&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;fullstack_consul_server1&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;condition&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;service_healthy&lt;/span&gt;
      &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;fullstack_consul_server2&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;condition&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;service_healthy&lt;/span&gt;
      &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;fullstack_consul_server3&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;condition&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;service_healthy&lt;/span&gt;
    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;logging&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;driver&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;json-file&lt;/span&gt;
      &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;max-size&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;512m&lt;/span&gt;
    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;restart&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;always&lt;/span&gt;
    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;healthcheck&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;wget http://127.0.0.1:8500/v1/health/node/consul-client -q -O - &amp;gt; /dev/null 2&amp;gt;&amp;amp;1&lt;/span&gt;
      &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;interval&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;10s&lt;/span&gt;
      &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;timeout&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;20s&lt;/span&gt;
      &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;retries&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;10&lt;/span&gt;
    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;volumes&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;consul_client2_data:/consul/data&lt;/span&gt;
    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;environment&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;CONSUL_BIND_INTERFACE=eth0&lt;/span&gt;
    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;command&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p p-Indicator&quot;&gt;[&lt;/span&gt;
      &lt;span class=&quot;nv&quot;&gt;agent&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;nv&quot;&gt;--node=consul-client2&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;nv&quot;&gt;--client=0.0.0.0&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;nv&quot;&gt;--join=fullstack_consul_server1&lt;/span&gt;
    &lt;span class=&quot;p p-Indicator&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;部署完成后节点如下：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/resources/2019/12/consul-note/nodes.png&quot; alt=&quot;&quot; target=&quot;_blank&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;42-api&quot;&gt;4.2 API&lt;/h2&gt;
&lt;p&gt;官方API文档在：&lt;a href=&quot;https://www.consul.io/api/index.html&quot; target=&quot;_blank&quot;&gt;API Introduction&lt;/a&gt;。Consul使用RESTful的HTTP请求来提供服务，所有的客户端或命令行工具无非就是RESTful API的封装。所以如果有需要，可以直接使用curl来发送HTTP请求调用接口。&lt;/p&gt;

&lt;p&gt;下面的例子中会涉及到一些demo应用程序的节点：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;app server 3个节点&lt;/li&gt;
  &lt;li&gt;app gateway 3个节点&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;client1连接了：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/resources/2019/12/consul-note/client1.png&quot; alt=&quot;&quot; target=&quot;_blank&quot; /&gt;&lt;/p&gt;

&lt;p&gt;client2连接了：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/resources/2019/12/consul-note/client1.png&quot; alt=&quot;&quot; target=&quot;_blank&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;421-根据节点健康状态获取节点&quot;&gt;4.2.1 根据节点健康状态获取节点&lt;/h3&gt;
&lt;p&gt;文档：&lt;a href=&quot;https://www.consul.io/api/health.html#list-checks-in-state&quot; target=&quot;_blank&quot;&gt;List Checks in State&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;这个接口可以有效过滤掉已经失效的节点。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;&lt;/span&gt;$ curl http://127.0.0.1:18500/v1/health/state/any &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; jq .&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;结果：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;Node&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;consul-client1&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;CheckID&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;serfHealth&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;Name&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Serf Health Status&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;Status&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;passing&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;Notes&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;Output&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Agent alive and reachable&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ServiceID&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ServiceName&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ServiceTags&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[],&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;Definition&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{},&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;CreateIndex&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ModifyIndex&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;15&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;Node&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;consul-client1&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;CheckID&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;service:1fw20gk4kq30tk&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;Name&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Service &amp;#39;server&amp;#39; check&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;Status&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;passing&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;Notes&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;Output&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;HTTP GET http://fullstack_server2:50052/health: 200 OK Output: OK&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ServiceID&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;1fw20gk4kq30tk&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ServiceName&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;server&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ServiceTags&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[],&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;Definition&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{},&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;CreateIndex&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;26&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ModifyIndex&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;29&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;Node&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;consul-client1&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;CheckID&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;service:1fw20gk4kq35py&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;Name&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Service &amp;#39;gateway&amp;#39; check&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;Status&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;passing&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;Notes&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;Output&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;HTTP GET http://fullstack_gateway3:3000/health: 200 OK Output: OK&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ServiceID&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;1fw20gk4kq35py&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ServiceName&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;gateway&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ServiceTags&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[],&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;Definition&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{},&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;CreateIndex&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ModifyIndex&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;32&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;Node&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;consul-client1&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;CheckID&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;service:1fw20hk4kq5i2h&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;Name&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Service &amp;#39;gateway&amp;#39; check&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;Status&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;passing&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;Notes&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;Output&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;HTTP GET http://fullstack_gateway1:3000/health: 200 OK Output: OK&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ServiceID&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;1fw20hk4kq5i2h&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ServiceName&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;gateway&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ServiceTags&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[],&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;Definition&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{},&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;CreateIndex&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;48&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ModifyIndex&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;49&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;Node&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;consul-client2&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;CheckID&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;serfHealth&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;Name&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Serf Health Status&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;Status&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;passing&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;Notes&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;Output&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Agent alive and reachable&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ServiceID&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ServiceName&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ServiceTags&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[],&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;Definition&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{},&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;CreateIndex&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;13&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ModifyIndex&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;13&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;Node&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;consul-client2&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;CheckID&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;service:1fw20hk4kq30n8&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;Name&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Service &amp;#39;server&amp;#39; check&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;Status&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;passing&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;Notes&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;Output&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;HTTP GET http://fullstack_server3:50052/health: 200 OK Output: OK&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ServiceID&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;1fw20hk4kq30n8&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ServiceName&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;server&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ServiceTags&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[],&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;Definition&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{},&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;CreateIndex&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;24&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ModifyIndex&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;27&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;Node&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;consul-client2&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;CheckID&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;service:1fw20ik4kq35th&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;Name&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Service &amp;#39;gateway&amp;#39; check&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;Status&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;passing&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;Notes&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;Output&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;HTTP GET http://fullstack_gateway2:3000/health: 200 OK Output: OK&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ServiceID&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;1fw20ik4kq35th&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ServiceName&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;gateway&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ServiceTags&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[],&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;Definition&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{},&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;CreateIndex&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;31&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ModifyIndex&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;34&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;Node&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;consul-client2&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;CheckID&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;service:eewk9hk4kq2uvy&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;Name&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Service &amp;#39;server&amp;#39; check&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;Status&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;passing&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;Notes&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;Output&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;HTTP GET http://fullstack_server1:50052/health: 200 OK Output: OK&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ServiceID&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;eewk9hk4kq2uvy&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ServiceName&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;server&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ServiceTags&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[],&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;Definition&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{},&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;CreateIndex&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;22&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ModifyIndex&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;23&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;Node&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;consul-server1&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;CheckID&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;serfHealth&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;Name&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Serf Health Status&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;Status&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;passing&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;Notes&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;Output&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Agent alive and reachable&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ServiceID&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ServiceName&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ServiceTags&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[],&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;Definition&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{},&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;CreateIndex&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ModifyIndex&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;Node&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;consul-server2&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;CheckID&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;serfHealth&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;Name&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Serf Health Status&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;Status&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;passing&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;Notes&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;Output&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Agent alive and reachable&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ServiceID&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ServiceName&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ServiceTags&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[],&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;Definition&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{},&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;CreateIndex&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ModifyIndex&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;Node&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;consul-server3&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;CheckID&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;serfHealth&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;Name&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Serf Health Status&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;Status&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;passing&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;Notes&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;Output&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Agent alive and reachable&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ServiceID&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ServiceName&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ServiceTags&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[],&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;Definition&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{},&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;CreateIndex&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ModifyIndex&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;any可以更换成其他状态：&lt;code&gt;any, passing, warning, or critical&lt;/code&gt;。&lt;/p&gt;

&lt;h3 id=&quot;422-获取所有服务&quot;&gt;4.2.2 获取所有服务&lt;/h3&gt;
&lt;p&gt;文档：&lt;a href=&quot;https://www.consul.io/api/catalog.html#list-services&quot; target=&quot;_blank&quot;&gt;List Services&lt;/a&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;&lt;/span&gt;$ curl http://127.0.0.1:18500/v1/catalog/services &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; jq . &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;结果：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;quot;consul&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[],&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;quot;gateway&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[],&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;quot;server&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;blockquote&gt;
  &lt;p&gt;The keys are the service names, and the array values provide all known tags for a given service.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;423-根据服务名获取所有对应的服务节点&quot;&gt;4.2.3 根据服务名获取所有对应的服务节点&lt;/h3&gt;
&lt;p&gt;文档：&lt;a href=&quot;https://www.consul.io/api/catalog.html#list-nodes-for-service&quot; target=&quot;_blank&quot;&gt;List Nodes for Service&lt;/a&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;&lt;/span&gt;$ curl http://127.0.0.1:18500/v1/catalog/service/:service_name &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; jq . &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;code&gt;server&lt;/code&gt;的结果：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ID&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;f33332e4-3881-b975-d647-bc21a4ca41da&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;Node&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;consul-client1&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;Address&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;172.26.0.8&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;Datacenter&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;dc1&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;TaggedAddresses&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;quot;lan&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;172.26.0.8&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;quot;wan&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;172.26.0.8&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;NodeMeta&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;quot;consul-network-segment&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ServiceKind&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ServiceID&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;1fw20gk4kq30tk&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ServiceName&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;server&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ServiceTags&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[],&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ServiceAddress&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;fullstack_server2&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ServiceWeights&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;quot;Passing&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;quot;Warning&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ServiceMeta&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{},&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ServicePort&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;50051&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ServiceEnableTagOverride&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ServiceProxy&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;quot;MeshGateway&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ServiceConnect&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{},&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;CreateIndex&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;26&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ModifyIndex&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;26&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ID&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;feaba61d-83ce-a7e6-3e99-f1b2fa889bf8&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;Node&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;consul-client2&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;Address&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;172.26.0.7&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;Datacenter&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;dc1&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;TaggedAddresses&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;quot;lan&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;172.26.0.7&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;quot;wan&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;172.26.0.7&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;NodeMeta&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;quot;consul-network-segment&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ServiceKind&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ServiceID&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;1fw20hk4kq30n8&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ServiceName&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;server&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ServiceTags&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[],&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ServiceAddress&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;fullstack_server3&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ServiceWeights&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;quot;Passing&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;quot;Warning&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ServiceMeta&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{},&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ServicePort&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;50051&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ServiceEnableTagOverride&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ServiceProxy&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;quot;MeshGateway&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ServiceConnect&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{},&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;CreateIndex&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;24&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ModifyIndex&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;24&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ID&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;feaba61d-83ce-a7e6-3e99-f1b2fa889bf8&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;Node&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;consul-client2&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;Address&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;172.26.0.7&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;Datacenter&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;dc1&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;TaggedAddresses&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;quot;lan&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;172.26.0.7&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;quot;wan&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;172.26.0.7&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;NodeMeta&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;quot;consul-network-segment&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ServiceKind&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ServiceID&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;eewk9hk4kq2uvy&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ServiceName&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;server&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ServiceTags&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[],&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ServiceAddress&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;fullstack_server1&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ServiceWeights&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;quot;Passing&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;quot;Warning&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ServiceMeta&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{},&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ServicePort&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;50051&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ServiceEnableTagOverride&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ServiceProxy&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;quot;MeshGateway&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ServiceConnect&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{},&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;CreateIndex&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;22&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;ModifyIndex&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;22&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;424-根据service-id获取具体信息&quot;&gt;4.2.4 根据service id获取具体信息&lt;/h3&gt;
&lt;p&gt;文档：&lt;a href=&quot;https://www.consul.io/api/agent/service.html#get-service-configuration&quot; target=&quot;_blank&quot;&gt;Get Service Configuration&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;需要注意，这个操作只能获取所查询agent（某个client）上注册的服务的信息。下面举两个例子，刚才有说到&lt;code&gt;fullstack_server2&lt;/code&gt;是注册在&lt;code&gt;fullstack_consul_client1&lt;/code&gt;上的；而&lt;code&gt;fullstack_server3&lt;/code&gt;是注册在&lt;code&gt;fullstack_consul_client2&lt;/code&gt;上的。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;fullstack_server2&lt;/strong&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# 首先需要登入到docker network中的某台机器上，因为client都没有向主机暴露端口&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# docker exec -it fullstack_consul_server1 /bin/sh&lt;/span&gt;
$ curl http://fullstack_consul_client1:8500/v1/agent/service/1fw20gk4kq30tk &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; jq .&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;结果：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;quot;ID&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;1fw20gk4kq30tk&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;quot;Service&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;server&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;quot;Tags&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[],&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;quot;Meta&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{},&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;quot;Port&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;50051&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;quot;Address&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;fullstack_server2&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;quot;Weights&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;Passing&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;Warning&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;quot;EnableTagOverride&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;quot;ContentHash&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;b13f5888fa84e5d&amp;quot;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;fullstack_server3&lt;/strong&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# 首先需要登入到docker network中的某台机器上，因为client都没有向主机暴露端口&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# docker exec -it fullstack_consul_server1 /bin/sh&lt;/span&gt;
$ curl http://fullstack_consul_client2:8500/v1/agent/service/1fw20hk4kq30n8 &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; jq .&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;结果：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;quot;ID&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;1fw20hk4kq30n8&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;quot;Service&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;server&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;quot;Tags&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[],&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;quot;Meta&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{},&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;quot;Port&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;50051&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;quot;Address&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;fullstack_server3&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;quot;Weights&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;Passing&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;Warning&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;quot;EnableTagOverride&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;quot;ContentHash&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;120b74b874209fe8&amp;quot;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;425-删除某个服务的注册&quot;&gt;4.2.5 删除某个服务的注册&lt;/h3&gt;
&lt;p&gt;文档：&lt;a href=&quot;https://www.consul.io/api/agent/service.html#deregister-service&quot; target=&quot;_blank&quot;&gt;Deregister Service&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;做开发的时候，为了测试，有的时候需要手动删除某些服务，这时候就要用到这个接口了。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;&lt;/span&gt;$ curl --request PUT http://127.0.0.1:18500/v1/agent/service/deregister/:service_id &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; jq .&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;43-ui&quot;&gt;4.3 UI&lt;/h2&gt;
&lt;p&gt;访问：http://127.0.0.1:18500，就会开启管理UI。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/resources/2019/12/consul-note/ui.png&quot; alt=&quot;&quot; target=&quot;_blank&quot; /&gt;&lt;/p&gt;

&lt;p&gt;实际功能非常有限，主要是观察下集群及服务的状况。&lt;/p&gt;

&lt;h2 id=&quot;44-template&quot;&gt;4.4 Template&lt;/h2&gt;
&lt;p&gt;Consul有一个非常好用的功能就是能把注册的服务，通过一个模板，生成配置文件并输出到指定的位置。最常见的使用案例就是consul配合nginx，多个业务服务跑在后台，注册到consul，通过consul将业务后台的信息生成成nginx配置文件。同时，任何业务后台的变动都会触发配置文件的重新生成。consul的template还可以指定一个外部命令，在刚才提到的例子中就可以触发nginx的reload，使改变的配置文件生效。&lt;/p&gt;

&lt;p&gt;template有单独的镜像：&lt;a href=&quot;https://hub.docker.com/r/hashicorp/consul-template/&quot; target=&quot;_blank&quot;&gt;hashicorp/consul-template&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;范例nginx配置模板，文件位置：&lt;code&gt;./vendor/consul/nginx&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;   
upstream gateway {
    server : max_fails=3 fail_timeout=60 weight=1;
    server 127.0.0.1:65535; # force a 502
}  

server {
    listen 80;
    server_name localhost;

    access_log /var/log/nginx/fullstack.access.log;
    error_log /var/log/nginx/fullstack.error.log;

    root /usr/share/nginx/html;

    index index.html index.htm index.nginx-debian.html;

    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

    location / {
        proxy_set_header x-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header HOST $http_host;
        proxy_set_header X-Forwarded-Proto https;
        proxy_redirect http:// https://;
        proxy_connect_timeout 240;
        proxy_send_timeout 240;
        proxy_read_timeout 240;
        proxy_pass http://gateway;
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;template启动：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;&lt;/span&gt;$ docker run --rm -it --name templateX &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    -v ./vendor/consul/nginx:/tmp/nginx.ctmpl &lt;span class=&quot;se&quot;&gt;\ &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# 将模板配置文件映射到容器内&lt;/span&gt;
    -v /tmp/template:/consul-template/data &lt;span class=&quot;se&quot;&gt;\ &lt;/span&gt;   &lt;span class=&quot;c1&quot;&gt;# 将主机的临时文件夹映射到容器内配置文件的生成位置，方便后续在主机上直接查看生成的配置文件&lt;/span&gt;
    hashicorp/consul-template:0.22.1-alpine &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    -dry &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    -log-level&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;debug &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    -consul-addr&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;host.docker.internal:18500 &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    -consul-retry &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    -consul-retry-attempts&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;5&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    -consul-retry-backoff&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;500ms &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    -template&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/tmp/nginx.ctmpl:/consul-template/data/default.conf&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;查看生成的：&lt;code&gt;/tmp/template/default.conf&lt;/code&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-nginx&quot; data-lang=&quot;nginx&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;upstream&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;gateway&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kn&quot;&gt;server&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;fullstack_gateway3:3000&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;max_fails=3&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;fail_timeout=60&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;weight=1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kn&quot;&gt;server&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;fullstack_gateway1:3000&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;max_fails=3&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;fail_timeout=60&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;weight=1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kn&quot;&gt;server&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;fullstack_gateway2:3000&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;max_fails=3&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;fail_timeout=60&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;weight=1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;server&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kn&quot;&gt;listen&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;80&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kn&quot;&gt;server_name&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;localhost&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;kn&quot;&gt;access_log&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/var/log/nginx/fullstack.access.log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kn&quot;&gt;error_log&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/var/log/nginx/fullstack.error.log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;kn&quot;&gt;root&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/usr/share/nginx/html&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;kn&quot;&gt;index&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;index.html&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;index.htm&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;index.nginx-debian.html&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;kn&quot;&gt;error_page&lt;/span&gt;   &lt;span class=&quot;mi&quot;&gt;500&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;502&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;503&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;504&lt;/span&gt;  &lt;span class=&quot;s&quot;&gt;/50x.html&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kn&quot;&gt;location&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/50x.html&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kn&quot;&gt;root&lt;/span&gt;   &lt;span class=&quot;s&quot;&gt;/usr/share/nginx/html&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kn&quot;&gt;location&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kn&quot;&gt;proxy_set_header&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;x-Forwarded-For&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$proxy_add_x_forwarded_for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;kn&quot;&gt;proxy_set_header&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;HOST&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$http_host&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;kn&quot;&gt;proxy_set_header&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;X-Forwarded-Proto&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;https&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;kn&quot;&gt;proxy_redirect&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;http://&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;https://&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;kn&quot;&gt;proxy_connect_timeout&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;240&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;kn&quot;&gt;proxy_send_timeout&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;240&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;kn&quot;&gt;proxy_read_timeout&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;240&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;kn&quot;&gt;proxy_pass&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;http://gateway&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;45-dns&quot;&gt;4.5 DNS&lt;/h2&gt;
&lt;p&gt;官方文档：&lt;a href=&quot;https://www.consul.io/docs/agent/dns.html&quot; target=&quot;_blank&quot;&gt;DNS Interface&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;使用上应该说是非常简便了，而且基本上对业务没什么侵入性。我之前做的实验项目里没使用这个功能，主要是因为需要改动主机的DNS，比较麻烦。&lt;/p&gt;

&lt;h2 id=&quot;46-application&quot;&gt;4.6 Application&lt;/h2&gt;
&lt;p&gt;Consul有不少语言对应的客户端，我的实验项目用过node.js的：&lt;a href=&quot;https://www.npmjs.com/package/consul&quot; target=&quot;_blank&quot;&gt;Consul&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;注册服务：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-typescript&quot; data-lang=&quot;typescript&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Consul&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;consul&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;exitHook&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;async-exit-hook&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;serviceId&lt;/span&gt;: &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;uniqid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;consul&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Consul&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;host&lt;/span&gt;: &lt;span class=&quot;kt&quot;&gt;CONSUL_HOST&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// fullstack_consul_client2&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;port&lt;/span&gt;: &lt;span class=&quot;kt&quot;&gt;CONSUL_PORT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 8500&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;promisify&lt;/span&gt;: &lt;span class=&quot;kt&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;register&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;serverConf&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getRaw&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;server&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;consul&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;agent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;service&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;register&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;: &lt;span class=&quot;kt&quot;&gt;serverConf.serviceName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// server&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;: &lt;span class=&quot;kt&quot;&gt;serviceId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;address&lt;/span&gt;: &lt;span class=&quot;kt&quot;&gt;SERVICE_HOST&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;        &lt;span class=&quot;c1&quot;&gt;// fullstack_server3&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;port&lt;/span&gt;: &lt;span class=&quot;kt&quot;&gt;serverConf.servicePort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 50051&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;check&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;http&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;http&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//${SERVICE_HOST}:${serverConf.webPort}/health`, // http://fullstack_server3:50052/health&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;interval&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;10s&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;ttl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;15s&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cleanup&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;done&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;consul&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;agent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;service&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;deregister&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;serviceId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;cleanup done&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;done&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;done&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// exit&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;exitHook&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;forceExitTimeout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;500&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// wait 0.5s before force exit&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;exitHook&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;done&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;Process::exitHook - Got exit signal&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;cleanup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;done&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// start&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;startServer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;startWeb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;register&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()).&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;在服务启动的时候进行注册，并且记得要&lt;code&gt;处理程序退出&lt;/code&gt;，退出的时候需要将注册信息删除，否则即便应用程序退出了，在consul里那个服务还是存在的。&lt;/p&gt;

&lt;p&gt;客户端获取&lt;code&gt;可用节点&lt;/code&gt;：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-typescript&quot; data-lang=&quot;typescript&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;consul&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Consul&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;host&lt;/span&gt;: &lt;span class=&quot;kt&quot;&gt;CONSUL_HOST&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;port&lt;/span&gt;: &lt;span class=&quot;kt&quot;&gt;CONSUL_PORT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;promisify&lt;/span&gt;: &lt;span class=&quot;kt&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;servers&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;consul&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;health&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;service&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;service&lt;/span&gt;: &lt;span class=&quot;kt&quot;&gt;CONFIG.getRaw&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;server&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;serviceName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// server&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;passing&lt;/span&gt;: &lt;span class=&quot;kt&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;                               &lt;span class=&quot;c1&quot;&gt;// get only living nodes&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;IResHealthService&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[];&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// ...&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;47-health-check&quot;&gt;4.7 Health Check&lt;/h2&gt;
&lt;p&gt;官方文档：&lt;a href=&quot;https://www.consul.io/docs/agent/checks.html&quot; target=&quot;_blank&quot;&gt;Checks&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;在4.6的范例里也提到了，在注册服务的时候可以提供当前注册进consul的应用程序的健康检查设置，consul会使用HTTP请求来检查该URL，只要是200返回就表示该服务仍旧存活。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/resources/2019/12/consul-note/living_node.png&quot; alt=&quot;&quot; target=&quot;_blank&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;appendix&quot;&gt;Appendix&lt;/h1&gt;
&lt;h2 id=&quot;资料&quot;&gt;资料&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://my.oschina.net/qiangmzsx/blog/1634206&quot; target=&quot;_blank&quot;&gt;consul服务注册与服务发现的巨坑&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;ID_APP_AGENT_HELP&quot;&gt;consul agent –help&lt;/h2&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;&lt;/span&gt;docker run -it --rm consul:1.6.1 agent --help
Usage: consul agent &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;options&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;

  Starts the Consul agent and runs &lt;span class=&quot;k&quot;&gt;until&lt;/span&gt; an interrupt is received. The
  agent represents a single node in a cluster.

HTTP API Options

  -datacenter&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;lt;value&amp;gt;
     Datacenter of the agent.

Command Options

  -advertise&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;lt;value&amp;gt;
     Sets the advertise address to use.

  -advertise-wan&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;lt;value&amp;gt;
     Sets address to advertise on WAN instead of -advertise address.

  -allow-write-http-from&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;lt;value&amp;gt;
     Only allow write endpoint calls from given network. CIDR format,
     can be specified multiple times.

  -alt-domain&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;lt;value&amp;gt;
     Alternate domain to use &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; DNS interface.

  -bind&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;lt;value&amp;gt;
     Sets the &lt;span class=&quot;nb&quot;&gt;bind&lt;/span&gt; address &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; cluster communication.

  -bootstrap
     Sets server to bootstrap mode.

  -bootstrap-expect&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;lt;value&amp;gt;
     Sets server to expect bootstrap mode.

  -check_output_max_size&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;lt;value&amp;gt;
     Sets the maximum output size &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; checks on this agent

  -client&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;lt;value&amp;gt;
     Sets the address to &lt;span class=&quot;nb&quot;&gt;bind&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; client access. This includes RPC, DNS,
     HTTP, HTTPS and gRPC &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; configured&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;.

  -config-dir&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;lt;value&amp;gt;
     Path to a directory to &lt;span class=&quot;nb&quot;&gt;read&lt;/span&gt; configuration files from. This
     will &lt;span class=&quot;nb&quot;&gt;read&lt;/span&gt; every file ending in &lt;span class=&quot;s1&quot;&gt;&amp;#39;.json&amp;#39;&lt;/span&gt; as configuration in this
     directory in alphabetical order. Can be specified multiple times.

  -config-file&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;lt;value&amp;gt;
     Path to a file in JSON or HCL format with a matching file
     extension. Can be specified multiple times.

  -config-format&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;lt;value&amp;gt;
     Config files are in this format irrespective of their extension.
     Must be &lt;span class=&quot;s1&quot;&gt;&amp;#39;hcl&amp;#39;&lt;/span&gt; or &lt;span class=&quot;s1&quot;&gt;&amp;#39;json&amp;#39;&lt;/span&gt;

  -data-dir&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;lt;value&amp;gt;
     Path to a data directory to store agent state.

  -dev
     Starts the agent in development mode.

  -disable-host-node-id
     Setting this to &lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt; will prevent Consul from using information
     from the host to generate a node ID, and will cause Consul to
     generate a random node ID instead.

  -disable-keyring-file
     Disables the backing up of the keyring to a file.

  -dns-port&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;lt;value&amp;gt;
     DNS port to use.

  -domain&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;lt;value&amp;gt;
     Domain to use &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; DNS interface.

  -enable-local-script-checks
     Enables health check scripts from configuration file.

  -enable-script-checks
     Enables health check scripts.

  -encrypt&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;lt;value&amp;gt;
     Provides the gossip encryption key.

  -grpc-port&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;lt;value&amp;gt;
     Sets the gRPC API port to listen on &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;currently needed &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; Envoy xDS
     only&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;.

  -hcl&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;lt;value&amp;gt;
     hcl config fragment. Can be specified multiple times.

  -http-port&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;lt;value&amp;gt;
     Sets the HTTP API port to listen on.

  -join&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;lt;value&amp;gt;
     Address of an agent to join at start time. Can be specified
     multiple times.

  -join-wan&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;lt;value&amp;gt;
     Address of an agent to join -wan at start time. Can be specified
     multiple times.

  -log-file&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;lt;value&amp;gt;
     Path to the file the logs get written to

  -log-level&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;lt;value&amp;gt;
     Log level of the agent.

  -log-rotate-bytes&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;lt;value&amp;gt;
     Maximum number of bytes that should be written to a log file

  -log-rotate-duration&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;lt;value&amp;gt;
     Time after which log rotation needs to be performed

  -log-rotate-max-files&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;lt;value&amp;gt;
     Maximum number of log file archives to keep

  -node&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;lt;value&amp;gt;
     Name of this node. Must be unique in the cluster.

  -node-id&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;lt;value&amp;gt;
     A unique ID &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; this node across space and time. Defaults to a
     randomly-generated ID that persists in the data-dir.

  -node-meta&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;lt;key:value&amp;gt;
     An arbitrary metadata key/value pair &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; this node, of the format
     &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;key:value&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;. Can be specified multiple times.

  -non-voting-server
     &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Enterprise-only&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; This flag is used to make the server not
     participate in the Raft quorum, and have it only receive the data
     replication stream. This can be used to add &lt;span class=&quot;nb&quot;&gt;read&lt;/span&gt; scalability to
     a cluster in cases where a high volume of reads to servers are
     needed.

  -pid-file&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;lt;value&amp;gt;
     Path to file to store agent PID.

  -protocol&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;lt;value&amp;gt;
     Sets the protocol version. Defaults to latest.

  -raft-protocol&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;lt;value&amp;gt;
     Sets the Raft protocol version. Defaults to latest.

  -recursor&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;lt;value&amp;gt;
     Address of an upstream DNS server. Can be specified multiple times.

  -rejoin
     Ignores a previous leave and attempts to rejoin the cluster.

  -retry-interval&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;lt;value&amp;gt;
     Time to &lt;span class=&quot;nb&quot;&gt;wait&lt;/span&gt; between join attempts.

  -retry-interval-wan&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;lt;value&amp;gt;
     Time to &lt;span class=&quot;nb&quot;&gt;wait&lt;/span&gt; between join -wan attempts.

  -retry-join&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;lt;value&amp;gt;
     Address of an agent to join at start &lt;span class=&quot;nb&quot;&gt;time&lt;/span&gt; with retries enabled. Can
     be specified multiple times.

  -retry-join-wan&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;lt;value&amp;gt;
     Address of an agent to join -wan at start &lt;span class=&quot;nb&quot;&gt;time&lt;/span&gt; with retries
     enabled. Can be specified multiple times.

  -retry-max&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;lt;value&amp;gt;
     Maximum number of join attempts. Defaults to &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;, which will retry
     indefinitely.

  -retry-max-wan&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;lt;value&amp;gt;
     Maximum number of join -wan attempts. Defaults to &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;, which will
     retry indefinitely.

  -segment&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;lt;value&amp;gt;
     &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Enterprise-only&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; Sets the network segment to join.

  -serf-lan-bind&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;lt;value&amp;gt;
     Address to &lt;span class=&quot;nb&quot;&gt;bind&lt;/span&gt; Serf LAN listeners to.

  -serf-lan-port&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;lt;value&amp;gt;
     Sets the Serf LAN port to listen on.

  -serf-wan-bind&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;lt;value&amp;gt;
     Address to &lt;span class=&quot;nb&quot;&gt;bind&lt;/span&gt; Serf WAN listeners to.

  -serf-wan-port&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;lt;value&amp;gt;
     Sets the Serf WAN port to listen on.

  -server
     Switches agent to server mode.

  -server-port&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;lt;value&amp;gt;
     Sets the server port to listen on.

  -syslog
     Enables logging to syslog.

  -ui
     Enables the built-in static web UI server.

  -ui-content-path&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;lt;value&amp;gt;
     Sets the external UI path to a string. Defaults to: /ui/

  -ui-dir&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;lt;value&amp;gt;
     Path to directory containing the web UI resources.&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;consul-help&quot;&gt;consul –help&lt;/h2&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;&lt;/span&gt;$ docker run -it --rm consul:1.6.1 --help
Usage: consul &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;--version&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;--help&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &amp;lt;command&amp;gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&amp;lt;args&amp;gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;

Available commands are:
    acl            Interact with Consul&lt;span class=&quot;s1&quot;&gt;&amp;#39;s ACLs&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;    agent          Runs a Consul agent&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;    catalog        Interact with the catalog&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;    config         Interact with Consul&amp;#39;&lt;/span&gt;s Centralized Configurations
    connect        Interact with Consul Connect
    debug          Records a debugging archive &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; operators
    event          Fire a new event
    &lt;span class=&quot;nb&quot;&gt;exec&lt;/span&gt;           Executes a &lt;span class=&quot;nb&quot;&gt;command&lt;/span&gt; on Consul nodes
    force-leave    Forces a member of the cluster to enter the &lt;span class=&quot;s2&quot;&gt;&amp;quot;left&amp;quot;&lt;/span&gt; state
    info           Provides debugging information &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; operators.
    intention      Interact with Connect service intentions
    join           Tell Consul agent to join cluster
    keygen         Generates a new encryption key
    keyring        Manages gossip layer encryption keys
    kv             Interact with the key-value store
    leave          Gracefully leaves the Consul cluster and shuts down
    lock           Execute a &lt;span class=&quot;nb&quot;&gt;command&lt;/span&gt; holding a lock
    login          Login to Consul using an auth method
    &lt;span class=&quot;nb&quot;&gt;logout&lt;/span&gt;         Destroy a Consul token created with login
    maint          Controls node or service maintenance mode
    members        Lists the members of a Consul cluster
    monitor        Stream logs from a Consul agent
    operator       Provides cluster-level tools &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; Consul operators
    reload         Triggers the agent to reload configuration files
    rtt            Estimates network round trip &lt;span class=&quot;nb&quot;&gt;time&lt;/span&gt; between nodes
    services       Interact with services
    snapshot       Saves, restores and inspects snapshots of Consul server state
    tls            Builtin helpers &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; creating CAs and certificates
    validate       Validate config files/directories
    version        Prints the Consul version
    watch          Watch &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; changes in Consul&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;blockquote&gt;
  &lt;p&gt;EOF&lt;/p&gt;
&lt;/blockquote&gt;
</description>
				<pubDate>Wed, 25 Dec 2019 10:36:22 +0800</pubDate>
				<link>https://xenojoshua.com/2019/12/consul-note/</link>
				<guid isPermaLink="true">https://xenojoshua.com/2019/12/consul-note/</guid>
			</item>
		
			<item>
				<title>使用Drone进行CI支持</title>
				<description>&lt;h4&gt;Table of Contents&lt;/h4&gt;
&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#1-前言&quot; id=&quot;markdown-toc-1-前言&quot;&gt;1. 前言&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#2-概念&quot; id=&quot;markdown-toc-2-概念&quot;&gt;2. 概念&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#21-pipeline&quot; id=&quot;markdown-toc-21-pipeline&quot;&gt;2.1 &lt;a href=&quot;https://docs.drone.io/configure/pipeline/&quot; target=&quot;_blank&quot;&gt;pipeline&lt;/a&gt;&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#22-step&quot; id=&quot;markdown-toc-22-step&quot;&gt;2.2 &lt;a href=&quot;https://docker-runner.docs.drone.io/configuration/steps/&quot; target=&quot;_blank&quot;&gt;step&lt;/a&gt;&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#23-workspace&quot; id=&quot;markdown-toc-23-workspace&quot;&gt;2.3 &lt;a href=&quot;https://docker-runner.docs.drone.io/configuration/workspace/&quot; target=&quot;_blank&quot;&gt;workspace&lt;/a&gt;&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#24-trigger&quot; id=&quot;markdown-toc-24-trigger&quot;&gt;2.4 &lt;a href=&quot;https://docker-runner.docs.drone.io/configuration/trigger/&quot; target=&quot;_blank&quot;&gt;trigger&lt;/a&gt;&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#25-condition&quot; id=&quot;markdown-toc-25-condition&quot;&gt;2.5 &lt;a href=&quot;https://docker-runner.docs.drone.io/configuration/conditions/&quot; target=&quot;_blank&quot;&gt;condition&lt;/a&gt;&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#3-架构--multiple-pipeline--parallelism&quot; id=&quot;markdown-toc-3-架构--multiple-pipeline--parallelism&quot;&gt;3. 架构 &amp;amp; Multiple Pipeline &amp;amp; Parallelism&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#31-架构&quot; id=&quot;markdown-toc-31-架构&quot;&gt;3.1 架构&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#32-multiple-pipeline&quot; id=&quot;markdown-toc-32-multiple-pipeline&quot;&gt;3.2 Multiple Pipeline&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#33-parallelism&quot; id=&quot;markdown-toc-33-parallelism&quot;&gt;3.3 Parallelism&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#4-使用&quot; id=&quot;markdown-toc-4-使用&quot;&gt;4. 使用&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#41-server安装--运行&quot; id=&quot;markdown-toc-41-server安装--运行&quot;&gt;4.1 Server：安装 &amp;amp; 运行&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#411-oauth2准备&quot; id=&quot;markdown-toc-411-oauth2准备&quot;&gt;4.1.1 OAuth2准备&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#412-启动drone&quot; id=&quot;markdown-toc-412-启动drone&quot;&gt;4.1.2 启动drone&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#413-oauth2授权&quot; id=&quot;markdown-toc-413-oauth2授权&quot;&gt;4.1.3 OAuth2授权&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#414-ui同步--激活代码库&quot; id=&quot;markdown-toc-414-ui同步--激活代码库&quot;&gt;4.1.4 UI同步 &amp;amp; 激活代码库&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#415-api秘钥&quot; id=&quot;markdown-toc-415-api秘钥&quot;&gt;4.1.5 API秘钥&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#42-runner安装--运行&quot; id=&quot;markdown-toc-42-runner安装--运行&quot;&gt;4.2 Runner：安装 &amp;amp; 运行&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#421-安装&quot; id=&quot;markdown-toc-421-安装&quot;&gt;4.2.1 安装&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#422-运行&quot; id=&quot;markdown-toc-422-运行&quot;&gt;4.2.2 运行&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#43-ui秘钥设置&quot; id=&quot;markdown-toc-43-ui秘钥设置&quot;&gt;4.3 UI秘钥设置&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#44-私有registry&quot; id=&quot;markdown-toc-44-私有registry&quot;&gt;4.4 私有Registry&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#45-部署--多点事件触发&quot; id=&quot;markdown-toc-45-部署--多点事件触发&quot;&gt;4.5 部署 &amp;amp; 多点事件触发&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#451-drone-api--drone-cli&quot; id=&quot;markdown-toc-451-drone-api--drone-cli&quot;&gt;4.5.1 drone api | drone cli&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#452-plugin&quot; id=&quot;markdown-toc-452-plugin&quot;&gt;4.5.2 plugin&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#453-webhook-plugin&quot; id=&quot;markdown-toc-453-webhook-plugin&quot;&gt;4.5.3 webhook plugin&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#454-webhook-fake&quot; id=&quot;markdown-toc-454-webhook-fake&quot;&gt;4.5.4 webhook fake&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#455-waiting-hack&quot; id=&quot;markdown-toc-455-waiting-hack&quot;&gt;4.5.5 waiting hack&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;1-前言&quot;&gt;1. 前言&lt;/h1&gt;
&lt;p&gt;Drone是一个Golang技术栈的CI解决方案，功能和Jenkins之类的CI工具类似。&lt;/p&gt;

&lt;p&gt;优点：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Golang编写，分发及搭建非常容易（镜像体积很小）&lt;/li&gt;
  &lt;li&gt;Golang编写，运行时占用资源极小（特指和Java栈的一系列工具比较）&lt;/li&gt;
  &lt;li&gt;构建运行时以镜像优先，保证在不同平台的构建结果一致&lt;/li&gt;
  &lt;li&gt;优秀的设计，支持插件化提供强大的功能支持&lt;/li&gt;
  &lt;li&gt;现代化的UI，开箱即用，甩开Jenkins之类有历史包袱的工具几条街&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;缺点：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;较年轻，文档工作需要强化&lt;/li&gt;
  &lt;li&gt;插件的数量和质量，以及插件的文档支持需要强化&lt;/li&gt;
  &lt;li&gt;功能尚不能说强大，和Jenkins之类的老牌CI相比差距较大&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;简单选择：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Drone：
    &lt;ul&gt;
      &lt;li&gt;小型团队，对新技术适应能力较强的团队&lt;/li&gt;
      &lt;li&gt;对功能的丰富性要求并不是很高，但要求性能强大功能稳定&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Jenkins：
    &lt;ul&gt;
      &lt;li&gt;对功能的丰富性要求较高，要求任何情况任何需求都能快速应对&lt;/li&gt;
      &lt;li&gt;运维人员对Jenkins非常熟悉可以很快上手使用&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;相关资源：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;官方站点：&lt;a href=&quot;https://drone.io/&quot; target=&quot;_blank&quot;&gt;drone.io&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;文档站点：&lt;a href=&quot;https://docs.drone.io/&quot; target=&quot;_blank&quot;&gt;docs.drone.io&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;官方论坛：&lt;a href=&quot;https://discourse.drone.io/&quot; target=&quot;_blank&quot;&gt;discourse.drone.io&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;2-概念&quot;&gt;2. 概念&lt;/h1&gt;
&lt;h2 id=&quot;21-pipeline&quot;&gt;2.1 &lt;a href=&quot;https://docs.drone.io/configure/pipeline/&quot; target=&quot;_blank&quot;&gt;pipeline&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;pipeline是drone的核心概念&lt;/li&gt;
  &lt;li&gt;pipeline一般负责完成一个&lt;code&gt;任务&lt;/code&gt;：构建、发布、部署，其内部会有多个行为共同组成一个pipeline&lt;/li&gt;
  &lt;li&gt;pipeline在drone里是进行分类的，按类型有多种种类，常用的有：
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://docker-runner.docs.drone.io/configuration/&quot; target=&quot;_blank&quot;&gt;docker&lt;/a&gt;：所有的构建行为都在临时docker容器内进行，跨平台保证行为一致
        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;https://exec-runner.docs.drone.io/configuration/variables/&quot; target=&quot;_blank&quot;&gt;Environment Variables&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://exec-runner.docs.drone.io/configuration/&quot; target=&quot;_blank&quot;&gt;exec&lt;/a&gt;：所有的构建行为都在runner所在主机上进行，一般用在某些不方便放在容器内运行的工作，e.g xcode项目的构建
        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;https://docker-runner.docs.drone.io/configuration/environment/variables/&quot; target=&quot;_blank&quot;&gt;Environment Variables&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://ssh-runner.docs.drone.io/configuration/&quot; target=&quot;_blank&quot;&gt;ssh&lt;/a&gt;：构建行为通过ssh执行远程命令进行
        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;https://ssh-runner.docs.drone.io/configuration/variables/&quot; target=&quot;_blank&quot;&gt;Environment Variables&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;22-step&quot;&gt;2.2 &lt;a href=&quot;https://docker-runner.docs.drone.io/configuration/steps/&quot; target=&quot;_blank&quot;&gt;step&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;pipeline里的每一个操作被称为&lt;code&gt;step&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;组织多个&lt;code&gt;step&lt;/code&gt;可以完成一个特定的pipeline，e.g
    &lt;ul&gt;
      &lt;li&gt;构建pipeline：clone、安装依赖、单元测试、打包、制作镜像、推送镜像&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;23-workspace&quot;&gt;2.3 &lt;a href=&quot;https://docker-runner.docs.drone.io/configuration/workspace/&quot; target=&quot;_blank&quot;&gt;workspace&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;构建运行的工作空间，在不同的环境下其位置会有所不同&lt;/li&gt;
  &lt;li&gt;Posix系统（含docker容器），工作空间在：&lt;code&gt;/tmp/drone-${RANDOM}/drone/src&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;OSX系统，工作空间在：&lt;code&gt;/private/var/folders/...&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Win系统，工作空间在：&lt;code&gt;C:\windows\drone-%RANDOM%\drone\src&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;有一点要强调下，如果在bash脚本中访问当前pipeline的&lt;code&gt;~&lt;/code&gt;或&lt;code&gt;$HOME&lt;/code&gt;，获得的地址就是workspace的根目录，而&lt;code&gt;不是&lt;/code&gt;当前runner的用户home&lt;/li&gt;
  &lt;li&gt;此外，workspace是临时的，会在pipeline创建的时候产生，并在完成的时候被销毁&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;24-trigger&quot;&gt;2.4 &lt;a href=&quot;https://docker-runner.docs.drone.io/configuration/trigger/&quot; target=&quot;_blank&quot;&gt;trigger&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;trigger决定当前的&lt;code&gt;pipeline&lt;/code&gt;是否要&lt;code&gt;触发&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;trigger有很多类型：
    &lt;ul&gt;
      &lt;li&gt;根据分支：e.g 是否dev分支&lt;/li&gt;
      &lt;li&gt;根据事件：e.g 是否tag事件（注意，tag和分支trigger不能同时存在，因为tag是不区分分支的）&lt;/li&gt;
      &lt;li&gt;根据reference：e.g refs/tags/**&lt;/li&gt;
      &lt;li&gt;根据代码库：e.g octocat/hello-world&lt;/li&gt;
      &lt;li&gt;根据runner实例：e.g drone.instance1.com&lt;/li&gt;
      &lt;li&gt;根据状态触发：e.g failure&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;25-condition&quot;&gt;2.5 &lt;a href=&quot;https://docker-runner.docs.drone.io/configuration/conditions/&quot; target=&quot;_blank&quot;&gt;condition&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;condition决定当前的&lt;code&gt;step&lt;/code&gt;是否要&lt;code&gt;触发&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;condition有很多类型：
    &lt;ul&gt;
      &lt;li&gt;根据分支：e.g 是否dev分支&lt;/li&gt;
      &lt;li&gt;根据事件：e.g 是否tag事件（注意，tag和分支condition不能同时存在，因为tag是不区分分支的）&lt;/li&gt;
      &lt;li&gt;根据reference：e.g refs/tags/**&lt;/li&gt;
      &lt;li&gt;根据代码库：e.g octocat/hello-world&lt;/li&gt;
      &lt;li&gt;根据runner实例：e.g drone.instance1.com&lt;/li&gt;
      &lt;li&gt;根据状态触发：e.g failure&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;3-架构--multiple-pipeline--parallelism&quot;&gt;3. 架构 &amp;amp; Multiple Pipeline &amp;amp; Parallelism&lt;/h1&gt;
&lt;h2 id=&quot;31-架构&quot;&gt;3.1 架构&lt;/h2&gt;
&lt;p&gt;Drone这个CI其实很简单，也说不上什么架构。一般Drone会有一个单点Server，在git工具上注册好webhook接收事件，然后启动多个Runner来处理Server上产生的任务。这些Runner可以在同一台主机上，也可以分散在多台不同的主机上，官方文档的指引中要求不要将runner和server放在同一台主机上。&lt;/p&gt;

&lt;h2 id=&quot;32-multiple-pipeline&quot;&gt;3.2 Multiple Pipeline&lt;/h2&gt;
&lt;p&gt;官方说明：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Drone supports configuring and orchestrating multiple pipelines. This is useful when you need to fan-out and distribute your build tasks across multiple machines to reduce build times, or to execute your build tasks across multiple platforms (e.g. amd64 and arm64).&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;用途1：&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;在处理大型项目任务的时候，将任务拆散，分散到不同的物理机上进行并行处理，加速整个构建进程。如果是不同主机的话，需要用到&lt;code&gt;2.4&lt;/code&gt;提到的pipeline trigger，将不同的pipeline设定好自己的运行目标主机。保证同一个repo在不同主机上触发的时候，只有当前主机（runner）应该执行的pipeline得到执行。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;用途2：&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;确定pipeline之间的先后顺序，通过在pipeline一级定义&lt;code&gt;depends_on&lt;/code&gt;来申明相互之间的依赖关系。这里特别需要注意的是：pipeline之间是不共享workspace的。所以每一步都需要单独做类似于依赖安装之类的工作，这需要特别小心。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt;
&lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;pipeline&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# ...&lt;/span&gt;

&lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt;
&lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;pipeline&lt;/span&gt;
&lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;p3&lt;/span&gt;

&lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;steps&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;notify&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# ...&lt;/span&gt;

&lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;depends_on&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;p1&lt;/span&gt;
  &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;p2&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;33-parallelism&quot;&gt;3.3 Parallelism&lt;/h2&gt;
&lt;p&gt;这部分内容与 Multiple Pipeline 的关系，和之前讲过的 trigger 与 condition 的关系一样。Multiple Pipeline 是pipeline级别的，而Parallelism则是step级别的，本质上仍旧是并行运行。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;pipeline&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# ...&lt;/span&gt;

&lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;steps&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# ...&lt;/span&gt;

&lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;s3&lt;/span&gt;
  &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;commands&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# ...&lt;/span&gt;
  &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;depends_on&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;s1&lt;/span&gt;
    &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;s2&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h1 id=&quot;4-使用&quot;&gt;4. 使用&lt;/h1&gt;
&lt;h2 id=&quot;41-server安装--运行&quot;&gt;4.1 Server：安装 &amp;amp; 运行&lt;/h2&gt;
&lt;h3 id=&quot;411-oauth2准备&quot;&gt;4.1.1 OAuth2准备&lt;/h3&gt;
&lt;p&gt;需要在git repo软件上申请一个OAuth应用。这里我使用的是Gitea，就拿它来做演示：&lt;/p&gt;

&lt;p&gt;点击：&lt;code&gt;右上角头像 &amp;gt; 设置（下拉菜单） &amp;gt; 应用（页面中间）&lt;/code&gt;，打开的页面是管理用户级别的&lt;code&gt;Access Tokens&lt;/code&gt;和&lt;code&gt;OAuth2应用&lt;/code&gt;的。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/resources/2019/12/drone-ci/oauth1.png&quot; alt=&quot;&quot; target=&quot;_blank&quot; /&gt;&lt;/p&gt;

&lt;p&gt;找到：&lt;code&gt;创建新的 OAuth2 应用程序&lt;/code&gt;这一栏，输入：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;应用名称：这名字后面用不到，填可理解的内容即可&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;重定向 URI&lt;/code&gt;：http://&lt;code&gt;${drone_host}:${drone_ip}&lt;/code&gt;/login&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/resources/2019/12/drone-ci/oauth2.png&quot; alt=&quot;&quot; target=&quot;_blank&quot; /&gt;&lt;/p&gt;

&lt;p&gt;点击&lt;code&gt;创建应用&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;在打开的页面上显示了OAuth2应用的相关信息，这里需要记下：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;客户端ID&lt;/li&gt;
  &lt;li&gt;客户端秘钥&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/resources/2019/12/drone-ci/oauth3.png&quot; alt=&quot;&quot; target=&quot;_blank&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;412-启动drone&quot;&gt;4.1.2 启动drone&lt;/h3&gt;
&lt;p&gt;Golang应用程序，使用上最容易的方式仍旧是镜像：&lt;a href=&quot;https://hub.docker.com/r/drone/drone&quot; target=&quot;_blank&quot;&gt;drone/drone&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;drone服务器启动时的环境变量文档在：&lt;a href=&quot;https://docs.drone.io/installation/reference/&quot; target=&quot;_blank&quot;&gt;Drone Documentation &amp;gt; Installation &amp;gt; Reference&lt;/a&gt;。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;&lt;/span&gt;$ docker run -it -d &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    --name drone-server &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    -p &lt;span class=&quot;m&quot;&gt;18980&lt;/span&gt;:80 &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    --log-driver&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;json-file &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    --log-opt max-size&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;512m &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    -v /tmp/drone/data:/data &lt;span class=&quot;se&quot;&gt;\ &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# sqlite db file&lt;/span&gt;
    -e &lt;span class=&quot;nv&quot;&gt;DRONE_LOGS_DEBUG&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    -e &lt;span class=&quot;nv&quot;&gt;DRONE_LOGS_COLOR&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    -e &lt;span class=&quot;nv&quot;&gt;DRONE_LOGS_PRETTY&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    -e &lt;span class=&quot;nv&quot;&gt;DRONE_LOGS_TRACE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    -e &lt;span class=&quot;nv&quot;&gt;DRONE_AGENTS_ENABLED&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\ &lt;/span&gt;                                             &lt;span class=&quot;c1&quot;&gt;# drone server running with no agents, start runners manually&lt;/span&gt;
    -e &lt;span class=&quot;nv&quot;&gt;DRONE_GITEA_SKIP_VERIFY&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\ &lt;/span&gt;                                          &lt;span class=&quot;c1&quot;&gt;# gitea: use http protocol&lt;/span&gt;
    -e &lt;span class=&quot;nv&quot;&gt;DRONE_GITEA_SERVER&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;http://host.docker.internal:13000 &lt;span class=&quot;se&quot;&gt;\ &lt;/span&gt;                  &lt;span class=&quot;c1&quot;&gt;# gitea: server address with protocol&lt;/span&gt;
    -e &lt;span class=&quot;nv&quot;&gt;DRONE_GITEA_CLIENT_ID&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;fd023edb-7976-4d50-a92f-b16612683240 &lt;span class=&quot;se&quot;&gt;\ &lt;/span&gt;            &lt;span class=&quot;c1&quot;&gt;# gitea: oauth client id&lt;/span&gt;
    -e &lt;span class=&quot;nv&quot;&gt;DRONE_GITEA_CLIENT_SECRET&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;S4Q6PktE3dKNHPUzZrTdyNJsTThwal4doUWf6jf4eRA&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\ &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# gitea: oauth client secret &lt;/span&gt;
    -e &lt;span class=&quot;nv&quot;&gt;DRONE_RPC_SECRET&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;d9856af41ffe31f5e8025be020e981be &lt;span class=&quot;se&quot;&gt;\ &lt;/span&gt;                     &lt;span class=&quot;c1&quot;&gt;# drone: runner shall connect server with this secret&lt;/span&gt;
    -e &lt;span class=&quot;nv&quot;&gt;DRONE_SERVER_HOST&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;host.docker.internal:18980 &lt;span class=&quot;se&quot;&gt;\ &lt;/span&gt;                          &lt;span class=&quot;c1&quot;&gt;# drone: server address without protocol&lt;/span&gt;
    -e &lt;span class=&quot;nv&quot;&gt;DRONE_SERVER_PROTO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;http &lt;span class=&quot;se&quot;&gt;\ &lt;/span&gt;                                               &lt;span class=&quot;c1&quot;&gt;# drone: server with http protocol&lt;/span&gt;
    drone/drone:1.6.3&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;413-oauth2授权&quot;&gt;4.1.3 OAuth2授权&lt;/h3&gt;
&lt;p&gt;访问drone的地址：&lt;code&gt;http://host.docker.internal:18980&lt;/code&gt;，会跳转到gitea进行授权，授权完成后会跳转回drone。这时应该就已经以刚才制作OAuth2应用的用户身份登录drone了。&lt;/p&gt;

&lt;p&gt;这里说明下，因为gitea和drone都运行在容器内，他们之间相互访问是通过容器名来进行的，而host主机访问这两者都是通过loopback地址，两者之间存在差异，会导致OAuth的过程失败。因此这里统一使用docker MAC desktop版本的&lt;code&gt;host.docker.internal&lt;/code&gt;域名来贯通内部和外部。但需要额外修改host主机的&lt;code&gt;/etc/hosts&lt;/code&gt;配置，把这个host解析为loopback地址。&lt;/p&gt;

&lt;h3 id=&quot;414-ui同步--激活代码库&quot;&gt;4.1.4 UI同步 &amp;amp; 激活代码库&lt;/h3&gt;
&lt;p&gt;刚完成授权的账户是没有任何代码库的，打开drone首页发现是空列表（即便当前通过OAuth2授权的账号在gitea内有代码库）：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/resources/2019/12/drone-ci/drone1.png&quot; alt=&quot;&quot; target=&quot;_blank&quot; /&gt;&lt;/p&gt;

&lt;p&gt;点击右上角的&lt;code&gt;SYNC&lt;/code&gt;就会开始和gitea同步账户的代码库数据，完成后即可获得所有当前账号在gitea内所拥有的代码库列表：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/resources/2019/12/drone-ci/drone2.png&quot; alt=&quot;&quot; target=&quot;_blank&quot; /&gt;&lt;/p&gt;

&lt;p&gt;这时候账号下的drone项目都是&lt;code&gt;未激活&lt;/code&gt;状态，需要点击面板上项目右边的&lt;code&gt;ACTIVATE&lt;/code&gt;进行激活：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/resources/2019/12/drone-ci/drone3.png&quot; alt=&quot;&quot; target=&quot;_blank&quot; /&gt;
&lt;img src=&quot;/resources/2019/12/drone-ci/drone4.png&quot; alt=&quot;&quot; target=&quot;_blank&quot; /&gt;&lt;/p&gt;

&lt;p&gt;点击&lt;code&gt;SAVE&lt;/code&gt;保存即可。经过这几个操作，drone即激活了对这几个代码库的webhook事件监听。&lt;/p&gt;

&lt;p&gt;至此为止drone本体的安装基本上完成了，后续还需要配置下runner。&lt;/p&gt;

&lt;h3 id=&quot;415-api秘钥&quot;&gt;4.1.5 API秘钥&lt;/h3&gt;
&lt;p&gt;点击右上角的用户头像，然后点击&lt;code&gt;User settings&lt;/code&gt;会打开用户的设置页面。在这个页面上能找到用户的token。如果有需要使用drone API的话（或者是cli命令行工具），这个token是必须的。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/resources/2019/12/drone-ci/drone7.png&quot; alt=&quot;&quot; target=&quot;_blank&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;42-runner安装--运行&quot;&gt;4.2 Runner：安装 &amp;amp; 运行&lt;/h2&gt;
&lt;h3 id=&quot;421-安装&quot;&gt;4.2.1 安装&lt;/h3&gt;
&lt;p&gt;服务器设置完成后，如果没有单独安装和运行runner，服务器上所有触发的事件都会是&lt;code&gt;Pending&lt;/code&gt;状态，而且没有任何日志。&lt;/p&gt;

&lt;p&gt;关于Pending的debug，可以看下官方的一篇帖子：&lt;a href=&quot;https://discourse.drone.io/t/builds-are-stuck-in-pending-status/4437&quot; target=&quot;_blank&quot;&gt;Builds are Stuck in Pending Status&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;Runner的安装见官方文档：&lt;a href=&quot;https://docs.drone.io/installation/runners/&quot; target=&quot;_blank&quot;&gt;Drone Documentation &amp;gt; Installation &amp;gt; Runners&lt;/a&gt;。Runner也分不同的类型，一般常用的是：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.drone.io/installation/runners/exec/&quot; target=&quot;_blank&quot;&gt;Exec Runner&lt;/a&gt;：直接运行在主机上的runner&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.drone.io/installation/runners/docker/&quot; target=&quot;_blank&quot;&gt;Docker Runner&lt;/a&gt;：运行在docker容器内的runner&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Runner的类型和pipeline的类型并不要求一致，runner只是pipeline的运行者，不管是什么类型的pipeline，都可以在任何类型的runner上运作。举例来说，一个docker类型的pipeline，在exec runner上就会在主机上启动docker容器并运行，而docker runner则是直接在docker容器内运行。&lt;/p&gt;

&lt;h3 id=&quot;422-运行&quot;&gt;4.2.2 运行&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Exec Runner&lt;/strong&gt;  &lt;br /&gt;
Exec Runner需要手动在&lt;code&gt;~/.drone-runner-exec/config&lt;/code&gt;创建一个配置文件：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;DRONE_DEBUG&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;DRONE_LOG_FILE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/tmp/drone-runner-exec.txt
&lt;span class=&quot;nv&quot;&gt;DRONE_LOG_FILE_MAX_SIZE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;50&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;DRONE_RPC_DUMP_HTTP&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;DRONE_RPC_DUMP_HTTP_BODY&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;DRONE_RPC_PROTO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;http
&lt;span class=&quot;nv&quot;&gt;DRONE_RPC_HOST&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;host.docker.internal:18980
&lt;span class=&quot;nv&quot;&gt;DRONE_RPC_SECRET&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;d9856af41ffe31f5e8025be020e981be
&lt;span class=&quot;nv&quot;&gt;DRONE_RUNNER_PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$HOME&lt;/span&gt;/.yarn/bin:&lt;span class=&quot;nv&quot;&gt;$HOME&lt;/span&gt;/.config/yarn/global/node_modules/.bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;更多的配置项可以查阅官方文档：&lt;a href=&quot;https://exec-runner.docs.drone.io/installation/reference/&quot; target=&quot;_blank&quot;&gt;Exec Runner &amp;gt; Installation &amp;gt; Configuration Reference&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;配置文件里最重要的是&lt;code&gt;DRONE_RPC_HOST&lt;/code&gt;&lt;code&gt;DRONE_RPC_SECRET&lt;/code&gt;这两项。修改完成后记得重启runner：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;&lt;/span&gt;$ drone-runner-exec service stop &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; drone-runner-exec service start&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Runner在执行pipeline操作时候的用户即是runner启动时的用户，这需要非常小心，否则会搞错用户导致权限错误。此外，在2.3 workspace的时候也提到过了，在runner执行pipeline的时候，&lt;code&gt;~&lt;/code&gt;指向的是workspace的根目录，而不是用户的home，这点要非常小心。&lt;/p&gt;

&lt;p&gt;举例来说，存放在&lt;code&gt;$HOME/.docker&lt;/code&gt;下的凭证在exec runner运行的时候是不可访问的（&lt;code&gt;~&lt;/code&gt;会定位到workspace而不是&lt;code&gt;$HOME&lt;/code&gt;），这会导致私有registry的访问失败。同样的，pipeline运行时的PATH也不同于用户自身的PATH，需要在配置文件中设置好&lt;code&gt;DRONE_RUNNER_PATH&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Docker Runner&lt;/strong&gt;  &lt;br /&gt;
这部分就非常简单了，无非就是一个docker容器，直接使用对应的官方镜像即可：&lt;a href=&quot;https://hub.docker.com/r/drone/drone-runner-docker&quot; target=&quot;_blank&quot;&gt;drone/drone-runner-docker&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;相关配置项可以查阅官方文档：&lt;a href=&quot;https://docker-runner.docs.drone.io/installation/reference/&quot; target=&quot;_blank&quot;&gt;Docker Runner &amp;gt; Installation &amp;gt; Configuration Reference&lt;/a&gt;。&lt;/p&gt;

&lt;h2 id=&quot;43-ui秘钥设置&quot;&gt;4.3 UI秘钥设置&lt;/h2&gt;
&lt;p&gt;在执行pipeline的时候不可避免需要访问一些密码秘钥之类的信息，而构建过程中，理论上runner只能访问代码库里的内容。这就造成了问题，因为代码库并不是安全的存放秘钥的地方。针对这样的问题，drone有对应的解决方案。&lt;/p&gt;

&lt;p&gt;在drone ui仓库的设置中，有一处：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/resources/2019/12/drone-ci/drone5.png&quot; alt=&quot;&quot; target=&quot;_blank&quot; /&gt;&lt;/p&gt;

&lt;p&gt;设置完成后，就会保存在drone系统中：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/resources/2019/12/drone-ci/drone6.png&quot; alt=&quot;&quot; target=&quot;_blank&quot; /&gt;&lt;/p&gt;

&lt;p&gt;后续在pipeline可以如下的形式进行访问：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;pipeline&lt;/span&gt;
&lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;default&lt;/span&gt;

&lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;steps&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;build&lt;/span&gt;
  &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;alpine&lt;/span&gt;
  &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;environment&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;USERNAME&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;from_secret&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;docker_username&lt;/span&gt;
    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;PASSWORD&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;from_secret&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;docker_password&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;更多关于secret的设置及访问，可以参见官方文档：&lt;a href=&quot;https://docs.drone.io/configure/secrets/&quot; target=&quot;_blank&quot;&gt;Drone Documentation &amp;gt; Configuration &amp;gt; Secrets&lt;/a&gt;。在这方面，drone支持得非常全面，甚至外部的加密设施也可以支持访问。&lt;/p&gt;

&lt;h2 id=&quot;44-私有registry&quot;&gt;4.4 私有Registry&lt;/h2&gt;
&lt;p&gt;在pipeline应用的过程中，比较常见的问题是对于私有registry的访问。毕竟现在的CI基本上都围绕着镜像打转，抓取镜像进行部署或者构建镜像向上推送都是常见需求。&lt;/p&gt;

&lt;p&gt;官方对此也有解决方案：&lt;a href=&quot;https://discourse.drone.io/t/how-to-pull-private-images-with-1-0/3155&quot; target=&quot;_blank&quot;&gt;How to pull private images with 1.0&lt;/a&gt;。&lt;/p&gt;

&lt;h2 id=&quot;45-部署--多点事件触发&quot;&gt;4.5 部署 &amp;amp; 多点事件触发&lt;/h2&gt;
&lt;p&gt;上述的内容基本上把CI的最基础的应用都讲到了，如果只是简单的&lt;code&gt;提交代码 &amp;gt; 触发webhook &amp;gt; drone pipeline&lt;/code&gt;这个流程的话，是没有问题的。&lt;/p&gt;

&lt;p&gt;那么接下来就可以考虑下稍微复杂点的需求：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;项目的构建和部署需要分开&lt;/li&gt;
  &lt;li&gt;构建定义为一个pipeline&lt;/li&gt;
  &lt;li&gt;部署定义为一个pipeline&lt;/li&gt;
  &lt;li&gt;部署pipeline应该由构建pipeline异步触发&lt;/li&gt;
  &lt;li&gt;部署pipeline应该和构建pipeline解耦，两者可能发生在完全隔离的两个物理机的runner上&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;然后我简单说下结论：在当前的版本（drone/drone:1.6.3），这个需求&lt;code&gt;做不到&lt;/code&gt;，如果是按官方的API和功能的话。而使用一些非官方的hacking思路，则可以做到&lt;code&gt;基本上一致的效果&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;根据一开始说的，如果单独只是一个构建pipeline，很简单就能做到。而如果要实现刚才列出的需求，就需要在构建pipeline完成并退出之前触发一个额外的事件，只要能触发额外的事件，再配合上：trigger &amp;amp; condition，保证代码库的pipeline启动的时候，只有部署pipeline进入工作，且只有正确的runner实例进入工作，那一切就通了。&lt;/p&gt;

&lt;p&gt;那么，能不能手动触发一个部署呢？研究了下官方的资料，发现正常途径基本上做不到，只有一些非正常的思路才可以做到。下面说下思路。&lt;/p&gt;

&lt;h3 id=&quot;451-drone-api--drone-cli&quot;&gt;4.5.1 drone api | drone cli&lt;/h3&gt;
&lt;p&gt;首先想到的是看看官方的API中有没有可用的命令（cli实际上就是官方API的封装）：&lt;a href=&quot;https://docs.drone.io/api/overview/&quot; target=&quot;_blank&quot;&gt;API文档&lt;/a&gt;、&lt;a href=&quot;https://docs.drone.io/cli/install/&quot; target=&quot;_blank&quot;&gt;CLI文档&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;发现官方有一个命令：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;&lt;/span&gt;$ drone build promote --help
  NAME:
     drone build promote - promote a build
  
  USAGE:
     drone build promote &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;command&lt;/span&gt; options&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &amp;lt;repo/name&amp;gt; &amp;lt;build&amp;gt; &amp;lt;environment&amp;gt;
  
  OPTIONS:
     --param value, -p value  custom parameters to be injected into the job environment. Format: &lt;span class=&quot;nv&quot;&gt;KEY&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;value
     --format value           format output &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;default: &lt;span class=&quot;s2&quot;&gt;&amp;quot;...&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;结合&lt;code&gt;.drone.yml&lt;/code&gt;使用：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;pipeline&lt;/span&gt;
&lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;exec&lt;/span&gt;
&lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;test&lt;/span&gt;

&lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;platform&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;darwin&lt;/span&gt;
  &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;arch&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;amd64&lt;/span&gt;

&lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;steps&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;test&lt;/span&gt;
    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;commands&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;echo &amp;quot;tested&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;when&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;tag&lt;/span&gt;

&lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt;
&lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;pipeline&lt;/span&gt;
&lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;exec&lt;/span&gt;
&lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;build&lt;/span&gt;

&lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;platform&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;darwin&lt;/span&gt;
  &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;arch&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;amd64&lt;/span&gt;

&lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;steps&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;build&lt;/span&gt;
    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;commands&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;echo &amp;quot;built&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;when&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;tag&lt;/span&gt;

&lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;depends_on&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;test&lt;/span&gt;

&lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt;
&lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;pipeline&lt;/span&gt;
&lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;exec&lt;/span&gt;
&lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;notify&lt;/span&gt;

&lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;platform&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;darwin&lt;/span&gt;
  &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;arch&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;amd64&lt;/span&gt;

&lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;steps&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;notify&lt;/span&gt;
    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;commands&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;drone build promote fullstack/gateway 100 production&lt;/span&gt;
    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;environment&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;DRONE_SERVER&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;http://host.docker.internal:18980&lt;/span&gt;
      &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;DRONE_TOKEN&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;K5i8g6PMlLM3tWaPDRagigPkBrl1YKGu&lt;/span&gt;
    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;when&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;tag&lt;/span&gt;

&lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;depends_on&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;build&lt;/span&gt;

&lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt;
&lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;pipeline&lt;/span&gt;
&lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;exec&lt;/span&gt;
&lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;deploy&lt;/span&gt;

&lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;platform&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;darwin&lt;/span&gt;
  &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;arch&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;amd64&lt;/span&gt;

&lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;steps&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;deploy&lt;/span&gt;
    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;commands&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;echo &amp;quot;deployed&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;when&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;promote&lt;/span&gt;
      &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;production&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;测试后发现，如果&lt;code&gt;build&lt;/code&gt;参数给的是已经存在的构建的话，则会重复之前的构建流程；而如果给的是一个很大的不存在该build的值（比如上面举例的100），则构建在notify这一步失败，并报错：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;&lt;/span&gt;+ drone build promote fullstack/gateway &lt;span class=&quot;m&quot;&gt;100&lt;/span&gt; production
client error &lt;span class=&quot;m&quot;&gt;404&lt;/span&gt;: &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;message&amp;quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&amp;quot;sql: no rows in result set&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;查找了下相关资料，并没有找到官方文档，仅在论坛中找到几篇讨论：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://discourse.drone.io/t/manually-trigger-a-build/874/8&quot; target=&quot;_blank&quot;&gt;Manually trigger a build&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://discourse.drone.io/t/promoting-a-build-by-branch/4755&quot; target=&quot;_blank&quot;&gt;Promoting a build by branch&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/drone/drone/issues/2679#issue-435262568&quot; target=&quot;_blank&quot;&gt;Trigger build for Branch, Commit&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;根据官方人员的解释：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;When you deploy, you are essentially “promoting” a build, which means you need to provide the build number you are promoting, and the environment you are promoting to. For example:&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;drone deploy octocat/hello-world 42 production&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;In the above example, you are promoting build 42 to production. This will execute a deployment event in the system with environment name production.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;也就是说你只能对&lt;code&gt;已经存在&lt;/code&gt;的build进行触发让这个&lt;code&gt;已经测试构建完成的&lt;/code&gt;build进行部署，而不能从头创建一个新的build。也就是说，上述的工具能大致满足上面提出的那串需求，但本质上还是不同的：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;测试构建等必须是一个单独的行为，需要先行做完，并形成一个完成的build&lt;/li&gt;
  &lt;li&gt;需要手动触发（因为你需要确认build号，所以这个行为必然是手动的，不可能自动化）这个完成的build，让yaml中配置为promote的event触发，进行部署&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;452-plugin&quot;&gt;4.5.2 plugin&lt;/h3&gt;
&lt;p&gt;官方有一个插件叫：&lt;a href=&quot;http://plugins.drone.io/drone-plugins/drone-downstream/&quot; target=&quot;_blank&quot;&gt;Downstream Build&lt;/a&gt;。乍看之下貌似是满足需求的，但我实际扒了下源码，发现这个插件的本质其实就是封装了下官方的API。所以实际上和4.5.1一样，不行。&lt;/p&gt;

&lt;h3 id=&quot;453-webhook-plugin&quot;&gt;4.5.3 webhook plugin&lt;/h3&gt;
&lt;p&gt;后续的思路是尝试使用webhook插件，在构建pipeline完成之后用webhook触发一个构建：&lt;a href=&quot;http://plugins.drone.io/drone-plugins/drone-webhook/&quot; target=&quot;_blank&quot;&gt;Webhook&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;文档工作总是半吊子，参数有几个根本不知道具体应该填什么，只能随便尝试下：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;&lt;/span&gt;$ docker run --rm &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
          -e &lt;span class=&quot;nv&quot;&gt;PLUGIN_URLS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;http://host.docker.internal:18980/hook &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
          -e &lt;span class=&quot;nv&quot;&gt;PLUGIN_USERNAME&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;root &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
          -e &lt;span class=&quot;nv&quot;&gt;PLUGIN_PASSWORD&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Abcd1234_ &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
          -e &lt;span class=&quot;nv&quot;&gt;PLUGIN_DEBUG&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
          -e &lt;span class=&quot;nv&quot;&gt;PLUGIN_SKIP_VERIFY&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
          -e &lt;span class=&quot;nv&quot;&gt;DRONE_REPO_OWNER&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;fullstack &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
          -e &lt;span class=&quot;nv&quot;&gt;DRONE_REPO_NAME&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;gateway &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
          -e &lt;span class=&quot;nv&quot;&gt;DRONE_COMMIT_SHA&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;2087d78f48 &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
          -e &lt;span class=&quot;nv&quot;&gt;DRONE_COMMIT_BRANCH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;master &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
          -e &lt;span class=&quot;nv&quot;&gt;DRONE_BUILD_EVENT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;deployment &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
          plugins/webhook:latest
Webhook &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;
  URL: http://host.docker.internal:18980/hook
  METHOD: POST
  HEADERS: map&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Authorization:&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Basic &lt;span class=&quot;nv&quot;&gt;cm9vdDpBYmNkMTIzNF8&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=]&lt;/span&gt; Content-Type:&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;application/json&lt;span class=&quot;o&quot;&gt;]]&lt;/span&gt;
  REQUEST BODY: &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;repo&amp;quot;&lt;/span&gt;:&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;owner&amp;quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&amp;quot;fullstack&amp;quot;&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&amp;quot;name&amp;quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&amp;quot;gateway&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&amp;quot;build&amp;quot;&lt;/span&gt;:&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;tag&amp;quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&amp;quot;event&amp;quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&amp;quot;deployment&amp;quot;&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&amp;quot;number&amp;quot;&lt;/span&gt;:0,&lt;span class=&quot;s2&quot;&gt;&amp;quot;commit&amp;quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&amp;quot;2087d78f48&amp;quot;&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&amp;quot;ref&amp;quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&amp;quot;refs/heads/master&amp;quot;&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&amp;quot;branch&amp;quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&amp;quot;master&amp;quot;&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&amp;quot;author&amp;quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&amp;quot;message&amp;quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&amp;quot;status&amp;quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&amp;quot;success&amp;quot;&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&amp;quot;link&amp;quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&amp;quot;started&amp;quot;&lt;/span&gt;:0,&lt;span class=&quot;s2&quot;&gt;&amp;quot;created&amp;quot;&lt;/span&gt;:0&lt;span class=&quot;o&quot;&gt;}}&lt;/span&gt;

  RESPONSE STATUS: &lt;span class=&quot;m&quot;&gt;200&lt;/span&gt; OK
  RESPONSE BODY:&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;返回结果是200，正常，但结果本身为&lt;code&gt;空&lt;/code&gt;。查看drone的UI发现实际上没有任何build被触发。这就很无奈了，这里的问题可能出在：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;操作者：给的参数不正确&lt;/li&gt;
  &lt;li&gt;webhook插件：没有发送正确的webhook请求&lt;/li&gt;
  &lt;li&gt;drone服务器：忽略了不正确的webhook请求&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;无论如何，后续如果要继续的话就需要看源码了，插件的以及服务器的源码。&lt;/p&gt;

&lt;h3 id=&quot;454-webhook-fake&quot;&gt;4.5.4 webhook fake&lt;/h3&gt;
&lt;p&gt;到这里就是非正常思路了。&lt;/p&gt;

&lt;p&gt;因为gitea可以正常触发drone的webhook，思路就是使用curl仿造gitea的请求，发送到drone。其实drone官方也有对webhook的描述：&lt;a href=&quot;https://discourse.drone.io/t/how-to-use-global-webhooks/3755&quot; target=&quot;_blank&quot;&gt;How to use Global Webhooks&lt;/a&gt;，但实在是没什么正式的支持，API之类的易用性的工具都没有，只有这篇文章。&lt;/p&gt;

&lt;p&gt;gitea官方有webhook相关的文档：&lt;a href=&quot;https://docs.gitea.io/en-us/webhooks/&quot; target=&quot;_blank&quot;&gt;Webhooks&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;gitea的钩子可以在这里找到，点击下面的链接可以查看请求细节：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/resources/2019/12/drone-ci/gitea1.png&quot; alt=&quot;&quot; target=&quot;_blank&quot; /&gt;
&lt;img src=&quot;/resources/2019/12/drone-ci/gitea2.png&quot; alt=&quot;&quot; target=&quot;_blank&quot; /&gt;
&lt;img src=&quot;/resources/2019/12/drone-ci/gitea3.png&quot; alt=&quot;&quot; target=&quot;_blank&quot; /&gt;&lt;/p&gt;

&lt;p&gt;当然这也非常麻烦，而且gitea发送出去的webhook请求里有非常多repo详细信息，如果要做到自动化的话，这块的获取也是很麻烦的一件事情。&lt;/p&gt;

&lt;h3 id=&quot;455-waiting-hack&quot;&gt;4.5.5 waiting hack&lt;/h3&gt;
&lt;p&gt;另一个非正常思路就是定义一个pipeline，仅在指定的runner上运行，然后命令中执行脚本，查询私有registry，看目标仓库（镜像）的目标tag是否存在，存在的话就进行部署。而在其他的runner上进行构建和镜像推送操作。&lt;/p&gt;

&lt;p&gt;这样就能做到一开始提的需求，虽然恶心了点。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;EOF&lt;/p&gt;
&lt;/blockquote&gt;
</description>
				<pubDate>Mon, 23 Dec 2019 10:36:22 +0800</pubDate>
				<link>https://xenojoshua.com/2019/12/drone-ci/</link>
				<guid isPermaLink="true">https://xenojoshua.com/2019/12/drone-ci/</guid>
			</item>
		
			<item>
				<title>在Docker中使用Node</title>
				<description>&lt;h4&gt;Table of Contents&lt;/h4&gt;
&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#1-前言&quot; id=&quot;markdown-toc-1-前言&quot;&gt;1. 前言&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#2-镜像制作&quot; id=&quot;markdown-toc-2-镜像制作&quot;&gt;2. 镜像制作&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#21-npm&quot; id=&quot;markdown-toc-21-npm&quot;&gt;2.1 npm&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#22-镜像制作&quot; id=&quot;markdown-toc-22-镜像制作&quot;&gt;2.2 镜像制作&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#23-镜像stage&quot; id=&quot;markdown-toc-23-镜像stage&quot;&gt;2.3 镜像stage&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#3-集群处理及反向代理&quot; id=&quot;markdown-toc-3-集群处理及反向代理&quot;&gt;3. 集群处理及反向代理&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#31-pm2--nginx&quot; id=&quot;markdown-toc-31-pm2--nginx&quot;&gt;3.1 pm2 + nginx&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#32-docker-compose--nginx&quot; id=&quot;markdown-toc-32-docker-compose--nginx&quot;&gt;3.2 docker-compose + nginx&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#4-健康检查&quot; id=&quot;markdown-toc-4-健康检查&quot;&gt;4. 健康检查&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;1-前言&quot;&gt;1. 前言&lt;/h1&gt;
&lt;p&gt;在Docker中使用Node，中间遇到了相当多的问题，这里就简单记录下，以防忘记。下述的所有范例都是使用typescript进行逻辑编写的，并在Docker中进行编译制作镜像的，周知。&lt;/p&gt;

&lt;h1 id=&quot;2-镜像制作&quot;&gt;2. 镜像制作&lt;/h1&gt;
&lt;h2 id=&quot;21-npm&quot;&gt;2.1 npm&lt;/h2&gt;
&lt;p&gt;在Dockerfile里的npm安装记得要加上&lt;code&gt;--unsafe-perm&lt;/code&gt;，具体可以看：&lt;a href=&quot;https://github.com/grpc/grpc-node/issues/604&quot; target=&quot;_blank&quot;&gt;grpc/grpc-node#604&lt;/a&gt;。&lt;/p&gt;

&lt;h2 id=&quot;22-镜像制作&quot;&gt;2.2 镜像制作&lt;/h2&gt;
&lt;p&gt;Docker的&lt;code&gt;COPY&lt;/code&gt;命令是将命令对应的文件夹&lt;code&gt;下&lt;/code&gt;的所有内容拷贝到目标位置，而不包含命令中的文件夹本身，这是必须先了解的基础。&lt;/p&gt;

&lt;p&gt;一般来说node项目的资源都会比较多比较散，不会像go应用程序一样build完成之后就是一个binary文件，node会有很多零碎的文件和代码都必须拷贝到镜像里。这里就需要先制作一个context。&lt;/p&gt;

&lt;p&gt;假设项目的文件夹结构如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;/- 
 | bash /-              # bash脚本
 |       | compose.sh   # 制作compose配置文件的脚本
 |       | docker.sh    # 制作镜像的脚本
 | build                # 编译完成的js文件
 | node_modules         # npm包
 | schema               # sql文件
 | src                  # typescript源码
 | .gitignore
 | Dockerfile
 | package.json
 | config.yml
 | README.md
 | tsconfig.json
 | tslint.json
 | yarn.lock
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;则可以使用如下脚本制作一个context子集，并进行镜像制作：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;ch&quot;&gt;#!/usr/bin/env bash&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;FULLPATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;dirname &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$0&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;pwd&lt;/span&gt; -P &lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;si&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;FULLPATH&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;/..

&lt;span class=&quot;nv&quot;&gt;VERSION&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;cat ./package.json &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; jq -r &lt;span class=&quot;s1&quot;&gt;&amp;#39;.version&amp;#39;&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# prepare docker context&lt;/span&gt;
rm -rf ./docker                 &lt;span class=&quot;c1&quot;&gt;# 删除之前的context，如果有的话&lt;/span&gt;
mkdir -p ./docker/context       &lt;span class=&quot;c1&quot;&gt;# 制作context文件夹&lt;/span&gt;
mkdir -p ./docker/context/pm2   &lt;span class=&quot;c1&quot;&gt;# 制作PM2日志文件夹，后面会说到&lt;/span&gt;
cp -r &lt;span class=&quot;se&quot;&gt;\ &lt;/span&gt;                        &lt;span class=&quot;c1&quot;&gt;# 拷贝制作镜像需要的资源到context内&lt;/span&gt;
    src &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    config.yml &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    package.json &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    tsconfig.json &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    tslint.json &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    yarn.lock &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    ./docker/context

&lt;span class=&quot;c1&quot;&gt;# build image&lt;/span&gt;
docker build &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    --no-cache &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    --tag your_app_name:&lt;span class=&quot;si&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;VERSION&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    --file ./Dockerfile &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    ./docker

&lt;span class=&quot;c1&quot;&gt;# remove images without tags&lt;/span&gt;
docker rmi &lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;docker images &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; awk &lt;span class=&quot;s1&quot;&gt;&amp;#39;/^&amp;lt;none&amp;gt;/ {print $3}&amp;#39;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;# 当制作tag重复的镜像时，这个命令就很有用&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# remove tmp file&lt;/span&gt;
rm -rf ./docker

&lt;span class=&quot;c1&quot;&gt;# push image&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;ORIGIN_TAG&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;you_app_name:&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;VERSION&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;TARGET_TAG&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;your_dockerhub_account/you_app_name:&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;VERSION&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;
docker tag &lt;span class=&quot;si&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;ORIGIN_TAG&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;si&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;TARGET_TAG&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;
docker push &lt;span class=&quot;si&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;TARGET_TAG&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;23-镜像stage&quot;&gt;2.3 镜像stage&lt;/h2&gt;
&lt;p&gt;node的镜像在制作过程中，需要一些命令进行辅助，而这些命令在基准的node镜像上是不存在的，因此就需要在Dockerfile中先npm安装它们。比如说typescript、yarn等。而这些安装行为都会显著增大镜像的体积，因此这里就需要使用到按stage进行构建的技术。&lt;/p&gt;

&lt;p&gt;官方文档在：&lt;a href=&quot;https://docs.docker.com/develop/develop-images/multistage-build/&quot; target=&quot;_blank&quot;&gt;Use multi-stage builds&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;先放一个例子：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-docker&quot; data-lang=&quot;docker&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; node:10.16.3-alpine as builder&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;WORKDIR&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; /opt&lt;/span&gt;

COPY ./context ./

&lt;span class=&quot;k&quot;&gt;RUN&lt;/span&gt; npm i typescript -g --unsafe-perm &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    npm i --only&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;prod --unsafe-perm --loglevel verbose &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    tsc

&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; node:10.16.3-alpine&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;WORKDIR&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; /app&lt;/span&gt;

COPY --from&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;builder /opt .

&lt;span class=&quot;k&quot;&gt;ENTRYPOINT&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; [&amp;quot;node&amp;quot;, &amp;quot;./build/index.js&amp;quot;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;该Dockerfile的上半部分将&lt;code&gt;./context&lt;/code&gt;下的所有内容拷贝到&lt;code&gt;/opt&lt;/code&gt;这个工作路径下。然后安装了typescript，并根据&lt;code&gt;package.json&lt;/code&gt;的内容进行npm包的安装。接下来使用刚才安装好的typescript命令&lt;code&gt;tsc&lt;/code&gt;根据&lt;code&gt;tsconfig.json&lt;/code&gt;的配置将src文件夹下的源码编译为&lt;code&gt;build&lt;/code&gt;文件夹下的js源码。&lt;/p&gt;

&lt;p&gt;从下半部分的&lt;code&gt;FROM node:10.16.3-alpine&lt;/code&gt;开始，起了一个干净的node镜像，并将&lt;code&gt;builder&lt;/code&gt;这个阶段做好的内容从builder阶段的&lt;code&gt;/opt&lt;/code&gt;文件夹下拷贝到&lt;code&gt;/app&lt;/code&gt;下。这里仍旧需要注意&lt;code&gt;COPY&lt;/code&gt;命令是不会拷贝目标文件夹自身的，只会拷贝文件夹下的内容。这样制作完成的镜像中就不会包含之前安装的typescript了。&lt;/p&gt;

&lt;p&gt;这个例子简单了点，只有一个typescript，如果在构建过程中还要用到一些其他东西的话，效果（体积变化）就会非常明显。&lt;/p&gt;

&lt;h1 id=&quot;3-集群处理及反向代理&quot;&gt;3. 集群处理及反向代理&lt;/h1&gt;
&lt;p&gt;node作为一个单进程单线程的应用程序，在利用CPU上实在是不行，所以就需要一些外部程序的辅助来充分利用物理CPU。一般有两个解决方案。下述解决方案中的Nginx跑在容器里或跑在主机上都是可以的，没有任何区别。&lt;/p&gt;

&lt;h2 id=&quot;31-pm2--nginx&quot;&gt;3.1 pm2 + nginx&lt;/h2&gt;
&lt;p&gt;这个解决方案只需要启动一个应用程序容器，在容器内使用PM2对应用程序进行cluster化，由PM2监听单个端口并转发所有的进入请求。在应用程序容器之外，由Nginx处理所有到达主机的请求。&lt;/p&gt;

&lt;p&gt;这里就涉及到在容器内使用PM2。首先需要安装PM2，需要在之前范例中的Dockerfile中的&lt;code&gt;COPY --from=builder /opt .&lt;/code&gt;之后添加一行：&lt;code&gt;RUN npm i pm2 -g --unsafe-perm --loglevel verbose&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;然后在容器运行的&lt;code&gt;ENTRYPOINT&lt;/code&gt;上，需要修改成：&lt;code&gt;ENTRYPOINT [&quot;pm2-runtime&quot;, &quot;start&quot;, &quot;./build/index.js&quot;]&lt;/code&gt;。这里注意，启动命令中使用的不是&lt;code&gt;pm2&lt;/code&gt;而是&lt;code&gt;pm2-runtime&lt;/code&gt;。这个命令是为了在容器内使用而专门特化出来的，普通的pm2命令在启动后就会转后台，导致容器退出。&lt;/p&gt;

&lt;p&gt;此外，在使用时可以附加一些参数：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;&lt;/span&gt;docker run -d -it --name your_app_name &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    -p &lt;span class=&quot;m&quot;&gt;3000&lt;/span&gt;:3000 &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    -v dir_of_host:/app/pm2 &lt;span class=&quot;se&quot;&gt;\ &lt;/span&gt;                      &lt;span class=&quot;c1&quot;&gt;# 映射到主机上的日志文件路径&lt;/span&gt;
    your_app_name:version &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    --name&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;your_app_name_in_pm2 &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    --instances&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;max &lt;span class=&quot;se&quot;&gt;\ &lt;/span&gt;                              &lt;span class=&quot;c1&quot;&gt;# 以cluster模式启动pm2，并按CPU数量启动node应用的进程&lt;/span&gt;
    --output&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/app/pm2/your_app_name.stdout.log &lt;span class=&quot;se&quot;&gt;\ &lt;/span&gt;   &lt;span class=&quot;c1&quot;&gt;# 输出日志到pm2文件夹下，也就是之前在做context时特地做出来的文件夹&lt;/span&gt;
    --error&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/app/pm2/your_app_name.stderr.log &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;32-docker-compose--nginx&quot;&gt;3.2 docker-compose + nginx&lt;/h2&gt;
&lt;p&gt;这个方案比较粗暴，之前提到的Dockerfile不需要改动，容器仍旧只有一个进程一个线程，容器本身并不做任何改动。而是使用docker-compose命令启动多个容器，然后在Nginx中配置upstream来进行反向代理负载均衡。&lt;/p&gt;

&lt;p&gt;使用如下bash脚本来生成compose配置文件：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;ch&quot;&gt;#!/usr/bin/env bash&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;FULLPATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;dirname &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$0&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;pwd&lt;/span&gt; -P &lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;si&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;FULLPATH&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;/..

&lt;span class=&quot;nv&quot;&gt;VERSION&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;cat ./package.json &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; jq -r &lt;span class=&quot;s1&quot;&gt;&amp;#39;.version&amp;#39;&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;CONF&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;FULLPATH&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;/../compose.yml

&lt;span class=&quot;nv&quot;&gt;PROCESS_COUNT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;8&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;PORT_BASE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;3000&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;COMPOSE_TEMPLATE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;cat &lt;span class=&quot;s&quot;&gt;&amp;lt;&amp;lt;-EOC&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;version: &amp;quot;2.1&amp;quot;&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;networks:&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;  net:&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;    driver: bridge&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;services:&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;EOC&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; generate_compose&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;OUTPUT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;COMPOSE_TEMPLATE&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;((&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; i&amp;lt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PROCESS_COUNT&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; i++ &lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
        &lt;span class=&quot;nv&quot;&gt;ID&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;nv&quot;&gt;PORT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$((&lt;/span&gt;PORT_BASE &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; ID&lt;span class=&quot;k&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;

        &lt;span class=&quot;nv&quot;&gt;SERVICE_TEMPLATE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;cat &lt;span class=&quot;s&quot;&gt;&amp;lt;&amp;lt;-EOS&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;  you_app_name_${ID}:&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;    image: your_dockerhub_account/you_app_name:${VERSION}&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;    container_name: you_app_name_${ID}&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;    hostname: you_app_name_${ID}&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;    networks:&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;      - net&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;    ports:&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;      - ${PORT}:3000&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;    logging:&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;      driver: json-file&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;      options:&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;        max-size: 512m&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;    restart: always&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;    volumes:&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;      - dir_of_host:/app/pm2&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;    command: [&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;      &amp;quot;--name=your_app_name_in_pm2_${ID}&amp;quot;,&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;      &amp;quot;--instances=max&amp;quot;,&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;      &amp;quot;--output=/app/pm2/your_app_name_${ID}.stdout.log&amp;quot;,&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;      &amp;quot;--error=/app/pm2/your_app_name_${ID}.stderr.log&amp;quot;&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;    ]&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;EOS&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;

        &lt;span class=&quot;nv&quot;&gt;NL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;$&amp;#39;\n&amp;#39;&lt;/span&gt;
        &lt;span class=&quot;nv&quot;&gt;OUTPUT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;OUTPUT&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;NL&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;SERVICE_TEMPLATE&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;

    &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;OUTPUT&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt; &amp;gt; &lt;span class=&quot;si&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;CONF&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

generate_compose&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;当然也可以编写一个脚本来制作nginx的配置文件，这里就简略点，直接改了：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;&lt;/span&gt;upstream upstream_node &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    server &lt;span class=&quot;m&quot;&gt;127&lt;/span&gt;.0.0.1:3001 &lt;span class=&quot;nv&quot;&gt;max_fails&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;fail_timeout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;60&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;weight&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    server &lt;span class=&quot;m&quot;&gt;127&lt;/span&gt;.0.0.1:3002 &lt;span class=&quot;nv&quot;&gt;max_fails&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;fail_timeout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;60&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;weight&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    server &lt;span class=&quot;m&quot;&gt;127&lt;/span&gt;.0.0.1:3003 &lt;span class=&quot;nv&quot;&gt;max_fails&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;fail_timeout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;60&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;weight&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    server &lt;span class=&quot;m&quot;&gt;127&lt;/span&gt;.0.0.1:3004 &lt;span class=&quot;nv&quot;&gt;max_fails&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;fail_timeout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;60&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;weight&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    server &lt;span class=&quot;m&quot;&gt;127&lt;/span&gt;.0.0.1:3005 &lt;span class=&quot;nv&quot;&gt;max_fails&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;fail_timeout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;60&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;weight&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    server &lt;span class=&quot;m&quot;&gt;127&lt;/span&gt;.0.0.1:3006 &lt;span class=&quot;nv&quot;&gt;max_fails&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;fail_timeout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;60&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;weight&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    server &lt;span class=&quot;m&quot;&gt;127&lt;/span&gt;.0.0.1:3007 &lt;span class=&quot;nv&quot;&gt;max_fails&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;fail_timeout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;60&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;weight&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    server &lt;span class=&quot;m&quot;&gt;127&lt;/span&gt;.0.0.1:3008 &lt;span class=&quot;nv&quot;&gt;max_fails&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;fail_timeout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;60&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;weight&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

server &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    listen &lt;span class=&quot;m&quot;&gt;80&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    listen &lt;span class=&quot;m&quot;&gt;443&lt;/span&gt; ssl&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    ssl_protocols TLSv1 TLSv1.1 TLSv1.2&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    ssl_prefer_server_ciphers on&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    ssl_certificate         cert/yourapp.youhost.com.key.pem&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    ssl_certificate_key     cert/yourapp.youhost.com.key&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    ssl_dhparam             cert/dhparam.pem&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    access_log /var/log/nginx/yourapp.youhost.com.access.log&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    error_log /var/log/nginx/yourapp.youhost.com.error.log&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    root /usr/share/nginx/html&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    index index.html index.htm&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    server_name yourapp.youhost.com&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    location / &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        proxy_set_header x-Forwarded-For &lt;span class=&quot;nv&quot;&gt;$proxy_add_x_forwarded_for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        proxy_set_header HOST &lt;span class=&quot;nv&quot;&gt;$http_host&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        proxy_set_header X-Forwarded-Proto https&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        proxy_redirect http:// https://&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        proxy_connect_timeout &lt;span class=&quot;m&quot;&gt;240&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        proxy_send_timeout &lt;span class=&quot;m&quot;&gt;240&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        proxy_read_timeout &lt;span class=&quot;m&quot;&gt;240&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        proxy_pass http://upstream_node&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h1 id=&quot;4-健康检查&quot;&gt;4. 健康检查&lt;/h1&gt;
&lt;p&gt;在容器内运行的node程序，可以设置一个专门用来进行健康检查的端点，然后在运行时进行配置，这样docker就可以了解程序是否存活。在配合consul等服务发现程序使用时，也可以使用该端点。&lt;/p&gt;

&lt;p&gt;应用程序代码改动：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-typescript&quot; data-lang=&quot;typescript&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;use&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;: &lt;span class=&quot;kt&quot;&gt;Koa.Context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;/health&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;status&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;body&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;OK&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Docker compose yml改动：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;restart&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;always&lt;/span&gt;
&lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;healthcheck&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;wget http://127.0.0.1:3000/health -q -O - &amp;gt; /dev/null 2&amp;gt;&amp;amp;1&lt;/span&gt;
  &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;interval&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;10s&lt;/span&gt;
  &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;timeout&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;20s&lt;/span&gt;
  &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;retries&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;10&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;blockquote&gt;
  &lt;p&gt;EOF&lt;/p&gt;
&lt;/blockquote&gt;
</description>
				<pubDate>Wed, 11 Dec 2019 10:36:22 +0800</pubDate>
				<link>https://xenojoshua.com/2019/12/node-in-docker/</link>
				<guid isPermaLink="true">https://xenojoshua.com/2019/12/node-in-docker/</guid>
			</item>
		
			<item>
				<title>在VirtualBox中安装Tor</title>
				<description>&lt;h4&gt;Table of Contents&lt;/h4&gt;
&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#1-前言&quot; id=&quot;markdown-toc-1-前言&quot;&gt;1. 前言&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#2-virtualbox&quot; id=&quot;markdown-toc-2-virtualbox&quot;&gt;2. VirtualBox&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#3-linux&quot; id=&quot;markdown-toc-3-linux&quot;&gt;3. Linux&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#4-tor&quot; id=&quot;markdown-toc-4-tor&quot;&gt;4. Tor&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;1-前言&quot;&gt;1. 前言&lt;/h1&gt;
&lt;p&gt;就是一篇简单的笔记。&lt;/p&gt;

&lt;h1 id=&quot;2-virtualbox&quot;&gt;2. VirtualBox&lt;/h1&gt;
&lt;p&gt;这块不需要很详细的讲解，基本上只要从官网下载binary直接使用即可。镜像需要提前下载好，VirtualBox安装比较奇怪的一点是，虚拟机的创建和操作系统的安装是分开的，会先创建出虚拟机实例，然后才是加载镜像进行虚拟机操作系统的安装。这点有点和其他的虚拟机不太相同。&lt;/p&gt;

&lt;p&gt;VirtualBox虚拟机的显示自适应需要额外设置，比较麻烦。显示设置的屏幕里，需要把显卡控制器改成：&lt;code&gt;VBoxSVGA&lt;/code&gt;。&lt;/p&gt;

&lt;h1 id=&quot;3-linux&quot;&gt;3. Linux&lt;/h1&gt;
&lt;p&gt;这里使用的是Ubuntu Desktop版本，因为后续安装和使用Tor最简单的做法就是直接使用官方的Tor Browser，也正因此需要桌面版本的操作系统。如果对安全有更高的要求，可以使用FreeBSD操作系统。&lt;/p&gt;

&lt;p&gt;软件安装：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;&lt;/span&gt;$ sudo apt-get install build-essential
$ sudo apt-get install wget vim&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;安装virtualbox的辅助程序&lt;code&gt;Devices &amp;gt; Insert Guest Additions CD Image&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;按个人喜好，可选安装：&lt;a href=&quot;https://linuxize.com/post/how-to-install-sublime-text-3-on-ubuntu-18-04/&quot; target=&quot;_blank&quot;&gt;sublime text3&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;安装privoxy，用来给需要HTTP代理的应用程序做前置入口，将这些HTTP流量转为socks5流量，进入到tor：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;&lt;/span&gt;$ sudo apt-get install privoxy&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;修改配置文件&lt;code&gt;/etc/privoxy/config&lt;/code&gt;：添加&lt;code&gt;forward-socks5 / localhost:9150 .&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;后续可以在命令行下设置：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;http_proxy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;http://127.0.0.1:8118
&lt;span class=&quot;nb&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;https_proxy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;http://127.0.0.1:8118&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;命令行流量就全走tor了。命令行下，可以使用&lt;code&gt;curl ipinfo.io&lt;/code&gt;来查看当前IP的位置。&lt;/p&gt;

&lt;p&gt;在tor安装成功之前，虚拟机肯定也是需要代理的，否则tor软件根本下不下来。可以通过Linux操作系统&lt;code&gt;网络配置&lt;/code&gt;设置代理：&lt;/p&gt;

&lt;p&gt;将所有的HTTP(s)代理设置成：192.168.xx.xx:xxxx，socks设置成192.168.xx.xx:xxxx。&lt;/p&gt;

&lt;p&gt;命令行下则：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;http_proxy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;http://192.168.xx.xx:xxxx
&lt;span class=&quot;nb&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;https_proxy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;http://192.168.xx.xx:xxxx&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h1 id=&quot;4-tor&quot;&gt;4. Tor&lt;/h1&gt;
&lt;p&gt;安装就直接从官网上下载Tor Browser，解压即可使用。配置文件位置：&lt;code&gt;Browser/TorBrowser/Data/Tor/torrc&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;国内使用的时候必须使用网桥，按软件提示直接选一个可用的网桥，或从数据库申请一个网桥即可。注意，从数据库申请下来的网桥不一定就是可用的，还是需要连接测试。如果有条件的话，可以在Tor Browser之前再自己做一个跳板，这样效果会好很多，无论是从隐匿性上来说，还是从可用性上来说。&lt;/p&gt;

&lt;p&gt;Tor Browser在连接完成之后，会在本地打开一个端口&lt;code&gt;9150&lt;/code&gt;，提供本地的socks5连接。但软件并不提供HTTP和HTTPS代理，需要之前提到过的privoxy软件进行转换即可。&lt;/p&gt;

&lt;p&gt;对Tor的节点进行限制，直接在之前提到的配置文件里添加内容即可，注意不要修改网桥相关的配置内容，那些是软件自动生成添加的：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;## 以下为排除的节点(StrictNodes 1为坚决执行)&lt;/span&gt;
ExcludeNodes &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;cn&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;hk&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;mo&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;kp&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;ir&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;cu&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;vn&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;ru&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;by&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;sd&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;kz&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;uz&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;pk&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;kg&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;tj&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;tm&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;tr&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;sy&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;sg&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;th&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;ph&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;my&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;lk&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
ExcludeExitNodes &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;cn&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;hk&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;mo&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;kp&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;ir&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;cu&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;vn&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;ru&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;by&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;sd&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;kz&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;uz&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;pk&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;kg&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;tj&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;tm&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;tr&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;sy&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;sg&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;th&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;ph&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;my&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;lk&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#ExcludeNodes 是指排除节点，即把括号中的国家的节点从tor链路上除去&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#ExcludeExitNodes 是指“排除“出口”节点”，即tor的出口节点要排除括号中的国家的节点&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;## 指定出口节点：&lt;/span&gt;
StrictNodes &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;
ExitNodes &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;us&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#这里us是指限定美国的ip为出口ip，你可以改为任何国家，国家代码请参考：https://zh.wikipedia.org/zh-cn/ISO_3166-1&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;轻量级过滤：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;&lt;/span&gt;ExcludeNodes &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;cn&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;hk&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;mo&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
ExcludeExitNodes &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;cn&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;hk&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;mo&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;kp&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;ir&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;cu&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;vn&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;sd&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;pk&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;sy&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
StrictNodes &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;blockquote&gt;
  &lt;p&gt;EOF&lt;/p&gt;
&lt;/blockquote&gt;
</description>
				<pubDate>Fri, 20 Sep 2019 10:36:22 +0800</pubDate>
				<link>https://xenojoshua.com/2019/09/virtualbox-tor/</link>
				<guid isPermaLink="true">https://xenojoshua.com/2019/09/virtualbox-tor/</guid>
			</item>
		
			<item>
				<title>分布式系统实战</title>
				<description>&lt;h4&gt;Table of Contents&lt;/h4&gt;
&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#1-前言&quot; id=&quot;markdown-toc-1-前言&quot;&gt;1. 前言&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#11-相关资源清单&quot; id=&quot;markdown-toc-11-相关资源清单&quot;&gt;1.1 相关资源清单&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#PRACTICE_CODE&quot; id=&quot;markdown-toc-PRACTICE_CODE&quot;&gt;1.1.1 实践代码&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#112-组件实验代码&quot; id=&quot;markdown-toc-112-组件实验代码&quot;&gt;1.1.2 组件实验代码&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#113-go语言实验代码&quot; id=&quot;markdown-toc-113-go语言实验代码&quot;&gt;1.1.3 go语言实验代码&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#114-组件专题&quot; id=&quot;markdown-toc-114-组件专题&quot;&gt;1.1.4 组件专题&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#COMPONENT_LIST&quot; id=&quot;markdown-toc-COMPONENT_LIST&quot;&gt;2. 组件清单&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#3-架构&quot; id=&quot;markdown-toc-3-架构&quot;&gt;3. 架构&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#31-组件列表&quot; id=&quot;markdown-toc-31-组件列表&quot;&gt;3.1 组件列表&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#311-部分未实践组件&quot; id=&quot;markdown-toc-311-部分未实践组件&quot;&gt;3.1.1 部分未实践组件&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#32-数据模型&quot; id=&quot;markdown-toc-32-数据模型&quot;&gt;3.2 数据模型&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#33-业务流程&quot; id=&quot;markdown-toc-33-业务流程&quot;&gt;3.3 业务流程&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#34-系统架构&quot; id=&quot;markdown-toc-34-系统架构&quot;&gt;3.4 系统架构&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#35-部署拓扑&quot; id=&quot;markdown-toc-35-部署拓扑&quot;&gt;3.5 部署拓扑&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#4-测试&quot; id=&quot;markdown-toc-4-测试&quot;&gt;4. 测试&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#TEST_TARGET&quot; id=&quot;markdown-toc-TEST_TARGET&quot;&gt;4.1 测试目标&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#42-测试硬件&quot; id=&quot;markdown-toc-42-测试硬件&quot;&gt;4.2 测试硬件&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#43-测试规划&quot; id=&quot;markdown-toc-43-测试规划&quot;&gt;4.3 测试规划&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#44-监控清单&quot; id=&quot;markdown-toc-44-监控清单&quot;&gt;4.4 监控清单&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#45-部署工程&quot; id=&quot;markdown-toc-45-部署工程&quot;&gt;4.5 部署工程&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#46-测试执行--报告制作&quot; id=&quot;markdown-toc-46-测试执行--报告制作&quot;&gt;4.6 测试执行 &amp;amp; 报告制作&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#461-获取elasticsearchkibana数据&quot; id=&quot;markdown-toc-461-获取elasticsearchkibana数据&quot;&gt;4.6.1 获取Elasticsearch（Kibana）数据&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#462-获取jaeger数据&quot; id=&quot;markdown-toc-462-获取jaeger数据&quot;&gt;4.6.2 获取Jaeger数据&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#5-报告&quot; id=&quot;markdown-toc-5-报告&quot;&gt;5. 报告&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#51-第一次测试&quot; id=&quot;markdown-toc-51-第一次测试&quot;&gt;5.1 第一次测试&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#52-第二次测试&quot; id=&quot;markdown-toc-52-第二次测试&quot;&gt;5.2 第二次测试&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#appendix&quot; id=&quot;markdown-toc-appendix&quot;&gt;Appendix&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#MONITORING_LIST&quot; id=&quot;markdown-toc-MONITORING_LIST&quot;&gt;监控清单&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#host&quot; id=&quot;markdown-toc-host&quot;&gt;Host&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#container&quot; id=&quot;markdown-toc-container&quot;&gt;Container&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#memcached&quot; id=&quot;markdown-toc-memcached&quot;&gt;Memcached&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#mysql&quot; id=&quot;markdown-toc-mysql&quot;&gt;MySQL&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#prometheus&quot; id=&quot;markdown-toc-prometheus&quot;&gt;Prometheus&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#kafka-jmx&quot; id=&quot;markdown-toc-kafka-jmx&quot;&gt;Kafka JMX&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#kafka-exporter&quot; id=&quot;markdown-toc-kafka-exporter&quot;&gt;Kafka Exporter&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#jaeger-agent&quot; id=&quot;markdown-toc-jaeger-agent&quot;&gt;Jaeger Agent&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#jaeger-collector&quot; id=&quot;markdown-toc-jaeger-collector&quot;&gt;Jaeger Collector&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#filebeat&quot; id=&quot;markdown-toc-filebeat&quot;&gt;Filebeat&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#elasticsearch&quot; id=&quot;markdown-toc-elasticsearch&quot;&gt;Elasticsearch&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#golang&quot; id=&quot;markdown-toc-golang&quot;&gt;Golang&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;1-前言&quot;&gt;1. 前言&lt;/h1&gt;
&lt;p&gt;分布式系统因其使用的组件较多，复杂度较高，较难掌握。常说，写出一个能跑的东西很简单，但要全面掌握一门技术，并能够在任何情况下解决其发生的问题，则要难得多得多。分布式系统的难，更多的在于使用的组件多，每一个组件如果都需要掌握其从设计到运行的一系列技术细节就非常困难。此外，分布式系统的监控和分析也很难，也是因其组件多造成的，一个请求流转于多个组件之间，就很难定位当问题发生的时候其源头何在。&lt;/p&gt;

&lt;p&gt;在长期的工作中，一直都没有实地进行实践的机会（公司体量、投入、团队管理等各种因素），因此就萌生了自己做一个实践项目，然后在云服务器上部署进行测试实验的念头。在此付诸实行。&lt;/p&gt;

&lt;h2 id=&quot;11-相关资源清单&quot;&gt;1.1 相关资源清单&lt;/h2&gt;
&lt;p&gt;下面将大量资料进行清单整理，方便后续取用。&lt;/p&gt;

&lt;h3 id=&quot;PRACTICE_CODE&quot;&gt;1.1.1 实践代码&lt;/h3&gt;
&lt;p&gt;该项目的实际实践代码在：&lt;a href=&quot;https://github.com/agreatfool/dist-system-practice/tree/master/golang/src/dist-system-practice&quot; target=&quot;_blank&quot;&gt;dist-system-practice/golang/src/dist-system-practice/&lt;/a&gt;。该处的README主要提供了：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;应用程序（Web、Service、Consumer）的环境变量清单&lt;/li&gt;
  &lt;li&gt;开发环境的组件清单及端口描述&lt;/li&gt;
  &lt;li&gt;开发环境的部署及启动命令&lt;/li&gt;
  &lt;li&gt;代码文件结构描述&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;线上环境的部署、启动、测试、导出数据等功能的相关实现在脚本：&lt;a href=&quot;https://github.com/agreatfool/dist-system-practice/blob/master/golang/src/dist-system-practice/bash/prod/cluster/src/index.ts&quot; target=&quot;_blank&quot;&gt;cluster/src/index.ts&lt;/a&gt;。其功能及使用描述在：&lt;a href=&quot;https://github.com/agreatfool/dist-system-practice/blob/master/golang/src/dist-system-practice/bash/prod/cluster/README.md&quot; target=&quot;_blank&quot;&gt;README.md&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;线上服务器拓扑及服务网格相关的配置在：&lt;a href=&quot;https://github.com/agreatfool/dist-system-practice/blob/master/golang/src/dist-system-practice/bash/prod/cluster/src/index.ts#L22&quot;&gt;index.ts#L22&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;Grafana数据导出相关配置在：&lt;a href=&quot;https://github.com/agreatfool/dist-system-practice/blob/master/golang/src/dist-system-practice/bash/prod/cluster/src/index.ts#L151&quot; target=&quot;_blank&quot;&gt;index.ts#L151&lt;/a&gt;。&lt;/p&gt;

&lt;h3 id=&quot;112-组件实验代码&quot;&gt;1.1.2 组件实验代码&lt;/h3&gt;
&lt;p&gt;部分组件的简单实验代码在：&lt;a href=&quot;https://github.com/agreatfool/dist-system-practice/tree/master/experiment&quot; target=&quot;_blank&quot;&gt;dist-system-practice/experiment/&lt;/a&gt;。&lt;/p&gt;

&lt;h3 id=&quot;113-go语言实验代码&quot;&gt;1.1.3 go语言实验代码&lt;/h3&gt;
&lt;p&gt;go语言的简单实验代码在：&lt;a href=&quot;https://github.com/agreatfool/dist-system-practice/tree/master/golang/src/experiment&quot; target=&quot;_blank&quot;&gt;dist-system-practice/golang/src/experiment/&lt;/a&gt;。&lt;/p&gt;

&lt;h3 id=&quot;114-组件专题&quot;&gt;1.1.4 组件专题&lt;/h3&gt;
&lt;p&gt;对于项目中使用到的一系列组件，我这里都做过比较深入的使用测试及调研，并制作了一系列的专题博文。可以参见列表：&lt;a href=&quot;#COMPONENT_LIST&quot;&gt;2. 组件清单&lt;/a&gt;。&lt;/p&gt;

&lt;h1 id=&quot;COMPONENT_LIST&quot;&gt;2. 组件清单&lt;/h1&gt;
&lt;p&gt;实践项目中（计划）使用到了如下组件：&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;组件&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;角色&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;专题&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Golang&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;应用程序&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;a href=&quot;/2019/02/golang-note/&quot; target=&quot;_blank&quot;&gt;Golang Notes&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;MySQL&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;数据库&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Draft&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Memcached&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;缓存&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;a href=&quot;/2019/05/memcached-note/&quot; target=&quot;_blank&quot;&gt;Memcached Notes&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Docker&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;底层容器&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;a href=&quot;/2019/01/docker-note/&quot; target=&quot;_blank&quot;&gt;Docker Notes&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Envoy&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;代理入口&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;a href=&quot;/2019/05/envoy-note/&quot; target=&quot;_blank&quot;&gt;Envoy Notes&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;gRPC&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;组件通讯&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;a href=&quot;/2019/05/grpc-note/&quot; target=&quot;_blank&quot;&gt;gRPC Notes&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Kafka&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;消息队列&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;a href=&quot;/2019/04/kafka-note/&quot; target=&quot;_blank&quot;&gt;Kafka Notes&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Prometheus&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;监控系统&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;a href=&quot;/2019/04/prometheus-note/&quot; target=&quot;_blank&quot;&gt;Prometheus Notes&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Grafana&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;监控UI&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;a href=&quot;/2019/04/grafana-note/&quot; target=&quot;_blank&quot;&gt;Grafana Notes&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Jaeger&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;链路追踪&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;a href=&quot;/2019/04/jaeger-note/&quot; target=&quot;_blank&quot;&gt;Jaeger Notes&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Cassandra&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;数据库&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Draft&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Elasticsearch&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;聚合分析&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;a href=&quot;/2019/04/elasticsearch-note/&quot; target=&quot;_blank&quot;&gt;Elasticsearch Notes&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Kubernetes&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;容器管理&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;TODO&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Istio&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;服务编排&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;TODO&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Linux&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;操作系统&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Draft&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;201902之前，Golang、Docker、Kafka、Elasticsearch、Grafana、Prometheus、Jaeger于我的相关积累基本为0，基本上完全没直接接触过（实践），而到了6月底，我已经可以很熟练启动、使用这些组件，更重要的是完全理解它们的设计、架构，以及性能和部分调优手段。&lt;/p&gt;

&lt;p&gt;对于”程序”的理解，以及超快的学习速度和学习能力，才是程序员能够在软件行业一直活下去的关键，我一直如此深信。&lt;/p&gt;

&lt;h1 id=&quot;3-架构&quot;&gt;3. 架构&lt;/h1&gt;
&lt;p&gt;因为是一个实验性项目，应用程序的逻辑和架构做的非常简单。&lt;/p&gt;

&lt;h2 id=&quot;31-组件列表&quot;&gt;3.1 组件列表&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Web：go语言编写的web服务器，整个集群的入口&lt;/li&gt;
  &lt;li&gt;Service：go语言编写的gRPC服务器，web收到请求后不进行任何业务实际处理，直接通过gRPC发到Service，由Service处理完成后返回&lt;/li&gt;
  &lt;li&gt;Consumer：go语言编写的Kafka消费者，处理部分Service安排到Kafka的异步任务&lt;/li&gt;
  &lt;li&gt;Kafka：负责将部分Service的运算进行消息入队，并分发给Consumer处理（异步、解耦）&lt;/li&gt;
  &lt;li&gt;MySQL：应用程序的存储服务&lt;/li&gt;
  &lt;li&gt;Memcached：应用程序的缓存服务&lt;/li&gt;
  &lt;li&gt;Filebeat：负责将Web、Service、Consumer产生的有用日志（过滤）上传到Elasticsearch集群&lt;/li&gt;
  &lt;li&gt;Elasticsearch、Kibana：负责将Web、Service、Consumer产生的业务日志索引入库，以便后续查询&lt;/li&gt;
  &lt;li&gt;Cassandra：Jaeger Tracing的存储服务&lt;/li&gt;
  &lt;li&gt;Jaeger（Agent、Collector、Query）：负责接收Web、Service、Consumer发出的Span、Trace数据，入库以便后续查询&lt;/li&gt;
  &lt;li&gt;*Exporter：负责将各组件的状态以HTTP的方式输出出来&lt;/li&gt;
  &lt;li&gt;Prometheus：将 *Exporter 输出的数据采集，并录入到时序数据库中，以便后续查询&lt;/li&gt;
  &lt;li&gt;Grafana：负责将各组件的观察需求固定化，对Prometheus时序数据库进行查询，绘制图表&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;311-部分未实践组件&quot;&gt;3.1.1 部分未实践组件&lt;/h2&gt;
&lt;p&gt;部分列在&lt;a href=&quot;#COMPONENT_LIST&quot;&gt;2. 组件清单&lt;/a&gt;中的组件实际上并未实际使用。因时间和精力的原因，只能割舍掉了。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Envoy：整体业务过于简单，不存在在Web服务器之前架设Envoy的必要性；而内部架构也过于简单，不存在架设Envoy作为内部流量控制入口的必要性&lt;/li&gt;
  &lt;li&gt;Kubernetes：实践复杂度过高，因精力原因放弃&lt;/li&gt;
  &lt;li&gt;Istio：实践复杂度过高，因精力原因放弃&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;32-数据模型&quot;&gt;3.2 数据模型&lt;/h2&gt;

&lt;p&gt;整个业务流程中只涉及到一个数据模型：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-go&quot; data-lang=&quot;go&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Work&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;Id&lt;/span&gt;            &lt;span class=&quot;kt&quot;&gt;uint32&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;Viewed&lt;/span&gt;        &lt;span class=&quot;kt&quot;&gt;uint32&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;AchievedCount&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;uint32&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;Achievement&lt;/span&gt;   &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;IsPlanned&lt;/span&gt;     &lt;span class=&quot;kt&quot;&gt;bool&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;PlannedAt&lt;/span&gt;     &lt;span class=&quot;nx&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Time&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;AchievedAt&lt;/span&gt;    &lt;span class=&quot;nx&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Time&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;Created&lt;/span&gt;       &lt;span class=&quot;nx&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Time&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;Updated&lt;/span&gt;       &lt;span class=&quot;nx&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Time&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;Id：自增长主键，每一条Work数据唯一&lt;/li&gt;
  &lt;li&gt;Viewed：是一个累加的int型，每次&lt;code&gt;/viewed&lt;/code&gt;API访问，该值+1&lt;/li&gt;
  &lt;li&gt;AchievedCount：是一个累加的int型，每次完成&lt;code&gt;/plan&lt;/code&gt;API的任务推送及Consumer的achievement更新之后，该值+1&lt;/li&gt;
  &lt;li&gt;Achievement：该值由Service的&lt;code&gt;/plan&lt;/code&gt;API推送任务到Kafka，然后由Consumer获取任务之后进行运算并更新&lt;/li&gt;
  &lt;li&gt;IsPlanned：状态标识，当&lt;code&gt;/plan&lt;/code&gt;API完成之后标记为true，当Consumer运算并更新完成后标记为false&lt;/li&gt;
  &lt;li&gt;PlannedAt：时间&lt;/li&gt;
  &lt;li&gt;AchievedAt：时间&lt;/li&gt;
  &lt;li&gt;Created：时间&lt;/li&gt;
  &lt;li&gt;Updated：时间&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;33-业务流程&quot;&gt;3.3 业务流程&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Web服务器&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;应用程序的入口为go语言编写的web服务器（Web），提供5个API（所有的API都不要求提供WorkId，会在API内部自行随机一个WorkId进行处理，方便后续自动化测试）：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;/work&lt;/code&gt;：获取Work数据，并返回&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;/viewed&lt;/code&gt;：获取Work数据，并返回Viewed值&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;/achievement&lt;/code&gt;：获取Work数据，并返回Achievement值&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;/plan&lt;/code&gt;：获取Work数据，并将任务安排到Kafka队列，更新IsPlanned以及PlannedAt字段的值&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;/api&lt;/code&gt;：根据设置好的概率（可配置）抽取上述4个接口中的一个进行执行，实际上的性能测试入口&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Consumer消费者&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Kafka的消费者为go语言编写的服务器，对消息进行处理：从Kafka中获取任务，根据Id获取Work数据，根据计算因子计算出Achievement字符串值，更新IsPlanned、AchievedAt、Achievement字段的值。&lt;/p&gt;

&lt;h2 id=&quot;34-系统架构&quot;&gt;3.4 系统架构&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;/resources/2019/07/dist-system-practice/logic_flow.png&quot; alt=&quot;&quot; target=&quot;_blank&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;*Exporter&lt;/code&gt;这部分比较简略，因为基本上每个组件都有自己的Exporter，要详实还原实际的架构这图就没法看了。因此就只简单列出了go app相关的几条线。&lt;/p&gt;

&lt;h2 id=&quot;35-部署拓扑&quot;&gt;3.5 部署拓扑&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;/resources/2019/07/dist-system-practice/topology.png&quot; alt=&quot;&quot; target=&quot;_blank&quot; /&gt;&lt;/p&gt;

&lt;p&gt;因预算关系，Elasticsearch和Kafka集群的分布并不是特别理想，不过也只能这样了。此外，图中还少了一个&lt;code&gt;Client&lt;/code&gt;节点，专门用来运行Vegeta压测客户端的，因比较简单这里就没有绘制上去。&lt;/p&gt;

&lt;h1 id=&quot;4-测试&quot;&gt;4. 测试&lt;/h1&gt;
&lt;h2 id=&quot;TEST_TARGET&quot;&gt;4.1 测试目标&lt;/h2&gt;
&lt;p&gt;制定测试目标一般需要以下步骤：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;固定拓扑架构：尽量按线上真实情景的拓扑架构进行测试，如果规模过大的话，可以按比缩小（虽然会失真）&lt;/li&gt;
  &lt;li&gt;设定业务指标：同时在线100万、PV10亿等&lt;/li&gt;
  &lt;li&gt;将业务指标转化为可测试的程序指标：QPS、DB Transaction/s&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;这样就可以针对可测试的程序指标进行测试了。&lt;/p&gt;

&lt;p&gt;而更进一步的测试目标可以细分为两类：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;测试指标达标：当前系统可以负载起目标需求，在此基础上还可以找出系统的最高负载瓶颈点，并提出优化方案&lt;/li&gt;
  &lt;li&gt;测试指标未达标：当前系统未可以负载起目标需求，需要找出系统的瓶颈，并提出优化方案；后续需要多轮测试以验证优化的执行情况&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;就当前的项目来说，因为是纯粹的模拟测试项目，所以不存在真实的业务需求和业务指标，因此无法设定具体的程序指标，也就无从谈起是否达标的问题。只能说通过测试慢慢摸索当前架构的性能峰值，以及瓶颈点：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;在固定硬件规格、程序拓扑架构之后，逐步提升客户端的QPS，查看系统负载的上升情况，找出系统最高负载值，并找出系统整体的瓶颈点&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;42-测试硬件&quot;&gt;4.2 测试硬件&lt;/h2&gt;
&lt;p&gt;这次的测试选用的是Linode的云服务器，在选择的时候首先考虑的当然是国内的服务商，但发现像我这样只需要短期使用资源的客户（几个小时到1天左右）国内的服务商的付费方式太糟糕了。一般来说国内的服务商都是按月付费，所谓的按时收费其单价换算下来要比按月付费高得多得多，因此实际上是不可用的。&lt;/p&gt;

&lt;p&gt;海外服务商一开始考虑使用Vultr，毕竟性价比是最高的，但后来发现Vultr对客户有非常严格的限制，如果需要租用大量机器或高性能机器的话，需要发Ticket进行人工审核。不出意外，我这样短期租用的客户被拒了。最后只能选用Linode，Linode在这方面倒是没有额外的限制，随开随用。&lt;/p&gt;

&lt;p&gt;实际使用的是Linode的16G机型：6 CPU、16G RAM、320G Storage。简单Benchmark结果如下：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;&lt;/span&gt;$ wget -qO- bench.sh &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; bash

----------------------------------------------------------------------
CPU model            : AMD EPYC &lt;span class=&quot;m&quot;&gt;7601&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;32&lt;/span&gt;-Core Processor
Number of cores      : &lt;span class=&quot;m&quot;&gt;6&lt;/span&gt;
CPU frequency        : &lt;span class=&quot;m&quot;&gt;2199&lt;/span&gt;.996 MHz
Total size of Disk   : &lt;span class=&quot;m&quot;&gt;315&lt;/span&gt;.0 GB &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;.2 GB Used&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
Total amount of Mem  : &lt;span class=&quot;m&quot;&gt;16040&lt;/span&gt; MB &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;120&lt;/span&gt; MB Used&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
Total amount of Swap : &lt;span class=&quot;m&quot;&gt;511&lt;/span&gt; MB &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt; MB Used&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
System uptime        : &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt; days, &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt; hour &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt; min
Load average         : &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;.29, &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;.22, &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;.09
OS                   : Ubuntu &lt;span class=&quot;m&quot;&gt;18&lt;/span&gt;.04.2 LTS
Arch                 : x86_64 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;64&lt;/span&gt; Bit&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
Kernel               : &lt;span class=&quot;m&quot;&gt;4&lt;/span&gt;.15.0-50-generic
----------------------------------------------------------------------
I/O speed&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;1st run&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;   : &lt;span class=&quot;m&quot;&gt;892&lt;/span&gt; MB/s
I/O speed&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;2nd run&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;   : &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;.1 GB/s
I/O speed&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;3rd run&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;   : &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;.0 GB/s
Average I/O speed    : &lt;span class=&quot;m&quot;&gt;1014&lt;/span&gt;.1 MB/s
----------------------------------------------------------------------
Node Name                       IPv4 address            Download Speed
CacheFly                        &lt;span class=&quot;m&quot;&gt;205&lt;/span&gt;.234.175.175         144MB/s
Linode, Tokyo, JP               &lt;span class=&quot;m&quot;&gt;106&lt;/span&gt;.187.96.148          &lt;span class=&quot;m&quot;&gt;20&lt;/span&gt;.7MB/s
Linode, Singapore, SG           &lt;span class=&quot;m&quot;&gt;139&lt;/span&gt;.162.23.4            &lt;span class=&quot;m&quot;&gt;6&lt;/span&gt;.48MB/s
Linode, London, UK              &lt;span class=&quot;m&quot;&gt;176&lt;/span&gt;.58.107.39           &lt;span class=&quot;m&quot;&gt;9&lt;/span&gt;.71MB/s
Linode, Frankfurt, DE           &lt;span class=&quot;m&quot;&gt;139&lt;/span&gt;.162.130.8           &lt;span class=&quot;m&quot;&gt;15&lt;/span&gt;.4MB/s
Linode, Fremont, CA             &lt;span class=&quot;m&quot;&gt;50&lt;/span&gt;.116.14.9             205MB/s
Softlayer, Dallas, TX           &lt;span class=&quot;m&quot;&gt;173&lt;/span&gt;.192.68.18           &lt;span class=&quot;m&quot;&gt;44&lt;/span&gt;.9MB/s
Softlayer, Seattle, WA          &lt;span class=&quot;m&quot;&gt;67&lt;/span&gt;.228.112.250          &lt;span class=&quot;m&quot;&gt;44&lt;/span&gt;.8MB/s
Softlayer, Frankfurt, DE        &lt;span class=&quot;m&quot;&gt;159&lt;/span&gt;.122.69.4            &lt;span class=&quot;m&quot;&gt;4&lt;/span&gt;.92MB/s
Softlayer, Singapore, SG        &lt;span class=&quot;m&quot;&gt;119&lt;/span&gt;.81.28.170           &lt;span class=&quot;m&quot;&gt;8&lt;/span&gt;.21MB/s
Softlayer, HongKong, CN         &lt;span class=&quot;m&quot;&gt;119&lt;/span&gt;.81.130.170          &lt;span class=&quot;m&quot;&gt;10&lt;/span&gt;.4MB/s
----------------------------------------------------------------------
Node Name                       IPv6 address            Download Speed
Linode, Atlanta, GA             &lt;span class=&quot;m&quot;&gt;2600&lt;/span&gt;:3c02::4b           &lt;span class=&quot;m&quot;&gt;39&lt;/span&gt;.3MB/s
Linode, Dallas, TX              &lt;span class=&quot;m&quot;&gt;2600&lt;/span&gt;:3c00::4b           &lt;span class=&quot;m&quot;&gt;28&lt;/span&gt;.9MB/s
Linode, Newark, NJ              &lt;span class=&quot;m&quot;&gt;2600&lt;/span&gt;:3c03::4b           &lt;span class=&quot;m&quot;&gt;18&lt;/span&gt;.3MB/s
Linode, Singapore, SG           &lt;span class=&quot;m&quot;&gt;2400&lt;/span&gt;:8901::4b           &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;.36MB/s
Linode, Tokyo, JP               &lt;span class=&quot;m&quot;&gt;2400&lt;/span&gt;:8900::4b           &lt;span class=&quot;m&quot;&gt;20&lt;/span&gt;.5MB/s
Softlayer, San Jose, CA         &lt;span class=&quot;m&quot;&gt;2607&lt;/span&gt;:f0d0:2601:2a::4    &lt;span class=&quot;m&quot;&gt;95&lt;/span&gt;.4MB/s
...
----------------------------------------------------------------------&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;&lt;/span&gt;$ &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;curl -s wget.racing/nench.sh &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; bash&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&amp;gt;&lt;span class=&quot;p&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; tee nench.log

-------------------------------------------------
nench.sh v2019.06.29 -- https://git.io/nench.sh
benchmark timestamp:    &lt;span class=&quot;m&quot;&gt;2019&lt;/span&gt;-07-12 &lt;span class=&quot;m&quot;&gt;05&lt;/span&gt;:48:17 UTC
-------------------------------------------------

Processor:    AMD EPYC &lt;span class=&quot;m&quot;&gt;7601&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;32&lt;/span&gt;-Core Processor
CPU cores:    &lt;span class=&quot;m&quot;&gt;6&lt;/span&gt;
Frequency:    &lt;span class=&quot;m&quot;&gt;2199&lt;/span&gt;.996 MHz
RAM:          15G
Swap:         511M
Kernel:       Linux &lt;span class=&quot;m&quot;&gt;4&lt;/span&gt;.15.0-50-generic x86_64

Disks:
sda  &lt;span class=&quot;m&quot;&gt;319&lt;/span&gt;.5G  HDD
sdb    512M  HDD

CPU: SHA256-hashing &lt;span class=&quot;m&quot;&gt;500&lt;/span&gt; MB
&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;.962 seconds
CPU: bzip2-compressing &lt;span class=&quot;m&quot;&gt;500&lt;/span&gt; MB
&lt;span class=&quot;m&quot;&gt;6&lt;/span&gt;.310 seconds
CPU: AES-encrypting &lt;span class=&quot;m&quot;&gt;500&lt;/span&gt; MB
&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;.362 seconds

ioping: seek rate
min/avg/max/mdev &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;62&lt;/span&gt;.2 us / &lt;span class=&quot;m&quot;&gt;112&lt;/span&gt;.5 us / &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;.94 ms / &lt;span class=&quot;m&quot;&gt;75&lt;/span&gt;.5 us
ioping: sequential &lt;span class=&quot;nb&quot;&gt;read&lt;/span&gt; speed
generated &lt;span class=&quot;m&quot;&gt;16&lt;/span&gt;.5 k requests in &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;.00 s, &lt;span class=&quot;m&quot;&gt;4&lt;/span&gt;.03 GiB, &lt;span class=&quot;m&quot;&gt;3&lt;/span&gt;.30 k iops, &lt;span class=&quot;m&quot;&gt;824&lt;/span&gt;.3 MiB/s

dd: sequential write speed
1st run:    &lt;span class=&quot;m&quot;&gt;855&lt;/span&gt;.45 MiB/s
2nd run:    &lt;span class=&quot;m&quot;&gt;1049&lt;/span&gt;.04 MiB/s
3rd run:    &lt;span class=&quot;m&quot;&gt;1049&lt;/span&gt;.04 MiB/s
average:    &lt;span class=&quot;m&quot;&gt;984&lt;/span&gt;.51 MiB/s

IPv4 speedtests
your IPv4:    &lt;span class=&quot;m&quot;&gt;173&lt;/span&gt;.255.252.xxxx

Cachefly CDN:         &lt;span class=&quot;m&quot;&gt;175&lt;/span&gt;.13 MiB/s
Leaseweb &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;NL&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;:        &lt;span class=&quot;m&quot;&gt;13&lt;/span&gt;.85 MiB/s
Softlayer DAL &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;US&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;:   &lt;span class=&quot;m&quot;&gt;38&lt;/span&gt;.74 MiB/s
Online.net &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;FR&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;:      &lt;span class=&quot;m&quot;&gt;11&lt;/span&gt;.06 MiB/s
OVH BHS &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;CA&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;:         &lt;span class=&quot;m&quot;&gt;16&lt;/span&gt;.75 MiB/s

IPv6 speedtests
your IPv6:    &lt;span class=&quot;m&quot;&gt;2600&lt;/span&gt;:3c01::xxxx

Leaseweb &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;NL&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;:        &lt;span class=&quot;m&quot;&gt;7&lt;/span&gt;.77 MiB/s
Softlayer DAL &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;US&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;:   &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;.00 MiB/s
Online.net &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;FR&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;:      &lt;span class=&quot;m&quot;&gt;8&lt;/span&gt;.44 MiB/s
OVH BHS &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;CA&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;:         &lt;span class=&quot;m&quot;&gt;17&lt;/span&gt;.60 MiB/s
-------------------------------------------------&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;我是很想把CPU上到至少8个核，但囿于预算，还是降了一档。&lt;/p&gt;

&lt;h2 id=&quot;43-测试规划&quot;&gt;4.3 测试规划&lt;/h2&gt;
&lt;p&gt;上面在&lt;a href=&quot;#TEST_TARGET&quot;&gt;4.1 测试目标&lt;/a&gt;的时候提到了设定目标需要固定程序拓扑架构，但即便在程序架构固定的情况下，仍旧有大量细节（参数、配置）是可以微调变动的：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;客户端连接数量：最大连接数，越大的最大连接数意味着越高的并发请求可能，而提升并发意味着负载的显著上升&lt;/li&gt;
  &lt;li&gt;客户端请求速率：同时到达服务器的请求数量，即并发请求数量，并发数量的上升最终体现在这个指标的提升上&lt;/li&gt;
  &lt;li&gt;数据库表量级：不同数据量的数据库表，其性能也会显著不同，因此在测试的时候也可以变动下表数据量再进行测试&lt;/li&gt;
  &lt;li&gt;数据库连接：少量的连接不足以处理请求，但过大的连接数也会显著降低性能，这方面也是一个测试点&lt;/li&gt;
  &lt;li&gt;gRPC连接池容量：虽然gRPC的Go客户端对于并发的处理非常好，但连接池仍旧在某些情况下有其作用，如何找出合理的并发池容量也是可选的测试条目之一&lt;/li&gt;
  &lt;li&gt;Kafka目标Topic的分片数量：提升分片数量会降低写入的性能，但更多的分片意味着更多的消费者，消息的处理速度会上升&lt;/li&gt;
  &lt;li&gt;Elasticsearch集群的Node数量：提升节点会降低写入性能，但会提升查询性能&lt;/li&gt;
  &lt;li&gt;JVM设置：各个用到JVM的软件一般都需要很精细地对JVM进行配置和调优，才能很好地发挥性能，而这方面的配置变化对测试的影响也很大&lt;/li&gt;
  &lt;li&gt;消费者计算因子：随着因子数值的调大，计算量会显著上升，最终会体现在Consumer角色的负载上升，以及Kafka队列的堆积不能及时消费等&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;测试的规划制定需要固定大部分的变量、配置，仅修改少部分，然后进行多次测试，横向比较性能的变化，就可以找出当前架构的最佳性能表现设置。&lt;/p&gt;

&lt;h2 id=&quot;44-监控清单&quot;&gt;4.4 监控清单&lt;/h2&gt;
&lt;p&gt;下面是一份当前程序架构中需要进行重点监控的程序指标清单。这部分太长了，我放到最后的&lt;a href=&quot;#MONITORING_LIST&quot;&gt;Appendix &amp;gt; 监控清单&lt;/a&gt;里，以便不影响下文的阅读。&lt;/p&gt;

&lt;h2 id=&quot;45-部署工程&quot;&gt;4.5 部署工程&lt;/h2&gt;
&lt;p&gt;部署工作：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;在Linode服务商这里申请开服务器&lt;/li&gt;
  &lt;li&gt;因Linode不支持在开服务器的时候直接部署SSH Key，需要使用命令来部署：ssh-copy-id -i ~/.ssh/id_rsa.pub root@xxx.xxx.xxx.xxx&lt;/li&gt;
  &lt;li&gt;使用&lt;a href=&quot;#PRACTICE_CODE&quot;&gt;1.1.1 实践代码&lt;/a&gt;提到的线上部署脚本进行部署：
    &lt;ul&gt;
      &lt;li&gt;./cluster.sh --machine&lt;/li&gt;
      &lt;li&gt;./cluster.sh --image&lt;/li&gt;
      &lt;li&gt;./cluster.sh --deploy --machine-type=all&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;使用 ./cluster.sh --docker-ps --machine-type=all 来观察是否启动正常&lt;/li&gt;
  &lt;li&gt;打开 MONITER_IP:9090 来查看是否所有的监控节点都正常在线&lt;/li&gt;
  &lt;li&gt;打开 MONITER_IP:5601 来设置ES内的Index Pattern&lt;/li&gt;
  &lt;li&gt;使用 curl -v http://WEB_IP:8000/work 等入口测试是否正常运行&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;46-测试执行--报告制作&quot;&gt;4.6 测试执行 &amp;amp; 报告制作&lt;/h2&gt;
&lt;p&gt;部署完成之后：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;记录测试开始时间&lt;/li&gt;
  &lt;li&gt;修改cluster.sh内相关配置&lt;/li&gt;
  &lt;li&gt;运行 ./cluster.sh --stress --machine-type=all 获得测试命令&lt;/li&gt;
  &lt;li&gt;在Client Host上执行测试命令开始测试，并观察实时报表中的报错数及响应时长变化（如有大量错误和大量超时，需要中断测试，并查找原因）&lt;/li&gt;
  &lt;li&gt;打开 MONITER_IP:9090 观察监控节点是否正常在线&lt;/li&gt;
  &lt;li&gt;打开 MONITER_IP:3000 观察监控指标变化&lt;/li&gt;
  &lt;li&gt;在测试完成前，使用pprof获取30秒间隔的两份堆内存dump（Web、Service、Consumer都需要）：
    &lt;ul&gt;
      &lt;li&gt;go tool pprof http://HOST:PORT/debug/pprof/heap
        &lt;ul&gt;
          &lt;li&gt;Saved profile in /Users/XXX/pprof/pprof.web.alloc_objects.alloc_space.inuse_objects.inuse_space.001.pb.gz&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;go tool pprof -png /Users/XXX/pprof/pprof.web.alloc_objects.alloc_space.inuse_objects.inuse_space.001.pb.gz &amp;gt; web_heap.png&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;在测试完成之前，使用pprof获取30秒的CPU dump（Web、Service、Consumer都需要）：
    &lt;ul&gt;
      &lt;li&gt;go tool pprof http://HOST:PORT/debug/pprof/profile?seconds=30
        &lt;ul&gt;
          &lt;li&gt;Saved profile in /Users/XXX/pprof/pprof.web.samples.cpu.001.pb.gz&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;go tool pprof -png /Users/XXX/pprof/pprof.web.samples.cpu.001.pb.gz &amp;gt; web_cpu.png&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;测试完成后：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;记录测试结束时间&lt;/li&gt;
  &lt;li&gt;修改cluster.sh内相关配置&lt;/li&gt;
  &lt;li&gt;使用 ./cluster.sh --report 导出测试结果数据&lt;/li&gt;
  &lt;li&gt;手动获取Elasticsearch数据，并填入到报表模板中
    &lt;ul&gt;
      &lt;li&gt;获取时间段内所有Web请求数量，与客户端报表中数值进行比对是否匹配&lt;/li&gt;
      &lt;li&gt;获取时间段内所有的Consumer请求数量，与Web请求中的 /plan 数量进行比对是否匹配&lt;/li&gt;
      &lt;li&gt;获取时间段内所有Web请求API类型的配比，与配置项中的数值进行比对是否匹配&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;手动获取Jaeger数据，并填入到报表模板中
    &lt;ul&gt;
      &lt;li&gt;时间段内各Web API的耗时图表&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;将压测执行客户端的报表数据填入到报表模板中&lt;/li&gt;
  &lt;li&gt;将之前导出的CPU和堆内存Profiling数据以图片形式导出，并填入到报表模板中&lt;/li&gt;
  &lt;li&gt;修改导出的报表模板，添加测试实际配置数据，并编写结论板块内容&lt;/li&gt;
  &lt;li&gt;将完工的所有内容提交到代码库中：
    &lt;ul&gt;
      &lt;li&gt;cluster/report/XXXXX/images&lt;/li&gt;
      &lt;li&gt;cluster/report/XXXXX/report_XXXXX.md&lt;/li&gt;
      &lt;li&gt;cluster/report/XXXXX/pprof/* 导出的CPU和堆内存dump&lt;/li&gt;
      &lt;li&gt;cluster/output/*&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;461-获取elasticsearchkibana数据&quot;&gt;4.6.1 获取Elasticsearch（Kibana）数据&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;获取所有Web请求数：
    &lt;ul&gt;
      &lt;li&gt;打开Discover &amp;gt; dist-web-web-7.0.0-*&lt;/li&gt;
      &lt;li&gt;调整时间成绝对时间&lt;/li&gt;
      &lt;li&gt;查看左上角的Hit数：1,552 hits&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;获取所有Consumer请求数：
    &lt;ul&gt;
      &lt;li&gt;打开Discover &amp;gt; dist-consumer-consumer-7.0.0-*&lt;/li&gt;
      &lt;li&gt;调整时间成绝对时间&lt;/li&gt;
      &lt;li&gt;查看左上角的Hit数：81 hits&lt;/li&gt;
      &lt;li&gt;比率验证：81 / 1552 = 5.21%；OK&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;获取API GetWork请求数：
    &lt;ul&gt;
      &lt;li&gt;打开Discover &amp;gt; dist-web-web-7.0.0-*&lt;/li&gt;
      &lt;li&gt;调整时间成绝对时间&lt;/li&gt;
      &lt;li&gt;在Filter中输入：&lt;code&gt;api: apiGetWork&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;查看左上角的Hit数：704 hits&lt;/li&gt;
      &lt;li&gt;比率验证：704 / 1552 = 45.36%；OK&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;获取API UpdateViewed请求数：
    &lt;ul&gt;
      &lt;li&gt;打开Discover &amp;gt; dist-web-web-7.0.0-*&lt;/li&gt;
      &lt;li&gt;调整时间成绝对时间&lt;/li&gt;
      &lt;li&gt;在Filter中输入：&lt;code&gt;api: apiUpdateViewed&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;查看左上角的Hit数：364 hits&lt;/li&gt;
      &lt;li&gt;比率验证：364 / 1552 = 23.45%；OK&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;获取API GetAchievement请求数：
    &lt;ul&gt;
      &lt;li&gt;打开Discover &amp;gt; dist-web-web-7.0.0-*&lt;/li&gt;
      &lt;li&gt;调整时间成绝对时间&lt;/li&gt;
      &lt;li&gt;在Filter中输入：&lt;code&gt;api: apiGetAchievement&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;查看左上角的Hit数：403 hits&lt;/li&gt;
      &lt;li&gt;比率验证：403 / 1552 = 25.96%；OK&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;获取API PlanWork请求数：
    &lt;ul&gt;
      &lt;li&gt;打开Discover &amp;gt; dist-web-web-7.0.0-*&lt;/li&gt;
      &lt;li&gt;调整时间成绝对时间&lt;/li&gt;
      &lt;li&gt;在Filter中输入：&lt;code&gt;api: apiPlanWork&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;查看左上角的Hit数：81 hits&lt;/li&gt;
      &lt;li&gt;数量验证：与Consumer计数匹配；OK&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;P.S 使用&lt;code&gt;level: error&lt;/code&gt;过滤条件查找错误日志，如果是没有上传日志的service服务等，则需要：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;docker-machine ssh service&lt;/li&gt;
  &lt;li&gt;docker logs --tail 1000 app_service | grep ERROR&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;462-获取jaeger数据&quot;&gt;4.6.2 获取Jaeger数据&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;打开Jaeger Query&lt;/li&gt;
  &lt;li&gt;将Lookback设置为：Custom Time Range&lt;/li&gt;
  &lt;li&gt;设置Start Time和End Time&lt;/li&gt;
  &lt;li&gt;设置Service为：app.web&lt;/li&gt;
  &lt;li&gt;设置Operation为：
    &lt;ul&gt;
      &lt;li&gt;Web.HandleApi.apiGetWork&lt;/li&gt;
      &lt;li&gt;Web.HandleApi.apiUpdateViewed&lt;/li&gt;
      &lt;li&gt;Web.HandleApi.apiGetAchievement&lt;/li&gt;
      &lt;li&gt;Web.HandleApi.apiPlanWork&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;设置Limit Results为最大值1500&lt;/li&gt;
  &lt;li&gt;查看右上角的耗时分布图以及查询数&lt;/li&gt;
  &lt;li&gt;选择几个耗时比较大的个例，点击观察原因&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;5-报告&quot;&gt;5. 报告&lt;/h1&gt;
&lt;p&gt;经过实机测试，报告如下，有兴趣的可以打开看看：&lt;/p&gt;

&lt;h2 id=&quot;51-第一次测试&quot;&gt;5.1 第一次测试&lt;/h2&gt;
&lt;p&gt;1000qps测试发现瓶颈点（预设瓶颈，意料之中）Consumer CPU消耗过于剧烈。&lt;/p&gt;

&lt;p&gt;报告：&lt;a href=&quot;/resources/2019/07/dist-system-practice/report_1562948039960.pdf&quot; target=&quot;_blank&quot;&gt;report_1562948039960.pdf&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;52-第二次测试&quot;&gt;5.2 第二次测试&lt;/h2&gt;
&lt;p&gt;解决Consumer的瓶颈问题，并对其进行验证。&lt;/p&gt;

&lt;p&gt;报告：&lt;a href=&quot;/resources/2019/07/dist-system-practice/report_1562981458710.pdf&quot; target=&quot;_blank&quot;&gt;report_1562981458710.pdf&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;因预算和时间等原因，后续并没有展开更多的测试，仅两次，一次演示问题的发现，一次演示问题的解决和验证。&lt;/p&gt;

&lt;h1 id=&quot;appendix&quot;&gt;Appendix&lt;/h1&gt;
&lt;h2 id=&quot;MONITORING_LIST&quot;&gt;监控清单&lt;/h2&gt;
&lt;h3 id=&quot;host&quot;&gt;Host&lt;/h3&gt;
&lt;p&gt;Dashboard uid: 9CWBz0bik&lt;/p&gt;

&lt;p&gt;Graph params:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;var-interval=5s 调整图表的采样间隔，最低5s&lt;/li&gt;
  &lt;li&gt;var-env=All 固定值&lt;/li&gt;
  &lt;li&gt;var-name=All 固定值&lt;/li&gt;
  &lt;li&gt;var-node=192.168.3.111%3A9100 label_values(node_exporter_build_info,instance)&lt;/li&gt;
  &lt;li&gt;var-maxmount= 固定值&lt;/li&gt;
  &lt;li&gt;panelId=13 根据图表，编号各自不同&lt;/li&gt;
  &lt;li&gt;width=1000&amp;amp;height=500 图表大小&lt;/li&gt;
  &lt;li&gt;tz=Asia%2FShanghai 用户时区&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Sample graph link: &lt;a href=&quot;http://127.0.0.1:3000/render/d-solo/9CWBz0bik/nodes?orgId=1&amp;amp;var-interval=5s&amp;amp;var-env=All&amp;amp;var-name=All&amp;amp;var-node=192.168.3.111%3A9100&amp;amp;var-maxmount=&amp;amp;from=1562202150372&amp;amp;to=1562205750372&amp;amp;panelId=13&amp;amp;width=1000&amp;amp;height=500&amp;amp;tz=Asia%2FShanghai&quot; target=&quot;_blank&quot;&gt;link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Monitoring items:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;系统运行时间
    &lt;ul&gt;
      &lt;li&gt;panelId=15&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;CPU 核数
    &lt;ul&gt;
      &lt;li&gt;panelId=14&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;内存总量
    &lt;ul&gt;
      &lt;li&gt;panelId=75&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;CPU使用率（5m）
    &lt;ul&gt;
      &lt;li&gt;panelId=167&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;CPU iowait（5m）
    &lt;ul&gt;
      &lt;li&gt;panelId=20&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;内存使用率
    &lt;ul&gt;
      &lt;li&gt;panelId=172&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;当前打开的文件描述符
    &lt;ul&gt;
      &lt;li&gt;panelId=16&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;根分区使用率
    &lt;ul&gt;
      &lt;li&gt;panelId=166&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;系统平均负载
    &lt;ul&gt;
      &lt;li&gt;panelId=13&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;磁盘总空间
    &lt;ul&gt;
      &lt;li&gt;panelId=171&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;各分区可用空间
    &lt;ul&gt;
      &lt;li&gt;panelId=164&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;CPU使用率、磁盘每秒的I/O操作耗费时间（%）
    &lt;ul&gt;
      &lt;li&gt;panelId=7&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;内存信息
    &lt;ul&gt;
      &lt;li&gt;panelId=156&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;磁盘读写速率（IOPS）
    &lt;ul&gt;
      &lt;li&gt;panelId=161&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;磁盘读写容量大小
    &lt;ul&gt;
      &lt;li&gt;panelId=168&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;磁盘IO读写时间
    &lt;ul&gt;
      &lt;li&gt;panelId=160&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;网络流量
    &lt;ul&gt;
      &lt;li&gt;panelId=157&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;TCP 连接情况
    &lt;ul&gt;
      &lt;li&gt;panelId=158&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;container&quot;&gt;Container&lt;/h3&gt;
&lt;p&gt;Dashboard uid: PV1XyHnWz&lt;/p&gt;

&lt;p&gt;Graph params:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;refresh=30s 不生效，但建议保留&lt;/li&gt;
  &lt;li&gt;var-containergroup=All 固定值&lt;/li&gt;
  &lt;li&gt;var-interval=30s 调整图表的采样间隔，最低30s&lt;/li&gt;
  &lt;li&gt;var-server=192.168.3.111 label_values(node_boot_time_seconds, instance) /([^:]+):.*/ 去掉了instance的port&lt;/li&gt;
  &lt;li&gt;var-name=prometheus 容器名&lt;/li&gt;
  &lt;li&gt;panelId=8 根据图表，编号各自不同&lt;/li&gt;
  &lt;li&gt;width=1000&amp;amp;height=500 图表大小&lt;/li&gt;
  &lt;li&gt;tz=Asia%2FShanghai 用户时区&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Sample graph link: &lt;a href=&quot;http://127.0.0.1:3000/render/d-solo/PV1XyHnWz/docker-and-system-monitoring?orgId=1&amp;amp;from=1562200204905&amp;amp;to=1562203804906&amp;amp;refresh=30s&amp;amp;var-containergroup=All&amp;amp;var-interval=30s&amp;amp;var-server=192.168.3.111&amp;amp;var-name=prometheus&amp;amp;panelId=8&amp;amp;width=1000&amp;amp;height=500&amp;amp;tz=Asia%2FShanghai&quot; target=&quot;_blank&quot;&gt;link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Monitoring items:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Received Network Traffic per Container
    &lt;ul&gt;
      &lt;li&gt;容器收到的网络流量&lt;/li&gt;
      &lt;li&gt;panelId=8&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Sent Network Traffic per Container
    &lt;ul&gt;
      &lt;li&gt;容器发送的网络流量&lt;/li&gt;
      &lt;li&gt;panelId=9&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;CPU Usage per Container
    &lt;ul&gt;
      &lt;li&gt;容器消耗的CPU&lt;/li&gt;
      &lt;li&gt;panelId=1&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Memory Usage per Container
    &lt;ul&gt;
      &lt;li&gt;容器消耗的内存&lt;/li&gt;
      &lt;li&gt;panelId=10&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Memory Swap per Container
    &lt;ul&gt;
      &lt;li&gt;容器的交换内存&lt;/li&gt;
      &lt;li&gt;panelId=34&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;memcached&quot;&gt;Memcached&lt;/h3&gt;
&lt;p&gt;Dashboard uid: NgzwcO7Zz&lt;/p&gt;

&lt;p&gt;Graph params:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;var-node=memcached-exporter%3A9150 label_values(memcached_up, instance)&lt;/li&gt;
  &lt;li&gt;panelId=1 根据图表，编号各自不同&lt;/li&gt;
  &lt;li&gt;width=1000&amp;amp;height=500 图表大小&lt;/li&gt;
  &lt;li&gt;tz=Asia%2FShanghai 用户时区&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Sample graph link: &lt;a href=&quot;http://127.0.0.1:3000/render/d-solo/NgzwcO7Zz/prometheus-memcached?orgId=1&amp;amp;from=1562203120775&amp;amp;to=1562206720775&amp;amp;var-node=memcached-exporter%3A9150&amp;amp;panelId=1&amp;amp;width=1000&amp;amp;height=500&amp;amp;tz=Asia%2FShanghai&quot; target=&quot;_blank&quot;&gt;link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Monitoring items:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;% Hit ratio
    &lt;ul&gt;
      &lt;li&gt;命中率&lt;/li&gt;
      &lt;li&gt;panelId=1&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Connections
    &lt;ul&gt;
      &lt;li&gt;连接数&lt;/li&gt;
      &lt;li&gt;panelId=4&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Get / Set ratio
    &lt;ul&gt;
      &lt;li&gt;Get Set比率&lt;/li&gt;
      &lt;li&gt;panelId=3&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Commands
    &lt;ul&gt;
      &lt;li&gt;按种类显示命令执行的数量&lt;/li&gt;
      &lt;li&gt;panelId=2&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;evicts / reclaims
    &lt;ul&gt;
      &lt;li&gt;Key驱逐数量&lt;/li&gt;
      &lt;li&gt;panelId=8&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Read / written bytes
    &lt;ul&gt;
      &lt;li&gt;网络流量&lt;/li&gt;
      &lt;li&gt;panelId=6&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Total memory usage
    &lt;ul&gt;
      &lt;li&gt;内存使用率&lt;/li&gt;
      &lt;li&gt;panelId=7&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Items in cache
    &lt;ul&gt;
      &lt;li&gt;内存中Key数量&lt;/li&gt;
      &lt;li&gt;panelId=5&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;mysql&quot;&gt;MySQL&lt;/h3&gt;
&lt;p&gt;Dashboard uid: MQWgroiiz&lt;/p&gt;

&lt;p&gt;Graph params:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;var-interval=1m 调整图表的采样间隔，最低1s&lt;/li&gt;
  &lt;li&gt;var-host=mysqld-exporter%3A9104 label_values(mysql_up, instance)&lt;/li&gt;
  &lt;li&gt;panelId=1 根据图表，编号各自不同&lt;/li&gt;
  &lt;li&gt;width=1000&amp;amp;height=500 图表大小&lt;/li&gt;
  &lt;li&gt;tz=Asia%2FShanghai 用户时区&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Sample graph link: &lt;a href=&quot;http://127.0.0.1:3000/render/d-solo/MQWgroiiz/mysql-overview?orgId=1&amp;amp;from=1562165395404&amp;amp;to=1562208595404&amp;amp;var-interval=1m&amp;amp;var-host=mysqld-exporter%3A9104&amp;amp;panelId=92&amp;amp;width=1000&amp;amp;height=500&amp;amp;tz=Asia%2FShanghai&quot; target=&quot;_blank&quot;&gt;link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Monitoring items:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;MySQL Connections
    &lt;ul&gt;
      &lt;li&gt;连接状态&lt;/li&gt;
      &lt;li&gt;panelId=92&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;MySQL Aborted Connections
    &lt;ul&gt;
      &lt;li&gt;退出的连接统计&lt;/li&gt;
      &lt;li&gt;panelId=47&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;MySQL Client Thread Activity
    &lt;ul&gt;
      &lt;li&gt;线程活动状态&lt;/li&gt;
      &lt;li&gt;panelId=10&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;MySQL Thread Cache
    &lt;ul&gt;
      &lt;li&gt;线程池状态&lt;/li&gt;
      &lt;li&gt;panelId=11&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;MySQL Questions
    &lt;ul&gt;
      &lt;li&gt;查询数量&lt;/li&gt;
      &lt;li&gt;panelId=53&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;MySQL Slow Queries
    &lt;ul&gt;
      &lt;li&gt;慢查询数量&lt;/li&gt;
      &lt;li&gt;panelId=48&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;MySQL Table Locks
    &lt;ul&gt;
      &lt;li&gt;表锁状态&lt;/li&gt;
      &lt;li&gt;panelId=32&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;MySQL Network Traffic
    &lt;ul&gt;
      &lt;li&gt;网络流量统计&lt;/li&gt;
      &lt;li&gt;panelId=9&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;MySQL Network Usage Hourly
    &lt;ul&gt;
      &lt;li&gt;网络流量统计/小时&lt;/li&gt;
      &lt;li&gt;panelId=381&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;MySQL Internal Memory Overview
    &lt;ul&gt;
      &lt;li&gt;内部内存使用状态&lt;/li&gt;
      &lt;li&gt;panelId=50&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Top Command Counters
    &lt;ul&gt;
      &lt;li&gt;执行命令按种类分类数量&lt;/li&gt;
      &lt;li&gt;panelId=14&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Top Command Counters Hourly
    &lt;ul&gt;
      &lt;li&gt;命令数量/小时&lt;/li&gt;
      &lt;li&gt;panelId=39&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;MySQL Query Cache Memory
    &lt;ul&gt;
      &lt;li&gt;缓存使用量&lt;/li&gt;
      &lt;li&gt;panelId=46&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;MySQL Query Cache Activity
    &lt;ul&gt;
      &lt;li&gt;缓存命中状态&lt;/li&gt;
      &lt;li&gt;panelId=45&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;MySQL File Openings
    &lt;ul&gt;
      &lt;li&gt;实时打开的文件数量&lt;/li&gt;
      &lt;li&gt;panelId=43&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;MySQL Open Files
    &lt;ul&gt;
      &lt;li&gt;打开文件统计&lt;/li&gt;
      &lt;li&gt;panelId=41&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;prometheus&quot;&gt;Prometheus&lt;/h3&gt;
&lt;p&gt;Dashboard uid: 54e7hO7Wk&lt;/p&gt;

&lt;p&gt;Graph params:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;var-job=prometheus 固定值&lt;/li&gt;
  &lt;li&gt;var-instance=prometheus 固定值&lt;/li&gt;
  &lt;li&gt;var-interval=1h 调整图表的采样间隔，最低1h&lt;/li&gt;
  &lt;li&gt;panelId=1 根据图表，编号各自不同&lt;/li&gt;
  &lt;li&gt;width=1000&amp;amp;height=500 图表大小&lt;/li&gt;
  &lt;li&gt;tz=Asia%2FShanghai 用户时区&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Sample graph link: &lt;a href=&quot;http://127.0.0.1:3000/render/d-solo/54e7hO7Wk/prometheus-2-0-overview?orgId=1&amp;amp;panelId=33&amp;amp;var-job=prometheus&amp;amp;var-instance=prometheus%3A9090&amp;amp;var-interval=1h&amp;amp;from=1562307966107&amp;amp;to=1562311566107&amp;amp;width=1000&amp;amp;height=500&amp;amp;tz=Asia%2FShanghai&quot; target=&quot;_blank&quot;&gt;link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Monitoring items:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Series Count
    &lt;ul&gt;
      &lt;li&gt;时序数量&lt;/li&gt;
      &lt;li&gt;panelId=3&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Failures and Errors
    &lt;ul&gt;
      &lt;li&gt;采样出错&lt;/li&gt;
      &lt;li&gt;panelId=33&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Appended Samples per Second
    &lt;ul&gt;
      &lt;li&gt;每秒采样数量&lt;/li&gt;
      &lt;li&gt;panelId=4&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Scrape Duration
    &lt;ul&gt;
      &lt;li&gt;采样耗时&lt;/li&gt;
      &lt;li&gt;panelId=29&lt;/li&gt;
      &lt;li&gt;该图表按instance进行显示，因此如果需要查询某个特定服务的采样抓取耗时，需要调整该参数，不能固定使用prometheus&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Prometheus Engine Query Duration Seconds
    &lt;ul&gt;
      &lt;li&gt;查询耗时情况&lt;/li&gt;
      &lt;li&gt;panelId=15&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;kafka-jmx&quot;&gt;Kafka JMX&lt;/h3&gt;
&lt;p&gt;Dashboard uid: chanjarster-jvm-dashboard&lt;/p&gt;

&lt;p&gt;Graph params:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;var-datasource=Prometheus 固定值&lt;/li&gt;
  &lt;li&gt;var-job=kafka 固定值&lt;/li&gt;
  &lt;li&gt;var-instance=kafka_1%3A7071 label_values(jvm_info{job=”$job”},instance)&lt;/li&gt;
  &lt;li&gt;var-mempool=All 固定值&lt;/li&gt;
  &lt;li&gt;var-memarea=All 固定值&lt;/li&gt;
  &lt;li&gt;panelId=1 根据图表，编号各自不同&lt;/li&gt;
  &lt;li&gt;width=1000&amp;amp;height=500 图表大小&lt;/li&gt;
  &lt;li&gt;tz=Asia%2FShanghai 用户时区&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Sample graph link: &lt;a href=&quot;http://127.0.0.1:3000/render/d-solo/chanjarster-jvm-dashboard/kafka-jmx-dashboard?orgId=1&amp;amp;panelId=29&amp;amp;from=1562309167160&amp;amp;to=1562312767160&amp;amp;var-datasource=Prometheus&amp;amp;var-job=kafka&amp;amp;var-instance=kafka_1%3A7071&amp;amp;var-mempool=All&amp;amp;var-memarea=All&amp;amp;width=1000&amp;amp;height=500&amp;amp;tz=Asia%2FShanghai&quot; target=&quot;_blank&quot;&gt;link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Monitoring items:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Open file descriptors
    &lt;ul&gt;
      &lt;li&gt;文件打开情况&lt;/li&gt;
      &lt;li&gt;panelId=38&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;CPU load
    &lt;ul&gt;
      &lt;li&gt;CPU使用情况，含JVM的统计区分&lt;/li&gt;
      &lt;li&gt;panelId=29&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Memory area [heap]
    &lt;ul&gt;
      &lt;li&gt;堆内存使用情况&lt;/li&gt;
      &lt;li&gt;panelId=8&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Memory area [nonheap]
    &lt;ul&gt;
      &lt;li&gt;堆外内存使用情况&lt;/li&gt;
      &lt;li&gt;panelId=45&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;GC count increase
    &lt;ul&gt;
      &lt;li&gt;GC数量&lt;/li&gt;
      &lt;li&gt;panelId=6&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;GC time
    &lt;ul&gt;
      &lt;li&gt;GC耗时&lt;/li&gt;
      &lt;li&gt;panelId=5&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Threads used
    &lt;ul&gt;
      &lt;li&gt;线程数量&lt;/li&gt;
      &lt;li&gt;panelId=3&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Physical memory
    &lt;ul&gt;
      &lt;li&gt;物理内存情况&lt;/li&gt;
      &lt;li&gt;panelId=44&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;kafka-exporter&quot;&gt;Kafka Exporter&lt;/h3&gt;
&lt;p&gt;Dashboard uid: jwPKIsniz&lt;/p&gt;

&lt;p&gt;Graph params:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;var-job=kafka-exporter 固定值&lt;/li&gt;
  &lt;li&gt;var-instance=kafka_exporter%3A9308 label_values(kafka_consumergroup_current_offset{job=~”$job”}, instance)&lt;/li&gt;
  &lt;li&gt;var-topic=All 固定值，可调整&lt;/li&gt;
  &lt;li&gt;panelId=1 根据图表，编号各自不同&lt;/li&gt;
  &lt;li&gt;width=1000&amp;amp;height=500 图表大小&lt;/li&gt;
  &lt;li&gt;tz=Asia%2FShanghai 用户时区&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Sample graph link: &lt;a href=&quot;http://127.0.0.1:3000/render/d-solo/jwPKIsniz/kafka-exporter-overview?orgId=1&amp;amp;panelId=14&amp;amp;from=1562309984557&amp;amp;to=1562313584557&amp;amp;var-job=kafka-exporter&amp;amp;var-instance=kafka_exporter%3A9308&amp;amp;var-topic=All&amp;amp;width=1000&amp;amp;height=500&amp;amp;tz=Asia%2FShanghai&quot; target=&quot;_blank&quot;&gt;link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Monitoring items:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Message in per second
    &lt;ul&gt;
      &lt;li&gt;每秒消息数量&lt;/li&gt;
      &lt;li&gt;panelId=14&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Lag by Consumer Group
    &lt;ul&gt;
      &lt;li&gt;消费组延迟&lt;/li&gt;
      &lt;li&gt;panelId=12&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Message in per minute
    &lt;ul&gt;
      &lt;li&gt;每分钟消息数量&lt;/li&gt;
      &lt;li&gt;panelId=16&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Message consume per minute
    &lt;ul&gt;
      &lt;li&gt;每分钟消息消费&lt;/li&gt;
      &lt;li&gt;panelId=18&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;jaeger-agent&quot;&gt;Jaeger Agent&lt;/h3&gt;
&lt;p&gt;Dashboard uid: Z8ieXpnWk&lt;/p&gt;

&lt;p&gt;Graph params:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;var-node=jagent_web%3A5778 label_values(jaeger_agent_thrift_udp_server_queue_size, instance)&lt;/li&gt;
  &lt;li&gt;panelId=1 根据图表，编号各自不同&lt;/li&gt;
  &lt;li&gt;width=1000&amp;amp;height=500 图表大小&lt;/li&gt;
  &lt;li&gt;tz=Asia%2FShanghai 用户时区&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Sample graph link: &lt;a href=&quot;http://127.0.0.1:3000/render/d-solo/Z8ieXpnWk/jaeger-agent?tab=advanced&amp;amp;orgId=1&amp;amp;panelId=6&amp;amp;from=1562311474404&amp;amp;to=1562315074404&amp;amp;var-node=jagent_web%3A5778&amp;amp;width=1000&amp;amp;height=500&amp;amp;tz=Asia%2FShanghai&quot; target=&quot;_blank&quot;&gt;link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Monitoring items:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Reporter batches submitted
    &lt;ul&gt;
      &lt;li&gt;Reporter批量提交数（提交至collector）&lt;/li&gt;
      &lt;li&gt;panelId=6&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Reporter batches failures
    &lt;ul&gt;
      &lt;li&gt;Reporter批量提交失败数&lt;/li&gt;
      &lt;li&gt;panelId=8&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Reporter spans submitted
    &lt;ul&gt;
      &lt;li&gt;Reporter span提交数量&lt;/li&gt;
      &lt;li&gt;panelId=10&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Reporter spans failures
    &lt;ul&gt;
      &lt;li&gt;Reporter span提交失败数&lt;/li&gt;
      &lt;li&gt;panelId=12&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Queue size
    &lt;ul&gt;
      &lt;li&gt;Receiver等待队列（从app过来）&lt;/li&gt;
      &lt;li&gt;panelId=24&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Read errors
    &lt;ul&gt;
      &lt;li&gt;ReceiverUDP读取错误数&lt;/li&gt;
      &lt;li&gt;panelId=26&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Packets processed
    &lt;ul&gt;
      &lt;li&gt;Receiver处理的包数量&lt;/li&gt;
      &lt;li&gt;panelId=20&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Packets dropped
    &lt;ul&gt;
      &lt;li&gt;Receiver丢弃的包数量&lt;/li&gt;
      &lt;li&gt;panelId=22&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;jaeger-collector&quot;&gt;Jaeger Collector&lt;/h3&gt;
&lt;p&gt;Dashboard uid: mb6-JR5iz&lt;/p&gt;

&lt;p&gt;Graph params:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;var-node=jcollector_1%3A14268 label_values(jaeger_collector_queue_length, instance)&lt;/li&gt;
  &lt;li&gt;panelId=1 根据图表，编号各自不同&lt;/li&gt;
  &lt;li&gt;width=1000&amp;amp;height=500 图表大小&lt;/li&gt;
  &lt;li&gt;tz=Asia%2FShanghai 用户时区&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Sample graph link: &lt;a href=&quot;http://127.0.0.1:3000/render/d-solo/mb6-JR5iz/jaeger-collector?orgId=1&amp;amp;var-node=jcollector_1%3A14268&amp;amp;from=1562312765270&amp;amp;to=1562316365270&amp;amp;panelId=20&amp;amp;width=1000&amp;amp;height=500&amp;amp;tz=Asia%2FShanghai&quot; target=&quot;_blank&quot;&gt;link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Monitoring items:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Traces received
    &lt;ul&gt;
      &lt;li&gt;收到的trace数量&lt;/li&gt;
      &lt;li&gt;panelId=20&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Traces rejected
    &lt;ul&gt;
      &lt;li&gt;拒绝的trace数量&lt;/li&gt;
      &lt;li&gt;panelId=22&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Spans received
    &lt;ul&gt;
      &lt;li&gt;收到的span数量&lt;/li&gt;
      &lt;li&gt;panelId=18&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Spans dropped
    &lt;ul&gt;
      &lt;li&gt;丢弃的span数量&lt;/li&gt;
      &lt;li&gt;panelId=4&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Spans rejected
    &lt;ul&gt;
      &lt;li&gt;拒绝的span数量&lt;/li&gt;
      &lt;li&gt;panelId=24&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Queue length
    &lt;ul&gt;
      &lt;li&gt;队列长度&lt;/li&gt;
      &lt;li&gt;panelId=2&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Span queue latency - 95 percentile
    &lt;ul&gt;
      &lt;li&gt;span处理时长 95%&lt;/li&gt;
      &lt;li&gt;panelId=10&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Save latency - 95 percentile
    &lt;ul&gt;
      &lt;li&gt;数据库存储时长 95%&lt;/li&gt;
      &lt;li&gt;panelId=26&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Cassandra attempts
    &lt;ul&gt;
      &lt;li&gt;cassandra数据库请求数量&lt;/li&gt;
      &lt;li&gt;panelId=16&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Cassandra errors
    &lt;ul&gt;
      &lt;li&gt;cassandra数据库报错&lt;/li&gt;
      &lt;li&gt;panelId=12&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;filebeat&quot;&gt;Filebeat&lt;/h3&gt;
&lt;p&gt;Dashboard uid: oF_Qr14Zz&lt;/p&gt;

&lt;p&gt;Graph params:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;var-node=filebeat_exporter%3A9479 label_values(filebeat_uptime_seconds, instance)&lt;/li&gt;
  &lt;li&gt;panelId=1 根据图表，编号各自不同&lt;/li&gt;
  &lt;li&gt;width=1000&amp;amp;height=500 图表大小&lt;/li&gt;
  &lt;li&gt;tz=Asia%2FShanghai 用户时区&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Sample graph link: &lt;a href=&quot;http://127.0.0.1:3000/render/d-solo/oF_Qr14Zz/filebeat?orgId=1&amp;amp;from=1562313566558&amp;amp;to=1562317166558&amp;amp;var-node=filebeat_exporter%3A9479&amp;amp;panelId=2&amp;amp;width=1000&amp;amp;height=500&amp;amp;tz=Asia%2FShanghai&quot; target=&quot;_blank&quot;&gt;link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Monitoring items:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Harvester
    &lt;ul&gt;
      &lt;li&gt;追踪文件的状态&lt;/li&gt;
      &lt;li&gt;panelId=2&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;IO errors
    &lt;ul&gt;
      &lt;li&gt;IO错误&lt;/li&gt;
      &lt;li&gt;panelId=8&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Filebeat events
    &lt;ul&gt;
      &lt;li&gt;filebeat事件&lt;/li&gt;
      &lt;li&gt;panelId=4&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Output events
    &lt;ul&gt;
      &lt;li&gt;输出事件&lt;/li&gt;
      &lt;li&gt;panelId=6&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Pipeline events
    &lt;ul&gt;
      &lt;li&gt;管线事件&lt;/li&gt;
      &lt;li&gt;panelId=10&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Pipeline queue
    &lt;ul&gt;
      &lt;li&gt;管线队列&lt;/li&gt;
      &lt;li&gt;panelId=12&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;elasticsearch&quot;&gt;Elasticsearch&lt;/h3&gt;
&lt;p&gt;Dashboard uid: FNysokSWk&lt;/p&gt;

&lt;p&gt;Graph params:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;var-interval=5m 调整图表的采样间隔，最低5m&lt;/li&gt;
  &lt;li&gt;var-cluster=es_cluster 固定值&lt;/li&gt;
  &lt;li&gt;var-name=es_1 label_values(elasticsearch_indices_docs{cluster=”$cluster”, name!=””},name)&lt;/li&gt;
  &lt;li&gt;var-instance=es_exporter%3A9114 固定值&lt;/li&gt;
  &lt;li&gt;panelId=1 根据图表，编号各自不同&lt;/li&gt;
  &lt;li&gt;width=1000&amp;amp;height=500 图表大小&lt;/li&gt;
  &lt;li&gt;tz=Asia%2FShanghai 用户时区&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Sample graph link: &lt;a href=&quot;http://127.0.0.1:3000/render/d-solo/FNysokSWk/elasticsearch?orgId=1&amp;amp;from=1562315066925&amp;amp;to=1562318666925&amp;amp;var-interval=5m&amp;amp;var-cluster=docker-cluster&amp;amp;var-name=es_1&amp;amp;var-instance=es_exporter%3A9114&amp;amp;panelId=50&amp;amp;width=1000&amp;amp;height=500&amp;amp;tz=Asia%2FShanghai&quot; target=&quot;_blank&quot;&gt;link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Monitoring items:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Pending tasks
    &lt;ul&gt;
      &lt;li&gt;集群未完成工作数&lt;/li&gt;
      &lt;li&gt;panelId=16&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Load average
    &lt;ul&gt;
      &lt;li&gt;节点负载&lt;/li&gt;
      &lt;li&gt;panelId=30&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;CPU usage
    &lt;ul&gt;
      &lt;li&gt;节点CPU使用&lt;/li&gt;
      &lt;li&gt;panelId=88&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;JVM memory usage
    &lt;ul&gt;
      &lt;li&gt;节点内存使用&lt;/li&gt;
      &lt;li&gt;panelId=31&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;GC count
    &lt;ul&gt;
      &lt;li&gt;GC次数&lt;/li&gt;
      &lt;li&gt;panelId=7&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;GC time
    &lt;ul&gt;
      &lt;li&gt;GC耗时&lt;/li&gt;
      &lt;li&gt;panelId=27&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Total translog operations
    &lt;ul&gt;
      &lt;li&gt;持久化操作数&lt;/li&gt;
      &lt;li&gt;panelId=77&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Total translog size in bytes
    &lt;ul&gt;
      &lt;li&gt;持久化容量&lt;/li&gt;
      &lt;li&gt;panelId=78&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Tripped for breakers
    &lt;ul&gt;
      &lt;li&gt;断路器触发次数&lt;/li&gt;
      &lt;li&gt;panelId=79&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Estimated size in bytes of breaker
    &lt;ul&gt;
      &lt;li&gt;断路器触发限制&lt;/li&gt;
      &lt;li&gt;panelId=80&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Disk usage
    &lt;ul&gt;
      &lt;li&gt;磁盘用量&lt;/li&gt;
      &lt;li&gt;panelId=32&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Network usage
    &lt;ul&gt;
      &lt;li&gt;网络用量&lt;/li&gt;
      &lt;li&gt;panelId=47&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Documents count on node
    &lt;ul&gt;
      &lt;li&gt;文档数量&lt;/li&gt;
      &lt;li&gt;panelId=1&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Documents indexed rate
    &lt;ul&gt;
      &lt;li&gt;文档索引数&lt;/li&gt;
      &lt;li&gt;panelId=24&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Documents merged rate
    &lt;ul&gt;
      &lt;li&gt;文档合并率&lt;/li&gt;
      &lt;li&gt;panelId=26&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Documents merged bytes
    &lt;ul&gt;
      &lt;li&gt;文档合并量&lt;/li&gt;
      &lt;li&gt;panelId=52&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Query time
    &lt;ul&gt;
      &lt;li&gt;查询耗时&lt;/li&gt;
      &lt;li&gt;panelId=33&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Indexing time
    &lt;ul&gt;
      &lt;li&gt;索引耗时&lt;/li&gt;
      &lt;li&gt;panelId=5&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Merging time
    &lt;ul&gt;
      &lt;li&gt;合并耗时&lt;/li&gt;
      &lt;li&gt;panelId=3&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Total Operations rate
    &lt;ul&gt;
      &lt;li&gt;所有操作速率&lt;/li&gt;
      &lt;li&gt;panelId=48&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Total Operations time
    &lt;ul&gt;
      &lt;li&gt;所有操作耗时&lt;/li&gt;
      &lt;li&gt;panelId=49&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;golang&quot;&gt;Golang&lt;/h3&gt;
&lt;p&gt;Dashboard uid: ypFZFgvmz&lt;/p&gt;

&lt;p&gt;Graph params:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;var-job=go-apps 固定值&lt;/li&gt;
  &lt;li&gt;var-interval=1m 调整图表的采样间隔，最低1m&lt;/li&gt;
  &lt;li&gt;var-node=192.168.3.111%3A8000 label_values(go_memstats_alloc_bytes, instance)&lt;/li&gt;
  &lt;li&gt;panelId=1 根据图表，编号各自不同&lt;/li&gt;
  &lt;li&gt;width=1000&amp;amp;height=500 图表大小&lt;/li&gt;
  &lt;li&gt;tz=Asia%2FShanghai 用户时区&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Sample graph link: &lt;a href=&quot;http://127.0.0.1:3000/render/d-solo/ypFZFgvmz/go-processes?orgId=1&amp;amp;from=1562314327587&amp;amp;to=1562317927587&amp;amp;var-job=go-apps&amp;amp;var-interval=1m&amp;amp;var-node=192.168.3.111%3A8000&amp;amp;panelId=1&amp;amp;width=1000&amp;amp;height=500&amp;amp;tz=Asia%2FShanghai&quot; target=&quot;_blank&quot;&gt;link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Monitoring items:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Heap memory
    &lt;ul&gt;
      &lt;li&gt;堆内存用量&lt;/li&gt;
      &lt;li&gt;panelId=1&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Heap memory trends
    &lt;ul&gt;
      &lt;li&gt;堆内存申请和释放情况&lt;/li&gt;
      &lt;li&gt;panelId=4&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Heap objects
    &lt;ul&gt;
      &lt;li&gt;堆内存对象数量&lt;/li&gt;
      &lt;li&gt;panelId=2&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Heap system alloc
    &lt;ul&gt;
      &lt;li&gt;堆内存向系统申请和释放情况&lt;/li&gt;
      &lt;li&gt;panelId=5&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;GC rate
    &lt;ul&gt;
      &lt;li&gt;GC频次&lt;/li&gt;
      &lt;li&gt;panelId=3&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Next gc target
    &lt;ul&gt;
      &lt;li&gt;下次GC触发容量&lt;/li&gt;
      &lt;li&gt;panelId=6&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;GC duration quantiles
    &lt;ul&gt;
      &lt;li&gt;GC耗时情况，分25% 50% 90%三段&lt;/li&gt;
      &lt;li&gt;panelId=8&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Goroutines count
    &lt;ul&gt;
      &lt;li&gt;goroutine数量&lt;/li&gt;
      &lt;li&gt;panelId=7&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Threads count
    &lt;ul&gt;
      &lt;li&gt;线程数量&lt;/li&gt;
      &lt;li&gt;panelId=10&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;EOF&lt;/p&gt;
&lt;/blockquote&gt;
</description>
				<pubDate>Sat, 13 Jul 2019 15:36:22 +0800</pubDate>
				<link>https://xenojoshua.com/2019/07/dist-system-practice/</link>
				<guid isPermaLink="true">https://xenojoshua.com/2019/07/dist-system-practice/</guid>
			</item>
		
			<item>
				<title>Memcached Notes</title>
				<description>&lt;h4&gt;Table of Contents&lt;/h4&gt;
&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#1-前言&quot; id=&quot;markdown-toc-1-前言&quot;&gt;1. 前言&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#2-清单&quot; id=&quot;markdown-toc-2-清单&quot;&gt;2. 清单&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#21-mixi的系列博文&quot; id=&quot;markdown-toc-21-mixi的系列博文&quot;&gt;2.1 Mixi的系列博文&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#22-自撰的系列博文&quot; id=&quot;markdown-toc-22-自撰的系列博文&quot;&gt;2.2 自撰的系列博文&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;1-前言&quot;&gt;1. 前言&lt;/h1&gt;
&lt;p&gt;早年对memcached有过一系列非常深入的研究分析，并形成了大量的文字积累。memcached这个软件在那么多年中也并没有什么很大的变化，毕竟它要服务的功能相对来说还是非常稳定的，就那么一小块，做好就好了。&lt;/p&gt;

&lt;p&gt;因为文章年代都比较久远了，现在要找都需要到tag里去搜，就比较麻烦。因此在这里做一个综合，把所有的内容都罗列进来。&lt;/p&gt;

&lt;h1 id=&quot;2-清单&quot;&gt;2. 清单&lt;/h1&gt;
&lt;h2 id=&quot;21-mixi的系列博文&quot;&gt;2.1 Mixi的系列博文&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;/2011/04/memcached-anatomy-001/&quot; target=&quot;_blank&quot;&gt;memcached完全剖析–1. memcached的基础&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/2011/04/memcached-anatomy-002/&quot; target=&quot;_blank&quot;&gt;memcached全面剖析–2.理解memcached的内存存储&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/2011/04/memcached-anatomy-003/&quot; target=&quot;_blank&quot;&gt;memcached全面剖析–3.memcached的删除机制和发展方向&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/2011/04/memcached-anatomy-004/&quot; target=&quot;_blank&quot;&gt;memcached全面剖析–4. memcached的分布式算法&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/2011/04/memcached-anatomy-005/&quot; target=&quot;_blank&quot;&gt;memcached全面剖析–5. memcached的应用和兼容程序&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;22-自撰的系列博文&quot;&gt;2.2 自撰的系列博文&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;/2011/04/deep-in-memcached-how-it-works/&quot; target=&quot;_blank&quot;&gt;Memcached深入理解 - memcached究竟是如何运作的&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/2011/04/deep-in-memcached-learning-official-protocol-stats/&quot; target=&quot;_blank&quot;&gt;Memcached深入理解 – 理解官方protocol中的统计方法&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/2011/04/deep-in-memcached-how-to-monitor/&quot; target=&quot;_blank&quot;&gt;Memcached深入理解 - memcached的监控&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;EOF&lt;/p&gt;
&lt;/blockquote&gt;
</description>
				<pubDate>Sat, 11 May 2019 10:01:22 +0800</pubDate>
				<link>https://xenojoshua.com/2019/05/memcached-note/</link>
				<guid isPermaLink="true">https://xenojoshua.com/2019/05/memcached-note/</guid>
			</item>
		
			<item>
				<title>Golang Pipeline</title>
				<description>&lt;h4&gt;Table of Contents&lt;/h4&gt;
&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#1-前言&quot; id=&quot;markdown-toc-1-前言&quot;&gt;1. 前言&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#2-channel实验范例&quot; id=&quot;markdown-toc-2-channel实验范例&quot;&gt;2. Channel实验范例&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#3-go-concurrency-patterns-pipelines-and-cancellation&quot; id=&quot;markdown-toc-3-go-concurrency-patterns-pipelines-and-cancellation&quot;&gt;3. Go Concurrency Patterns: Pipelines and cancellation&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#31-什么是pipeline&quot; id=&quot;markdown-toc-31-什么是pipeline&quot;&gt;3.1 什么是Pipeline&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#32-cancel-channel-done&quot; id=&quot;markdown-toc-32-cancel-channel-done&quot;&gt;3.2 Cancel: Channel Done&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#33-cancel-context&quot; id=&quot;markdown-toc-33-cancel-context&quot;&gt;3.3 Cancel: Context&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#资料&quot; id=&quot;markdown-toc-资料&quot;&gt;资料&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#链接&quot; id=&quot;markdown-toc-链接&quot;&gt;链接&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;1-前言&quot;&gt;1. 前言&lt;/h1&gt;
&lt;p&gt;学习一门新语言最简单的就是那些顺序执行的语言，会了PHP，换JAVA、Python、Ruby，无非就是语法更换下，上stackoverflow查下：”python字符串拼接”之类的，看下怎么写就完事了。难的是那些有特殊编程思维的语言，比如说JavaScript，异步原生，写代码要非常小心注意异步的返回如何处理，否则就会明明看着是先A后B，执行的时候却成了先B再A。就这方面来说，Go语言也属于后者，属于那种&lt;code&gt;语法看会简单，实际学精很难&lt;/code&gt;的语言，而Golang难就难在goroutine以及channel带来的功能上。&lt;/p&gt;

&lt;p&gt;之前在查看Go语言的gRPC第三方库的时候，其代码对channel的运用非常灵活：&lt;a href=&quot;https://github.com/processout/grpc-go-pool/blob/master/pool.go&quot; target=&quot;_blank&quot;&gt;grpc-go-pool/pool.go&lt;/a&gt;。深感需要加深这块的理解。&lt;/p&gt;

&lt;p&gt;在学习的时候，找到了一篇官方之前的博客，时间比较早了（2014年），但还算有用：&lt;a href=&quot;https://blog.golang.org/pipelines&quot; target=&quot;_blank&quot;&gt;Go Concurrency Patterns: Pipelines and cancellation&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;不过语言还是一直在发展的，目前在进行批量的routine控制以及退出触发的方面，最佳的解决方案是&lt;code&gt;context&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;接下来，一点点开始。&lt;/p&gt;

&lt;h1 id=&quot;2-channel实验范例&quot;&gt;2. Channel实验范例&lt;/h1&gt;
&lt;p&gt;在阅读官方博文之前，先自己着手做一些范例代码，加深对于&lt;a href=&quot;/2019/03/golang-basic/#ID_CHANNEL&quot;&gt;Golang Basic &amp;gt; 2.4 通道 / 信道 channel&lt;/a&gt;的理解。&lt;/p&gt;

&lt;p&gt;我做了点简单的演示范例：&lt;a href=&quot;https://github.com/agreatfool/dist-system-practice/tree/master/golang/src/experiment/channel&quot; target=&quot;_blank&quot;&gt;dist-system-practice/golang/src/experiment/channel/&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;只需要结果的话，可以直接读README：&lt;a href=&quot;https://github.com/agreatfool/dist-system-practice/blob/master/golang/src/experiment/channel/README.md&quot; target=&quot;_blank&quot;&gt;dist-system-practice/golang/src/experiment/channel/README.md&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;当中有几点比较有意思：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;slice值进出channel之后，&lt;code&gt;地址&lt;/code&gt;并&lt;code&gt;没有改变&lt;/code&gt;，和pointer是一样的结果&lt;/li&gt;
  &lt;li&gt;channel在无buffer的情况下，很容易就会阻塞，导致routine睡眠，必须小心处理&lt;/li&gt;
  &lt;li&gt;带buffer的channel，在buffer耗尽之后也是同样的结果，实际上来说也必须小心阻塞&lt;/li&gt;
  &lt;li&gt;虽然向关闭的通道写数据会引起panic，但向关闭的通道&lt;code&gt;读数据&lt;/code&gt;却&lt;code&gt;不会&lt;/code&gt;，只会获得通道类型的&lt;code&gt;默认值&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;有一张图，很好地将一系列状态以及操作结果整理了出来，可以参考：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/resources/2019/05/golang-pipeline/close_chan.png&quot; alt=&quot;&quot; target=&quot;_blank&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;3-go-concurrency-patterns-pipelines-and-cancellation&quot;&gt;3. Go Concurrency Patterns: Pipelines and cancellation&lt;/h1&gt;
&lt;p&gt;这里并不会通篇翻译：&lt;a href=&quot;https://blog.golang.org/pipelines&quot; target=&quot;_blank&quot;&gt;Go Concurrency Patterns: Pipelines and cancellation&lt;/a&gt;，有需要的可以看&lt;a href=&quot;https://imdiot.github.io/2016/01/01/Go%20Concurrency%20Patterns-Pipelines%20and%20cancellation.html&quot; target=&quot;_blank&quot;&gt;这篇&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;此外，本章后半也会涉及到&lt;code&gt;context&lt;/code&gt;，毕竟这家伙才是现在的准标准。&lt;/p&gt;

&lt;h2 id=&quot;31-什么是pipeline&quot;&gt;3.1 什么是Pipeline&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;通过输入channel从&lt;code&gt;上游&lt;/code&gt;接收值&lt;/li&gt;
  &lt;li&gt;对这些数据执行某些函数，通常是生成一些新的值&lt;/li&gt;
  &lt;li&gt;通过输出channel发送值到&lt;code&gt;下游&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;而在这一系列的交棒过程中，&lt;code&gt;错误&lt;/code&gt;的发生和事务的&lt;code&gt;取消&lt;/code&gt;是正常的情况，必须要进行&lt;code&gt;处理&lt;/code&gt;，否则的话作为下游的routine可能会一直等待已经错误退出或取消事务的上游routine，导致&lt;code&gt;资源泄露&lt;/code&gt;。使用的难点就在这里。&lt;/p&gt;

&lt;h2 id=&quot;32-cancel-channel-done&quot;&gt;3.2 Cancel: Channel Done&lt;/h2&gt;
&lt;p&gt;官方博文中的代码范例写的非常散，因为有多处重复修改，这里提供一份完整拼接的版本：&lt;a href=&quot;https://github.com/agreatfool/dist-system-practice/blob/master/golang/src/experiment/pipeline/pipeline.go&quot; target=&quot;_blank&quot;&gt;experiment/pipeline/pipeline.go&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;官方博文通篇都阅读了的话，撇开行文中的Dummy业务逻辑不谈，可以了解到该文主要还是谈了如何对出问题的routine进行退出通知。官方的博文中使用的方法是申明一个类型为&lt;code&gt;struct{}&lt;/code&gt;的Dummy通道，关闭该通道来进行退出消息的传送。&lt;/p&gt;

&lt;p&gt;通过：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-go&quot; data-lang=&quot;go&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;go&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;defer&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// HL&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;range&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;nums&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;out&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;done&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
			&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// HL&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;以这样的方式，监听&lt;code&gt;done&lt;/code&gt;通道的关闭，退出routine函数，并设置defer函数，在routine函数退出的时候，清理对应的资源并关闭通道。这种编码解决方法确实能解决问题，但非常难看，也没有层级退出的概念。&lt;/p&gt;

&lt;h2 id=&quot;33-cancel-context&quot;&gt;3.3 Cancel: Context&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;done通道&lt;/code&gt;确实能在功能上达到要求，但尚欠缺了一些要素，因此后续就有&lt;code&gt;context&lt;/code&gt;这个包的出现。相关的学习可以阅读：&lt;a href=&quot;https://deepzz.com/post/golang-context-package-notes.html&quot; target=&quot;_blank&quot;&gt;快速掌握 Golang context 包，简单示例&lt;/a&gt;。此外，还有官方博客：&lt;a href=&quot;https://blog.golang.org/context&quot; target=&quot;_blank&quot;&gt;Go Concurrency Patterns: Context&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;一些概念和规范这里做下引用：&lt;/p&gt;

&lt;p&gt;Context 的调用应该是链式的，通过&lt;code&gt;WithCancel&lt;/code&gt;，&lt;code&gt;WithDeadline&lt;/code&gt;，&lt;code&gt;WithTimeout&lt;/code&gt;或&lt;code&gt;WithValue&lt;/code&gt;派生出新的 Context。当父 Context 被取消时，其派生的所有 Context 都将取消。&lt;/p&gt;

&lt;p&gt;通过&lt;code&gt;context.WithXXX&lt;/code&gt;都将返回新的 Context 和 CancelFunc。调用 CancelFunc 将取消子代，移除父代对子代的引用，并且停止所有定时器。未能调用 CancelFunc 将泄漏子代，直到父代被取消或定时器触发。&lt;code&gt;go vet&lt;/code&gt;工具检查所有流程控制路径上使用 CancelFuncs。&lt;/p&gt;

&lt;p&gt;遵循以下规则，以保持包之间的接口一致，并启用静态分析工具以检查上下文传播。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;不要将 Contexts 放入结构体，相反&lt;code&gt;context&lt;/code&gt;应该作为第一个参数传入，命名为ctx。&lt;code&gt;func DoSomething（ctx context.Context，arg Arg）error { // ... use ctx ... }&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;即使函数允许，也不要传入&lt;code&gt;nil&lt;/code&gt;的 Context。如果不知道用哪种 Context，可以使用&lt;code&gt;context.TODO()&lt;/code&gt;。&lt;/li&gt;
  &lt;li&gt;使用context的Value相关方法只应该用于在程序和接口中传递的和请求相关的元数据，不要用它来传递一些可选的参数&lt;/li&gt;
  &lt;li&gt;相同的 Context 可以传递给在不同的&lt;code&gt;goroutine&lt;/code&gt;；Context 是并发安全的。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;用法：&lt;/p&gt;

&lt;p&gt;Done函数会返回一个channel，用来进行close通知（本质上还是之前的那一套）：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-go&quot; data-lang=&quot;go&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;gen&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;chan&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;go&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Done&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
			&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// returning not to leak the goroutine&lt;/span&gt;
		&lt;span class=&quot;c1&quot;&gt;//...&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//...&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//...&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cancel&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;WithCancel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Background&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;defer&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cancel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// cancel when we are finished consuming integers&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;此外，还有一篇老王的：&lt;a href=&quot;https://blog.huoding.com/2019/04/15/730&quot; target=&quot;_blank&quot;&gt;Golang之Context的迷思&lt;/a&gt;，可以好好读下。&lt;/p&gt;

&lt;h1 id=&quot;资料&quot;&gt;资料&lt;/h1&gt;
&lt;h2 id=&quot;链接&quot;&gt;链接&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/processout/grpc-go-pool/blob/master/pool.go&quot; target=&quot;_blank&quot;&gt;grpc-go-pool/pool.go&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://blog.golang.org/pipelines&quot; target=&quot;_blank&quot;&gt;Go Concurrency Patterns: Pipelines and cancellation&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://imdiot.github.io/2016/01/01/Go%20Concurrency%20Patterns-Pipelines%20and%20cancellation.html&quot; target=&quot;_blank&quot;&gt;『译』Go Concurrency Patterns: Pipelines and cancellation&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://deepzz.com/post/golang-context-package-notes.html&quot; target=&quot;_blank&quot;&gt;快速掌握 Golang context 包，简单示例&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://blog.huoding.com/2019/04/15/730&quot; target=&quot;_blank&quot;&gt;Golang之Context的迷思&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;EOF&lt;/p&gt;
&lt;/blockquote&gt;
</description>
				<pubDate>Fri, 10 May 2019 10:01:22 +0800</pubDate>
				<link>https://xenojoshua.com/2019/05/golang-pipeline/</link>
				<guid isPermaLink="true">https://xenojoshua.com/2019/05/golang-pipeline/</guid>
			</item>
		
	</channel>
</rss>
