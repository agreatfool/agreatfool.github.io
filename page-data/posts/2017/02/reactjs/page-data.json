{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/2017/02/reactjs","result":{"data":{"markdownRemark":{"id":"f4e5e3ec-a065-58db-b692-ad4267fc5d0f","html":"<h2 id=\"0-思路整理\" style=\"position:relative;\"><a href=\"#0-%E6%80%9D%E8%B7%AF%E6%95%B4%E7%90%86\" aria-label=\"0 思路整理 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>0. 思路整理</h2>\n<p>React值不值得学习好用不好用基本上就不需要多说了。这篇文章基本上就把我这边的学习心得进行整理，记录。React的学习的难点在于整体的生态系统太过庞大，而React本身提供的功能是相当有限的，就导致了使用者必须整合各种工具和第三方的组件，拔升了学习的曲线。这篇学习笔记的重点就在于将生态系统和各组件之间的关系解释清楚。</p>\n<h2 id=\"1-react\" style=\"position:relative;\"><a href=\"#1-react\" aria-label=\"1 react permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. React</h2>\n<p><a href=\"https://facebook.github.io/react/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">React</a>就只是一个<code class=\"language-text\">View</code>。提供了JSX语法，用HTML语言或Native的组件来进行展示上的工作。最关键的是一个Component概念，所有的React对象都是一个Component，只要知道这点就可以了。</p>\n<p>需要了解的使用语法：</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>Component<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">App</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Component</span><span class=\"token operator\">&lt;</span>any<span class=\"token punctuation\">,</span> any<span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n            <span class=\"token operator\">&lt;</span>View style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>\\<span class=\"token punctuation\">{</span>marginTop<span class=\"token operator\">:</span> <span class=\"token number\">100</span>\\<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n                <span class=\"token operator\">&lt;</span>Text<span class=\"token operator\">></span>Sample Text<span class=\"token punctuation\">.</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Text<span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>View<span class=\"token operator\">></span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"2-redux\" style=\"position:relative;\"><a href=\"#2-redux\" aria-label=\"2 redux permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. Redux</h2>\n<p><a href=\"https://github.com/reactjs/redux\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Redux</a>是<a href=\"https://facebook.github.io/flux/docs/overview.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Flux</a>架构的一种实现，用来进行数据流的处理和控制。简单来说就是类似于MVC中的<code class=\"language-text\">Controller</code>还有<code class=\"language-text\">Model</code>两部分的组合。这里我们需要厘清Redux中的几个核心概念 / 组件。</p>\n<p>这里也附带提供<a href=\"http://cn.redux.js.org/index.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">中文手册</a>的访问地址。</p>\n<h3 id=\"21-概念梳理及数据流转\" style=\"position:relative;\"><a href=\"#21-%E6%A6%82%E5%BF%B5%E6%A2%B3%E7%90%86%E5%8F%8A%E6%95%B0%E6%8D%AE%E6%B5%81%E8%BD%AC\" aria-label=\"21 概念梳理及数据流转 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2.1 概念梳理及数据流转</h3>\n<p>Redux中的核心概念：</p>\n<ul>\n<li>Store：一个应用程序只有一个的数据中心，其实就只是一个JS对象；所有的数据都存储在这个地方</li>\n<li>Action：用户发起的一个行为，其实就只是一个JS对象；必须要有一个字符串属性<code class=\"language-text\">type</code>，用来标识该行为的类型；一般<code class=\"language-text\">type</code>是一个常量字符串</li>\n<li>ActionCreator：创造<code class=\"language-text\">Action</code>的函数，每次该函数的调用都会返回同样的结果；设计上的概念，使用上没有实际意义</li>\n<li>Reducer：接受一个<code class=\"language-text\">Action</code>，并依此修改Store中数据的函数；同<code class=\"language-text\">ActionCreator</code>，每次调用结果必须一致</li>\n<li>dispatch：<code class=\"language-text\">store.dispatch(Action)</code>，激发<code class=\"language-text\">Action</code>的触发器；Action本身只是一个对象，并不会自行流转到Reducer，需要Store进行dispatch，才会启动数据流转</li>\n</ul>\n<p>流转：\nStore => store.dispatch => Action created from <code class=\"language-text\">ActionCreator()</code> => Reducer => Store changed</p>\n<h3 id=\"22-reducer\" style=\"position:relative;\"><a href=\"#22-reducer\" aria-label=\"22 reducer permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2.2 Reducer</h3>\n<p>重申一下，Reducer是一个函数。签名如下：</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">export</span> type Reducer<span class=\"token operator\">&lt;</span><span class=\"token constant\">S</span><span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token operator\">&lt;</span><span class=\"token constant\">A</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Action</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token parameter\">state<span class=\"token operator\">:</span> <span class=\"token constant\">S</span><span class=\"token punctuation\">,</span> action<span class=\"token operator\">:</span> <span class=\"token constant\">A</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token constant\">S</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>使用上也很简单，其实就只是一个接受两个参数的函数：</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> <span class=\"token function-variable function\">reducer</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">state<span class=\"token punctuation\">,</span> action</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> cloned <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">assign</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> state<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 永远记得需要clone state后修改，而不是直接修改state</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>action<span class=\"token punctuation\">.</span>type <span class=\"token operator\">===</span> <span class=\"token string\">\"ACT_UPDATE_TEXT\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// 判断类型Action类型是不是当前reducer应该处理的，如果是，则根据业务修改state里的数据</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> cloned<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>上面的例子只是一个很简单的<code class=\"language-text\">单Action</code>Reducer，后续我们会介绍如何将大量的Reducer组织起来，让React应用进行统一使用。</p>\n<h3 id=\"23-action\" style=\"position:relative;\"><a href=\"#23-action\" aria-label=\"23 action permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2.3 Action</h3>\n<p>重申一下，Action就只是一个对象。签名如下：</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">Action</span> <span class=\"token punctuation\">{</span>\n  type<span class=\"token operator\">:</span> any<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>对应的需要有一个创建Action的ActionCreator。签名如下：</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">ActionCreator</span><span class=\"token operator\">&lt;</span><span class=\"token constant\">A</span><span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token punctuation\">(</span><span class=\"token operator\">...</span>args<span class=\"token operator\">:</span> any<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token constant\">A</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>使用上也很简单：</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>ActionCreator<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"redux\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token constant\">ACT_UPDATE_TEXT</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"ACT_UPDATE_TEXT\"</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 类型常量</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">ActionUpdateText</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">// Action结构</span>\n    type<span class=\"token operator\">:</span> string<span class=\"token punctuation\">;</span>\n    text<span class=\"token operator\">:</span> string<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">let</span> ACTUpdateText<span class=\"token operator\">:</span> ActionCreator<span class=\"token operator\">&lt;</span>ActionUpdateText<span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">text<span class=\"token operator\">:</span> string</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n        type<span class=\"token operator\">:</span> <span class=\"token constant\">ACT_UPDATE_TEXT</span><span class=\"token punctuation\">,</span>\n        text<span class=\"token operator\">:</span> text\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"24-store\" style=\"position:relative;\"><a href=\"#24-store\" aria-label=\"24 store permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2.4 Store</h3>\n<p>重申，只是一个对象。使用者应该在该对象根目录下面创建组件 / 页面对应的namespace，以便进行数据管理：</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"ComponentTextInput\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">\"text\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"current user input text.\"</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"ComponentA\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token operator\">...</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"ComponentB\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token operator\">...</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token operator\">...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>创建Store实例：</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>createStore<span class=\"token punctuation\">,</span> applyMiddleware<span class=\"token punctuation\">,</span> combineReducers<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"redux\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> store <span class=\"token operator\">=</span> <span class=\"token function\">createStore</span><span class=\"token punctuation\">(</span>\n    <span class=\"token function\">combineReducers</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        <span class=\"token string\">\"NamespaceOfTheComponent\"</span><span class=\"token operator\">:</span> reducer <span class=\"token comment\">// 表示Store中，NamespaceOfTheComponent下的所有数据会交由reducer这个函数处理</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>dispatch是Store实例的一个函数，只有这个函数可以进行<code class=\"language-text\">Action</code>事件的触发。</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">store<span class=\"token punctuation\">.</span><span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token function\">ACTUpdateText</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"New Text to be updated into store.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"3-问题与思考\" style=\"position:relative;\"><a href=\"#3-%E9%97%AE%E9%A2%98%E4%B8%8E%E6%80%9D%E8%80%83\" aria-label=\"3 问题与思考 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 问题与思考</h2>\n<p>介绍到这里我们先暂停下。React负责View的展示，Redux则负责数据的处理和消息流转。看上去这两者结合的很好，非常匹配，但实际使用中我们会发现，其实还有很多问题等待解决。这两者都在自己的领域上发挥了很好的作用，但是要让他们合起来一起好好工作，还有很多细节需要调整。</p>\n<h3 id=\"31-store的全局性\" style=\"position:relative;\"><a href=\"#31-store%E7%9A%84%E5%85%A8%E5%B1%80%E6%80%A7\" aria-label=\"31 store的全局性 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3.1 Store的全局性</h3>\n<p>在上面我们说到Store的时候，可以看到，Store是需要创建出实例的，并且有且唯一只有一个实例。而且，所有的事件触发都需要从<code class=\"language-text\">store.dispatch</code>开始。那么问题就来了，在进行组件封装的时候，组件、甚至是子组件，如何能够或得到store实例以进行事件和数据处理？为了解决这个问题，React官方提供了一个组件<a href=\"https://github.com/reactjs/react-redux\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><code class=\"language-text\">react-redux</code></a>。这个组件使用依赖注入的方式，将React和Redux进行了很好的绑定，将Redux的Store和自定义的Action输送到了React的Component内部，方便使用。</p>\n<h3 id=\"32-异步调用\" style=\"position:relative;\"><a href=\"#32-%E5%BC%82%E6%AD%A5%E8%B0%83%E7%94%A8\" aria-label=\"32 异步调用 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3.2 异步调用</h3>\n<p>在上面说到Action和Reducer的时候，我们说过，这两者都是很纯粹的JS对象和函数，ActionCreator也是很纯粹的函数。但实际在进行应用程序制作的时候，我们不可避免的需要使用到异步函数，来进行外部IO、API调用等等。那么，应对这种需求，我们如何进行处理呢。这里就不得不提到一个第三方的组件：<a href=\"https://github.com/gaearon/redux-thunk\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><code class=\"language-text\">redux-thunk</code></a>。具体的概念可以看官方文档，在本文中我们不会具体涉及到该组件的使用，它是一个进阶的技巧，本文主旨在于梳理React整体的生态和组件整合。</p>\n<h3 id=\"33-组件整合\" style=\"position:relative;\"><a href=\"#33-%E7%BB%84%E4%BB%B6%E6%95%B4%E5%90%88\" aria-label=\"33 组件整合 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3.3 组件整合</h3>\n<p>编写React我们必然会编写大量的组件，为了代码复用，也为了代码管理。那么我们创建出来的大量Action及Reducer都需要管理。Action会映射到本组件内，所以管理上问题还不大。而Reducer则是需要统一绑定到Store上，这部分就需要小心处理了。后续我们会讲解这部分工作如何处理。</p>\n<h2 id=\"4-react-redux\" style=\"position:relative;\"><a href=\"#4-react-redux\" aria-label=\"4 react redux permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. react-redux</h2>\n<p>这个组件一共提供了两个部分，都非常简洁，但很重要。</p>\n<h3 id=\"41-jsx组件provider\" style=\"position:relative;\"><a href=\"#41-jsx%E7%BB%84%E4%BB%B6provider\" aria-label=\"41 jsx组件provider permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4.1 JSX组件Provider</h3>\n<p>这个JSX组件我们需要应用在根节点的组件上，将根节点组件的所有JSX都包裹在其中即可：</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>Component<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>View<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react-native\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>createStore<span class=\"token punctuation\">,</span> applyMiddleware<span class=\"token punctuation\">,</span> combineReducers<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"redux\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>Provider<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react-redux\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> store <span class=\"token operator\">=</span> <span class=\"token function\">createStore</span><span class=\"token punctuation\">(</span>\n    <span class=\"token function\">combineReducers</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        <span class=\"token string\">\"NamespaceOfTheComponent\"</span><span class=\"token operator\">:</span> reducer <span class=\"token comment\">// 表示Store中，NameSpaceOfTheComponent下的所有数据会交由reducer这个函数处理</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">App</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Component</span><span class=\"token operator\">&lt;</span>any<span class=\"token punctuation\">,</span> any<span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n            <span class=\"token operator\">&lt;</span>Provider store<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>store<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n                <span class=\"token operator\">&lt;</span>Router<span class=\"token operator\">></span>\n                    <span class=\"token operator\">&lt;</span>View<span class=\"token operator\">></span> <span class=\"token operator\">...</span> <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>View<span class=\"token operator\">></span>\n                <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Router<span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Provider<span class=\"token operator\">></span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"42-connect函数\" style=\"position:relative;\"><a href=\"#42-connect%E5%87%BD%E6%95%B0\" aria-label=\"42 connect函数 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4.2 connect函数</h3>\n<p>该函数是用来将Action和State注入到组件内所用的一个函数。</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>Component<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>bindActionCreators<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"redux\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>connect<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react-redux\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">App</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Component</span><span class=\"token operator\">&lt;</span>any<span class=\"token punctuation\">,</span> any<span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token operator\">...</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token function\">connect</span><span class=\"token punctuation\">(</span>\n    <span class=\"token comment\">// bind state</span>\n    <span class=\"token punctuation\">(</span><span class=\"token parameter\">state</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// Store[\"NamespaceOfTheComponent\"] 会被注入到 App 的 this.props 里面</span>\n        <span class=\"token comment\">// 可以通过 this.props[\"NamespaceOfTheComponent\"] 进行访问，并且会侦听Reducer对这部分数据的修改</span>\n        <span class=\"token string\">\"NamespaceOfTheComponent\"</span><span class=\"token operator\">:</span> state<span class=\"token punctuation\">[</span><span class=\"token string\">\"NamespaceOfTheComponent\"</span><span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">// bind dispatch action</span>\n    <span class=\"token punctuation\">(</span><span class=\"token parameter\">dispatch</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        actions<span class=\"token operator\">:</span> <span class=\"token function\">bindActionCreators</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n            <span class=\"token comment\">// 这两个 ActionCreator 会被注入到 App 的 this.props.actions 里面</span>\n            <span class=\"token comment\">// 可以通过 this.props.actions.ACTUpdateText(\"Updated\") 进行使用</span>\n            <span class=\"token comment\">// 注意看，被注入进去的 ActionCreator 是不需要主动dispatch的，在进行调用的同时就自动dispatch出去了</span>\n            ACTUpdateText<span class=\"token punctuation\">,</span> \n            ACTClearText\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> dispatch<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token comment\">// 最后加的这个dispatch，表示dispatch函数会被注入到 App 的 this.props 里面</span>\n        <span class=\"token comment\">// 可以通过 this.props.dispatch(ActionCreator) 进行使用</span>\n        dispatch\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>App<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"5-组件整合\" style=\"position:relative;\"><a href=\"#5-%E7%BB%84%E4%BB%B6%E6%95%B4%E5%90%88\" aria-label=\"5 组件整合 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5. 组件整合</h2>\n<p>现在整理下思路：</p>\n<ul>\n<li>React负责展示</li>\n<li>Redux负责数据处理和事件处理</li>\n<li>react-redux负责将数据和事件注入到组件或子组件内，便于在组件内进行使用，且能够侦听到外部Reducer对数据的修改</li>\n</ul>\n<p>到这步为止，一个组件的独立运行已经是没有任何问题了。那么接下来我们需要看下如何从应用层面，将整个系统整合起来。这里有两个地方需要梳理：</p>\n<ol>\n<li>组件的Action</li>\n<li>组件的Reducer</li>\n</ol>\n<h3 id=\"51-action\" style=\"position:relative;\"><a href=\"#51-action\" aria-label=\"51 action permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5.1 Action</h3>\n<p>在之前的connect函数教程中，我们提到了，组件内使用到的ActionCreator都需要使用connect再注入到组件内，转完成一个能直接使用的类dispatch的函数。因此在每个组件对外暴露的地方，我们简单将所有的Action归并到一个对象内即可：</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>Component<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>bindActionCreators<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"redux\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>connect<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react-redux\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">App</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Component</span><span class=\"token operator\">&lt;</span>any<span class=\"token punctuation\">,</span> any<span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token operator\">...</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">let</span> ACTUpdateText <span class=\"token operator\">=</span> <span class=\"token operator\">...</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> ACTClearText <span class=\"token operator\">=</span> <span class=\"token operator\">...</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token function\">connect</span><span class=\"token punctuation\">(</span>\n    <span class=\"token comment\">// bind state</span>\n    <span class=\"token punctuation\">(</span><span class=\"token parameter\">state</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        <span class=\"token string\">\"NamespaceOfTheComponent\"</span><span class=\"token operator\">:</span> state<span class=\"token punctuation\">[</span><span class=\"token string\">\"NamespaceOfTheComponent\"</span><span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">// bind dispatch action</span>\n    <span class=\"token punctuation\">(</span><span class=\"token parameter\">dispatch</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        actions<span class=\"token operator\">:</span> <span class=\"token function\">bindActionCreators</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n            ACTUpdateText<span class=\"token punctuation\">,</span> \n            ACTClearText\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> dispatch<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        dispatch\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>App<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"52-reducer\" style=\"position:relative;\"><a href=\"#52-reducer\" aria-label=\"52 reducer permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5.2 Reducer</h3>\n<p>Reducer的整合更麻烦点，因为Reducer最终是要整合到唯一的Store上的，在代码上反应在<code class=\"language-text\">createStore</code>函数的使用上。因此所有的Reducer我们需要手动整理到一个单独的文件内进行暴露。</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// file Reducers.ts</span>\n<span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> TextInputReducer <span class=\"token keyword\">from</span> <span class=\"token string\">\"../component/text_input/Reducer\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">...</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">[</span>TextInputReducer<span class=\"token punctuation\">.</span>StateName<span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> TextInputReducer<span class=\"token punctuation\">.</span>Reducers<span class=\"token punctuation\">,</span>\n    <span class=\"token operator\">...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// file App.ts 根节点组件</span>\n<span class=\"token keyword\">import</span> Reducers <span class=\"token keyword\">from</span> <span class=\"token string\">\"../app/Reducers\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> store <span class=\"token operator\">=</span> <span class=\"token function\">createStore</span><span class=\"token punctuation\">(</span>\n    <span class=\"token function\">combineReducers</span><span class=\"token punctuation\">(</span>Reducers<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"6-最终代码范例\" style=\"position:relative;\"><a href=\"#6-%E6%9C%80%E7%BB%88%E4%BB%A3%E7%A0%81%E8%8C%83%E4%BE%8B\" aria-label=\"6 最终代码范例 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>6. 最终代码范例</h2>\n<p>文件结构：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">src / \n    | App.tsx #根节点组件，应用的入口\n    | app / Reducers.ts\n    | component /\n                | text_input /\n                             | Action.ts\n                             | App.tsx\n                             | Reducer.ts\n                             | State.ts</code></pre></div>\n<p>File <code class=\"language-text\">App.tsx</code></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>Component<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>View<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react-native\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>createStore<span class=\"token punctuation\">,</span> combineReducers<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"redux\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>Provider<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react-redux\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> Reducers <span class=\"token keyword\">from</span> <span class=\"token string\">\"./app/Reducers\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> store <span class=\"token operator\">=</span> <span class=\"token function\">createStore</span><span class=\"token punctuation\">(</span>\n    <span class=\"token function\">combineReducers</span><span class=\"token punctuation\">(</span>Reducers<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">App</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Component</span><span class=\"token operator\">&lt;</span>any<span class=\"token punctuation\">,</span> any<span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n            <span class=\"token operator\">&lt;</span>Provider store<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>store<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n                <span class=\"token operator\">&lt;</span>View<span class=\"token operator\">></span>\n                    <span class=\"token operator\">&lt;</span>TextInputApp <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n                <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>View<span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Provider<span class=\"token operator\">></span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>File <code class=\"language-text\">app / Reducers.ts</code></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> TextInputReducer <span class=\"token keyword\">from</span> <span class=\"token string\">\"../component/text_input/Reducer\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">[</span>TextInputReducer<span class=\"token punctuation\">.</span>StateName<span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> TextInputReducer<span class=\"token punctuation\">.</span>Reducers\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>File <code class=\"language-text\">component / text_input / Action.ts</code></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>ActionCreator<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"redux\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token constant\">ACT_UPDATE_TEXT</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"ACT_UPDATE_TEXT\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token constant\">ACT_CLEAR_TEXT</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"ACT_CLEAR_TEXT\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">ActionUpdateText</span> <span class=\"token punctuation\">{</span>\n    type<span class=\"token operator\">:</span> string<span class=\"token punctuation\">;</span>\n    text<span class=\"token operator\">:</span> string<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">ActionClearText</span> <span class=\"token punctuation\">{</span>\n    type<span class=\"token operator\">:</span> string<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">let</span> ACTUpdateText<span class=\"token operator\">:</span> ActionCreator<span class=\"token operator\">&lt;</span>ActionUpdateText<span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">text<span class=\"token operator\">:</span> string</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n        type<span class=\"token operator\">:</span> <span class=\"token constant\">ACT_UPDATE_TEXT</span><span class=\"token punctuation\">,</span>\n        text<span class=\"token operator\">:</span> text\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">let</span> ACTClearText<span class=\"token operator\">:</span> ActionCreator<span class=\"token operator\">&lt;</span>ActionClearText<span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n        type<span class=\"token operator\">:</span> <span class=\"token constant\">ACT_CLEAR_TEXT</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">let</span> Actions <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    ACTUpdateText<span class=\"token punctuation\">,</span>\n    ACTClearText\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>File <code class=\"language-text\">component / text_input / App.tsx</code></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>Component<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>View<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react-native\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>Actions<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"./Action\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>StateName<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"./State\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Application</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Component</span><span class=\"token operator\">&lt;</span>any<span class=\"token punctuation\">,</span> any<span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n            <span class=\"token operator\">&lt;</span>View style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>marginTop<span class=\"token operator\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n                <span class=\"token operator\">...</span>\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>View<span class=\"token operator\">></span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> App <span class=\"token operator\">=</span> <span class=\"token function\">connect</span><span class=\"token punctuation\">(</span>\n   <span class=\"token comment\">// bind state</span>\n   <span class=\"token punctuation\">(</span><span class=\"token parameter\">state</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n       StateName<span class=\"token operator\">:</span> state<span class=\"token punctuation\">[</span>StateName<span class=\"token punctuation\">]</span>\n   <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n   <span class=\"token comment\">// bind dispatch action</span>\n   <span class=\"token punctuation\">(</span><span class=\"token parameter\">dispatch</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n       actions<span class=\"token operator\">:</span> <span class=\"token function\">bindActionCreators</span><span class=\"token punctuation\">(</span>Actions<span class=\"token punctuation\">,</span> dispatch<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n       dispatch\n   <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>Application<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>File <code class=\"language-text\">component / text_input / Reducer.ts</code></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>State<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"./State\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token constant\">ACT_UPDATE_TEXT</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">ACT_CLEAR_TEXT</span><span class=\"token punctuation\">,</span>\n    ActionUpdateText<span class=\"token punctuation\">,</span> ActionClearText\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"./Action\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token punctuation\">{</span>StateName<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"./State\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">ReducerInterface</span><span class=\"token operator\">&lt;</span><span class=\"token constant\">S</span><span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n    action<span class=\"token operator\">:</span> string<span class=\"token punctuation\">;</span>\n    reducer<span class=\"token operator\">:</span> Reducer<span class=\"token operator\">&lt;</span><span class=\"token constant\">S</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">let</span> RDCUpdateText <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    action<span class=\"token operator\">:</span> <span class=\"token constant\">ACT_UPDATE_TEXT</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">reducer</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">state<span class=\"token operator\">:</span> State<span class=\"token punctuation\">,</span> action<span class=\"token operator\">:</span> ActionUpdateText</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        state<span class=\"token punctuation\">.</span>text <span class=\"token operator\">=</span> action<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> state<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">as</span> ReducerInterface<span class=\"token operator\">&lt;</span>State<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">let</span> RDCClearText <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    action<span class=\"token operator\">:</span> <span class=\"token constant\">ACT_CLEAR_TEXT</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">reducer</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">state<span class=\"token operator\">:</span> State<span class=\"token punctuation\">,</span> action<span class=\"token operator\">:</span> ActionClearText</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        state<span class=\"token punctuation\">.</span>text <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> state<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">as</span> ReducerInterface<span class=\"token operator\">&lt;</span>State<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">let</span> <span class=\"token function-variable function\">Reducers</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">state<span class=\"token punctuation\">,</span> action</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> cloned <span class=\"token operator\">=</span> <span class=\"token keyword\">typeof</span> state <span class=\"token operator\">===</span> <span class=\"token string\">'undefined'</span> <span class=\"token operator\">?</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span> <span class=\"token operator\">:</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">assign</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> state<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">let</span> reducers <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n        RDCUpdateText<span class=\"token punctuation\">,</span>\n        RDCClearText\n    <span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> reducerInterface <span class=\"token keyword\">of</span> reducers<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>action<span class=\"token punctuation\">.</span>type <span class=\"token operator\">==</span> reducerInterface<span class=\"token punctuation\">.</span>action<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            cloned <span class=\"token operator\">=</span> reducerInterface<span class=\"token punctuation\">.</span><span class=\"token function\">reducer</span><span class=\"token punctuation\">(</span>cloned<span class=\"token punctuation\">,</span> action<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">return</span> cloned<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>File <code class=\"language-text\">component / text_input / State.ts</code></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">State</span> <span class=\"token punctuation\">{</span>\n    text<span class=\"token operator\">:</span> string<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">let</span> StateName <span class=\"token operator\">=</span> <span class=\"token string\">\"ComponentTextInput\"</span><span class=\"token punctuation\">;</span></code></pre></div>\n<blockquote>\n<p>EOF</p>\n</blockquote>","fields":{"slug":"/posts/2017/02/reactjs","tagSlugs":["/tag/java-script/","/tag/react-js/","/tag/react-native/"]},"frontmatter":{"date":"2017-02-14T02:33:22.000Z","description":"","tags":["JavaScript","ReactJs","ReactNative"],"title":"ReactJs学习笔记","socialImage":{"publicURL":"/static/7e722e026a41a08a8f9a1cc76782dd27/default-social-image.jpg"}}}},"pageContext":{"slug":"/posts/2017/02/reactjs"}},"staticQueryHashes":["251939775","401334301","825871152"]}