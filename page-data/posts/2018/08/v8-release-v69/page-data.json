{
    "componentChunkName": "component---src-templates-post-template-post-template-tsx",
    "path": "/posts/2018/08/v8-release-v69",
    "result": {"data":{"markdownRemark":{"id":"60a12d1c-70e1-53cb-a3c1-802f77709d8c","html":"<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#1-%E5%8E%9F%E6%96%87\">1. 原文</a></li>\n<li><a href=\"#2-%E6%91%98%E8%A6%81%E7%BF%BB%E8%AF%91\">2. 摘要翻译</a>\n<ul>\n<li><a href=\"#memory-savings-through-embedded-built-ins\">Memory savings through embedded built-ins</a></li>\n<li><a href=\"#performance\">Performance</a>\n<ul>\n<li><a href=\"#liftoff-webassemblys-new-first-tier-compiler\">Liftoff, WebAssembly’s new first-tier compiler</a></li>\n<li><a href=\"#faster-dataview-operations\">Faster DataView operations</a></li>\n<li><a href=\"#faster-processing-of-weakmaps-during-garbage-collection\">Faster processing of WeakMaps during garbage collection</a></li>\n</ul>\n</li>\n<li><a href=\"#v8-api\">V8 API</a></li>\n</ul>\n</li>\n</ul>\n</div>\n<h1 id=\"1-原文\" style=\"position:relative;\"><a href=\"#1-%E5%8E%9F%E6%96%87\" aria-label=\"1 原文 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 原文</h1>\n<p><a href=\"https://v8project.blogspot.com/2018/08/v8-release-69.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">V8 release v6.9</a></p>\n<h1 id=\"2-摘要翻译\" style=\"position:relative;\"><a href=\"#2-%E6%91%98%E8%A6%81%E7%BF%BB%E8%AF%91\" aria-label=\"2 摘要翻译 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 摘要翻译</h1>\n<h2 id=\"memory-savings-through-embedded-built-ins\" style=\"position:relative;\"><a href=\"#memory-savings-through-embedded-built-ins\" aria-label=\"memory savings through embedded built ins permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Memory savings through embedded built-ins</h2>\n<p>V8内含了一个扩展 library 来存储 built-in 函数。（后面花费了一整段话来介绍什么是 built-in 函数，以前介绍很多遍了）</p>\n<p>Built-in 函数目前在每个 Isolate 上占用 700KB 的内存。从 v6.4 版本的 V8 开始，引入了惰式反序列化，但仍有消耗。</p>\n<p>嵌入式 built-ins 则更进一步。一个嵌入式 built-in 被所有的 Isolates 共享，并嵌入它自身的二进制空间，而不是被拷贝进 JavaScript 的堆内存。这意味着 built-ins 无关乎有多少个 Isolates 正在运行，只会占用一份内存。在启用了嵌入式 built-ins 之后，我们看到了一个中值为 9% 的 V8 堆内存消耗减少，样本为 x64 环境的 top 1万个网站。在这些站点上，50% 的情况下节约了至少 1.2 MB 的内存，30% 的情况节约了至少 2.1 MB 的内存，10% 的情况则节约了 3.7 MB 或更多。</p>\n<p>V8 将会在 v6.9 版本中发布针对 x64 平台的嵌入式 built-ins 支持。其他平台将会很快得到更新。并将会发布一篇博客来详细解析其中的细节。</p>\n<h2 id=\"performance\" style=\"position:relative;\"><a href=\"#performance\" aria-label=\"performance permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Performance</h2>\n<h3 id=\"liftoff-webassemblys-new-first-tier-compiler\" style=\"position:relative;\"><a href=\"#liftoff-webassemblys-new-first-tier-compiler\" aria-label=\"liftoff webassemblys new first tier compiler permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Liftoff, WebAssembly’s new first-tier compiler</h3>\n<p>WebAssembly 得到了一个新的基准编译器为那些含有更大的 WebAssembly 模块的复杂网站的更快启动服务（比如说 Google Earth 和 AutoCAD）。根据硬件不同，我们观察到了 10倍 以上的启动加速。并将会发布一篇博客来详细解析其中的细节。</p>\n<h3 id=\"faster-dataview-operations\" style=\"position:relative;\"><a href=\"#faster-dataview-operations\" aria-label=\"faster dataview operations permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Faster DataView operations</h3>\n<p>在 V8 Torque 中，DataView 的方法被重新实现了一遍，将一个消耗很大的调用放到了C++中执行，而之前的实现则是在运行时直接运行。此外我们现在在 Turbofan 中将 JavaScript 代码编译时，将 DataView 的方法进行了内联，这更进一步提升了 hot 代码的峰值性能。现在使用 DataViews 已经和使用 TypedArrays 一样高效了，并最终使得 DataViews 成为了一个性能敏感情况下的可选项。并将会发布一篇博客来详细解析其中的细节。</p>\n<h3 id=\"faster-processing-of-weakmaps-during-garbage-collection\" style=\"position:relative;\"><a href=\"#faster-processing-of-weakmaps-during-garbage-collection\" aria-label=\"faster processing of weakmaps during garbage collection permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Faster processing of WeakMaps during garbage collection</h3>\n<p>V8 v6.9 版本通过优化 WeakMap 处理，进一步减少了 Mark-Compact 垃圾回收的暂停时间。并发及增量标记现在可以处理 WeakMap 了，而之前这些所有工作都是在最终 Mark-Compact 的暂停中完成的。鉴于并非所有的工作都可以被移出到这个暂停时间之外，GC 仍旧会在并行回收中执行更多工作以期降低暂停时间。这些优化工作使得 Web Tooling Benchmark 中的 Mark-Compact 平均暂停时间减半了。</p>\n<p>WeakMap 的处理使用了一个 fixed-point iteration 算法，在某些情况下可以将问题降到二次方程式运行时行为来处理。而在新的发布版本中，V8 切换到了另一种算法，如果 GC 不能在一定的迭代内完成的话，也能保证 GC 可以在现行的时间消耗内完成。之前，最糟的情况可能将 GC 暂停数秒，即便是一个很小的堆内存，而这种线性的算法可以在数毫秒之内完成。</p>\n<h2 id=\"v8-api\" style=\"position:relative;\"><a href=\"#v8-api\" aria-label=\"v8 api permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>V8 API</h2>\n<p>Please use git log branch-heads/6.8..branch-heads/6.9 include/v8.h to get a list of the API changes.</p>\n<p>Developers with an active V8 checkout can use git checkout -b 6.9 -t branch-heads/6.9 to experiment with the new features in V8 v6.9. Alternatively you can subscribe to Chrome’s Beta channel and try the new features out yourself soon.</p>\n<blockquote>\n<p>EOF</p>\n</blockquote>","fields":{"slug":"/posts/2018/08/v8-release-v69","tagSlugs":["/tag/javascript/","/tag/v8/","/tag/translation/","/tag/memory/","/tag/chrome/","/tag/blog/"]},"frontmatter":{"date":"2018-08-10T02:01:22.000Z","description":"","tags":["JavaScript","V8","Translation","Memory","Chrome","Blog"],"title":"V8 Blog | V8 release v6.9 2018-08-07","socialImage":"/media/default-social-image.jpg"}},"allFile":{"totalCount":0,"nodes":[]}},"pageContext":{"slug":"/posts/2018/08/v8-release-v69","gallery":"media/posts/2018/08/v8-release-v69/gallery"}},
    "staticQueryHashes": ["251939775","357378587","401334301"]}