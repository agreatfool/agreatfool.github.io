{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/2019/03/golang-cpu","result":{"data":{"markdownRemark":{"id":"85c77fff-1aa5-531c-b600-af5636968a37","html":"<h1 id=\"1-前言\" style=\"position:relative;\"><a href=\"#1-%E5%89%8D%E8%A8%80\" aria-label=\"1 前言 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 前言</h1>\n<p>本文是Go语言系列文章<a href=\"/2019/02/golang-note/\">Golang Notes</a>的其中一篇，完整的文章列表请去总章查看。</p>\n<h1 id=\"2-cpu\" style=\"position:relative;\"><a href=\"#2-cpu\" aria-label=\"2 cpu permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. CPU</h1>\n<p>CPU这里基本上就没什么太多原理可以说了，只要知道几个知识点就OK。</p>\n<h2 id=\"21-核心数量\" style=\"position:relative;\"><a href=\"#21-%E6%A0%B8%E5%BF%83%E6%95%B0%E9%87%8F\" aria-label=\"21 核心数量 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2.1 核心数量</h2>\n<p>获取可用的核心数量：</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\">runtime<span class=\"token punctuation\">.</span><span class=\"token function\">NumCPU</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>设置当前Go进程应该使用多少核心：</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\">runtime<span class=\"token punctuation\">.</span><span class=\"token function\">GOMAXPROCS</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h2 id=\"22-profiling\" style=\"position:relative;\"><a href=\"#22-profiling\" aria-label=\"22 profiling permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2.2 Profiling</h2>\n<p>Profiling方面和内存使用的工具基本上是一致的，直接看内存那篇里的内容即可：<a href=\"/2019/03/golang-memory/#ID_PROF_PPROF_WEB\">Golang Memory#5.3.3 runtime/pprof web</a>。</p>\n<p>仍旧推荐使用WEB入口的方式来进行profiling，更容易进行实时追踪。获取采样的地址为：<code class=\"language-text\">http://localhost:8080/debug/pprof/profile</code>。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ go tool pprof http://localhost:8080/debug/pprof/profile\nFetching profile over HTTP from http://localhost:8080/debug/pprof/profile\nSaved profile in /Users/XXX/pprof/pprof.samples.cpu.001.pb.gz\nType: cpu\nTime: Mar 26, 2019 at 1:41pm (CST)\nDuration: 30.15s, Total samples = 3.16s (10.48%)\nEntering interactive mode (type &quot;help&quot; for commands, &quot;o&quot; for options)\n(pprof)</code></pre></div>\n<p>go tool pprof在进行CPU分析的时候先要进行采样，所以需要等待一段时间，如果在URL上不加任何参数的话，默认是采样30秒。可以通过附加<code class=\"language-text\">?seconds=x</code>来进行调整。</p>\n<p>e.g</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ go tool pprof http://localhost:8080/debug/pprof/profile?seconds=10\nFetching profile over HTTP from http://localhost:8080/debug/pprof/profile?seconds=10\nSaved profile in /Users/XXX/pprof/pprof.samples.cpu.002.pb.gz\nType: cpu\nTime: Mar 26, 2019 at 1:44pm (CST)\nDuration: 10.02s, Total samples = 1.06s (10.57%)\nEntering interactive mode (type &quot;help&quot; for commands, &quot;o&quot; for options)\n(pprof)</code></pre></div>\n<p>同样的，其他的工具例如<code class=\"language-text\">trace</code>等也都可以使用。如果要在代码里进行采样，则需要使用接口：</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\">pprof<span class=\"token punctuation\">.</span><span class=\"token function\">StartCPUProfile</span><span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span>Stdout<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">defer</span> pprof<span class=\"token punctuation\">.</span><span class=\"token function\">StopCPUProfile</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h2 id=\"23-火焰图\" style=\"position:relative;\"><a href=\"#23-%E7%81%AB%E7%84%B0%E5%9B%BE\" aria-label=\"23 火焰图 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2.3 火焰图</h2>\n<p>火焰图是最直观的查看CPU消耗的分析工具，如果要在Go工具链上生成火焰图，可以使用在内存篇里提到过的pprof的UI界面。打开之后<code class=\"language-text\">VIEW &gt; Flame Graph</code>就能看到了。</p>\n<h1 id=\"3-代码\" style=\"position:relative;\"><a href=\"#3-%E4%BB%A3%E7%A0%81\" aria-label=\"3 代码 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 代码</h1>\n<p>代码放在github：<a href=\"https://github.com/agreatfool/dist-system-practice/blob/master/golang/src/experiment/cpu/cpu.go\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">experiment/cpu/cpu.go</a>。github上的代码可以看到最新的更新，不过需要打开新的页面稍微麻烦点。</p>\n<p>当前页面会放一份gist，方便直接查看：<a href=\"#ID_APP_CPU_SAMPLE\">experiment/cpu/cpu.go</a>，但可能更新不及时。</p>\n<h1 id=\"4-资料\" style=\"position:relative;\"><a href=\"#4-%E8%B5%84%E6%96%99\" aria-label=\"4 资料 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. 资料</h1>\n<h2 id=\"experimentcpucpugo-idappcpu_sample\" style=\"position:relative;\"><a href=\"#experimentcpucpugo-idappcpu_sample\" aria-label=\"experimentcpucpugo idappcpu_sample permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>experiment/cpu/cpu.go {#ID<em>APP</em>CPU_SAMPLE}</h2>\n<script src=\"https://gist.github.com/agreatfool/24a00ddbdb04c68d6fd2792ba8808ce6.js\"> </script>\n<blockquote>\n<p>EOF</p>\n</blockquote>","fields":{"slug":"/posts/2019/03/golang-cpu","tagSlugs":["/tag/golang/","/tag/performance/","/tag/profile/","/tag/monitor/"]},"frontmatter":{"date":"2019-03-26T02:01:22.000Z","description":"","tags":["Golang","Performance","Profile","Monitor"],"title":"Golang CPU","socialImage":{"publicURL":"/static/7e722e026a41a08a8f9a1cc76782dd27/default-social-image.jpg"}}}},"pageContext":{"slug":"/posts/2019/03/golang-cpu"}},"staticQueryHashes":["251939775","401334301","825871152"]}