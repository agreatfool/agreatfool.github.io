{
    "componentChunkName": "component---src-templates-post-template-post-template-tsx",
    "path": "/posts/2021/09/vegeta-notes",
    "result": {"data":{"markdownRemark":{"id":"b3f41952-2ab3-5753-9045-0f4c8c1c68d2","html":"<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#1-%E5%B7%A5%E5%85%B7%E9%80%89%E6%8B%A9\">1. 工具选择</a></li>\n<li><a href=\"#2-%E5%90%8E%E7%AB%AF%E7%A4%BA%E4%BE%8B\">2. 后端示例</a></li>\n<li><a href=\"#3-vegeta-command\">3. vegeta command</a></li>\n<li><a href=\"#4-vegeta-attack\">4. vegeta attack</a>\n<ul>\n<li><a href=\"#41-vegeta-attack-target-from-stdin\">4.1 vegeta attack: target from stdin</a></li>\n<li><a href=\"#42-vegeta-attack-target-from-file\">4.2 vegeta attack: target from file</a></li>\n</ul>\n</li>\n<li><a href=\"#5-vegeta-plot\">5. vegeta plot</a></li>\n<li><a href=\"#6-vegeta-report\">6. vegeta report</a></li>\n<li><a href=\"#7-vegeta-encode\">7. vegeta encode</a></li>\n<li><a href=\"#8-others\">8. Others</a>\n<ul>\n<li><a href=\"#81-%E5%8A%A8%E6%80%81targets\">8.1 动态targets</a></li>\n<li><a href=\"#82-%E5%88%86%E5%B8%83%E5%BC%8F%E5%8E%8B%E6%B5%8B\">8.2 分布式压测</a></li>\n<li><a href=\"#83-%E5%8E%8B%E6%B5%8B%E5%AE%9E%E6%97%B6%E5%88%86%E6%9E%90\">8.3 压测实时分析</a></li>\n</ul>\n</li>\n</ul>\n</div>\n<h1 id=\"1-工具选择\" style=\"position:relative;\"><a href=\"#1-%E5%B7%A5%E5%85%B7%E9%80%89%E6%8B%A9\" aria-label=\"1 工具选择 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 工具选择</h1>\n<p>压力测试也是后端工作中比较多见的需求。一般来说，针对简单的HTTP请求，用得比较多的是：<a href=\"https://httpd.apache.org/docs/2.4/programs/ab.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">ab - Apache HTTP server benchmarking tool</a> &#x26; <a href=\"https://github.com/wg/wrk\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">wg/wrk</a>。这两款都是使用C语言进行编写的工具，性能有十分保障。</p>\n<p>但日常工作中，我们的压测还有一些灵活的需求：</p>\n<ul>\n<li>压测的目标不一定是单个的API</li>\n<li>压测的时长和速率需要能调节</li>\n<li>压测的结果要能快速展示，包括文字和graph两种形式</li>\n<li>压测的结果要能进行存储，以使用其他软件进行拓展研究</li>\n<li>压测要能以client端分布式的方式进行，以保证在制造巨量的请求时，可以使用多台client进行联合测试，且测试结果可以融合归一进行分析</li>\n</ul>\n<p>以上的几点需求，在ab和wrk中都不能完全满足，特别是分布式测试这点，基本上没见过市面上有哪个软件能够很好做到。</p>\n<p>这里就要介绍下今天的主角了：<a href=\"https://github.com/tsenart/vegeta\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">tsenart/vegeta</a>。这款工具是使用golang编写的压测工具，由于golang非常优秀的goroutine，这款工具的表现几乎不逊色于c语言编写的几位前辈。</p>\n<p>安装：</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ brew update <span class=\"token operator\">&amp;&amp;</span> brew <span class=\"token function\">install</span> vegeta</code></pre></div>\n<h1 id=\"2-后端示例\" style=\"position:relative;\"><a href=\"#2-%E5%90%8E%E7%AB%AF%E7%A4%BA%E4%BE%8B\" aria-label=\"2 后端示例 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 后端示例</h1>\n<p>本文会进行一些范例演示，所有的vegeta命令所针对的后端服务器都使用如下代码：</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> express <span class=\"token keyword\">from</span> <span class=\"token string\">'express'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> app <span class=\"token operator\">=</span> <span class=\"token function\">express</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> port <span class=\"token operator\">=</span> <span class=\"token number\">5000</span><span class=\"token punctuation\">;</span>\n\napp<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>express<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\napp<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>express<span class=\"token punctuation\">.</span><span class=\"token function\">urlencoded</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> extended<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\napp<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/get'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> data <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    method<span class=\"token operator\">:</span> <span class=\"token string\">'GET'</span><span class=\"token punctuation\">,</span>\n    path<span class=\"token operator\">:</span> <span class=\"token string\">'/get'</span><span class=\"token punctuation\">,</span>\n    query<span class=\"token operator\">:</span> req<span class=\"token punctuation\">.</span>query<span class=\"token punctuation\">,</span>\n    headers<span class=\"token operator\">:</span> req<span class=\"token punctuation\">.</span>headers\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  res<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\napp<span class=\"token punctuation\">.</span><span class=\"token function\">post</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/post'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> data <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    method<span class=\"token operator\">:</span> <span class=\"token string\">'POST'</span><span class=\"token punctuation\">,</span>\n    path<span class=\"token operator\">:</span> <span class=\"token string\">'/post'</span><span class=\"token punctuation\">,</span>\n    data<span class=\"token operator\">:</span> req<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">,</span>\n    headers<span class=\"token operator\">:</span> req<span class=\"token punctuation\">.</span>headers\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  res<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\napp<span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span>port<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Server listening at http://localhost:</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>port<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>该服务器仅只有两个API：</p>\n<ul>\n<li><code class=\"language-text\">http://localhost:5000/get</code></li>\n<li><code class=\"language-text\">http://localhost:5000/post</code></li>\n</ul>\n<p>这两个API会在收到请求后，在console中打印出该请求的所有信息。</p>\n<h1 id=\"3-vegeta-command\" style=\"position:relative;\"><a href=\"#3-vegeta-command\" aria-label=\"3 vegeta command permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. vegeta command</h1>\n<p>vegeta命令包含多个功能，在运行的时候，需要额外提供一个子命令，来明确目前运行的时候具体要做什么：</p>\n<ul>\n<li>attack：压测命令</li>\n<li>encode：转码命令，将压测输出的结果集从默认格式转成其他的格式（json等）</li>\n<li>plot：graph命令，将压测输出的结果生成graph html，以供查看</li>\n<li>report：报告命令，将压测输出的结果生成文字形式的report</li>\n</ul>\n<p>vegeta使用*nix pipeline非常重，很多参数的输入和结果的输出都默认使用<code class=\"language-text\">stdin</code>和<code class=\"language-text\">stdout</code>，所以非常适合多个命令进行前后管道顺序执行。</p>\n<p>另外需要提一点，vegeta命令中提供的所有文件的路径，都必须以当前的工作路径（cwd）为基准。</p>\n<p>e.g</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">'GET ...'</span> <span class=\"token operator\">|</span> vegeta attack <span class=\"token punctuation\">..</span>. <span class=\"token operator\">|</span> vegeta report</code></pre></div>\n<h1 id=\"4-vegeta-attack\" style=\"position:relative;\"><a href=\"#4-vegeta-attack\" aria-label=\"4 vegeta attack permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. vegeta attack</h1>\n<p>该命令用以发起压测，官方文档：<a href=\"https://github.com/tsenart/vegeta#attack-command\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">link</a>。有几个option需要简单说明下：</p>\n<ul>\n<li><code class=\"language-text\">-targets</code>：该option指定attack的目标是什么，默认读取stdin的输入，也可以提供一个文件路径，让vegeta读取其文本内容来获取目标</li>\n<li><code class=\"language-text\">-format</code>：该option一般使用<code class=\"language-text\">http</code>，表示target给的内容必须按<a href=\"https://www.w3.org/Protocols/rfc2616/rfc2616-sec5.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">RFC 2616</a>的格式提供：<code class=\"language-text\">'GET http://localhost:5000/...'</code></li>\n<li><code class=\"language-text\">-header</code>：该option可以提供多个，每个option表示额外提供一个header</li>\n<li><code class=\"language-text\">-body</code>：该option用来指定post body的数据文件，注意，如果在targets里也提供了<code class=\"language-text\">@/body/file/path</code>则以target里的为准，当前option提供的body会被忽略</li>\n<li><code class=\"language-text\">-timeout</code>：该option表示每个http请求的超时时长，默认为0表示无超时</li>\n<li><code class=\"language-text\">-workers</code>：该option用来指定vegeta刚启动时需要启动的workers数量，后续实际workers数值会根据需求自行上升以满足rate的要求</li>\n<li><code class=\"language-text\">-max-workers</code>：该option用来限制attack时的最高并发数量</li>\n<li><code class=\"language-text\">-duration</code>：该option用来控制测试时长，使用字符串形式来提供数值：<code class=\"language-text\">5s</code></li>\n<li><code class=\"language-text\">-rate</code>：该option用来控制请求并发速率\n<ul>\n<li><code class=\"language-text\">5/s</code>表示每秒vegeta会一共发出5个请求（vegeta会启动补充worker，如果速度设置很高的话）</li>\n<li>设置为0表示无限制，vegeta会尽可能快地发出请求</li>\n<li>设置为0的时候需要和<code class=\"language-text\">max-workers</code>配合使用，来行成一个固定的并发速率，否则可能会快速耗尽系统资源</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"41-vegeta-attack-target-from-stdin\" style=\"position:relative;\"><a href=\"#41-vegeta-attack-target-from-stdin\" aria-label=\"41 vegeta attack target from stdin permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4.1 vegeta attack: target from stdin</h2>\n<p>如下命令启动5秒的测试，并每秒发送5个请求，最后以文字形式输出报告。</p>\n<ul>\n<li><code class=\"language-text\">vegeta attack</code>从自己的stdin读取<code class=\"language-text\">echo</code>的字符串作为target进行压测</li>\n<li><code class=\"language-text\">vegeta report</code>从自己的stdin读取上一个命令<code class=\"language-text\">vegeta attack</code>的stdout，来获取数据进行处理</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">'GET http://localhost:5000/get?get_key=get_val'</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">\\</span>\n    vegeta attack <span class=\"token punctuation\">\\</span>\n        -duration<span class=\"token operator\">=</span>5s <span class=\"token punctuation\">\\</span>\n        -rate<span class=\"token operator\">=</span><span class=\"token number\">5</span>/s <span class=\"token punctuation\">\\</span>\n        -format<span class=\"token operator\">=</span>http <span class=\"token punctuation\">\\</span>\n        -header <span class=\"token string\">'Cache-Control: no-cache'</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">\\</span>\n            vegeta report -type<span class=\"token operator\">=</span>text</code></pre></div>\n<p>服务端输出：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Server listening at http://localhost:5000\n{\"method\":\"GET\",\"path\":\"/get\",\"query\":{\"get_key\":\"get_val\"},\"headers\":{\"host\":\"localhost:5000\",\"user-agent\":\"Go-http-client/1.1\",\"cache-control\":\"no-cache\",\"x-vegeta-seq\":\"0\",\"accept-encoding\":\"gzip\"}}\n{\"method\":\"GET\",\"path\":\"/get\",\"query\":{\"get_key\":\"get_val\"},\"headers\":{\"host\":\"localhost:5000\",\"user-agent\":\"Go-http-client/1.1\",\"cache-control\":\"no-cache\",\"x-vegeta-seq\":\"1\",\"accept-encoding\":\"gzip\"}}\n{\"method\":\"GET\",\"path\":\"/get\",\"query\":{\"get_key\":\"get_val\"},\"headers\":{\"host\":\"localhost:5000\",\"user-agent\":\"Go-http-client/1.1\",\"cache-control\":\"no-cache\",\"x-vegeta-seq\":\"2\",\"accept-encoding\":\"gzip\"}}\n{\"method\":\"GET\",\"path\":\"/get\",\"query\":{\"get_key\":\"get_val\"},\"headers\":{\"host\":\"localhost:5000\",\"user-agent\":\"Go-http-client/1.1\",\"cache-control\":\"no-cache\",\"x-vegeta-seq\":\"3\",\"accept-encoding\":\"gzip\"}}\n{\"method\":\"GET\",\"path\":\"/get\",\"query\":{\"get_key\":\"get_val\"},\"headers\":{\"host\":\"localhost:5000\",\"user-agent\":\"Go-http-client/1.1\",\"cache-control\":\"no-cache\",\"x-vegeta-seq\":\"4\",\"accept-encoding\":\"gzip\"}}\n{\"method\":\"GET\",\"path\":\"/get\",\"query\":{\"get_key\":\"get_val\"},\"headers\":{\"host\":\"localhost:5000\",\"user-agent\":\"Go-http-client/1.1\",\"cache-control\":\"no-cache\",\"x-vegeta-seq\":\"5\",\"accept-encoding\":\"gzip\"}}\n{\"method\":\"GET\",\"path\":\"/get\",\"query\":{\"get_key\":\"get_val\"},\"headers\":{\"host\":\"localhost:5000\",\"user-agent\":\"Go-http-client/1.1\",\"cache-control\":\"no-cache\",\"x-vegeta-seq\":\"6\",\"accept-encoding\":\"gzip\"}}\n{\"method\":\"GET\",\"path\":\"/get\",\"query\":{\"get_key\":\"get_val\"},\"headers\":{\"host\":\"localhost:5000\",\"user-agent\":\"Go-http-client/1.1\",\"cache-control\":\"no-cache\",\"x-vegeta-seq\":\"7\",\"accept-encoding\":\"gzip\"}}\n{\"method\":\"GET\",\"path\":\"/get\",\"query\":{\"get_key\":\"get_val\"},\"headers\":{\"host\":\"localhost:5000\",\"user-agent\":\"Go-http-client/1.1\",\"cache-control\":\"no-cache\",\"x-vegeta-seq\":\"8\",\"accept-encoding\":\"gzip\"}}\n{\"method\":\"GET\",\"path\":\"/get\",\"query\":{\"get_key\":\"get_val\"},\"headers\":{\"host\":\"localhost:5000\",\"user-agent\":\"Go-http-client/1.1\",\"cache-control\":\"no-cache\",\"x-vegeta-seq\":\"9\",\"accept-encoding\":\"gzip\"}}\n{\"method\":\"GET\",\"path\":\"/get\",\"query\":{\"get_key\":\"get_val\"},\"headers\":{\"host\":\"localhost:5000\",\"user-agent\":\"Go-http-client/1.1\",\"cache-control\":\"no-cache\",\"x-vegeta-seq\":\"10\",\"accept-encoding\":\"gzip\"}}\n{\"method\":\"GET\",\"path\":\"/get\",\"query\":{\"get_key\":\"get_val\"},\"headers\":{\"host\":\"localhost:5000\",\"user-agent\":\"Go-http-client/1.1\",\"cache-control\":\"no-cache\",\"x-vegeta-seq\":\"11\",\"accept-encoding\":\"gzip\"}}\n{\"method\":\"GET\",\"path\":\"/get\",\"query\":{\"get_key\":\"get_val\"},\"headers\":{\"host\":\"localhost:5000\",\"user-agent\":\"Go-http-client/1.1\",\"cache-control\":\"no-cache\",\"x-vegeta-seq\":\"12\",\"accept-encoding\":\"gzip\"}}\n{\"method\":\"GET\",\"path\":\"/get\",\"query\":{\"get_key\":\"get_val\"},\"headers\":{\"host\":\"localhost:5000\",\"user-agent\":\"Go-http-client/1.1\",\"cache-control\":\"no-cache\",\"x-vegeta-seq\":\"13\",\"accept-encoding\":\"gzip\"}}\n{\"method\":\"GET\",\"path\":\"/get\",\"query\":{\"get_key\":\"get_val\"},\"headers\":{\"host\":\"localhost:5000\",\"user-agent\":\"Go-http-client/1.1\",\"cache-control\":\"no-cache\",\"x-vegeta-seq\":\"14\",\"accept-encoding\":\"gzip\"}}\n{\"method\":\"GET\",\"path\":\"/get\",\"query\":{\"get_key\":\"get_val\"},\"headers\":{\"host\":\"localhost:5000\",\"user-agent\":\"Go-http-client/1.1\",\"cache-control\":\"no-cache\",\"x-vegeta-seq\":\"15\",\"accept-encoding\":\"gzip\"}}\n{\"method\":\"GET\",\"path\":\"/get\",\"query\":{\"get_key\":\"get_val\"},\"headers\":{\"host\":\"localhost:5000\",\"user-agent\":\"Go-http-client/1.1\",\"cache-control\":\"no-cache\",\"x-vegeta-seq\":\"16\",\"accept-encoding\":\"gzip\"}}\n{\"method\":\"GET\",\"path\":\"/get\",\"query\":{\"get_key\":\"get_val\"},\"headers\":{\"host\":\"localhost:5000\",\"user-agent\":\"Go-http-client/1.1\",\"cache-control\":\"no-cache\",\"x-vegeta-seq\":\"17\",\"accept-encoding\":\"gzip\"}}\n{\"method\":\"GET\",\"path\":\"/get\",\"query\":{\"get_key\":\"get_val\"},\"headers\":{\"host\":\"localhost:5000\",\"user-agent\":\"Go-http-client/1.1\",\"cache-control\":\"no-cache\",\"x-vegeta-seq\":\"18\",\"accept-encoding\":\"gzip\"}}\n{\"method\":\"GET\",\"path\":\"/get\",\"query\":{\"get_key\":\"get_val\"},\"headers\":{\"host\":\"localhost:5000\",\"user-agent\":\"Go-http-client/1.1\",\"cache-control\":\"no-cache\",\"x-vegeta-seq\":\"19\",\"accept-encoding\":\"gzip\"}}\n{\"method\":\"GET\",\"path\":\"/get\",\"query\":{\"get_key\":\"get_val\"},\"headers\":{\"host\":\"localhost:5000\",\"user-agent\":\"Go-http-client/1.1\",\"cache-control\":\"no-cache\",\"x-vegeta-seq\":\"20\",\"accept-encoding\":\"gzip\"}}\n{\"method\":\"GET\",\"path\":\"/get\",\"query\":{\"get_key\":\"get_val\"},\"headers\":{\"host\":\"localhost:5000\",\"user-agent\":\"Go-http-client/1.1\",\"cache-control\":\"no-cache\",\"x-vegeta-seq\":\"21\",\"accept-encoding\":\"gzip\"}}\n{\"method\":\"GET\",\"path\":\"/get\",\"query\":{\"get_key\":\"get_val\"},\"headers\":{\"host\":\"localhost:5000\",\"user-agent\":\"Go-http-client/1.1\",\"cache-control\":\"no-cache\",\"x-vegeta-seq\":\"22\",\"accept-encoding\":\"gzip\"}}\n{\"method\":\"GET\",\"path\":\"/get\",\"query\":{\"get_key\":\"get_val\"},\"headers\":{\"host\":\"localhost:5000\",\"user-agent\":\"Go-http-client/1.1\",\"cache-control\":\"no-cache\",\"x-vegeta-seq\":\"23\",\"accept-encoding\":\"gzip\"}}\n{\"method\":\"GET\",\"path\":\"/get\",\"query\":{\"get_key\":\"get_val\"},\"headers\":{\"host\":\"localhost:5000\",\"user-agent\":\"Go-http-client/1.1\",\"cache-control\":\"no-cache\",\"x-vegeta-seq\":\"24\",\"accept-encoding\":\"gzip\"}}</code></pre></div>\n<p>report：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Requests      [total, rate, throughput]         25, 5.21, 5.21\nDuration      [total, attack, wait]             4.799s, 4.798s, 1.073ms\nLatencies     [min, mean, 50, 90, 95, 99, max]  1.023ms, 1.57ms, 1.386ms, 1.97ms, 2.819ms, 4.442ms, 4.442ms\nBytes In      [total, mean]                     6762, 270.48\nBytes Out     [total, mean]                     736, 29.44\nSuccess       [ratio]                           100.00%\nStatus Codes  [code:count]                      200:25  \nError Set:</code></pre></div>\n<h2 id=\"42-vegeta-attack-target-from-file\" style=\"position:relative;\"><a href=\"#42-vegeta-attack-target-from-file\" aria-label=\"42 vegeta attack target from file permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4.2 vegeta attack: target from file</h2>\n<p>如下命令会启动持续5秒的测试，并每秒发送5个请求，请求内容来自<code class=\"language-text\">targets.txt</code>文件的内容，最后以文字形式输出报：</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">vegeta attack <span class=\"token punctuation\">\\</span>\n    -targets<span class=\"token operator\">=</span>./vegeta/targets.txt <span class=\"token punctuation\">\\</span>\n    -duration<span class=\"token operator\">=</span>5s <span class=\"token punctuation\">\\</span>\n    -rate<span class=\"token operator\">=</span><span class=\"token number\">5</span>/s <span class=\"token punctuation\">\\</span>\n    -format<span class=\"token operator\">=</span>http <span class=\"token punctuation\">\\</span>\n    -header <span class=\"token string\">'Cache-Control: no-cache'</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">\\</span>\n        vegeta report -type<span class=\"token operator\">=</span>text</code></pre></div>\n<p>targets.txt</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">GET http://localhost:5000/get?get_key=get_val\nX-Add-Get-ID1: 78\nX-Add-Get-ID2: 88\n\nPOST http://localhost:5000/post?post_key1=post_val\nX-Add-Post-ID: 199\nContent-Type: application/json\n@./vegeta/postdata.json\n\nPOST http://localhost:5000/post?post_key2=post_val\nX-Add-Post-ID: 299\nContent-Type: application/json\n@./vegeta/postdata.json</code></pre></div>\n<p>postdata.json</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"postdata\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"a\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"b\"</span><span class=\"token operator\">:</span> <span class=\"token number\">2</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>vegeta发送的请求会以targets.txt内列的target一个个请求发送下去</li>\n<li>每个target下面可以附带额外的header，不限数量，每行一个header</li>\n<li>POST的target可以在下面带上一行<code class=\"language-text\">@/body/file/path</code>格式的文本，表示读取该位置的文件，作为post的body使用</li>\n</ul>\n<p>服务端输出：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Server listening at http://localhost:5000\n{\"method\":\"GET\",\"path\":\"/get\",\"query\":{\"get_key\":\"get_val\"},\"headers\":{\"host\":\"localhost:5000\",\"user-agent\":\"Go-http-client/1.1\",\"cache-control\":\"no-cache\",\"x-add-get-id1\":\"78\",\"x-add-get-id2\":\"88\",\"x-vegeta-seq\":\"0\",\"accept-encoding\":\"gzip\"}}\n{\"method\":\"POST\",\"path\":\"/post\",\"data\":{\"postdata\":{\"a\":1,\"b\":2}},\"headers\":{\"host\":\"localhost:5000\",\"user-agent\":\"Go-http-client/1.1\",\"content-length\":\"46\",\"cache-control\":\"no-cache\",\"content-type\":\"application/json\",\"x-add-post-id\":\"199\",\"x-vegeta-seq\":\"1\",\"accept-encoding\":\"gzip\"}}\n{\"method\":\"POST\",\"path\":\"/post\",\"data\":{\"postdata\":{\"a\":1,\"b\":2}},\"headers\":{\"host\":\"localhost:5000\",\"user-agent\":\"Go-http-client/1.1\",\"content-length\":\"46\",\"cache-control\":\"no-cache\",\"content-type\":\"application/json\",\"x-add-post-id\":\"299\",\"x-vegeta-seq\":\"2\",\"accept-encoding\":\"gzip\"}}\n{\"method\":\"GET\",\"path\":\"/get\",\"query\":{\"get_key\":\"get_val\"},\"headers\":{\"host\":\"localhost:5000\",\"user-agent\":\"Go-http-client/1.1\",\"cache-control\":\"no-cache\",\"x-add-get-id1\":\"78\",\"x-add-get-id2\":\"88\",\"x-vegeta-seq\":\"3\",\"accept-encoding\":\"gzip\"}}\n{\"method\":\"POST\",\"path\":\"/post\",\"data\":{\"postdata\":{\"a\":1,\"b\":2}},\"headers\":{\"host\":\"localhost:5000\",\"user-agent\":\"Go-http-client/1.1\",\"content-length\":\"46\",\"cache-control\":\"no-cache\",\"content-type\":\"application/json\",\"x-add-post-id\":\"199\",\"x-vegeta-seq\":\"4\",\"accept-encoding\":\"gzip\"}}\n{\"method\":\"POST\",\"path\":\"/post\",\"data\":{\"postdata\":{\"a\":1,\"b\":2}},\"headers\":{\"host\":\"localhost:5000\",\"user-agent\":\"Go-http-client/1.1\",\"content-length\":\"46\",\"cache-control\":\"no-cache\",\"content-type\":\"application/json\",\"x-add-post-id\":\"299\",\"x-vegeta-seq\":\"5\",\"accept-encoding\":\"gzip\"}}\n{\"method\":\"GET\",\"path\":\"/get\",\"query\":{\"get_key\":\"get_val\"},\"headers\":{\"host\":\"localhost:5000\",\"user-agent\":\"Go-http-client/1.1\",\"cache-control\":\"no-cache\",\"x-add-get-id1\":\"78\",\"x-add-get-id2\":\"88\",\"x-vegeta-seq\":\"6\",\"accept-encoding\":\"gzip\"}}\n{\"method\":\"POST\",\"path\":\"/post\",\"data\":{\"postdata\":{\"a\":1,\"b\":2}},\"headers\":{\"host\":\"localhost:5000\",\"user-agent\":\"Go-http-client/1.1\",\"content-length\":\"46\",\"cache-control\":\"no-cache\",\"content-type\":\"application/json\",\"x-add-post-id\":\"199\",\"x-vegeta-seq\":\"7\",\"accept-encoding\":\"gzip\"}}\n{\"method\":\"POST\",\"path\":\"/post\",\"data\":{\"postdata\":{\"a\":1,\"b\":2}},\"headers\":{\"host\":\"localhost:5000\",\"user-agent\":\"Go-http-client/1.1\",\"content-length\":\"46\",\"cache-control\":\"no-cache\",\"content-type\":\"application/json\",\"x-add-post-id\":\"299\",\"x-vegeta-seq\":\"8\",\"accept-encoding\":\"gzip\"}}\n{\"method\":\"GET\",\"path\":\"/get\",\"query\":{\"get_key\":\"get_val\"},\"headers\":{\"host\":\"localhost:5000\",\"user-agent\":\"Go-http-client/1.1\",\"cache-control\":\"no-cache\",\"x-add-get-id1\":\"78\",\"x-add-get-id2\":\"88\",\"x-vegeta-seq\":\"9\",\"accept-encoding\":\"gzip\"}}\n{\"method\":\"POST\",\"path\":\"/post\",\"data\":{\"postdata\":{\"a\":1,\"b\":2}},\"headers\":{\"host\":\"localhost:5000\",\"user-agent\":\"Go-http-client/1.1\",\"content-length\":\"46\",\"cache-control\":\"no-cache\",\"content-type\":\"application/json\",\"x-add-post-id\":\"199\",\"x-vegeta-seq\":\"10\",\"accept-encoding\":\"gzip\"}}\n{\"method\":\"POST\",\"path\":\"/post\",\"data\":{\"postdata\":{\"a\":1,\"b\":2}},\"headers\":{\"host\":\"localhost:5000\",\"user-agent\":\"Go-http-client/1.1\",\"content-length\":\"46\",\"cache-control\":\"no-cache\",\"content-type\":\"application/json\",\"x-add-post-id\":\"299\",\"x-vegeta-seq\":\"11\",\"accept-encoding\":\"gzip\"}}\n{\"method\":\"GET\",\"path\":\"/get\",\"query\":{\"get_key\":\"get_val\"},\"headers\":{\"host\":\"localhost:5000\",\"user-agent\":\"Go-http-client/1.1\",\"cache-control\":\"no-cache\",\"x-add-get-id1\":\"78\",\"x-add-get-id2\":\"88\",\"x-vegeta-seq\":\"12\",\"accept-encoding\":\"gzip\"}}\n{\"method\":\"POST\",\"path\":\"/post\",\"data\":{\"postdata\":{\"a\":1,\"b\":2}},\"headers\":{\"host\":\"localhost:5000\",\"user-agent\":\"Go-http-client/1.1\",\"content-length\":\"46\",\"cache-control\":\"no-cache\",\"content-type\":\"application/json\",\"x-add-post-id\":\"199\",\"x-vegeta-seq\":\"13\",\"accept-encoding\":\"gzip\"}}\n{\"method\":\"POST\",\"path\":\"/post\",\"data\":{\"postdata\":{\"a\":1,\"b\":2}},\"headers\":{\"host\":\"localhost:5000\",\"user-agent\":\"Go-http-client/1.1\",\"content-length\":\"46\",\"cache-control\":\"no-cache\",\"content-type\":\"application/json\",\"x-add-post-id\":\"299\",\"x-vegeta-seq\":\"14\",\"accept-encoding\":\"gzip\"}}\n{\"method\":\"GET\",\"path\":\"/get\",\"query\":{\"get_key\":\"get_val\"},\"headers\":{\"host\":\"localhost:5000\",\"user-agent\":\"Go-http-client/1.1\",\"cache-control\":\"no-cache\",\"x-add-get-id1\":\"78\",\"x-add-get-id2\":\"88\",\"x-vegeta-seq\":\"15\",\"accept-encoding\":\"gzip\"}}\n{\"method\":\"POST\",\"path\":\"/post\",\"data\":{\"postdata\":{\"a\":1,\"b\":2}},\"headers\":{\"host\":\"localhost:5000\",\"user-agent\":\"Go-http-client/1.1\",\"content-length\":\"46\",\"cache-control\":\"no-cache\",\"content-type\":\"application/json\",\"x-add-post-id\":\"199\",\"x-vegeta-seq\":\"16\",\"accept-encoding\":\"gzip\"}}\n{\"method\":\"POST\",\"path\":\"/post\",\"data\":{\"postdata\":{\"a\":1,\"b\":2}},\"headers\":{\"host\":\"localhost:5000\",\"user-agent\":\"Go-http-client/1.1\",\"content-length\":\"46\",\"cache-control\":\"no-cache\",\"content-type\":\"application/json\",\"x-add-post-id\":\"299\",\"x-vegeta-seq\":\"17\",\"accept-encoding\":\"gzip\"}}\n{\"method\":\"GET\",\"path\":\"/get\",\"query\":{\"get_key\":\"get_val\"},\"headers\":{\"host\":\"localhost:5000\",\"user-agent\":\"Go-http-client/1.1\",\"cache-control\":\"no-cache\",\"x-add-get-id1\":\"78\",\"x-add-get-id2\":\"88\",\"x-vegeta-seq\":\"18\",\"accept-encoding\":\"gzip\"}}\n{\"method\":\"POST\",\"path\":\"/post\",\"data\":{\"postdata\":{\"a\":1,\"b\":2}},\"headers\":{\"host\":\"localhost:5000\",\"user-agent\":\"Go-http-client/1.1\",\"content-length\":\"46\",\"cache-control\":\"no-cache\",\"content-type\":\"application/json\",\"x-add-post-id\":\"199\",\"x-vegeta-seq\":\"19\",\"accept-encoding\":\"gzip\"}}\n{\"method\":\"POST\",\"path\":\"/post\",\"data\":{\"postdata\":{\"a\":1,\"b\":2}},\"headers\":{\"host\":\"localhost:5000\",\"user-agent\":\"Go-http-client/1.1\",\"content-length\":\"46\",\"cache-control\":\"no-cache\",\"content-type\":\"application/json\",\"x-add-post-id\":\"299\",\"x-vegeta-seq\":\"20\",\"accept-encoding\":\"gzip\"}}\n{\"method\":\"GET\",\"path\":\"/get\",\"query\":{\"get_key\":\"get_val\"},\"headers\":{\"host\":\"localhost:5000\",\"user-agent\":\"Go-http-client/1.1\",\"cache-control\":\"no-cache\",\"x-add-get-id1\":\"78\",\"x-add-get-id2\":\"88\",\"x-vegeta-seq\":\"21\",\"accept-encoding\":\"gzip\"}}\n{\"method\":\"POST\",\"path\":\"/post\",\"data\":{\"postdata\":{\"a\":1,\"b\":2}},\"headers\":{\"host\":\"localhost:5000\",\"user-agent\":\"Go-http-client/1.1\",\"content-length\":\"46\",\"cache-control\":\"no-cache\",\"content-type\":\"application/json\",\"x-add-post-id\":\"199\",\"x-vegeta-seq\":\"22\",\"accept-encoding\":\"gzip\"}}\n{\"method\":\"POST\",\"path\":\"/post\",\"data\":{\"postdata\":{\"a\":1,\"b\":2}},\"headers\":{\"host\":\"localhost:5000\",\"user-agent\":\"Go-http-client/1.1\",\"content-length\":\"46\",\"cache-control\":\"no-cache\",\"content-type\":\"application/json\",\"x-add-post-id\":\"299\",\"x-vegeta-seq\":\"23\",\"accept-encoding\":\"gzip\"}}\n{\"method\":\"GET\",\"path\":\"/get\",\"query\":{\"get_key\":\"get_val\"},\"headers\":{\"host\":\"localhost:5000\",\"user-agent\":\"Go-http-client/1.1\",\"cache-control\":\"no-cache\",\"x-add-get-id1\":\"78\",\"x-add-get-id2\":\"88\",\"x-vegeta-seq\":\"24\",\"accept-encoding\":\"gzip\"}}</code></pre></div>\n<p>可以看到，根据我们的option设置，一共是25个请求<code class=\"language-text\">5s * 5/s</code>。然后请求和targets.txt里指定的一样，每次都是按1个GET2个POST这样的顺序发送。<code class=\"language-text\">3*8=24</code>之后，正好还有一个待发的，因此最后就是一个GET。</p>\n<p>report：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Requests      [total, rate, throughput]         25, 5.21, 5.21\nDuration      [total, attack, wait]             4.802s, 4.801s, 1.344ms\nLatencies     [min, mean, 50, 90, 95, 99, max]  1.093ms, 1.687ms, 1.379ms, 1.769ms, 3.979ms, 5.077ms, 5.077ms\nBytes In      [total, mean]                     6762, 270.48\nBytes Out     [total, mean]                     736, 29.44\nSuccess       [ratio]                           100.00%\nStatus Codes  [code:count]                      200:25  \nError Set:</code></pre></div>\n<h1 id=\"5-vegeta-plot\" style=\"position:relative;\"><a href=\"#5-vegeta-plot\" aria-label=\"5 vegeta plot permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5. vegeta plot</h1>\n<p>该命令用来将测试结果输出成graph的html，官方文档：<a href=\"https://github.com/tsenart/vegeta#plot-command\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">link</a>。option基本不需要调整。这里需要注意，输出的graph只含<code class=\"language-text\">latency</code>，不含其它信息。</p>\n<p><img src=\"/media/posts/2021/09/vegeta-notes/vegeta-plot.png\" alt=\"\"></p>\n<p>e.g</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"GET http://:80\"</span> <span class=\"token operator\">|</span> vegeta attack -name<span class=\"token operator\">=</span>50qps -rate<span class=\"token operator\">=</span><span class=\"token number\">50</span> -duration<span class=\"token operator\">=</span>5s <span class=\"token operator\">></span> results.50qps.bin\n$ <span class=\"token function\">cat</span> results.50qps.bin <span class=\"token operator\">|</span> vegeta plot <span class=\"token operator\">></span> plot.50qps.html\n$ <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"GET http://:80\"</span> <span class=\"token operator\">|</span> vegeta attack -name<span class=\"token operator\">=</span>100qps -rate<span class=\"token operator\">=</span><span class=\"token number\">100</span> -duration<span class=\"token operator\">=</span>5s <span class=\"token operator\">></span> results.100qps.bin\n$ vegeta plot results.50qps.bin results.100qps.bin <span class=\"token operator\">></span> plot.html</code></pre></div>\n<h1 id=\"6-vegeta-report\" style=\"position:relative;\"><a href=\"#6-vegeta-report\" aria-label=\"6 vegeta report permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>6. vegeta report</h1>\n<p>该明星用来将测试结果转换为报告，官方文档：<a href=\"https://github.com/tsenart/vegeta#report-command\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">link</a>。</p>\n<p>options：</p>\n<ul>\n<li><code class=\"language-text\">--type</code>：报告类型：<code class=\"language-text\">text | json | hist[buckets] | hdrplot</code></li>\n<li><code class=\"language-text\">--every</code>：报告间隔，设置该值会在测试中也渐次输出report，e.g <code class=\"language-text\">--every=1s</code></li>\n</ul>\n<p>e.g</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"GET http://:80\"</span> <span class=\"token operator\">|</span> vegeta attack -rate<span class=\"token operator\">=</span><span class=\"token number\">10</span>/s <span class=\"token operator\">></span> results.gob\n$ <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"GET http://:80\"</span> <span class=\"token operator\">|</span> vegeta attack -rate<span class=\"token operator\">=</span><span class=\"token number\">100</span>/s <span class=\"token operator\">|</span> vegeta encode <span class=\"token operator\">></span> results.json\n$ vegeta report results.*</code></pre></div>\n<h1 id=\"7-vegeta-encode\" style=\"position:relative;\"><a href=\"#7-vegeta-encode\" aria-label=\"7 vegeta encode permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>7. vegeta encode</h1>\n<p>该命令用来将测试结果转换成其他格式，默认输出自vegeta attack的格式是<code class=\"language-text\">gob</code>，官方文档：<a href=\"https://github.com/tsenart/vegeta#encode-command\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">link</a>。</p>\n<p>可以转换为：</p>\n<ul>\n<li>gob</li>\n<li>json</li>\n<li>csv</li>\n</ul>\n<p>使用option<code class=\"language-text\">--to</code>来进行指定。</p>\n<p>e.g</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"GET http://:80\"</span> <span class=\"token operator\">|</span> vegeta attack -rate<span class=\"token operator\">=</span><span class=\"token number\">1</span>/s <span class=\"token operator\">></span> results.gob\n$ <span class=\"token function\">cat</span> results.gob <span class=\"token operator\">|</span> vegeta encode <span class=\"token operator\">|</span> jq -c <span class=\"token string\">'del(.body)'</span> <span class=\"token operator\">|</span> vegeta encode -to gob</code></pre></div>\n<h1 id=\"8-others\" style=\"position:relative;\"><a href=\"#8-others\" aria-label=\"8 others permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>8. Others</h1>\n<h2 id=\"81-动态targets\" style=\"position:relative;\"><a href=\"#81-%E5%8A%A8%E6%80%81targets\" aria-label=\"81 动态targets permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>8.1 动态targets</h2>\n<p>根据官方instruction <a href=\"https://github.com/tsenart/vegeta#usage-generated-targets\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Usage: Generated targets</a>，可以动态生成压测的target。另外也可以通过<code class=\"language-text\">vegeta attack -targets=...</code>的方式提供测试目标文件，然后在该文件中列出期望的用户行为来进行拟真测试。</p>\n<h2 id=\"82-分布式压测\" style=\"position:relative;\"><a href=\"#82-%E5%88%86%E5%B8%83%E5%BC%8F%E5%8E%8B%E6%B5%8B\" aria-label=\"82 分布式压测 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>8.2 分布式压测</h2>\n<p>这也是在开篇的时候提到的比较重要的一点需求：<a href=\"https://github.com/tsenart/vegeta#usage-distributed-attacks\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Usage: Distributed attacks</a>。可以按该官方指引在多台client上进行分布式压测，vegeta有一点很好的是可以组合各个client生成出来的<code class=\"language-text\">gob</code>文件，来生成一份最终的结果report。</p>\n<h2 id=\"83-压测实时分析\" style=\"position:relative;\"><a href=\"#83-%E5%8E%8B%E6%B5%8B%E5%AE%9E%E6%97%B6%E5%88%86%E6%9E%90\" aria-label=\"83 压测实时分析 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>8.3 压测实时分析</h2>\n<p><a href=\"https://github.com/tsenart/vegeta#usage-real-time-analysis\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Usage: Real-time Analysis</a>，可以查看压测实时的运行状态。</p>\n<blockquote>\n<p>EOF</p>\n</blockquote>","fields":{"slug":"/posts/2021/09/vegeta-notes","tagSlugs":["/tag/stresstest/","/tag/vegeta/","/tag/keynote/"]},"frontmatter":{"date":"2021-09-11T03:02:22.000Z","description":"Vegeta的使用方法","tags":["StressTest","Vegeta","Keynote"],"title":"Vegeta Notes","socialImage":"/media/default-social-image.jpg"}},"allFile":{"totalCount":0,"nodes":[]}},"pageContext":{"slug":"/posts/2021/09/vegeta-notes","gallery":"media/posts/2021/09/vegeta-notes/gallery"}},
    "staticQueryHashes": ["251939775","357378587","401334301"]}