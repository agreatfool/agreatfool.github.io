{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/2021/10/obsidian-plugin","result":{"data":{"markdownRemark":{"id":"c48c61ee-8963-58a5-8199-826b8fe22376","html":"<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#1-%E5%89%8D%E8%A8%80\">1. 前言</a></li>\n<li><a href=\"#2-%E5%9F%BA%E7%A1%80\">2. 基础</a></li>\n<li><a href=\"#3-%E4%BB%A3%E7%A0%81\">3. 代码</a></li>\n<li><a href=\"#4-%E9%97%AE%E9%A2%98\">4. 问题</a></li>\n<li><a href=\"#reference\">Reference</a></li>\n</ul>\n</div>\n<h1 id=\"1-前言\" style=\"position:relative;\"><a href=\"#1-%E5%89%8D%E8%A8%80\" aria-label=\"1 前言 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 前言</h1>\n<p>之前花了点时间制作Obsidian的插件：<a href=\"https://github.com/agreatfool/obsidian-post-gallery\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">agreatfool/obsidian-post-gallery</a>，稍微积累了点经验，这里留点笔记。不会过于深入，因为我做的插件还是很简单的，也没有用到太多的Obsidian的功能。</p>\n<p>丑话说在前面，Obsidian的Plugin相关文档是极其匮乏的，有很多功能你基本上找不到文档对于其的描述，更扯的是一部分概念在文档里也没解释，比如说：<code class=\"language-text\">leaf</code>等，导致如果你需要制作功能比较复杂的插件的话，会很困难。最好的方法就是找现在官方网站上列出来的那些community plugin的源码，然后慢慢读。我也搞不懂这些作者是怎么搞清楚那么多细节的，哎。反正我是没做很高级的功能，所以基本上没怎么接触。</p>\n<h1 id=\"2-基础\" style=\"position:relative;\"><a href=\"#2-%E5%9F%BA%E7%A1%80\" aria-label=\"2 基础 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 基础</h1>\n<p><a href=\"https://github.com/obsidianmd/obsidian-api\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">obsidianmd/obsidian-api</a>，算是官方的插件文档地址。这个repo里面就只有一个<code class=\"language-text\">d.ts</code>文件，描述了Obsidian API的内容。制作插件的时候可以使用这些官方提供的API，实际上Obsidian是基于<a href=\"https://www.electronjs.org/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Electron</a>的一个封装，但官方的API并不会暴露Electron的API给你使用，是基于安全方面的考量：<a href=\"https://forum.obsidian.md/t/security-of-the-plugins/7544\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Security of the plugins</a>。</p>\n<p><a href=\"https://github.com/obsidianmd/obsidian-sample-plugin\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">obsidianmd/obsidian-sample-plugin</a>是官方的范例repo，可以clone下来尝试下，里面有最简单的使用范例。</p>\n<p>在编码方面，你会需要安装<a href=\"https://www.npmjs.com/package/obsidian\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Obsidian API</a>，虽然本质上它也就只是一个typing。</p>\n<h1 id=\"3-代码\" style=\"position:relative;\"><a href=\"#3-%E4%BB%A3%E7%A0%81\" aria-label=\"3 代码 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 代码</h1>\n<p><strong>main.ts</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> LibOs <span class=\"token keyword\">from</span> <span class=\"token string\">'os'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> MarkdownPostProcessorContext<span class=\"token punctuation\">,</span> Plugin <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'obsidian'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> MarkdownBlockProcessor <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./lib/md_block'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">InPostGalleryPlugin</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Plugin</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">async</span> <span class=\"token function\">onload</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">void</span><span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>LibOs<span class=\"token punctuation\">.</span><span class=\"token function\">platform</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!==</span> <span class=\"token string\">'darwin'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">InPostGalleryPlugin.onload unsupported platform: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>LibOs<span class=\"token punctuation\">.</span><span class=\"token function\">platform</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'InPostGalleryPlugin.onload'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">registerMarkdownCodeBlockProcessor</span><span class=\"token punctuation\">(</span><span class=\"token string\">'post-gallery'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span>source<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> el<span class=\"token operator\">:</span> HTMLElement<span class=\"token punctuation\">,</span> ctx<span class=\"token operator\">:</span> MarkdownPostProcessorContext<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">await</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">MarkdownBlockProcessor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>app<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">process</span><span class=\"token punctuation\">(</span>source<span class=\"token punctuation\">,</span> el<span class=\"token punctuation\">,</span> ctx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>定义一个 default export 的 class，继承 obsidian 包里的 <code class=\"language-text\">Plugin</code>。上面的代码就只响应了<code class=\"language-text\">onload</code>事件，在事件中保证插件安装在OSX系统中，并注册一个markdown代码块处理器，在<code class=\"language-text\">post-gallery</code>代码块出现的时候进行触发。</p>\n<p><strong>md_block.ts</strong></p>\n<p>剩下的其他功能代码也非常简单，一共没几行：<a href=\"https://github.com/agreatfool/obsidian-post-gallery/blob/master/src/lib/md_block.ts\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">md_block.ts</a>，可以简单看下。</p>\n<h1 id=\"4-问题\" style=\"position:relative;\"><a href=\"#4-%E9%97%AE%E9%A2%98\" aria-label=\"4 问题 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. 问题</h1>\n<p>当时在制作这个插件的时候，虽然功能很简单，但还是遇到了不少问题。最主要的一个问题是代码打包。</p>\n<p>因为所有的dep安装（源码）都是通过npm安装的，而代码的<code class=\"language-text\">import / require</code>又是在<code class=\"language-text\">Obsidian (Electron)</code>环境中运行的，所以很多用来初始化的<code class=\"language-text\">self execute function: (function(){})()</code>会侦测错环境，导致最终的lib加载注入错了global：<code class=\"language-text\">global vs window</code>。</p>\n<p>这里需要使用第三方的打包工具来进行代码打包，比如说webpack，但因为我这个项目实在是太小了，杀鸡牛刀，也不想浪费时间搞一大堆的配置。最后就直接把一些第三方的dep的加载函数给改了下，放到src里，作为自己的源码来进行import，就行了。算是比较<code class=\"language-text\">tricky</code>的绕过方法。</p>\n<p>举个例子：</p>\n<p><strong>原版 jquery</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">global<span class=\"token punctuation\">,</span> factory</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token string\">'use strict'</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> module <span class=\"token operator\">===</span> <span class=\"token string\">'object'</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">typeof</span> module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">===</span> <span class=\"token string\">'object'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// For CommonJS and CommonJS-like environments where a proper `window`</span>\n    <span class=\"token comment\">// is present, execute the factory and get jQuery.</span>\n    <span class=\"token comment\">// For environments that do not have a `window` with a `document`</span>\n    <span class=\"token comment\">// (such as Node.js), expose a factory as module.exports.</span>\n    <span class=\"token comment\">// This accentuates the need for the creation of a real `window`.</span>\n    <span class=\"token comment\">// e.g. var jQuery = require(\"jquery\")(window);</span>\n    <span class=\"token comment\">// See ticket #14549 for more info.</span>\n    module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> global<span class=\"token punctuation\">.</span>document\n      <span class=\"token operator\">?</span> <span class=\"token function\">factory</span><span class=\"token punctuation\">(</span>global<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span>\n      <span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">w</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>w<span class=\"token punctuation\">.</span>document<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'jQuery requires a window with a document'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token punctuation\">}</span>\n          <span class=\"token keyword\">return</span> <span class=\"token function\">factory</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">factory</span><span class=\"token punctuation\">(</span>global<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// Pass this if window is not defined yet</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> window <span class=\"token operator\">!==</span> <span class=\"token string\">'undefined'</span> <span class=\"token operator\">?</span> window <span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">window<span class=\"token punctuation\">,</span> noGlobal</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><strong>修改后</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">global<span class=\"token punctuation\">,</span> factory</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token string\">'use strict'</span><span class=\"token punctuation\">;</span>\n\n  module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token function\">factory</span><span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Pass this if window is not defined yet</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> window <span class=\"token operator\">!==</span> <span class=\"token string\">'undefined'</span> <span class=\"token operator\">?</span> window <span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">window<span class=\"token punctuation\">,</span> noGlobal</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h1 id=\"reference\" style=\"position:relative;\"><a href=\"#reference\" aria-label=\"reference permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Reference</h1>\n<ul>\n<li><a href=\"https://github.com/obsidianmd/obsidian-api\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">obsidianmd/obsidian-api</a></li>\n<li><a href=\"https://forum.obsidian.md/t/plugins-mini-faq/7737\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Plugins mini FAQ</a></li>\n<li><a href=\"https://forum.obsidian.md/t/security-of-the-plugins/7544\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Security of the plugins</a></li>\n<li><a href=\"https://www.electronjs.org/docs/latest/api/shell\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Electron > API > shell</a></li>\n<li><a href=\"https://www.electronjs.org/docs/latest/api/browser-window#winpreviewfilepath-displayname-macos\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Electron > API > win.previewFile</a></li>\n<li><a href=\"https://github.com/Darakah/obsidian-gallery\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Darakah/obsidian-gallery</a></li>\n<li><a href=\"https://stackoverflow.com/questions/5073603/is-there-a-way-to-trigger-finders-quick-look-window-with-applescript\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Is there a way to trigger Finder’s “quick look” window with Applescript?</a>，这个方向错了，应该搜 “electron” mac image quick look</li>\n<li><a href=\"https://github.com/obsidian-tools/obsidian-tools\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">obsidian-tools/obsidian-tools</a></li>\n<li><a href=\"https://www.lightgalleryjs.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">lightGallery</a></li>\n<li><a href=\"https://www.npmjs.com/package/justifiedGallery\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">justifiedGallery</a></li>\n</ul>\n<blockquote>\n<p>EOF</p>\n</blockquote>","fields":{"slug":"/posts/2021/10/obsidian-plugin","tagSlugs":["/tag/obsidian/","/tag/blog/"]},"frontmatter":{"date":"2021-10-08T02:02:22.000Z","description":"制作Obsidian插件相关经验","tags":["Obsidian","Blog"],"title":"Obsidian插件经验","socialImage":{"publicURL":"/static/7e722e026a41a08a8f9a1cc76782dd27/default-social-image.jpg"}}},"allFile":{"totalCount":0,"nodes":[]}},"pageContext":{"slug":"/posts/2021/10/obsidian-plugin","gallery":"media/posts/2021/10/obsidian-plugin/gallery"}},"staticQueryHashes":["251939775","401334301","825871152"]}