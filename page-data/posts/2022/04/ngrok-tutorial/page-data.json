{"componentChunkName":"component---src-templates-post-template-post-template-tsx","path":"/posts/2022/04/ngrok-tutorial","result":{"data":{"markdownRemark":{"id":"cd7a80d4-9f34-5a59-8f66-94a3235bfebf","html":"<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#1-%E5%89%8D%E8%A8%80\">1. 前言</a></li>\n<li><a href=\"#2-%E5%AE%89%E8%A3%85%E5%87%86%E5%A4%87\">2. 安装准备</a></li>\n<li><a href=\"#3-%E4%BD%BF%E7%94%A8%E8%8C%83%E4%BE%8B\">3. 使用范例</a>\n<ul>\n<li><a href=\"#31-%E5%87%86%E5%A4%87%E6%9C%AC%E5%9C%B0http%E6%9C%8D%E5%8A%A1\">3.1 准备本地http服务</a></li>\n<li><a href=\"#32-%E5%90%AF%E5%8A%A8ngrok\">3.2 启动ngrok</a></li>\n<li><a href=\"#33-%E6%B5%8B%E8%AF%95\">3.3 测试</a></li>\n</ul>\n</li>\n</ul>\n</div>\n<h1 id=\"1-前言\" style=\"position:relative;\"><a href=\"#1-%E5%89%8D%E8%A8%80\" aria-label=\"1 前言 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 前言</h1>\n<p>因为手头在做支付相关的内容，如何测试支付服务商的回调功能就比较头痛。</p>\n<p>当年比较多的是使用自己的VPS来进行测试，代码直接ssh到VPS上就行了。但是我手头上的境外VPS都关掉了，比较贵嘛，现在blog都可以用静态服务商的免费服务，所以就没继续持有了。境内的VPS我倒是有，价格便宜，但问题在于境内VPS如果你要搭网站绑定域名的话，都要求域名经过备案，那就没辙了。</p>\n<p>于是就需要一个能将自己的本地进程暴露到公网的方法，现在倒是有这种工具的，就比如：<a href=\"https://ngrok.com\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://ngrok.com</a>。</p>\n<h1 id=\"2-安装准备\" style=\"position:relative;\"><a href=\"#2-%E5%AE%89%E8%A3%85%E5%87%86%E5%A4%87\" aria-label=\"2 安装准备 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 安装准备</h1>\n<p>到官网上注册账号，进入console。然后到<a href=\"https://dashboard.ngrok.com/get-started/your-authtoken\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Your Authtoken</a>页面找到你自己的token，将字符串复制下来。</p>\n<p><img src=\"/media/posts/2022/04/ngrok-tutorial/ngrok-token.png\" alt=\"\"></p>\n<p>接下来安装ngrok的二进制可执行文件，推荐使用brew安装</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ brew <span class=\"token function\">install</span> ngrok --cask --verbose</code></pre></div>\n<p>接下来配置刚才的token，这步自己看下ngrok的版本，我用brew安装的是2.x的版本，比官网的3.x要老，所以语法有点不同</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ ngrok authtoken <span class=\"token variable\">$your_token_string</span></code></pre></div>\n<h1 id=\"3-使用范例\" style=\"position:relative;\"><a href=\"#3-%E4%BD%BF%E7%94%A8%E8%8C%83%E4%BE%8B\" aria-label=\"3 使用范例 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 使用范例</h1>\n<h2 id=\"31-准备本地http服务\" style=\"position:relative;\"><a href=\"#31-%E5%87%86%E5%A4%87%E6%9C%AC%E5%9C%B0http%E6%9C%8D%E5%8A%A1\" aria-label=\"31 准备本地http服务 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3.1 准备本地http服务</h2>\n<p>本地生成一个静态html index文件，并使用npm的http-server启动一个本地服务器</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">mkdir</span> -p ~/Downloads/test <span class=\"token operator\">&amp;&amp;</span> <span class=\"token builtin class-name\">cd</span> ~/Downloads/test\n$ <span class=\"token function\">touch</span> index.html\n$ <span class=\"token function\">vim</span> index.html</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span>test page jd<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token builtin class-name\">pwd</span>\n<span class=\"token comment\"># /Users/jonathan/Downloads/test</span>\n$ npx http-server ./</code></pre></div>\n<p><img src=\"/media/posts/2022/04/ngrok-tutorial/ngrok-http-server.png\" alt=\"\"></p>\n<h2 id=\"32-启动ngrok\" style=\"position:relative;\"><a href=\"#32-%E5%90%AF%E5%8A%A8ngrok\" aria-label=\"32 启动ngrok permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3.2 启动ngrok</h2>\n<p>因为我们本地服务启动在<code class=\"language-text\">8080</code>端口上，所以ngrok的命令要以这个端口为目标</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ ngrok http <span class=\"token number\">8080</span></code></pre></div>\n<p><img src=\"/media/posts/2022/04/ngrok-tutorial/ngrok-tunnel.png\" alt=\"\"></p>\n<h2 id=\"33-测试\" style=\"position:relative;\"><a href=\"#33-%E6%B5%8B%E8%AF%95\" aria-label=\"33 测试 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3.3 测试</h2>\n<p>需要注意，每次使用ngrok命令打通tunnel都会随机分配一个域名，每次都是不一样的，所以在测试的时候记得切换代码/配置里的域名。这次测试分配到的是：<code class=\"language-text\">211e-101-80-9-92</code>。测试使用的时候务必记得使用https protocol，即便如此chrome还是会提醒这个网站不安全。反正只是测试用的，就无所谓了。</p>\n<p><img src=\"/media/posts/2022/04/ngrok-tutorial/ngrok-test.png\" alt=\"\"></p>\n<p>然后可以打开<a href=\"http://127.0.0.1:4040\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">http://127.0.0.1:4040</a>，这是ngrok的console页面，会显示访问请求列表</p>\n<p><img src=\"/media/posts/2022/04/ngrok-tutorial/ngrok-console.png\" alt=\"\"></p>\n<blockquote>\n<p>EOF</p>\n</blockquote>","fields":{"slug":"/posts/2022/04/ngrok-tutorial","tagSlugs":["/tag/proxy/","/tag/payment/"]},"frontmatter":{"date":"2022-04-15T09:09:22.000Z","description":"如何使用ngrok将本地进程暴露到公网","tags":["Proxy","Payment"],"title":"ngrok tutorial","socialImage":"/media/default-social-image.jpg"}},"allFile":{"totalCount":0,"nodes":[]}},"pageContext":{"slug":"/posts/2022/04/ngrok-tutorial","gallery":"media/posts/2022/04/ngrok-tutorial/gallery"}},"staticQueryHashes":["251939775","357378587","401334301"]}